//
//  ButtonsForFJ092018.swift
//  Fire Journal
//
//  Created by DuRand Jones on 7/3/19.
//  Copyright Â© 2019 PureCommand,LLC. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public class ButtonsForFJ092018 : NSObject {

    //// Cache

    private struct Cache {
        static let redButtonColor: UIColor = UIColor(red: 0.910, green: 0.224, blue: 0.220, alpha: 1.000)
        static let redButtonColor2: UIColor = UIColor(red: 0.910, green: 0.224, blue: 0.220, alpha: 0.550)
        static let blueGradientColor: UIColor = UIColor(red: 0.102, green: 0.773, blue: 0.984, alpha: 1.000)
        static let blueGradientColor2: UIColor = UIColor(red: 0.102, green: 0.773, blue: 0.984, alpha: 0.560)
        static let fillColor13: UIColor = UIColor(red: 0.130, green: 0.534, blue: 0.243, alpha: 1.000)
        static let fillColor15: UIColor = UIColor(red: 0.957, green: 0.518, blue: 0.159, alpha: 1.000)
        static let fillColor38: UIColor = UIColor(red: 0.812, green: 0.117, blue: 0.175, alpha: 1.000)
        static let gradient9Color: UIColor = UIColor(red: 0.627, green: 0.051, blue: 0.099, alpha: 1.000)
        static let gradient9Color2: UIColor = UIColor(red: 0.936, green: 0.455, blue: 0.338, alpha: 1.000)
        static let gradient1Blue: UIColor = UIColor(red: 0.290, green: 0.565, blue: 0.886, alpha: 1.000)
        static let gradient2Blue: UIColor = UIColor(red: 0.035, green: 0.157, blue: 0.298, alpha: 1.000)
        static let gradient11Color: UIColor = UIColor(red: 0.290, green: 0.565, blue: 0.886, alpha: 1.000)
        static let gradient11Color2: UIColor = UIColor(red: 0.035, green: 0.157, blue: 0.298, alpha: 1.000)
        static let gradientForBoxColor: UIColor = UIColor(red: 0.290, green: 0.565, blue: 0.886, alpha: 1.000)
        static let gradientForBoxColor2: UIColor = UIColor(red: 0.024, green: 0.318, blue: 0.663, alpha: 1.000)
        static let dashboardBackgroundColor: UIColor = UIColor(red: 0.149, green: 0.204, blue: 0.294, alpha: 1.000)
        static let gradient11Color3: UIColor = UIColor(red: 0.020, green: 0.349, blue: 0.733, alpha: 1.000)
        static let gradient11Color4: UIColor = UIColor(red: 0.035, green: 0.341, blue: 0.706, alpha: 0.750)
        static let gradientForBoxColor3: UIColor = UIColor(red: 0.024, green: 0.318, blue: 0.663, alpha: 1.000)
        static let redButton55: CGGradient = CGGradient(colorsSpace: nil, colors: [ButtonsForFJ092018.redButtonColor.cgColor, ButtonsForFJ092018.redButtonColor2.cgColor] as CFArray, locations: [0.52, 1])!
        static let blueGradient: CGGradient = CGGradient(colorsSpace: nil, colors: [ButtonsForFJ092018.blueGradientColor.cgColor, ButtonsForFJ092018.blueGradientColor2.cgColor] as CFArray, locations: [0.55, 1])!
        static let gradient9: CGGradient = CGGradient(colorsSpace: nil, colors: [ButtonsForFJ092018.gradient9Color2.cgColor, ButtonsForFJ092018.fillColor38.cgColor, ButtonsForFJ092018.gradient9Color.cgColor] as CFArray, locations: [0, 0.55, 0.99])!
        static let gradientForList: CGGradient = CGGradient(colorsSpace: nil, colors: [ButtonsForFJ092018.gradient1Blue.cgColor, ButtonsForFJ092018.gradient1Blue.blended(withFraction: 0.5, of: ButtonsForFJ092018.gradient2Blue).cgColor, ButtonsForFJ092018.gradient2Blue.cgColor] as CFArray, locations: [0, 0.1, 0.53])!
        static let gradientForDashBoardButton: CGGradient = CGGradient(colorsSpace: nil, colors: [ButtonsForFJ092018.gradient11Color.cgColor, ButtonsForFJ092018.gradient11Color2.cgColor] as CFArray, locations: [0, 1])!
        static let gradientForBox: CGGradient = CGGradient(colorsSpace: nil, colors: [ButtonsForFJ092018.gradientForBoxColor.cgColor, ButtonsForFJ092018.gradientForBoxColor3.cgColor] as CFArray, locations: [0, 0.99])!
        static let gradientForFormButton: CGGradient = CGGradient(colorsSpace: nil, colors: [ButtonsForFJ092018.gradient11Color3.cgColor, ButtonsForFJ092018.gradient11Color4.cgColor] as CFArray, locations: [0.22, 1])!
        static let shadow: NSShadow = NSShadow(color: UIColor.black.withAlphaComponent(0.21), offset: CGSize(width: 1, height: 1), blurRadius: 2)
        static var imageOfRedButton: UIImage?
        static var redButtonTargets: [AnyObject]?
        static var imageOfBlueButton: UIImage?
        static var blueButtonTargets: [AnyObject]?
        static var imageOfWhiteJournalAdministrative: UIImage?
        static var whiteJournalAdministrativeTargets: [AnyObject]?
        static var imageOfGradientForMap: UIImage?
        static var gradientForMapTargets: [AnyObject]?
        static var imageOfBoxChecked: UIImage?
        static var boxCheckedTargets: [AnyObject]?
        static var imageOfListBackground: UIImage?
        static var listBackgroundTargets: [AnyObject]?
        static var imageOfListBackground2: UIImage?
        static var listBackground2Targets: [AnyObject]?
        static var imageOfDashboardWhite: UIImage?
        static var dashboardWhiteTargets: [AnyObject]?
        static var imageOfCartWhite: UIImage?
        static var cartWhiteTargets: [AnyObject]?
        static var imageOfCloudWhite: UIImage?
        static var cloudWhiteTargets: [AnyObject]?
        static var imageOfJournalEntryWhiteBlueCircle: UIImage?
        static var journalEntryWhiteBlueCircleTargets: [AnyObject]?
        static var imageOfDashboardGraidentButton: UIImage?
        static var dashboardGraidentButtonTargets: [AnyObject]?
        static var imageOfDashboardIconWhite100: UIImage?
        static var dashboardIconWhite100Targets: [AnyObject]?
        static var imageOfSmallRedPlusButt: UIImage?
        static var smallRedPlusButtTargets: [AnyObject]?
        static var imageOfBlueButtonBackground: UIImage?
        static var blueButtonBackgroundTargets: [AnyObject]?
        static var imageOfInfoButton: UIImage?
        static var infoButtonTargets: [AnyObject]?
        static var imageOfInfoButtonWhite120: UIImage?
        static var infoButtonWhite120Targets: [AnyObject]?
        static var imageOfConnectButtonWhite120: UIImage?
        static var connectButtonWhite120Targets: [AnyObject]?
        static var imageOfCartButtonWhite120: UIImage?
        static var cartButtonWhite120Targets: [AnyObject]?
        static var imageOfSettingsButtonWhite120: UIImage?
        static var settingsButtonWhite120Targets: [AnyObject]?
        static var imageOfSmallBluePlusButt: UIImage?
        static var smallBluePlusButtTargets: [AnyObject]?
        static var imageOfHighlightBlueButtonBackground: UIImage?
        static var highlightBlueButtonBackgroundTargets: [AnyObject]?
        static var imageOfHighlightBlue: UIImage?
        static var highlightBlueTargets: [AnyObject]?
        static var imageOfNormalBlue: UIImage?
        static var normalBlueTargets: [AnyObject]?
        static var imageOfOvertimeCircleSmall: UIImage?
        static var overtimeCircleSmallTargets: [AnyObject]?
        static var imageOfDefaultCircleSmall: UIImage?
        static var defaultCircleSmallTargets: [AnyObject]?
        static var imageOfHighlightEdit: UIImage?
        static var highlightEditTargets: [AnyObject]?
        static var imageOfNormalEdit: UIImage?
        static var normalEditTargets: [AnyObject]?
        static var imageOfDashboardForMaster: UIImage?
        static var dashboardForMasterTargets: [AnyObject]?
        static var imageOfDashbaordWhiteIcon50: UIImage?
        static var dashbaordWhiteIcon50Targets: [AnyObject]?
        static var imageOfGreenDefault: UIImage?
        static var greenDefaultTargets: [AnyObject]?
        static var imageOfDefaultGreenCircle: UIImage?
        static var defaultGreenCircleTargets: [AnyObject]?
        static var imageOfSelectButtonUp: UIImage?
        static var selectButtonUpTargets: [AnyObject]?
        static var imageOfSelectButtonDown: UIImage?
        static var selectButtonDownTargets: [AnyObject]?
        static var imageOfResourceGroupNew: UIImage?
        static var resourceGroupNewTargets: [AnyObject]?
        static var imageOfResourceGroupHighlight: UIImage?
        static var resourceGroupHighlightTargets: [AnyObject]?
        static var imageOfSubscribeone: UIImage?
        static var subscribeoneTargets: [AnyObject]?
        static var imageOfSubscribetwo: UIImage?
        static var subscribetwoTargets: [AnyObject]?
        static var imageOfSubscribethree: UIImage?
        static var subscribethreeTargets: [AnyObject]?
        static var imageOfSuscribethreesmall: UIImage?
        static var suscribethreesmallTargets: [AnyObject]?
        static var imageOfSubscribetwosmall: UIImage?
        static var subscribetwosmallTargets: [AnyObject]?
        static var imageOfSubscribeonesmall: UIImage?
        static var subscribeonesmallTargets: [AnyObject]?
        static var imageOfStartShiftUp: UIImage?
        static var startShiftUpTargets: [AnyObject]?
        static var imageOfStartShiftDown: UIImage?
        static var startShiftDownTargets: [AnyObject]?
        static var imageOfEndShiftUp: UIImage?
        static var endShiftUpTargets: [AnyObject]?
        static var imageOfEndShiftDown: UIImage?
        static var endShiftDownTargets: [AnyObject]?
        static var imageOfIcs214: UIImage?
        static var ics214Targets: [AnyObject]?
        static var imageOfCloudWhite2Arrow: UIImage?
        static var cloudWhite2ArrowTargets: [AnyObject]?
        static var imageOfConnectButtonWhite2Arrow80: UIImage?
        static var connectButtonWhite2Arrow80Targets: [AnyObject]?
        static var imageOfIcs214LocalIncident: UIImage?
        static var ics214LocalIncidentTargets: [AnyObject]?
        static var imageOfIcs214Fema: UIImage?
        static var ics214FemaTargets: [AnyObject]?
        static var imageOfIcs214StrikeTeam: UIImage?
        static var ics214StrikeTeamTargets: [AnyObject]?
        static var imageOfIcs214Other: UIImage?
        static var ics214OtherTargets: [AnyObject]?
        static var imageOfNfirsBasic1: UIImage?
        static var nfirsBasic1Targets: [AnyObject]?
        static var imageOfBackgroundBlueGradient: UIImage?
        static var backgroundBlueGradientTargets: [AnyObject]?
    }

    //// Colors

    @objc dynamic public class var redButtonColor: UIColor { return Cache.redButtonColor }
    @objc dynamic public class var redButtonColor2: UIColor { return Cache.redButtonColor2 }
    @objc dynamic public class var blueGradientColor: UIColor { return Cache.blueGradientColor }
    @objc dynamic public class var blueGradientColor2: UIColor { return Cache.blueGradientColor2 }
    @objc dynamic public class var fillColor13: UIColor { return Cache.fillColor13 }
    @objc dynamic public class var fillColor15: UIColor { return Cache.fillColor15 }
    @objc dynamic public class var fillColor38: UIColor { return Cache.fillColor38 }
    @objc dynamic public class var gradient9Color: UIColor { return Cache.gradient9Color }
    @objc dynamic public class var gradient9Color2: UIColor { return Cache.gradient9Color2 }
    @objc dynamic public class var gradient1Blue: UIColor { return Cache.gradient1Blue }
    @objc dynamic public class var gradient2Blue: UIColor { return Cache.gradient2Blue }
    @objc dynamic public class var gradient11Color: UIColor { return Cache.gradient11Color }
    @objc dynamic public class var gradient11Color2: UIColor { return Cache.gradient11Color2 }
    @objc dynamic public class var gradientForBoxColor: UIColor { return Cache.gradientForBoxColor }
    @objc dynamic public class var gradientForBoxColor2: UIColor { return Cache.gradientForBoxColor2 }
    @objc dynamic public class var dashboardBackgroundColor: UIColor { return Cache.dashboardBackgroundColor }
    @objc dynamic public class var gradient11Color3: UIColor { return Cache.gradient11Color3 }
    @objc dynamic public class var gradient11Color4: UIColor { return Cache.gradient11Color4 }
    @objc dynamic public class var gradientForBoxColor3: UIColor { return Cache.gradientForBoxColor3 }

    //// Gradients

    @objc dynamic public class var redButton55: CGGradient { return Cache.redButton55 }
    @objc dynamic public class var blueGradient: CGGradient { return Cache.blueGradient }
    @objc dynamic public class var gradient9: CGGradient { return Cache.gradient9 }
    @objc dynamic public class var gradientForList: CGGradient { return Cache.gradientForList }
    @objc dynamic public class var gradientForDashBoardButton: CGGradient { return Cache.gradientForDashBoardButton }
    @objc dynamic public class var gradientForBox: CGGradient { return Cache.gradientForBox }
    @objc dynamic public class var gradientForFormButton: CGGradient { return Cache.gradientForFormButton }

    //// Shadows

    @objc dynamic public class var shadow: NSShadow { return Cache.shadow }

    //// Drawing Methods

    @objc dynamic public class func drawRedButton(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 83, height: 83), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 83, height: 83), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 83, y: resizedFrame.height / 83)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 83, resizedFrame.height / 83)


        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: 0.5, y: 0.5, width: 82, height: 82))
        context.saveGState()
        ovalPath.addClip()
        context.drawLinearGradient(ButtonsForFJ092018.redButton55, start: CGPoint(x: 41.5, y: 0.5), end: CGPoint(x: 41.5, y: 82.5), options: [])
        context.restoreGState()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 44, y: 19))
        bezierPath.addCurve(to: CGPoint(x: 44, y: 39), controlPoint1: CGPoint(x: 44, y: 19), controlPoint2: CGPoint(x: 44, y: 28.64))
        bezierPath.addLine(to: CGPoint(x: 64, y: 39))
        bezierPath.addLine(to: CGPoint(x: 64, y: 44))
        bezierPath.addLine(to: CGPoint(x: 44, y: 44))
        bezierPath.addCurve(to: CGPoint(x: 44, y: 64), controlPoint1: CGPoint(x: 44, y: 54.36), controlPoint2: CGPoint(x: 44, y: 64))
        bezierPath.addLine(to: CGPoint(x: 39, y: 64))
        bezierPath.addCurve(to: CGPoint(x: 39, y: 44), controlPoint1: CGPoint(x: 39, y: 64), controlPoint2: CGPoint(x: 39, y: 54.36))
        bezierPath.addLine(to: CGPoint(x: 19, y: 44))
        bezierPath.addLine(to: CGPoint(x: 19, y: 39))
        bezierPath.addLine(to: CGPoint(x: 39, y: 39))
        bezierPath.addCurve(to: CGPoint(x: 39, y: 19), controlPoint1: CGPoint(x: 39, y: 28.64), controlPoint2: CGPoint(x: 39, y: 19))
        bezierPath.addLine(to: CGPoint(x: 44, y: 19))
        bezierPath.addLine(to: CGPoint(x: 44, y: 19))
        bezierPath.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: ButtonsForFJ092018.shadow.shadowOffset.width * resizedShadowScale, height: ButtonsForFJ092018.shadow.shadowOffset.height * resizedShadowScale), blur: ButtonsForFJ092018.shadow.shadowBlurRadius * resizedShadowScale, color: (ButtonsForFJ092018.shadow.shadowColor as! UIColor).cgColor)
        UIColor.white.setFill()
        bezierPath.fill()
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawBlueButton(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 83, height: 83), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 83, height: 83), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 83, y: resizedFrame.height / 83)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 83, resizedFrame.height / 83)


        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: 0.5, y: 0.5, width: 82, height: 82))
        context.saveGState()
        ovalPath.addClip()
        context.drawLinearGradient(ButtonsForFJ092018.blueGradient, start: CGPoint(x: 41.5, y: 0.5), end: CGPoint(x: 41.5, y: 82.5), options: [])
        context.restoreGState()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 44, y: 19))
        bezierPath.addCurve(to: CGPoint(x: 44, y: 39), controlPoint1: CGPoint(x: 44, y: 19), controlPoint2: CGPoint(x: 44, y: 28.64))
        bezierPath.addLine(to: CGPoint(x: 64, y: 39))
        bezierPath.addLine(to: CGPoint(x: 64, y: 44))
        bezierPath.addLine(to: CGPoint(x: 44, y: 44))
        bezierPath.addCurve(to: CGPoint(x: 44, y: 64), controlPoint1: CGPoint(x: 44, y: 54.36), controlPoint2: CGPoint(x: 44, y: 64))
        bezierPath.addLine(to: CGPoint(x: 39, y: 64))
        bezierPath.addCurve(to: CGPoint(x: 39, y: 44), controlPoint1: CGPoint(x: 39, y: 64), controlPoint2: CGPoint(x: 39, y: 54.36))
        bezierPath.addLine(to: CGPoint(x: 19, y: 44))
        bezierPath.addLine(to: CGPoint(x: 19, y: 39))
        bezierPath.addLine(to: CGPoint(x: 39, y: 39))
        bezierPath.addCurve(to: CGPoint(x: 39, y: 19), controlPoint1: CGPoint(x: 39, y: 28.64), controlPoint2: CGPoint(x: 39, y: 19))
        bezierPath.addLine(to: CGPoint(x: 44, y: 19))
        bezierPath.addLine(to: CGPoint(x: 44, y: 19))
        bezierPath.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: ButtonsForFJ092018.shadow.shadowOffset.width * resizedShadowScale, height: ButtonsForFJ092018.shadow.shadowOffset.height * resizedShadowScale), blur: ButtonsForFJ092018.shadow.shadowBlurRadius * resizedShadowScale, color: (ButtonsForFJ092018.shadow.shadowColor as! UIColor).cgColor)
        UIColor.white.setFill()
        bezierPath.fill()
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawRed1(width: CGFloat = 40, height: CGFloat = 40) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0.5, y: 0.5, width: width, height: height)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawRedButton(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawBlue1(bluewidth: CGFloat = 40, blueheight: CGFloat = 40) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0.5, y: 0.5, width: bluewidth, height: blueheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawBlueButton(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawWhiteJournalAdministrative(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.750)

        //// Group
        context.saveGState()
        context.setAlpha(0.75)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 47.98, y: 78.77, width: 105.25, height: 10.65))
        fillColor.setFill()
        rectanglePath.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 47.98, y: 53.97, width: 105.25, height: 10.65))
        fillColor.setFill()
        rectangle2Path.fill()


        //// Rectangle 3 Drawing
        let rectangle3Path = UIBezierPath(rect: CGRect(x: 47.98, y: 103.42, width: 105.25, height: 10.65))
        fillColor.setFill()
        rectangle3Path.fill()


        //// Rectangle 4 Drawing
        let rectangle4Path = UIBezierPath(rect: CGRect(x: 47.98, y: 126.07, width: 105.25, height: 10.65))
        fillColor.setFill()
        rectangle4Path.fill()


        //// Rectangle 5 Drawing
        let rectangle5Path = UIBezierPath(rect: CGRect(x: 47.98, y: 148.97, width: 105.25, height: 10.65))
        fillColor.setFill()
        rectangle5Path.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 155.06, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 143.88, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 143.88, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 144.86, y: 26.46))
        bezierPath.addCurve(to: CGPoint(x: 166.74, y: 48.24), controlPoint1: CGPoint(x: 156.95, y: 26.46), controlPoint2: CGPoint(x: 166.74, y: 36.21))
        bezierPath.addLine(to: CGPoint(x: 166.74, y: 164.19))
        bezierPath.addCurve(to: CGPoint(x: 144.86, y: 185.97), controlPoint1: CGPoint(x: 166.74, y: 176.22), controlPoint2: CGPoint(x: 156.95, y: 185.97))
        bezierPath.addLine(to: CGPoint(x: 55.14, y: 185.97))
        bezierPath.addCurve(to: CGPoint(x: 33.26, y: 164.19), controlPoint1: CGPoint(x: 43.05, y: 185.97), controlPoint2: CGPoint(x: 33.26, y: 176.22))
        bezierPath.addLine(to: CGPoint(x: 33.26, y: 48.24))
        bezierPath.addCurve(to: CGPoint(x: 55.14, y: 26.46), controlPoint1: CGPoint(x: 33.26, y: 36.21), controlPoint2: CGPoint(x: 43.05, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 57.27, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 57.27, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 44.94, y: 13.22))
        bezierPath.addCurve(to: CGPoint(x: 23.16, y: 35), controlPoint1: CGPoint(x: 32.91, y: 13.22), controlPoint2: CGPoint(x: 23.16, y: 22.97))
        bezierPath.addLine(to: CGPoint(x: 23.16, y: 175.86))
        bezierPath.addCurve(to: CGPoint(x: 44.94, y: 197.64), controlPoint1: CGPoint(x: 23.16, y: 187.89), controlPoint2: CGPoint(x: 32.91, y: 197.64))
        bezierPath.addLine(to: CGPoint(x: 155.06, y: 197.64))
        bezierPath.addCurve(to: CGPoint(x: 176.84, y: 175.86), controlPoint1: CGPoint(x: 167.09, y: 197.64), controlPoint2: CGPoint(x: 176.84, y: 187.89))
        bezierPath.addLine(to: CGPoint(x: 176.84, y: 35))
        bezierPath.addCurve(to: CGPoint(x: 155.06, y: 13.22), controlPoint1: CGPoint(x: 176.84, y: 22.97), controlPoint2: CGPoint(x: 167.09, y: 13.22))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 125.15, y: 30.67))
        bezier2Path.addCurve(to: CGPoint(x: 120.43, y: 37.18), controlPoint1: CGPoint(x: 125.15, y: 34.27), controlPoint2: CGPoint(x: 123.04, y: 37.18))
        bezier2Path.addLine(to: CGPoint(x: 82.54, y: 37.18))
        bezier2Path.addCurve(to: CGPoint(x: 77.82, y: 30.67), controlPoint1: CGPoint(x: 79.93, y: 37.18), controlPoint2: CGPoint(x: 77.82, y: 34.27))
        bezier2Path.addLine(to: CGPoint(x: 77.82, y: 16.25))
        bezier2Path.addCurve(to: CGPoint(x: 82.54, y: 9.75), controlPoint1: CGPoint(x: 77.82, y: 12.66), controlPoint2: CGPoint(x: 79.93, y: 9.75))
        bezier2Path.addLine(to: CGPoint(x: 120.43, y: 9.75))
        bezier2Path.addCurve(to: CGPoint(x: 125.15, y: 16.25), controlPoint1: CGPoint(x: 123.04, y: 9.75), controlPoint2: CGPoint(x: 125.15, y: 12.66))
        bezier2Path.addLine(to: CGPoint(x: 125.15, y: 30.67))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 130.63, y: 2.36))
        bezier2Path.addLine(to: CGPoint(x: 72.34, y: 2.36))
        bezier2Path.addCurve(to: CGPoint(x: 65.08, y: 12.37), controlPoint1: CGPoint(x: 68.33, y: 2.36), controlPoint2: CGPoint(x: 65.08, y: 6.84))
        bezier2Path.addLine(to: CGPoint(x: 65.08, y: 34.56))
        bezier2Path.addCurve(to: CGPoint(x: 72.34, y: 44.56), controlPoint1: CGPoint(x: 65.08, y: 40.08), controlPoint2: CGPoint(x: 68.33, y: 44.56))
        bezier2Path.addLine(to: CGPoint(x: 130.63, y: 44.56))
        bezier2Path.addCurve(to: CGPoint(x: 137.89, y: 34.56), controlPoint1: CGPoint(x: 134.64, y: 44.56), controlPoint2: CGPoint(x: 137.89, y: 40.08))
        bezier2Path.addLine(to: CGPoint(x: 137.89, y: 12.37))
        bezier2Path.addCurve(to: CGPoint(x: 130.63, y: 2.36), controlPoint1: CGPoint(x: 137.89, y: 6.84), controlPoint2: CGPoint(x: 134.64, y: 2.36))
        bezier2Path.close()
        fillColor.setFill()
        bezier2Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawWhite(whitewidth: CGFloat = 20, whiteheight: CGFloat = 20) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: whitewidth, height: whiteheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawWhiteJournalAdministrative(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawFfffffRescue(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor25 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.750)

        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath(rect: CGRect(x: 2.38, y: 2.38, width: 195.25, height: 195.25))
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 100, y: 2.36))
        bezierPath.addCurve(to: CGPoint(x: 2.36, y: 100), controlPoint1: CGPoint(x: 46.08, y: 2.36), controlPoint2: CGPoint(x: 2.36, y: 46.08))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 197.64), controlPoint1: CGPoint(x: 2.36, y: 153.92), controlPoint2: CGPoint(x: 46.08, y: 197.64))
        bezierPath.addCurve(to: CGPoint(x: 197.64, y: 100), controlPoint1: CGPoint(x: 153.92, y: 197.64), controlPoint2: CGPoint(x: 197.64, y: 153.92))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 2.36), controlPoint1: CGPoint(x: 197.64, y: 46.08), controlPoint2: CGPoint(x: 153.92, y: 2.36))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 100, y: 9.1))
        bezierPath.addCurve(to: CGPoint(x: 190.9, y: 100), controlPoint1: CGPoint(x: 150.12, y: 9.1), controlPoint2: CGPoint(x: 190.9, y: 49.88))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 190.9), controlPoint1: CGPoint(x: 190.9, y: 150.12), controlPoint2: CGPoint(x: 150.12, y: 190.9))
        bezierPath.addCurve(to: CGPoint(x: 9.1, y: 100), controlPoint1: CGPoint(x: 49.88, y: 190.9), controlPoint2: CGPoint(x: 9.1, y: 150.12))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 9.1), controlPoint1: CGPoint(x: 9.1, y: 49.88), controlPoint2: CGPoint(x: 49.88, y: 9.1))
        bezierPath.close()
        fillColor25.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 100, y: 21.89))
        bezier2Path.addCurve(to: CGPoint(x: 21.89, y: 100), controlPoint1: CGPoint(x: 56.86, y: 21.89), controlPoint2: CGPoint(x: 21.89, y: 56.86))
        bezier2Path.addCurve(to: CGPoint(x: 100, y: 178.11), controlPoint1: CGPoint(x: 21.89, y: 143.14), controlPoint2: CGPoint(x: 56.86, y: 178.11))
        bezier2Path.addCurve(to: CGPoint(x: 178.11, y: 100), controlPoint1: CGPoint(x: 143.14, y: 178.11), controlPoint2: CGPoint(x: 178.11, y: 143.14))
        bezier2Path.addCurve(to: CGPoint(x: 100, y: 21.89), controlPoint1: CGPoint(x: 178.11, y: 56.86), controlPoint2: CGPoint(x: 143.14, y: 21.89))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 100, y: 28.62))
        bezier2Path.addCurve(to: CGPoint(x: 171.38, y: 100), controlPoint1: CGPoint(x: 139.36, y: 28.62), controlPoint2: CGPoint(x: 171.38, y: 60.64))
        bezier2Path.addCurve(to: CGPoint(x: 100, y: 171.38), controlPoint1: CGPoint(x: 171.38, y: 139.36), controlPoint2: CGPoint(x: 139.36, y: 171.38))
        bezier2Path.addCurve(to: CGPoint(x: 28.62, y: 100), controlPoint1: CGPoint(x: 60.64, y: 171.38), controlPoint2: CGPoint(x: 28.62, y: 139.36))
        bezier2Path.addCurve(to: CGPoint(x: 100, y: 28.62), controlPoint1: CGPoint(x: 28.62, y: 60.64), controlPoint2: CGPoint(x: 60.64, y: 28.62))
        bezier2Path.close()
        fillColor25.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 160.73, y: 81.53))
        bezier3Path.addLine(to: CGPoint(x: 118.47, y: 81.53))
        bezier3Path.addLine(to: CGPoint(x: 118.47, y: 39.27))
        bezier3Path.addLine(to: CGPoint(x: 81.53, y: 39.27))
        bezier3Path.addLine(to: CGPoint(x: 81.53, y: 81.53))
        bezier3Path.addLine(to: CGPoint(x: 39.26, y: 81.53))
        bezier3Path.addLine(to: CGPoint(x: 39.26, y: 118.47))
        bezier3Path.addLine(to: CGPoint(x: 81.53, y: 118.47))
        bezier3Path.addLine(to: CGPoint(x: 81.53, y: 160.73))
        bezier3Path.addLine(to: CGPoint(x: 118.47, y: 160.73))
        bezier3Path.addLine(to: CGPoint(x: 118.47, y: 118.47))
        bezier3Path.addLine(to: CGPoint(x: 160.73, y: 118.47))
        bezier3Path.addLine(to: CGPoint(x: 160.73, y: 81.53))
        bezier3Path.close()
        fillColor25.setFill()
        bezier3Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawFfffffEms(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor25 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.750)
        let fillColor3 = UIColor(red: 0.816, green: 0.254, blue: 0.173, alpha: 1.000)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 80.97, y: 2.36))
        bezierPath.addLine(to: CGPoint(x: 80.97, y: 70.45))
        bezierPath.addLine(to: CGPoint(x: 18.99, y: 42.27))
        bezierPath.addLine(to: CGPoint(x: 3.24, y: 76.91))
        bezierPath.addLine(to: CGPoint(x: 54.38, y: 100.16))
        bezierPath.addLine(to: CGPoint(x: 3.41, y: 123.76))
        bezierPath.addLine(to: CGPoint(x: 19.4, y: 158.29))
        bezierPath.addLine(to: CGPoint(x: 80.97, y: 129.78))
        bezierPath.addLine(to: CGPoint(x: 80.97, y: 197.64))
        bezierPath.addLine(to: CGPoint(x: 119.03, y: 197.64))
        bezierPath.addLine(to: CGPoint(x: 119.03, y: 129.55))
        bezierPath.addLine(to: CGPoint(x: 181.01, y: 157.73))
        bezierPath.addLine(to: CGPoint(x: 196.76, y: 123.09))
        bezierPath.addLine(to: CGPoint(x: 145.62, y: 99.84))
        bezierPath.addLine(to: CGPoint(x: 196.59, y: 76.24))
        bezierPath.addLine(to: CGPoint(x: 180.6, y: 41.71))
        bezierPath.addLine(to: CGPoint(x: 119.03, y: 70.22))
        bezierPath.addLine(to: CGPoint(x: 119.03, y: 2.36))
        bezierPath.addLine(to: CGPoint(x: 80.97, y: 2.36))
        bezierPath.close()
        fillColor25.setFill()
        bezierPath.fill()


        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath(rect: CGRect(x: -208.18, y: 284.25, width: 191.15, height: 122.4))
        clipPath.addClip()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: -72.89, y: 197.11))
        bezier2Path.addCurve(to: CGPoint(x: -147.12, y: 271.35), controlPoint1: CGPoint(x: -113.88, y: 197.11), controlPoint2: CGPoint(x: -147.12, y: 230.35))
        bezier2Path.addCurve(to: CGPoint(x: -72.89, y: 345.58), controlPoint1: CGPoint(x: -147.12, y: 312.34), controlPoint2: CGPoint(x: -113.88, y: 345.58))
        bezier2Path.addCurve(to: CGPoint(x: 1.35, y: 271.35), controlPoint1: CGPoint(x: -31.89, y: 345.58), controlPoint2: CGPoint(x: 1.35, y: 312.34))
        bezier2Path.addCurve(to: CGPoint(x: -72.89, y: 197.11), controlPoint1: CGPoint(x: 1.35, y: 230.35), controlPoint2: CGPoint(x: -31.89, y: 197.11))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: -72.89, y: 208.8))
        bezier2Path.addCurve(to: CGPoint(x: -28.66, y: 227.12), controlPoint1: CGPoint(x: -56.18, y: 208.8), controlPoint2: CGPoint(x: -40.47, y: 215.31))
        bezier2Path.addCurve(to: CGPoint(x: -10.34, y: 271.35), controlPoint1: CGPoint(x: -16.85, y: 238.93), controlPoint2: CGPoint(x: -10.34, y: 254.64))
        bezier2Path.addCurve(to: CGPoint(x: -28.66, y: 315.57), controlPoint1: CGPoint(x: -10.34, y: 288.05), controlPoint2: CGPoint(x: -16.85, y: 303.76))
        bezier2Path.addCurve(to: CGPoint(x: -72.89, y: 333.89), controlPoint1: CGPoint(x: -40.47, y: 327.39), controlPoint2: CGPoint(x: -56.18, y: 333.89))
        bezier2Path.addCurve(to: CGPoint(x: -117.11, y: 315.57), controlPoint1: CGPoint(x: -89.59, y: 333.89), controlPoint2: CGPoint(x: -105.3, y: 327.39))
        bezier2Path.addCurve(to: CGPoint(x: -135.43, y: 271.35), controlPoint1: CGPoint(x: -128.93, y: 303.76), controlPoint2: CGPoint(x: -135.43, y: 288.05))
        bezier2Path.addCurve(to: CGPoint(x: -117.11, y: 227.12), controlPoint1: CGPoint(x: -135.43, y: 254.64), controlPoint2: CGPoint(x: -128.93, y: 238.93))
        bezier2Path.addCurve(to: CGPoint(x: -72.89, y: 208.8), controlPoint1: CGPoint(x: -105.3, y: 215.31), controlPoint2: CGPoint(x: -89.59, y: 208.8))
        bezier2Path.close()
        fillColor3.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: -72.89, y: 171.13))
        bezier3Path.addCurve(to: CGPoint(x: -173.1, y: 271.35), controlPoint1: CGPoint(x: -128.23, y: 171.13), controlPoint2: CGPoint(x: -173.1, y: 216))
        bezier3Path.addCurve(to: CGPoint(x: -72.89, y: 371.56), controlPoint1: CGPoint(x: -173.1, y: 326.69), controlPoint2: CGPoint(x: -128.23, y: 371.56))
        bezier3Path.addCurve(to: CGPoint(x: 27.33, y: 271.35), controlPoint1: CGPoint(x: -17.54, y: 371.56), controlPoint2: CGPoint(x: 27.33, y: 326.69))
        bezier3Path.addCurve(to: CGPoint(x: -72.89, y: 171.13), controlPoint1: CGPoint(x: 27.33, y: 216), controlPoint2: CGPoint(x: -17.54, y: 171.13))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: -72.89, y: 186.91))
        bezier3Path.addCurve(to: CGPoint(x: -13.18, y: 211.64), controlPoint1: CGPoint(x: -50.33, y: 186.91), controlPoint2: CGPoint(x: -29.13, y: 195.69))
        bezier3Path.addCurve(to: CGPoint(x: 11.55, y: 271.35), controlPoint1: CGPoint(x: 2.77, y: 227.59), controlPoint2: CGPoint(x: 11.55, y: 248.79))
        bezier3Path.addCurve(to: CGPoint(x: -13.18, y: 331.05), controlPoint1: CGPoint(x: 11.55, y: 293.9), controlPoint2: CGPoint(x: 2.77, y: 315.1))
        bezier3Path.addCurve(to: CGPoint(x: -72.89, y: 355.78), controlPoint1: CGPoint(x: -29.13, y: 347), controlPoint2: CGPoint(x: -50.33, y: 355.78))
        bezier3Path.addCurve(to: CGPoint(x: -132.59, y: 331.05), controlPoint1: CGPoint(x: -95.44, y: 355.78), controlPoint2: CGPoint(x: -116.64, y: 347))
        bezier3Path.addCurve(to: CGPoint(x: -157.32, y: 271.35), controlPoint1: CGPoint(x: -148.54, y: 315.1), controlPoint2: CGPoint(x: -157.32, y: 293.9))
        bezier3Path.addCurve(to: CGPoint(x: -132.59, y: 211.64), controlPoint1: CGPoint(x: -157.32, y: 248.79), controlPoint2: CGPoint(x: -148.54, y: 227.59))
        bezier3Path.addCurve(to: CGPoint(x: -72.89, y: 186.91), controlPoint1: CGPoint(x: -116.64, y: 195.69), controlPoint2: CGPoint(x: -95.44, y: 186.91))
        bezier3Path.close()
        fillColor3.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: -72.89, y: 136.06))
        bezier4Path.addCurve(to: CGPoint(x: -208.18, y: 271.35), controlPoint1: CGPoint(x: -147.6, y: 136.06), controlPoint2: CGPoint(x: -208.18, y: 196.63))
        bezier4Path.addCurve(to: CGPoint(x: -72.89, y: 406.64), controlPoint1: CGPoint(x: -208.18, y: 346.07), controlPoint2: CGPoint(x: -147.6, y: 406.64))
        bezier4Path.addCurve(to: CGPoint(x: 62.41, y: 271.35), controlPoint1: CGPoint(x: 1.83, y: 406.64), controlPoint2: CGPoint(x: 62.41, y: 346.07))
        bezier4Path.addCurve(to: CGPoint(x: -72.89, y: 136.06), controlPoint1: CGPoint(x: 62.41, y: 196.63), controlPoint2: CGPoint(x: 1.83, y: 136.06))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: -72.89, y: 157.36))
        bezier4Path.addCurve(to: CGPoint(x: 7.72, y: 190.74), controlPoint1: CGPoint(x: -42.44, y: 157.36), controlPoint2: CGPoint(x: -13.81, y: 169.21))
        bezier4Path.addCurve(to: CGPoint(x: 41.1, y: 271.35), controlPoint1: CGPoint(x: 29.25, y: 212.27), controlPoint2: CGPoint(x: 41.1, y: 240.9))
        bezier4Path.addCurve(to: CGPoint(x: 7.72, y: 351.95), controlPoint1: CGPoint(x: 41.1, y: 301.79), controlPoint2: CGPoint(x: 29.25, y: 330.42))
        bezier4Path.addCurve(to: CGPoint(x: -72.89, y: 385.34), controlPoint1: CGPoint(x: -13.81, y: 373.48), controlPoint2: CGPoint(x: -42.44, y: 385.34))
        bezier4Path.addCurve(to: CGPoint(x: -153.49, y: 351.95), controlPoint1: CGPoint(x: -103.33, y: 385.34), controlPoint2: CGPoint(x: -131.96, y: 373.48))
        bezier4Path.addCurve(to: CGPoint(x: -186.88, y: 271.35), controlPoint1: CGPoint(x: -175.02, y: 330.42), controlPoint2: CGPoint(x: -186.88, y: 301.79))
        bezier4Path.addCurve(to: CGPoint(x: -153.49, y: 190.74), controlPoint1: CGPoint(x: -186.88, y: 240.9), controlPoint2: CGPoint(x: -175.02, y: 212.27))
        bezier4Path.addCurve(to: CGPoint(x: -72.89, y: 157.36), controlPoint1: CGPoint(x: -131.96, y: 169.21), controlPoint2: CGPoint(x: -103.33, y: 157.36))
        bezier4Path.close()
        fillColor3.setFill()
        bezier4Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawFfffffFire(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor25 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.750)

        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath(rect: CGRect(x: 18.57, y: 2.38, width: 162.85, height: 195.25))
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 45.98, y: 94.05))
        bezierPath.addCurve(to: CGPoint(x: 81.77, y: 191.61), controlPoint1: CGPoint(x: 18.57, y: 131.15), controlPoint2: CGPoint(x: 37.04, y: 181.72))
        bezierPath.addCurve(to: CGPoint(x: 172.14, y: 154.29), controlPoint1: CGPoint(x: 111.11, y: 198.09), controlPoint2: CGPoint(x: 163, y: 188.17))
        bezierPath.addCurve(to: CGPoint(x: 141.76, y: 77.18), controlPoint1: CGPoint(x: 181.43, y: 119.89), controlPoint2: CGPoint(x: 168.17, y: 96.04))
        bezierPath.addCurve(to: CGPoint(x: 104.45, y: 108.8), controlPoint1: CGPoint(x: 144.85, y: 91.82), controlPoint2: CGPoint(x: 116.49, y: 122.19))
        bezierPath.addCurve(to: CGPoint(x: 130.57, y: 67.58), controlPoint1: CGPoint(x: 92.86, y: 95.93), controlPoint2: CGPoint(x: 118.66, y: 74.69))
        bezierPath.addCurve(to: CGPoint(x: 114.74, y: 2.36), controlPoint1: CGPoint(x: 151.18, y: 55.27), controlPoint2: CGPoint(x: 143.29, y: 17.02))
        bezierPath.addCurve(to: CGPoint(x: 110.65, y: 32.39), controlPoint1: CGPoint(x: 116.17, y: 6.32), controlPoint2: CGPoint(x: 125.58, y: 17.11))
        bezierPath.addCurve(to: CGPoint(x: 45.98, y: 94.05), controlPoint1: CGPoint(x: 78.67, y: 62.07), controlPoint2: CGPoint(x: 69.15, y: 65.48))
        bezierPath.close()
        fillColor25.setFill()
        bezierPath.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Group 2
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip 2
        let clip2Path = UIBezierPath(rect: CGRect(x: 0.83, y: 284.25, width: 191.15, height: 122.4))
        clip2Path.addClip()


        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawFfffffCommunity(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor25 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.750)

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 3.83, y: 37.88, width: 192.25, height: 124.25))
        fillColor25.setFill()
        rectanglePath.fill()


        //// ffffffCommunity Group
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 190.9, y: 119.36))
        bezierPath.addCurve(to: CGPoint(x: 162.14, y: 104.72), controlPoint1: CGPoint(x: 188.37, y: 117.92), controlPoint2: CGPoint(x: 173.45, y: 108.15))
        bezierPath.addLine(to: CGPoint(x: 162.14, y: 89.86))
        bezierPath.addCurve(to: CGPoint(x: 167.8, y: 81.13), controlPoint1: CGPoint(x: 167.8, y: 88.07), controlPoint2: CGPoint(x: 167.8, y: 85.31))
        bezierPath.addLine(to: CGPoint(x: 167.8, y: 71.05))
        bezierPath.addCurve(to: CGPoint(x: 150.84, y: 53.35), controlPoint1: CGPoint(x: 167.8, y: 61.31), controlPoint2: CGPoint(x: 162.64, y: 53.35))
        bezierPath.addCurve(to: CGPoint(x: 133.88, y: 71.05), controlPoint1: CGPoint(x: 139.04, y: 53.35), controlPoint2: CGPoint(x: 133.88, y: 61.31))
        bezierPath.addLine(to: CGPoint(x: 133.88, y: 81.13))
        bezierPath.addCurve(to: CGPoint(x: 139.53, y: 89.91), controlPoint1: CGPoint(x: 133.88, y: 85.35), controlPoint2: CGPoint(x: 133.88, y: 88.12))
        bezierPath.addLine(to: CGPoint(x: 139.53, y: 104.72))
        bezierPath.addCurve(to: CGPoint(x: 129.21, y: 108.95), controlPoint1: CGPoint(x: 136.26, y: 105.71), controlPoint2: CGPoint(x: 132.7, y: 107.25))
        bezierPath.addCurve(to: CGPoint(x: 158.66, y: 125.12), controlPoint1: CGPoint(x: 140.04, y: 114.34), controlPoint2: CGPoint(x: 152.96, y: 121.83))
        bezierPath.addLine(to: CGPoint(x: 160.69, y: 126.3))
        bezierPath.addCurve(to: CGPoint(x: 169.98, y: 138.14), controlPoint1: CGPoint(x: 166.43, y: 129.56), controlPoint2: CGPoint(x: 168.96, y: 133.49))
        bezierPath.addLine(to: CGPoint(x: 195, y: 138.14))
        bezierPath.addCurve(to: CGPoint(x: 196.06, y: 136.82), controlPoint1: CGPoint(x: 195.58, y: 138.14), controlPoint2: CGPoint(x: 196.06, y: 137.39))
        bezierPath.addLine(to: CGPoint(x: 196.06, y: 126.99))
        bezierPath.addCurve(to: CGPoint(x: 190.9, y: 119.36), controlPoint1: CGPoint(x: 196.06, y: 122.85), controlPoint2: CGPoint(x: 194.05, y: 121.15))
        bezierPath.close()
        fillColor25.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 3.83, y: 126.3))
        bezier2Path.addLine(to: CGPoint(x: 3.83, y: 136.13))
        bezier2Path.addCurve(to: CGPoint(x: 4.89, y: 137.45), controlPoint1: CGPoint(x: 3.83, y: 136.7), controlPoint2: CGPoint(x: 4.31, y: 137.45))
        bezier2Path.addLine(to: CGPoint(x: 29.91, y: 137.45))
        bezier2Path.addCurve(to: CGPoint(x: 39.21, y: 125.61), controlPoint1: CGPoint(x: 30.94, y: 132.81), controlPoint2: CGPoint(x: 33.47, y: 128.87))
        bezier2Path.addLine(to: CGPoint(x: 41.23, y: 124.44))
        bezier2Path.addCurve(to: CGPoint(x: 70.68, y: 108.26), controlPoint1: CGPoint(x: 46.93, y: 121.14), controlPoint2: CGPoint(x: 59.85, y: 113.65))
        bezier2Path.addCurve(to: CGPoint(x: 60.36, y: 104.03), controlPoint1: CGPoint(x: 67.19, y: 106.56), controlPoint2: CGPoint(x: 63.63, y: 105.02))
        bezier2Path.addLine(to: CGPoint(x: 60.36, y: 89.22))
        bezier2Path.addCurve(to: CGPoint(x: 66.01, y: 80.44), controlPoint1: CGPoint(x: 66.01, y: 87.43), controlPoint2: CGPoint(x: 66.01, y: 84.67))
        bezier2Path.addLine(to: CGPoint(x: 66.01, y: 70.36))
        bezier2Path.addCurve(to: CGPoint(x: 49.05, y: 52.67), controlPoint1: CGPoint(x: 66.01, y: 60.63), controlPoint2: CGPoint(x: 60.85, y: 52.67))
        bezier2Path.addCurve(to: CGPoint(x: 32.09, y: 70.36), controlPoint1: CGPoint(x: 37.26, y: 52.67), controlPoint2: CGPoint(x: 32.09, y: 60.63))
        bezier2Path.addLine(to: CGPoint(x: 32.09, y: 80.44))
        bezier2Path.addCurve(to: CGPoint(x: 37.75, y: 89.18), controlPoint1: CGPoint(x: 32.09, y: 84.62), controlPoint2: CGPoint(x: 32.09, y: 87.39))
        bezier2Path.addLine(to: CGPoint(x: 37.75, y: 104.03))
        bezier2Path.addCurve(to: CGPoint(x: 8.99, y: 118.68), controlPoint1: CGPoint(x: 26.44, y: 107.46), controlPoint2: CGPoint(x: 11.53, y: 117.23))
        bezier2Path.addCurve(to: CGPoint(x: 3.83, y: 126.3), controlPoint1: CGPoint(x: 5.84, y: 120.46), controlPoint2: CGPoint(x: 3.83, y: 122.16))
        bezier2Path.close()
        fillColor25.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 164.69, y: 142.1))
        bezier3Path.addLine(to: CGPoint(x: 164.69, y: 156.23))
        bezier3Path.addCurve(to: CGPoint(x: 163.18, y: 158.13), controlPoint1: CGPoint(x: 164.69, y: 157.06), controlPoint2: CGPoint(x: 164, y: 158.13))
        bezier3Path.addLine(to: CGPoint(x: 36.2, y: 158.13))
        bezier3Path.addCurve(to: CGPoint(x: 34.68, y: 156.23), controlPoint1: CGPoint(x: 35.37, y: 158.13), controlPoint2: CGPoint(x: 34.68, y: 157.06))
        bezier3Path.addLine(to: CGPoint(x: 34.68, y: 142.1))
        bezier3Path.addCurve(to: CGPoint(x: 40.34, y: 131.14), controlPoint1: CGPoint(x: 34.68, y: 136.15), controlPoint2: CGPoint(x: 35.81, y: 133.71))
        bezier3Path.addCurve(to: CGPoint(x: 79.9, y: 110.09), controlPoint1: CGPoint(x: 43.97, y: 129.06), controlPoint2: CGPoint(x: 68.42, y: 115.02))
        bezier3Path.addLine(to: CGPoint(x: 79.9, y: 88.8))
        bezier3Path.addCurve(to: CGPoint(x: 74.25, y: 76.17), controlPoint1: CGPoint(x: 76.38, y: 86.23), controlPoint2: CGPoint(x: 74.25, y: 82.25))
        bezier3Path.addLine(to: CGPoint(x: 74.25, y: 59.31))
        bezier3Path.addCurve(to: CGPoint(x: 99.69, y: 33.87), controlPoint1: CGPoint(x: 74.25, y: 45.32), controlPoint2: CGPoint(x: 82.73, y: 33.87))
        bezier3Path.addCurve(to: CGPoint(x: 125.12, y: 59.31), controlPoint1: CGPoint(x: 116.64, y: 33.87), controlPoint2: CGPoint(x: 125.12, y: 45.32))
        bezier3Path.addLine(to: CGPoint(x: 125.12, y: 76.17))
        bezier3Path.addCurve(to: CGPoint(x: 119.47, y: 88.74), controlPoint1: CGPoint(x: 125.12, y: 82.19), controlPoint2: CGPoint(x: 123, y: 86.16))
        bezier3Path.addLine(to: CGPoint(x: 119.47, y: 110.09))
        bezier3Path.addCurve(to: CGPoint(x: 159.04, y: 131.14), controlPoint1: CGPoint(x: 131.66, y: 115.02), controlPoint2: CGPoint(x: 155.4, y: 129.06))
        bezier3Path.addCurve(to: CGPoint(x: 164.69, y: 142.1), controlPoint1: CGPoint(x: 163.56, y: 133.71), controlPoint2: CGPoint(x: 164.69, y: 136.15))
        bezier3Path.close()
        fillColor25.setFill()
        bezier3Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawWhiteGeneral(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor25 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.750)

        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: 50.3, y: 63.75, width: 27.6, height: 27.6))
        fillColor25.setFill()
        ovalPath.fill()


        //// Oval 2 Drawing
        let oval2Path = UIBezierPath(ovalIn: CGRect(x: 48.65, y: 101.05, width: 27.6, height: 27.6))
        fillColor25.setFill()
        oval2Path.fill()


        //// Oval 3 Drawing
        let oval3Path = UIBezierPath(ovalIn: CGRect(x: 48.65, y: 138, width: 27.6, height: 27.6))
        fillColor25.setFill()
        oval3Path.fill()


        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 84.78, y: 72.22, width: 63.25, height: 10.65))
        fillColor25.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 84.78, y: 109.52, width: 63.25, height: 10.65))
        fillColor25.setFill()
        rectangle2Path.fill()


        //// Rectangle 3 Drawing
        let rectangle3Path = UIBezierPath(rect: CGRect(x: 84.78, y: 144.17, width: 63.25, height: 10.65))
        fillColor25.setFill()
        rectangle3Path.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 155.06, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 143.88, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 143.88, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 144.86, y: 26.46))
        bezierPath.addCurve(to: CGPoint(x: 166.74, y: 48.24), controlPoint1: CGPoint(x: 156.95, y: 26.46), controlPoint2: CGPoint(x: 166.74, y: 36.21))
        bezierPath.addLine(to: CGPoint(x: 166.74, y: 164.19))
        bezierPath.addCurve(to: CGPoint(x: 144.86, y: 185.97), controlPoint1: CGPoint(x: 166.74, y: 176.22), controlPoint2: CGPoint(x: 156.95, y: 185.97))
        bezierPath.addLine(to: CGPoint(x: 55.14, y: 185.97))
        bezierPath.addCurve(to: CGPoint(x: 33.26, y: 164.19), controlPoint1: CGPoint(x: 43.05, y: 185.97), controlPoint2: CGPoint(x: 33.26, y: 176.22))
        bezierPath.addLine(to: CGPoint(x: 33.26, y: 48.24))
        bezierPath.addCurve(to: CGPoint(x: 55.14, y: 26.46), controlPoint1: CGPoint(x: 33.26, y: 36.21), controlPoint2: CGPoint(x: 43.05, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 57.27, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 57.27, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 44.94, y: 13.22))
        bezierPath.addCurve(to: CGPoint(x: 23.16, y: 35), controlPoint1: CGPoint(x: 32.91, y: 13.22), controlPoint2: CGPoint(x: 23.16, y: 22.97))
        bezierPath.addLine(to: CGPoint(x: 23.16, y: 175.86))
        bezierPath.addCurve(to: CGPoint(x: 44.94, y: 197.64), controlPoint1: CGPoint(x: 23.16, y: 187.88), controlPoint2: CGPoint(x: 32.91, y: 197.64))
        bezierPath.addLine(to: CGPoint(x: 155.06, y: 197.64))
        bezierPath.addCurve(to: CGPoint(x: 176.84, y: 175.86), controlPoint1: CGPoint(x: 167.09, y: 197.64), controlPoint2: CGPoint(x: 176.84, y: 187.88))
        bezierPath.addLine(to: CGPoint(x: 176.84, y: 35))
        bezierPath.addCurve(to: CGPoint(x: 155.06, y: 13.22), controlPoint1: CGPoint(x: 176.84, y: 22.97), controlPoint2: CGPoint(x: 167.09, y: 13.22))
        bezierPath.close()
        fillColor25.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 125.15, y: 30.67))
        bezier2Path.addCurve(to: CGPoint(x: 120.43, y: 37.18), controlPoint1: CGPoint(x: 125.15, y: 34.27), controlPoint2: CGPoint(x: 123.04, y: 37.18))
        bezier2Path.addLine(to: CGPoint(x: 82.54, y: 37.18))
        bezier2Path.addCurve(to: CGPoint(x: 77.82, y: 30.67), controlPoint1: CGPoint(x: 79.93, y: 37.18), controlPoint2: CGPoint(x: 77.82, y: 34.27))
        bezier2Path.addLine(to: CGPoint(x: 77.82, y: 16.25))
        bezier2Path.addCurve(to: CGPoint(x: 82.54, y: 9.75), controlPoint1: CGPoint(x: 77.82, y: 12.66), controlPoint2: CGPoint(x: 79.93, y: 9.75))
        bezier2Path.addLine(to: CGPoint(x: 120.43, y: 9.75))
        bezier2Path.addCurve(to: CGPoint(x: 125.15, y: 16.25), controlPoint1: CGPoint(x: 123.04, y: 9.75), controlPoint2: CGPoint(x: 125.15, y: 12.66))
        bezier2Path.addLine(to: CGPoint(x: 125.15, y: 30.67))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 130.63, y: 2.36))
        bezier2Path.addLine(to: CGPoint(x: 72.34, y: 2.36))
        bezier2Path.addCurve(to: CGPoint(x: 65.08, y: 12.37), controlPoint1: CGPoint(x: 68.33, y: 2.36), controlPoint2: CGPoint(x: 65.08, y: 6.84))
        bezier2Path.addLine(to: CGPoint(x: 65.08, y: 34.56))
        bezier2Path.addCurve(to: CGPoint(x: 72.34, y: 44.56), controlPoint1: CGPoint(x: 65.08, y: 40.08), controlPoint2: CGPoint(x: 68.33, y: 44.56))
        bezier2Path.addLine(to: CGPoint(x: 130.63, y: 44.56))
        bezier2Path.addCurve(to: CGPoint(x: 137.89, y: 34.56), controlPoint1: CGPoint(x: 134.64, y: 44.56), controlPoint2: CGPoint(x: 137.89, y: 40.08))
        bezier2Path.addLine(to: CGPoint(x: 137.89, y: 12.37))
        bezier2Path.addCurve(to: CGPoint(x: 130.63, y: 2.36), controlPoint1: CGPoint(x: 137.89, y: 6.84), controlPoint2: CGPoint(x: 134.64, y: 2.36))
        bezier2Path.close()
        fillColor25.setFill()
        bezier2Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawRescue(whitewidth: CGFloat = 20, whiteheight: CGFloat = 20) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: whitewidth, height: whiteheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawFfffffRescue(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawEms(whitewidth: CGFloat = 20, whiteheight: CGFloat = 20) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: whitewidth, height: whiteheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawFfffffEms(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawFire(whitewidth: CGFloat = 20, whiteheight: CGFloat = 20) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: whitewidth, height: whiteheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawFfffffFire(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawGeneral(whitewidth: CGFloat = 20, whiteheight: CGFloat = 20) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: whitewidth, height: whiteheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawWhiteGeneral(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawCommunity(whitewidth: CGFloat = 20, whiteheight: CGFloat = 20) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: whitewidth, height: whiteheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawFfffffCommunity(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawFfffffMembers(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor25 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.750)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 190.9, y: 123.36))
        bezierPath.addCurve(to: CGPoint(x: 162.14, y: 108.72), controlPoint1: CGPoint(x: 188.37, y: 121.92), controlPoint2: CGPoint(x: 173.45, y: 112.15))
        bezierPath.addLine(to: CGPoint(x: 162.14, y: 93.86))
        bezierPath.addCurve(to: CGPoint(x: 167.8, y: 85.13), controlPoint1: CGPoint(x: 167.8, y: 92.07), controlPoint2: CGPoint(x: 167.8, y: 89.31))
        bezierPath.addLine(to: CGPoint(x: 167.8, y: 75.05))
        bezierPath.addCurve(to: CGPoint(x: 150.84, y: 57.35), controlPoint1: CGPoint(x: 167.8, y: 65.31), controlPoint2: CGPoint(x: 162.64, y: 57.35))
        bezierPath.addCurve(to: CGPoint(x: 133.88, y: 75.05), controlPoint1: CGPoint(x: 139.04, y: 57.35), controlPoint2: CGPoint(x: 133.88, y: 65.31))
        bezierPath.addLine(to: CGPoint(x: 133.88, y: 85.13))
        bezierPath.addCurve(to: CGPoint(x: 139.53, y: 93.91), controlPoint1: CGPoint(x: 133.88, y: 89.35), controlPoint2: CGPoint(x: 133.88, y: 92.12))
        bezierPath.addLine(to: CGPoint(x: 139.53, y: 108.72))
        bezierPath.addCurve(to: CGPoint(x: 129.21, y: 112.95), controlPoint1: CGPoint(x: 136.26, y: 109.71), controlPoint2: CGPoint(x: 132.7, y: 111.25))
        bezierPath.addCurve(to: CGPoint(x: 158.66, y: 129.12), controlPoint1: CGPoint(x: 140.04, y: 118.34), controlPoint2: CGPoint(x: 152.96, y: 125.83))
        bezierPath.addLine(to: CGPoint(x: 160.69, y: 130.3))
        bezierPath.addCurve(to: CGPoint(x: 169.98, y: 142.14), controlPoint1: CGPoint(x: 166.43, y: 133.56), controlPoint2: CGPoint(x: 168.96, y: 137.49))
        bezierPath.addLine(to: CGPoint(x: 195, y: 142.14))
        bezierPath.addCurve(to: CGPoint(x: 196.06, y: 140.82), controlPoint1: CGPoint(x: 195.58, y: 142.14), controlPoint2: CGPoint(x: 196.06, y: 141.39))
        bezierPath.addLine(to: CGPoint(x: 196.06, y: 130.99))
        bezierPath.addCurve(to: CGPoint(x: 190.9, y: 123.36), controlPoint1: CGPoint(x: 196.06, y: 126.85), controlPoint2: CGPoint(x: 194.05, y: 125.15))
        bezierPath.close()
        fillColor25.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 3.83, y: 130.3))
        bezier2Path.addLine(to: CGPoint(x: 3.83, y: 140.13))
        bezier2Path.addCurve(to: CGPoint(x: 4.89, y: 141.45), controlPoint1: CGPoint(x: 3.83, y: 140.7), controlPoint2: CGPoint(x: 4.31, y: 141.45))
        bezier2Path.addLine(to: CGPoint(x: 29.91, y: 141.45))
        bezier2Path.addCurve(to: CGPoint(x: 39.21, y: 129.61), controlPoint1: CGPoint(x: 30.94, y: 136.81), controlPoint2: CGPoint(x: 33.47, y: 132.87))
        bezier2Path.addLine(to: CGPoint(x: 41.23, y: 128.44))
        bezier2Path.addCurve(to: CGPoint(x: 70.68, y: 112.26), controlPoint1: CGPoint(x: 46.93, y: 125.14), controlPoint2: CGPoint(x: 59.85, y: 117.65))
        bezier2Path.addCurve(to: CGPoint(x: 60.36, y: 108.03), controlPoint1: CGPoint(x: 67.19, y: 110.56), controlPoint2: CGPoint(x: 63.63, y: 109.02))
        bezier2Path.addLine(to: CGPoint(x: 60.36, y: 93.22))
        bezier2Path.addCurve(to: CGPoint(x: 66.01, y: 84.44), controlPoint1: CGPoint(x: 66.01, y: 91.43), controlPoint2: CGPoint(x: 66.01, y: 88.67))
        bezier2Path.addLine(to: CGPoint(x: 66.01, y: 74.36))
        bezier2Path.addCurve(to: CGPoint(x: 49.05, y: 56.67), controlPoint1: CGPoint(x: 66.01, y: 64.63), controlPoint2: CGPoint(x: 60.85, y: 56.67))
        bezier2Path.addCurve(to: CGPoint(x: 32.09, y: 74.36), controlPoint1: CGPoint(x: 37.26, y: 56.67), controlPoint2: CGPoint(x: 32.09, y: 64.63))
        bezier2Path.addLine(to: CGPoint(x: 32.09, y: 84.44))
        bezier2Path.addCurve(to: CGPoint(x: 37.75, y: 93.18), controlPoint1: CGPoint(x: 32.09, y: 88.62), controlPoint2: CGPoint(x: 32.09, y: 91.39))
        bezier2Path.addLine(to: CGPoint(x: 37.75, y: 108.03))
        bezier2Path.addCurve(to: CGPoint(x: 8.99, y: 122.68), controlPoint1: CGPoint(x: 26.44, y: 111.46), controlPoint2: CGPoint(x: 11.53, y: 121.23))
        bezier2Path.addCurve(to: CGPoint(x: 3.83, y: 130.3), controlPoint1: CGPoint(x: 5.84, y: 124.46), controlPoint2: CGPoint(x: 3.83, y: 126.16))
        bezier2Path.close()
        fillColor25.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 164.69, y: 146.1))
        bezier3Path.addLine(to: CGPoint(x: 164.69, y: 160.23))
        bezier3Path.addCurve(to: CGPoint(x: 163.18, y: 162.13), controlPoint1: CGPoint(x: 164.69, y: 161.06), controlPoint2: CGPoint(x: 164, y: 162.13))
        bezier3Path.addLine(to: CGPoint(x: 36.2, y: 162.13))
        bezier3Path.addCurve(to: CGPoint(x: 34.68, y: 160.23), controlPoint1: CGPoint(x: 35.37, y: 162.13), controlPoint2: CGPoint(x: 34.68, y: 161.06))
        bezier3Path.addLine(to: CGPoint(x: 34.68, y: 146.1))
        bezier3Path.addCurve(to: CGPoint(x: 40.34, y: 135.14), controlPoint1: CGPoint(x: 34.68, y: 140.15), controlPoint2: CGPoint(x: 35.81, y: 137.71))
        bezier3Path.addCurve(to: CGPoint(x: 79.9, y: 114.09), controlPoint1: CGPoint(x: 43.97, y: 133.06), controlPoint2: CGPoint(x: 68.42, y: 119.02))
        bezier3Path.addLine(to: CGPoint(x: 79.9, y: 92.8))
        bezier3Path.addCurve(to: CGPoint(x: 74.25, y: 80.17), controlPoint1: CGPoint(x: 76.38, y: 90.23), controlPoint2: CGPoint(x: 74.25, y: 86.25))
        bezier3Path.addLine(to: CGPoint(x: 74.25, y: 63.31))
        bezier3Path.addCurve(to: CGPoint(x: 99.69, y: 37.87), controlPoint1: CGPoint(x: 74.25, y: 49.32), controlPoint2: CGPoint(x: 82.73, y: 37.87))
        bezier3Path.addCurve(to: CGPoint(x: 125.12, y: 63.31), controlPoint1: CGPoint(x: 116.64, y: 37.87), controlPoint2: CGPoint(x: 125.12, y: 49.32))
        bezier3Path.addLine(to: CGPoint(x: 125.12, y: 80.17))
        bezier3Path.addCurve(to: CGPoint(x: 119.47, y: 92.74), controlPoint1: CGPoint(x: 125.12, y: 86.19), controlPoint2: CGPoint(x: 123, y: 90.16))
        bezier3Path.addLine(to: CGPoint(x: 119.47, y: 114.09))
        bezier3Path.addCurve(to: CGPoint(x: 159.04, y: 135.14), controlPoint1: CGPoint(x: 131.66, y: 119.02), controlPoint2: CGPoint(x: 155.4, y: 133.06))
        bezier3Path.addCurve(to: CGPoint(x: 164.69, y: 146.1), controlPoint1: CGPoint(x: 163.56, y: 137.71), controlPoint2: CGPoint(x: 164.69, y: 140.15))
        bezier3Path.close()
        fillColor25.setFill()
        bezier3Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawMembers(whitewidth: CGFloat = 20, whiteheight: CGFloat = 20) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: whitewidth, height: whiteheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawFfffffMembers(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func draw_100515IconSet_092016_emsCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor3 = UIColor(red: 0.816, green: 0.254, blue: 0.173, alpha: 1.000)
        let fillColor4 = UIColor(red: 0.172, green: 0.188, blue: 0.418, alpha: 1.000)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 80.97, y: 2.36))
        bezierPath.addLine(to: CGPoint(x: 80.97, y: 70.45))
        bezierPath.addLine(to: CGPoint(x: 18.99, y: 42.27))
        bezierPath.addLine(to: CGPoint(x: 3.24, y: 76.91))
        bezierPath.addLine(to: CGPoint(x: 54.38, y: 100.16))
        bezierPath.addLine(to: CGPoint(x: 3.41, y: 123.76))
        bezierPath.addLine(to: CGPoint(x: 19.4, y: 158.29))
        bezierPath.addLine(to: CGPoint(x: 80.97, y: 129.78))
        bezierPath.addLine(to: CGPoint(x: 80.97, y: 197.64))
        bezierPath.addLine(to: CGPoint(x: 119.03, y: 197.64))
        bezierPath.addLine(to: CGPoint(x: 119.03, y: 129.55))
        bezierPath.addLine(to: CGPoint(x: 181.01, y: 157.73))
        bezierPath.addLine(to: CGPoint(x: 196.76, y: 123.09))
        bezierPath.addLine(to: CGPoint(x: 145.62, y: 99.84))
        bezierPath.addLine(to: CGPoint(x: 196.59, y: 76.24))
        bezierPath.addLine(to: CGPoint(x: 180.6, y: 41.71))
        bezierPath.addLine(to: CGPoint(x: 119.03, y: 70.22))
        bezierPath.addLine(to: CGPoint(x: 119.03, y: 2.36))
        bezierPath.addLine(to: CGPoint(x: 80.97, y: 2.36))
        bezierPath.close()
        fillColor4.setFill()
        bezierPath.fill()


        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath(rect: CGRect(x: -208.18, y: 284.25, width: 191.15, height: 122.4))
        clipPath.addClip()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: -72.89, y: 197.11))
        bezier2Path.addCurve(to: CGPoint(x: -147.12, y: 271.35), controlPoint1: CGPoint(x: -113.88, y: 197.11), controlPoint2: CGPoint(x: -147.12, y: 230.35))
        bezier2Path.addCurve(to: CGPoint(x: -72.89, y: 345.58), controlPoint1: CGPoint(x: -147.12, y: 312.34), controlPoint2: CGPoint(x: -113.88, y: 345.58))
        bezier2Path.addCurve(to: CGPoint(x: 1.35, y: 271.35), controlPoint1: CGPoint(x: -31.89, y: 345.58), controlPoint2: CGPoint(x: 1.35, y: 312.34))
        bezier2Path.addCurve(to: CGPoint(x: -72.89, y: 197.11), controlPoint1: CGPoint(x: 1.35, y: 230.35), controlPoint2: CGPoint(x: -31.89, y: 197.11))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: -72.89, y: 208.8))
        bezier2Path.addCurve(to: CGPoint(x: -28.66, y: 227.12), controlPoint1: CGPoint(x: -56.18, y: 208.8), controlPoint2: CGPoint(x: -40.47, y: 215.31))
        bezier2Path.addCurve(to: CGPoint(x: -10.34, y: 271.35), controlPoint1: CGPoint(x: -16.85, y: 238.93), controlPoint2: CGPoint(x: -10.34, y: 254.64))
        bezier2Path.addCurve(to: CGPoint(x: -28.66, y: 315.57), controlPoint1: CGPoint(x: -10.34, y: 288.05), controlPoint2: CGPoint(x: -16.85, y: 303.76))
        bezier2Path.addCurve(to: CGPoint(x: -72.89, y: 333.89), controlPoint1: CGPoint(x: -40.47, y: 327.39), controlPoint2: CGPoint(x: -56.18, y: 333.89))
        bezier2Path.addCurve(to: CGPoint(x: -117.11, y: 315.57), controlPoint1: CGPoint(x: -89.59, y: 333.89), controlPoint2: CGPoint(x: -105.3, y: 327.39))
        bezier2Path.addCurve(to: CGPoint(x: -135.43, y: 271.35), controlPoint1: CGPoint(x: -128.93, y: 303.76), controlPoint2: CGPoint(x: -135.43, y: 288.05))
        bezier2Path.addCurve(to: CGPoint(x: -117.11, y: 227.12), controlPoint1: CGPoint(x: -135.43, y: 254.64), controlPoint2: CGPoint(x: -128.93, y: 238.93))
        bezier2Path.addCurve(to: CGPoint(x: -72.89, y: 208.8), controlPoint1: CGPoint(x: -105.3, y: 215.31), controlPoint2: CGPoint(x: -89.59, y: 208.8))
        bezier2Path.close()
        fillColor3.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: -72.89, y: 171.13))
        bezier3Path.addCurve(to: CGPoint(x: -173.1, y: 271.35), controlPoint1: CGPoint(x: -128.23, y: 171.13), controlPoint2: CGPoint(x: -173.1, y: 216))
        bezier3Path.addCurve(to: CGPoint(x: -72.89, y: 371.56), controlPoint1: CGPoint(x: -173.1, y: 326.69), controlPoint2: CGPoint(x: -128.23, y: 371.56))
        bezier3Path.addCurve(to: CGPoint(x: 27.33, y: 271.35), controlPoint1: CGPoint(x: -17.54, y: 371.56), controlPoint2: CGPoint(x: 27.33, y: 326.69))
        bezier3Path.addCurve(to: CGPoint(x: -72.89, y: 171.13), controlPoint1: CGPoint(x: 27.33, y: 216), controlPoint2: CGPoint(x: -17.54, y: 171.13))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: -72.89, y: 186.91))
        bezier3Path.addCurve(to: CGPoint(x: -13.18, y: 211.64), controlPoint1: CGPoint(x: -50.33, y: 186.91), controlPoint2: CGPoint(x: -29.13, y: 195.69))
        bezier3Path.addCurve(to: CGPoint(x: 11.55, y: 271.35), controlPoint1: CGPoint(x: 2.77, y: 227.59), controlPoint2: CGPoint(x: 11.55, y: 248.79))
        bezier3Path.addCurve(to: CGPoint(x: -13.18, y: 331.05), controlPoint1: CGPoint(x: 11.55, y: 293.9), controlPoint2: CGPoint(x: 2.77, y: 315.1))
        bezier3Path.addCurve(to: CGPoint(x: -72.89, y: 355.78), controlPoint1: CGPoint(x: -29.13, y: 347), controlPoint2: CGPoint(x: -50.33, y: 355.78))
        bezier3Path.addCurve(to: CGPoint(x: -132.59, y: 331.05), controlPoint1: CGPoint(x: -95.44, y: 355.78), controlPoint2: CGPoint(x: -116.64, y: 347))
        bezier3Path.addCurve(to: CGPoint(x: -157.32, y: 271.35), controlPoint1: CGPoint(x: -148.54, y: 315.1), controlPoint2: CGPoint(x: -157.32, y: 293.9))
        bezier3Path.addCurve(to: CGPoint(x: -132.59, y: 211.64), controlPoint1: CGPoint(x: -157.32, y: 248.79), controlPoint2: CGPoint(x: -148.54, y: 227.59))
        bezier3Path.addCurve(to: CGPoint(x: -72.89, y: 186.91), controlPoint1: CGPoint(x: -116.64, y: 195.69), controlPoint2: CGPoint(x: -95.44, y: 186.91))
        bezier3Path.close()
        fillColor3.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: -72.89, y: 136.06))
        bezier4Path.addCurve(to: CGPoint(x: -208.18, y: 271.35), controlPoint1: CGPoint(x: -147.6, y: 136.06), controlPoint2: CGPoint(x: -208.18, y: 196.63))
        bezier4Path.addCurve(to: CGPoint(x: -72.89, y: 406.64), controlPoint1: CGPoint(x: -208.18, y: 346.07), controlPoint2: CGPoint(x: -147.6, y: 406.64))
        bezier4Path.addCurve(to: CGPoint(x: 62.41, y: 271.35), controlPoint1: CGPoint(x: 1.83, y: 406.64), controlPoint2: CGPoint(x: 62.41, y: 346.07))
        bezier4Path.addCurve(to: CGPoint(x: -72.89, y: 136.06), controlPoint1: CGPoint(x: 62.41, y: 196.63), controlPoint2: CGPoint(x: 1.83, y: 136.06))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: -72.89, y: 157.36))
        bezier4Path.addCurve(to: CGPoint(x: 7.72, y: 190.74), controlPoint1: CGPoint(x: -42.44, y: 157.36), controlPoint2: CGPoint(x: -13.81, y: 169.21))
        bezier4Path.addCurve(to: CGPoint(x: 41.1, y: 271.35), controlPoint1: CGPoint(x: 29.25, y: 212.27), controlPoint2: CGPoint(x: 41.1, y: 240.9))
        bezier4Path.addCurve(to: CGPoint(x: 7.72, y: 351.95), controlPoint1: CGPoint(x: 41.1, y: 301.79), controlPoint2: CGPoint(x: 29.25, y: 330.42))
        bezier4Path.addCurve(to: CGPoint(x: -72.89, y: 385.34), controlPoint1: CGPoint(x: -13.81, y: 373.48), controlPoint2: CGPoint(x: -42.44, y: 385.34))
        bezier4Path.addCurve(to: CGPoint(x: -153.49, y: 351.95), controlPoint1: CGPoint(x: -103.33, y: 385.34), controlPoint2: CGPoint(x: -131.96, y: 373.48))
        bezier4Path.addCurve(to: CGPoint(x: -186.88, y: 271.35), controlPoint1: CGPoint(x: -175.02, y: 330.42), controlPoint2: CGPoint(x: -186.88, y: 301.79))
        bezier4Path.addCurve(to: CGPoint(x: -153.49, y: 190.74), controlPoint1: CGPoint(x: -186.88, y: 240.9), controlPoint2: CGPoint(x: -175.02, y: 212.27))
        bezier4Path.addCurve(to: CGPoint(x: -72.89, y: 157.36), controlPoint1: CGPoint(x: -131.96, y: 169.21), controlPoint2: CGPoint(x: -103.33, y: 157.36))
        bezier4Path.close()
        fillColor3.setFill()
        bezier4Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func draw_100515IconSet_092016_SettingsCanvas() {
        //// Color Declarations
        let fillColor5 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let fillColor6 = UIColor(red: 0.201, green: 0.302, blue: 0.538, alpha: 1.000)
        let fillColor7 = UIColor(red: 0.973, green: 0.640, blue: 0.239, alpha: 1.000)
        let fillColor8 = UIColor(red: 0.886, green: 0.130, blue: 0.170, alpha: 1.000)

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 30.17, y: 25.62, width: 140.05, height: 163.35))
        fillColor5.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 69.75, y: 7.75, width: 63.7, height: 33))
        fillColor5.setFill()
        rectangle2Path.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 155.06, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 143.88, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 143.88, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 144.86, y: 26.46))
        bezierPath.addCurve(to: CGPoint(x: 166.74, y: 48.24), controlPoint1: CGPoint(x: 156.95, y: 26.46), controlPoint2: CGPoint(x: 166.74, y: 36.21))
        bezierPath.addLine(to: CGPoint(x: 166.74, y: 164.19))
        bezierPath.addCurve(to: CGPoint(x: 144.86, y: 185.97), controlPoint1: CGPoint(x: 166.74, y: 176.22), controlPoint2: CGPoint(x: 156.95, y: 185.97))
        bezierPath.addLine(to: CGPoint(x: 55.14, y: 185.97))
        bezierPath.addCurve(to: CGPoint(x: 33.26, y: 164.19), controlPoint1: CGPoint(x: 43.05, y: 185.97), controlPoint2: CGPoint(x: 33.26, y: 176.22))
        bezierPath.addLine(to: CGPoint(x: 33.26, y: 48.24))
        bezierPath.addCurve(to: CGPoint(x: 55.14, y: 26.46), controlPoint1: CGPoint(x: 33.26, y: 36.21), controlPoint2: CGPoint(x: 43.05, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 57.27, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 57.27, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 44.94, y: 13.22))
        bezierPath.addCurve(to: CGPoint(x: 23.16, y: 35), controlPoint1: CGPoint(x: 32.91, y: 13.22), controlPoint2: CGPoint(x: 23.16, y: 22.97))
        bezierPath.addLine(to: CGPoint(x: 23.16, y: 175.86))
        bezierPath.addCurve(to: CGPoint(x: 44.94, y: 197.64), controlPoint1: CGPoint(x: 23.16, y: 187.88), controlPoint2: CGPoint(x: 32.91, y: 197.64))
        bezierPath.addLine(to: CGPoint(x: 155.06, y: 197.64))
        bezierPath.addCurve(to: CGPoint(x: 176.84, y: 175.86), controlPoint1: CGPoint(x: 167.09, y: 197.64), controlPoint2: CGPoint(x: 176.84, y: 187.88))
        bezierPath.addLine(to: CGPoint(x: 176.84, y: 35))
        bezierPath.addCurve(to: CGPoint(x: 155.06, y: 13.22), controlPoint1: CGPoint(x: 176.84, y: 22.97), controlPoint2: CGPoint(x: 167.09, y: 13.22))
        bezierPath.close()
        fillColor6.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 125.15, y: 30.67))
        bezier2Path.addCurve(to: CGPoint(x: 120.43, y: 37.18), controlPoint1: CGPoint(x: 125.15, y: 34.27), controlPoint2: CGPoint(x: 123.04, y: 37.18))
        bezier2Path.addLine(to: CGPoint(x: 82.54, y: 37.18))
        bezier2Path.addCurve(to: CGPoint(x: 77.82, y: 30.67), controlPoint1: CGPoint(x: 79.93, y: 37.18), controlPoint2: CGPoint(x: 77.82, y: 34.27))
        bezier2Path.addLine(to: CGPoint(x: 77.82, y: 16.25))
        bezier2Path.addCurve(to: CGPoint(x: 82.54, y: 9.75), controlPoint1: CGPoint(x: 77.82, y: 12.66), controlPoint2: CGPoint(x: 79.93, y: 9.75))
        bezier2Path.addLine(to: CGPoint(x: 120.43, y: 9.75))
        bezier2Path.addCurve(to: CGPoint(x: 125.15, y: 16.25), controlPoint1: CGPoint(x: 123.04, y: 9.75), controlPoint2: CGPoint(x: 125.15, y: 12.66))
        bezier2Path.addLine(to: CGPoint(x: 125.15, y: 30.67))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 130.63, y: 2.36))
        bezier2Path.addLine(to: CGPoint(x: 72.34, y: 2.36))
        bezier2Path.addCurve(to: CGPoint(x: 65.08, y: 12.37), controlPoint1: CGPoint(x: 68.33, y: 2.36), controlPoint2: CGPoint(x: 65.08, y: 6.84))
        bezier2Path.addLine(to: CGPoint(x: 65.08, y: 34.56))
        bezier2Path.addCurve(to: CGPoint(x: 72.34, y: 44.56), controlPoint1: CGPoint(x: 65.08, y: 40.08), controlPoint2: CGPoint(x: 68.33, y: 44.56))
        bezier2Path.addLine(to: CGPoint(x: 130.63, y: 44.56))
        bezier2Path.addCurve(to: CGPoint(x: 137.89, y: 34.56), controlPoint1: CGPoint(x: 134.64, y: 44.56), controlPoint2: CGPoint(x: 137.89, y: 40.08))
        bezier2Path.addLine(to: CGPoint(x: 137.89, y: 12.37))
        bezier2Path.addCurve(to: CGPoint(x: 130.63, y: 2.36), controlPoint1: CGPoint(x: 137.89, y: 6.84), controlPoint2: CGPoint(x: 134.64, y: 2.36))
        bezier2Path.close()
        fillColor7.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 100, y: 119.1))
        bezier3Path.addCurve(to: CGPoint(x: 88.66, y: 107.76), controlPoint1: CGPoint(x: 93.74, y: 119.1), controlPoint2: CGPoint(x: 88.66, y: 114.02))
        bezier3Path.addCurve(to: CGPoint(x: 100, y: 96.41), controlPoint1: CGPoint(x: 88.66, y: 101.49), controlPoint2: CGPoint(x: 93.74, y: 96.41))
        bezier3Path.addCurve(to: CGPoint(x: 111.34, y: 107.76), controlPoint1: CGPoint(x: 106.26, y: 96.41), controlPoint2: CGPoint(x: 111.34, y: 101.49))
        bezier3Path.addCurve(to: CGPoint(x: 100, y: 119.1), controlPoint1: CGPoint(x: 111.34, y: 114.02), controlPoint2: CGPoint(x: 106.26, y: 119.1))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 110.44, y: 62.38))
        bezier3Path.addLine(to: CGPoint(x: 89.56, y: 62.38))
        bezier3Path.addCurve(to: CGPoint(x: 88.66, y: 63.29), controlPoint1: CGPoint(x: 89.07, y: 62.38), controlPoint2: CGPoint(x: 88.66, y: 62.79))
        bezier3Path.addLine(to: CGPoint(x: 88.66, y: 75.7))
        bezier3Path.addCurve(to: CGPoint(x: 85.36, y: 77.07), controlPoint1: CGPoint(x: 87.53, y: 76.1), controlPoint2: CGPoint(x: 86.43, y: 76.56))
        bezier3Path.addLine(to: CGPoint(x: 76.58, y: 68.29))
        bezier3Path.addCurve(to: CGPoint(x: 75.94, y: 68.03), controlPoint1: CGPoint(x: 76.4, y: 68.12), controlPoint2: CGPoint(x: 76.17, y: 68.03))
        bezier3Path.addCurve(to: CGPoint(x: 75.3, y: 68.29), controlPoint1: CGPoint(x: 75.7, y: 68.03), controlPoint2: CGPoint(x: 75.47, y: 68.12))
        bezier3Path.addLine(to: CGPoint(x: 60.54, y: 83.05))
        bezier3Path.addCurve(to: CGPoint(x: 60.54, y: 84.34), controlPoint1: CGPoint(x: 60.18, y: 83.41), controlPoint2: CGPoint(x: 60.18, y: 83.98))
        bezier3Path.addLine(to: CGPoint(x: 69.32, y: 93.12))
        bezier3Path.addCurve(to: CGPoint(x: 67.95, y: 96.41), controlPoint1: CGPoint(x: 68.81, y: 94.19), controlPoint2: CGPoint(x: 68.35, y: 95.28))
        bezier3Path.addLine(to: CGPoint(x: 55.53, y: 96.41))
        bezier3Path.addCurve(to: CGPoint(x: 54.63, y: 97.32), controlPoint1: CGPoint(x: 55.04, y: 96.41), controlPoint2: CGPoint(x: 54.63, y: 96.82))
        bezier3Path.addLine(to: CGPoint(x: 54.63, y: 118.19))
        bezier3Path.addCurve(to: CGPoint(x: 55.53, y: 119.1), controlPoint1: CGPoint(x: 54.63, y: 118.69), controlPoint2: CGPoint(x: 55.04, y: 119.1))
        bezier3Path.addLine(to: CGPoint(x: 67.95, y: 119.1))
        bezier3Path.addCurve(to: CGPoint(x: 69.32, y: 122.4), controlPoint1: CGPoint(x: 68.35, y: 120.23), controlPoint2: CGPoint(x: 68.81, y: 121.33))
        bezier3Path.addLine(to: CGPoint(x: 60.54, y: 131.18))
        bezier3Path.addCurve(to: CGPoint(x: 60.54, y: 132.46), controlPoint1: CGPoint(x: 60.18, y: 131.53), controlPoint2: CGPoint(x: 60.18, y: 132.11))
        bezier3Path.addLine(to: CGPoint(x: 75.3, y: 147.22))
        bezier3Path.addCurve(to: CGPoint(x: 75.94, y: 147.49), controlPoint1: CGPoint(x: 75.47, y: 147.4), controlPoint2: CGPoint(x: 75.7, y: 147.49))
        bezier3Path.addCurve(to: CGPoint(x: 76.58, y: 147.22), controlPoint1: CGPoint(x: 76.17, y: 147.49), controlPoint2: CGPoint(x: 76.4, y: 147.4))
        bezier3Path.addLine(to: CGPoint(x: 85.36, y: 138.44))
        bezier3Path.addCurve(to: CGPoint(x: 88.66, y: 139.81), controlPoint1: CGPoint(x: 86.43, y: 138.95), controlPoint2: CGPoint(x: 87.53, y: 139.41))
        bezier3Path.addLine(to: CGPoint(x: 88.66, y: 152.22))
        bezier3Path.addCurve(to: CGPoint(x: 89.56, y: 153.13), controlPoint1: CGPoint(x: 88.66, y: 152.72), controlPoint2: CGPoint(x: 89.07, y: 153.13))
        bezier3Path.addLine(to: CGPoint(x: 110.44, y: 153.13))
        bezier3Path.addCurve(to: CGPoint(x: 111.34, y: 152.22), controlPoint1: CGPoint(x: 110.94, y: 153.13), controlPoint2: CGPoint(x: 111.34, y: 152.72))
        bezier3Path.addLine(to: CGPoint(x: 111.34, y: 139.81))
        bezier3Path.addCurve(to: CGPoint(x: 114.64, y: 138.44), controlPoint1: CGPoint(x: 112.48, y: 139.41), controlPoint2: CGPoint(x: 113.57, y: 138.95))
        bezier3Path.addLine(to: CGPoint(x: 123.42, y: 147.22))
        bezier3Path.addCurve(to: CGPoint(x: 124.06, y: 147.49), controlPoint1: CGPoint(x: 123.6, y: 147.4), controlPoint2: CGPoint(x: 123.83, y: 147.49))
        bezier3Path.addCurve(to: CGPoint(x: 124.7, y: 147.22), controlPoint1: CGPoint(x: 124.3, y: 147.49), controlPoint2: CGPoint(x: 124.53, y: 147.4))
        bezier3Path.addLine(to: CGPoint(x: 139.47, y: 132.46))
        bezier3Path.addCurve(to: CGPoint(x: 139.47, y: 131.18), controlPoint1: CGPoint(x: 139.82, y: 132.11), controlPoint2: CGPoint(x: 139.82, y: 131.53))
        bezier3Path.addLine(to: CGPoint(x: 130.68, y: 122.4))
        bezier3Path.addCurve(to: CGPoint(x: 132.05, y: 119.1), controlPoint1: CGPoint(x: 131.2, y: 121.33), controlPoint2: CGPoint(x: 131.66, y: 120.23))
        bezier3Path.addLine(to: CGPoint(x: 144.47, y: 119.1))
        bezier3Path.addCurve(to: CGPoint(x: 145.38, y: 118.19), controlPoint1: CGPoint(x: 144.97, y: 119.1), controlPoint2: CGPoint(x: 145.38, y: 118.69))
        bezier3Path.addLine(to: CGPoint(x: 145.38, y: 97.32))
        bezier3Path.addCurve(to: CGPoint(x: 144.47, y: 96.41), controlPoint1: CGPoint(x: 145.38, y: 96.82), controlPoint2: CGPoint(x: 144.97, y: 96.41))
        bezier3Path.addLine(to: CGPoint(x: 132.05, y: 96.41))
        bezier3Path.addCurve(to: CGPoint(x: 130.68, y: 93.12), controlPoint1: CGPoint(x: 131.66, y: 95.28), controlPoint2: CGPoint(x: 131.2, y: 94.19))
        bezier3Path.addLine(to: CGPoint(x: 139.47, y: 84.34))
        bezier3Path.addCurve(to: CGPoint(x: 139.47, y: 83.05), controlPoint1: CGPoint(x: 139.82, y: 83.98), controlPoint2: CGPoint(x: 139.82, y: 83.41))
        bezier3Path.addLine(to: CGPoint(x: 124.7, y: 68.29))
        bezier3Path.addCurve(to: CGPoint(x: 124.06, y: 68.03), controlPoint1: CGPoint(x: 124.53, y: 68.12), controlPoint2: CGPoint(x: 124.3, y: 68.03))
        bezier3Path.addCurve(to: CGPoint(x: 123.42, y: 68.29), controlPoint1: CGPoint(x: 123.83, y: 68.03), controlPoint2: CGPoint(x: 123.6, y: 68.12))
        bezier3Path.addLine(to: CGPoint(x: 114.64, y: 77.07))
        bezier3Path.addCurve(to: CGPoint(x: 111.34, y: 75.7), controlPoint1: CGPoint(x: 113.57, y: 76.56), controlPoint2: CGPoint(x: 112.48, y: 76.1))
        bezier3Path.addLine(to: CGPoint(x: 111.34, y: 63.29))
        bezier3Path.addCurve(to: CGPoint(x: 110.44, y: 62.38), controlPoint1: CGPoint(x: 111.34, y: 62.79), controlPoint2: CGPoint(x: 110.94, y: 62.38))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 100, y: 126.36))
        bezier3Path.addCurve(to: CGPoint(x: 118.6, y: 107.76), controlPoint1: CGPoint(x: 110.26, y: 126.36), controlPoint2: CGPoint(x: 118.6, y: 118.02))
        bezier3Path.addCurve(to: CGPoint(x: 100, y: 89.15), controlPoint1: CGPoint(x: 118.6, y: 97.5), controlPoint2: CGPoint(x: 110.26, y: 89.15))
        bezier3Path.addCurve(to: CGPoint(x: 81.4, y: 107.76), controlPoint1: CGPoint(x: 89.74, y: 89.15), controlPoint2: CGPoint(x: 81.4, y: 97.5))
        bezier3Path.addCurve(to: CGPoint(x: 100, y: 126.36), controlPoint1: CGPoint(x: 81.4, y: 118.02), controlPoint2: CGPoint(x: 89.74, y: 126.36))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 104.08, y: 69.64))
        bezier3Path.addLine(to: CGPoint(x: 104.08, y: 75.7))
        bezier3Path.addLine(to: CGPoint(x: 104.08, y: 80.84))
        bezier3Path.addLine(to: CGPoint(x: 108.93, y: 82.55))
        bezier3Path.addCurve(to: CGPoint(x: 111.51, y: 83.62), controlPoint1: CGPoint(x: 109.8, y: 82.86), controlPoint2: CGPoint(x: 110.67, y: 83.22))
        bezier3Path.addLine(to: CGPoint(x: 116.15, y: 85.84))
        bezier3Path.addLine(to: CGPoint(x: 119.78, y: 82.21))
        bezier3Path.addLine(to: CGPoint(x: 124.06, y: 77.92))
        bezier3Path.addLine(to: CGPoint(x: 129.84, y: 83.7))
        bezier3Path.addLine(to: CGPoint(x: 125.55, y: 87.98))
        bezier3Path.addLine(to: CGPoint(x: 121.91, y: 91.62))
        bezier3Path.addLine(to: CGPoint(x: 124.14, y: 96.26))
        bezier3Path.addCurve(to: CGPoint(x: 125.2, y: 98.82), controlPoint1: CGPoint(x: 124.54, y: 97.1), controlPoint2: CGPoint(x: 124.9, y: 97.96))
        bezier3Path.addLine(to: CGPoint(x: 126.91, y: 103.67))
        bezier3Path.addLine(to: CGPoint(x: 132.05, y: 103.67))
        bezier3Path.addLine(to: CGPoint(x: 138.12, y: 103.67))
        bezier3Path.addLine(to: CGPoint(x: 138.12, y: 111.84))
        bezier3Path.addLine(to: CGPoint(x: 132.05, y: 111.84))
        bezier3Path.addLine(to: CGPoint(x: 126.91, y: 111.84))
        bezier3Path.addLine(to: CGPoint(x: 125.2, y: 116.69))
        bezier3Path.addCurve(to: CGPoint(x: 124.14, y: 119.25), controlPoint1: CGPoint(x: 124.9, y: 117.55), controlPoint2: CGPoint(x: 124.54, y: 118.41))
        bezier3Path.addLine(to: CGPoint(x: 121.91, y: 123.89))
        bezier3Path.addLine(to: CGPoint(x: 125.55, y: 127.53))
        bezier3Path.addLine(to: CGPoint(x: 129.84, y: 131.82))
        bezier3Path.addLine(to: CGPoint(x: 124.06, y: 137.59))
        bezier3Path.addLine(to: CGPoint(x: 119.78, y: 133.31))
        bezier3Path.addLine(to: CGPoint(x: 116.15, y: 129.67))
        bezier3Path.addLine(to: CGPoint(x: 111.51, y: 131.89))
        bezier3Path.addCurve(to: CGPoint(x: 108.93, y: 132.96), controlPoint1: CGPoint(x: 110.67, y: 132.3), controlPoint2: CGPoint(x: 109.8, y: 132.66))
        bezier3Path.addLine(to: CGPoint(x: 104.08, y: 134.67))
        bezier3Path.addLine(to: CGPoint(x: 104.08, y: 139.81))
        bezier3Path.addLine(to: CGPoint(x: 104.08, y: 145.87))
        bezier3Path.addLine(to: CGPoint(x: 95.92, y: 145.87))
        bezier3Path.addLine(to: CGPoint(x: 95.92, y: 139.81))
        bezier3Path.addLine(to: CGPoint(x: 95.92, y: 134.68))
        bezier3Path.addLine(to: CGPoint(x: 91.08, y: 132.96))
        bezier3Path.addCurve(to: CGPoint(x: 88.49, y: 131.89), controlPoint1: CGPoint(x: 90.21, y: 132.66), controlPoint2: CGPoint(x: 89.33, y: 132.29))
        bezier3Path.addLine(to: CGPoint(x: 83.85, y: 129.68))
        bezier3Path.addLine(to: CGPoint(x: 80.22, y: 133.31))
        bezier3Path.addLine(to: CGPoint(x: 75.94, y: 137.59))
        bezier3Path.addLine(to: CGPoint(x: 70.16, y: 131.82))
        bezier3Path.addLine(to: CGPoint(x: 74.45, y: 127.53))
        bezier3Path.addLine(to: CGPoint(x: 78.08, y: 123.9))
        bezier3Path.addLine(to: CGPoint(x: 75.87, y: 119.27))
        bezier3Path.addCurve(to: CGPoint(x: 74.79, y: 116.67), controlPoint1: CGPoint(x: 75.46, y: 118.42), controlPoint2: CGPoint(x: 75.1, y: 117.54))
        bezier3Path.addLine(to: CGPoint(x: 73.07, y: 111.84))
        bezier3Path.addLine(to: CGPoint(x: 67.95, y: 111.84))
        bezier3Path.addLine(to: CGPoint(x: 61.89, y: 111.84))
        bezier3Path.addLine(to: CGPoint(x: 61.89, y: 103.67))
        bezier3Path.addLine(to: CGPoint(x: 67.95, y: 103.67))
        bezier3Path.addLine(to: CGPoint(x: 73.07, y: 103.67))
        bezier3Path.addLine(to: CGPoint(x: 74.79, y: 98.84))
        bezier3Path.addCurve(to: CGPoint(x: 75.87, y: 96.24), controlPoint1: CGPoint(x: 75.1, y: 97.97), controlPoint2: CGPoint(x: 75.46, y: 97.09))
        bezier3Path.addLine(to: CGPoint(x: 78.08, y: 91.61))
        bezier3Path.addLine(to: CGPoint(x: 74.45, y: 87.98))
        bezier3Path.addLine(to: CGPoint(x: 70.16, y: 83.7))
        bezier3Path.addLine(to: CGPoint(x: 75.94, y: 77.92))
        bezier3Path.addLine(to: CGPoint(x: 80.22, y: 82.21))
        bezier3Path.addLine(to: CGPoint(x: 83.85, y: 85.84))
        bezier3Path.addLine(to: CGPoint(x: 88.49, y: 83.62))
        bezier3Path.addCurve(to: CGPoint(x: 91.08, y: 82.55), controlPoint1: CGPoint(x: 89.33, y: 83.22), controlPoint2: CGPoint(x: 90.21, y: 82.86))
        bezier3Path.addLine(to: CGPoint(x: 95.92, y: 80.83))
        bezier3Path.addLine(to: CGPoint(x: 95.92, y: 75.7))
        bezier3Path.addLine(to: CGPoint(x: 95.92, y: 69.64))
        bezier3Path.addLine(to: CGPoint(x: 104.08, y: 69.64))
        bezier3Path.close()
        fillColor8.setFill()
        bezier3Path.fill()
    }

    @objc dynamic public class func draw_100515IconSet_092016_SettingswhiteCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let whiteTrans75 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.750)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 155.06, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 143.88, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 143.88, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 144.86, y: 26.46))
        bezierPath.addCurve(to: CGPoint(x: 166.74, y: 48.24), controlPoint1: CGPoint(x: 156.95, y: 26.46), controlPoint2: CGPoint(x: 166.74, y: 36.21))
        bezierPath.addLine(to: CGPoint(x: 166.74, y: 164.19))
        bezierPath.addCurve(to: CGPoint(x: 144.86, y: 185.97), controlPoint1: CGPoint(x: 166.74, y: 176.22), controlPoint2: CGPoint(x: 156.95, y: 185.97))
        bezierPath.addLine(to: CGPoint(x: 55.14, y: 185.97))
        bezierPath.addCurve(to: CGPoint(x: 33.26, y: 164.19), controlPoint1: CGPoint(x: 43.05, y: 185.97), controlPoint2: CGPoint(x: 33.26, y: 176.22))
        bezierPath.addLine(to: CGPoint(x: 33.26, y: 48.24))
        bezierPath.addCurve(to: CGPoint(x: 55.14, y: 26.46), controlPoint1: CGPoint(x: 33.26, y: 36.21), controlPoint2: CGPoint(x: 43.05, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 57.27, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 57.27, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 44.94, y: 13.22))
        bezierPath.addCurve(to: CGPoint(x: 23.16, y: 35), controlPoint1: CGPoint(x: 32.91, y: 13.22), controlPoint2: CGPoint(x: 23.16, y: 22.97))
        bezierPath.addLine(to: CGPoint(x: 23.16, y: 175.86))
        bezierPath.addCurve(to: CGPoint(x: 44.94, y: 197.64), controlPoint1: CGPoint(x: 23.16, y: 187.88), controlPoint2: CGPoint(x: 32.91, y: 197.64))
        bezierPath.addLine(to: CGPoint(x: 155.06, y: 197.64))
        bezierPath.addCurve(to: CGPoint(x: 176.84, y: 175.86), controlPoint1: CGPoint(x: 167.09, y: 197.64), controlPoint2: CGPoint(x: 176.84, y: 187.88))
        bezierPath.addLine(to: CGPoint(x: 176.84, y: 35))
        bezierPath.addCurve(to: CGPoint(x: 155.06, y: 13.22), controlPoint1: CGPoint(x: 176.84, y: 22.97), controlPoint2: CGPoint(x: 167.09, y: 13.22))
        bezierPath.close()
        whiteTrans75.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 125.15, y: 30.67))
        bezier2Path.addCurve(to: CGPoint(x: 120.43, y: 37.18), controlPoint1: CGPoint(x: 125.15, y: 34.27), controlPoint2: CGPoint(x: 123.04, y: 37.18))
        bezier2Path.addLine(to: CGPoint(x: 82.54, y: 37.18))
        bezier2Path.addCurve(to: CGPoint(x: 77.82, y: 30.67), controlPoint1: CGPoint(x: 79.93, y: 37.18), controlPoint2: CGPoint(x: 77.82, y: 34.27))
        bezier2Path.addLine(to: CGPoint(x: 77.82, y: 16.25))
        bezier2Path.addCurve(to: CGPoint(x: 82.54, y: 9.75), controlPoint1: CGPoint(x: 77.82, y: 12.66), controlPoint2: CGPoint(x: 79.93, y: 9.75))
        bezier2Path.addLine(to: CGPoint(x: 120.43, y: 9.75))
        bezier2Path.addCurve(to: CGPoint(x: 125.15, y: 16.25), controlPoint1: CGPoint(x: 123.04, y: 9.75), controlPoint2: CGPoint(x: 125.15, y: 12.66))
        bezier2Path.addLine(to: CGPoint(x: 125.15, y: 30.67))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 130.63, y: 2.36))
        bezier2Path.addLine(to: CGPoint(x: 72.34, y: 2.36))
        bezier2Path.addCurve(to: CGPoint(x: 65.08, y: 12.37), controlPoint1: CGPoint(x: 68.33, y: 2.36), controlPoint2: CGPoint(x: 65.08, y: 6.84))
        bezier2Path.addLine(to: CGPoint(x: 65.08, y: 34.56))
        bezier2Path.addCurve(to: CGPoint(x: 72.34, y: 44.56), controlPoint1: CGPoint(x: 65.08, y: 40.08), controlPoint2: CGPoint(x: 68.33, y: 44.56))
        bezier2Path.addLine(to: CGPoint(x: 130.63, y: 44.56))
        bezier2Path.addCurve(to: CGPoint(x: 137.89, y: 34.56), controlPoint1: CGPoint(x: 134.64, y: 44.56), controlPoint2: CGPoint(x: 137.89, y: 40.08))
        bezier2Path.addLine(to: CGPoint(x: 137.89, y: 12.37))
        bezier2Path.addCurve(to: CGPoint(x: 130.63, y: 2.36), controlPoint1: CGPoint(x: 137.89, y: 6.84), controlPoint2: CGPoint(x: 134.64, y: 2.36))
        bezier2Path.close()
        whiteTrans75.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 100, y: 123.1))
        bezier3Path.addCurve(to: CGPoint(x: 88.66, y: 111.76), controlPoint1: CGPoint(x: 93.74, y: 123.1), controlPoint2: CGPoint(x: 88.66, y: 118.02))
        bezier3Path.addCurve(to: CGPoint(x: 100, y: 100.41), controlPoint1: CGPoint(x: 88.66, y: 105.49), controlPoint2: CGPoint(x: 93.74, y: 100.41))
        bezier3Path.addCurve(to: CGPoint(x: 111.34, y: 111.76), controlPoint1: CGPoint(x: 106.26, y: 100.41), controlPoint2: CGPoint(x: 111.34, y: 105.49))
        bezier3Path.addCurve(to: CGPoint(x: 100, y: 123.1), controlPoint1: CGPoint(x: 111.34, y: 118.02), controlPoint2: CGPoint(x: 106.26, y: 123.1))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 110.44, y: 66.38))
        bezier3Path.addLine(to: CGPoint(x: 89.56, y: 66.38))
        bezier3Path.addCurve(to: CGPoint(x: 88.66, y: 67.29), controlPoint1: CGPoint(x: 89.07, y: 66.38), controlPoint2: CGPoint(x: 88.66, y: 66.79))
        bezier3Path.addLine(to: CGPoint(x: 88.66, y: 79.7))
        bezier3Path.addCurve(to: CGPoint(x: 85.36, y: 81.07), controlPoint1: CGPoint(x: 87.53, y: 80.1), controlPoint2: CGPoint(x: 86.43, y: 80.56))
        bezier3Path.addLine(to: CGPoint(x: 76.58, y: 72.29))
        bezier3Path.addCurve(to: CGPoint(x: 75.94, y: 72.03), controlPoint1: CGPoint(x: 76.4, y: 72.12), controlPoint2: CGPoint(x: 76.17, y: 72.03))
        bezier3Path.addCurve(to: CGPoint(x: 75.3, y: 72.29), controlPoint1: CGPoint(x: 75.7, y: 72.03), controlPoint2: CGPoint(x: 75.47, y: 72.12))
        bezier3Path.addLine(to: CGPoint(x: 60.54, y: 87.05))
        bezier3Path.addCurve(to: CGPoint(x: 60.54, y: 88.34), controlPoint1: CGPoint(x: 60.18, y: 87.41), controlPoint2: CGPoint(x: 60.18, y: 87.98))
        bezier3Path.addLine(to: CGPoint(x: 69.32, y: 97.12))
        bezier3Path.addCurve(to: CGPoint(x: 67.95, y: 100.41), controlPoint1: CGPoint(x: 68.81, y: 98.19), controlPoint2: CGPoint(x: 68.35, y: 99.28))
        bezier3Path.addLine(to: CGPoint(x: 55.53, y: 100.41))
        bezier3Path.addCurve(to: CGPoint(x: 54.63, y: 101.32), controlPoint1: CGPoint(x: 55.04, y: 100.41), controlPoint2: CGPoint(x: 54.63, y: 100.82))
        bezier3Path.addLine(to: CGPoint(x: 54.63, y: 122.19))
        bezier3Path.addCurve(to: CGPoint(x: 55.53, y: 123.1), controlPoint1: CGPoint(x: 54.63, y: 122.69), controlPoint2: CGPoint(x: 55.04, y: 123.1))
        bezier3Path.addLine(to: CGPoint(x: 67.95, y: 123.1))
        bezier3Path.addCurve(to: CGPoint(x: 69.32, y: 126.4), controlPoint1: CGPoint(x: 68.35, y: 124.23), controlPoint2: CGPoint(x: 68.81, y: 125.33))
        bezier3Path.addLine(to: CGPoint(x: 60.54, y: 135.18))
        bezier3Path.addCurve(to: CGPoint(x: 60.54, y: 136.46), controlPoint1: CGPoint(x: 60.18, y: 135.53), controlPoint2: CGPoint(x: 60.18, y: 136.11))
        bezier3Path.addLine(to: CGPoint(x: 75.3, y: 151.22))
        bezier3Path.addCurve(to: CGPoint(x: 75.94, y: 151.49), controlPoint1: CGPoint(x: 75.47, y: 151.4), controlPoint2: CGPoint(x: 75.7, y: 151.49))
        bezier3Path.addCurve(to: CGPoint(x: 76.58, y: 151.22), controlPoint1: CGPoint(x: 76.17, y: 151.49), controlPoint2: CGPoint(x: 76.4, y: 151.4))
        bezier3Path.addLine(to: CGPoint(x: 85.36, y: 142.44))
        bezier3Path.addCurve(to: CGPoint(x: 88.66, y: 143.81), controlPoint1: CGPoint(x: 86.43, y: 142.95), controlPoint2: CGPoint(x: 87.53, y: 143.41))
        bezier3Path.addLine(to: CGPoint(x: 88.66, y: 156.22))
        bezier3Path.addCurve(to: CGPoint(x: 89.56, y: 157.13), controlPoint1: CGPoint(x: 88.66, y: 156.72), controlPoint2: CGPoint(x: 89.07, y: 157.13))
        bezier3Path.addLine(to: CGPoint(x: 110.44, y: 157.13))
        bezier3Path.addCurve(to: CGPoint(x: 111.34, y: 156.22), controlPoint1: CGPoint(x: 110.94, y: 157.13), controlPoint2: CGPoint(x: 111.34, y: 156.72))
        bezier3Path.addLine(to: CGPoint(x: 111.34, y: 143.81))
        bezier3Path.addCurve(to: CGPoint(x: 114.64, y: 142.44), controlPoint1: CGPoint(x: 112.48, y: 143.41), controlPoint2: CGPoint(x: 113.57, y: 142.95))
        bezier3Path.addLine(to: CGPoint(x: 123.42, y: 151.22))
        bezier3Path.addCurve(to: CGPoint(x: 124.06, y: 151.49), controlPoint1: CGPoint(x: 123.6, y: 151.4), controlPoint2: CGPoint(x: 123.83, y: 151.49))
        bezier3Path.addCurve(to: CGPoint(x: 124.7, y: 151.22), controlPoint1: CGPoint(x: 124.3, y: 151.49), controlPoint2: CGPoint(x: 124.53, y: 151.4))
        bezier3Path.addLine(to: CGPoint(x: 139.47, y: 136.46))
        bezier3Path.addCurve(to: CGPoint(x: 139.47, y: 135.18), controlPoint1: CGPoint(x: 139.82, y: 136.11), controlPoint2: CGPoint(x: 139.82, y: 135.53))
        bezier3Path.addLine(to: CGPoint(x: 130.68, y: 126.4))
        bezier3Path.addCurve(to: CGPoint(x: 132.05, y: 123.1), controlPoint1: CGPoint(x: 131.2, y: 125.33), controlPoint2: CGPoint(x: 131.66, y: 124.23))
        bezier3Path.addLine(to: CGPoint(x: 144.47, y: 123.1))
        bezier3Path.addCurve(to: CGPoint(x: 145.38, y: 122.19), controlPoint1: CGPoint(x: 144.97, y: 123.1), controlPoint2: CGPoint(x: 145.38, y: 122.69))
        bezier3Path.addLine(to: CGPoint(x: 145.38, y: 101.32))
        bezier3Path.addCurve(to: CGPoint(x: 144.47, y: 100.41), controlPoint1: CGPoint(x: 145.38, y: 100.82), controlPoint2: CGPoint(x: 144.97, y: 100.41))
        bezier3Path.addLine(to: CGPoint(x: 132.05, y: 100.41))
        bezier3Path.addCurve(to: CGPoint(x: 130.68, y: 97.12), controlPoint1: CGPoint(x: 131.66, y: 99.28), controlPoint2: CGPoint(x: 131.2, y: 98.19))
        bezier3Path.addLine(to: CGPoint(x: 139.47, y: 88.34))
        bezier3Path.addCurve(to: CGPoint(x: 139.47, y: 87.05), controlPoint1: CGPoint(x: 139.82, y: 87.98), controlPoint2: CGPoint(x: 139.82, y: 87.41))
        bezier3Path.addLine(to: CGPoint(x: 124.7, y: 72.29))
        bezier3Path.addCurve(to: CGPoint(x: 124.06, y: 72.03), controlPoint1: CGPoint(x: 124.53, y: 72.12), controlPoint2: CGPoint(x: 124.3, y: 72.03))
        bezier3Path.addCurve(to: CGPoint(x: 123.42, y: 72.29), controlPoint1: CGPoint(x: 123.83, y: 72.03), controlPoint2: CGPoint(x: 123.6, y: 72.12))
        bezier3Path.addLine(to: CGPoint(x: 114.64, y: 81.07))
        bezier3Path.addCurve(to: CGPoint(x: 111.34, y: 79.7), controlPoint1: CGPoint(x: 113.57, y: 80.56), controlPoint2: CGPoint(x: 112.48, y: 80.1))
        bezier3Path.addLine(to: CGPoint(x: 111.34, y: 67.29))
        bezier3Path.addCurve(to: CGPoint(x: 110.44, y: 66.38), controlPoint1: CGPoint(x: 111.34, y: 66.79), controlPoint2: CGPoint(x: 110.94, y: 66.38))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 100, y: 130.36))
        bezier3Path.addCurve(to: CGPoint(x: 118.6, y: 111.76), controlPoint1: CGPoint(x: 110.26, y: 130.36), controlPoint2: CGPoint(x: 118.6, y: 122.02))
        bezier3Path.addCurve(to: CGPoint(x: 100, y: 93.15), controlPoint1: CGPoint(x: 118.6, y: 101.5), controlPoint2: CGPoint(x: 110.26, y: 93.15))
        bezier3Path.addCurve(to: CGPoint(x: 81.4, y: 111.76), controlPoint1: CGPoint(x: 89.74, y: 93.15), controlPoint2: CGPoint(x: 81.4, y: 101.5))
        bezier3Path.addCurve(to: CGPoint(x: 100, y: 130.36), controlPoint1: CGPoint(x: 81.4, y: 122.02), controlPoint2: CGPoint(x: 89.74, y: 130.36))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 104.08, y: 73.64))
        bezier3Path.addLine(to: CGPoint(x: 104.08, y: 79.7))
        bezier3Path.addLine(to: CGPoint(x: 104.08, y: 84.84))
        bezier3Path.addLine(to: CGPoint(x: 108.93, y: 86.55))
        bezier3Path.addCurve(to: CGPoint(x: 111.51, y: 87.62), controlPoint1: CGPoint(x: 109.8, y: 86.86), controlPoint2: CGPoint(x: 110.67, y: 87.22))
        bezier3Path.addLine(to: CGPoint(x: 116.15, y: 89.84))
        bezier3Path.addLine(to: CGPoint(x: 119.78, y: 86.21))
        bezier3Path.addLine(to: CGPoint(x: 124.06, y: 81.92))
        bezier3Path.addLine(to: CGPoint(x: 129.84, y: 87.7))
        bezier3Path.addLine(to: CGPoint(x: 125.55, y: 91.98))
        bezier3Path.addLine(to: CGPoint(x: 121.91, y: 95.62))
        bezier3Path.addLine(to: CGPoint(x: 124.14, y: 100.26))
        bezier3Path.addCurve(to: CGPoint(x: 125.2, y: 102.82), controlPoint1: CGPoint(x: 124.54, y: 101.1), controlPoint2: CGPoint(x: 124.9, y: 101.96))
        bezier3Path.addLine(to: CGPoint(x: 126.91, y: 107.67))
        bezier3Path.addLine(to: CGPoint(x: 132.05, y: 107.67))
        bezier3Path.addLine(to: CGPoint(x: 138.12, y: 107.67))
        bezier3Path.addLine(to: CGPoint(x: 138.12, y: 115.84))
        bezier3Path.addLine(to: CGPoint(x: 132.05, y: 115.84))
        bezier3Path.addLine(to: CGPoint(x: 126.91, y: 115.84))
        bezier3Path.addLine(to: CGPoint(x: 125.2, y: 120.69))
        bezier3Path.addCurve(to: CGPoint(x: 124.14, y: 123.25), controlPoint1: CGPoint(x: 124.9, y: 121.55), controlPoint2: CGPoint(x: 124.54, y: 122.41))
        bezier3Path.addLine(to: CGPoint(x: 121.91, y: 127.89))
        bezier3Path.addLine(to: CGPoint(x: 125.55, y: 131.53))
        bezier3Path.addLine(to: CGPoint(x: 129.84, y: 135.82))
        bezier3Path.addLine(to: CGPoint(x: 124.06, y: 141.59))
        bezier3Path.addLine(to: CGPoint(x: 119.78, y: 137.31))
        bezier3Path.addLine(to: CGPoint(x: 116.15, y: 133.67))
        bezier3Path.addLine(to: CGPoint(x: 111.51, y: 135.89))
        bezier3Path.addCurve(to: CGPoint(x: 108.93, y: 136.96), controlPoint1: CGPoint(x: 110.67, y: 136.3), controlPoint2: CGPoint(x: 109.8, y: 136.66))
        bezier3Path.addLine(to: CGPoint(x: 104.08, y: 138.67))
        bezier3Path.addLine(to: CGPoint(x: 104.08, y: 143.81))
        bezier3Path.addLine(to: CGPoint(x: 104.08, y: 149.87))
        bezier3Path.addLine(to: CGPoint(x: 95.92, y: 149.87))
        bezier3Path.addLine(to: CGPoint(x: 95.92, y: 143.81))
        bezier3Path.addLine(to: CGPoint(x: 95.92, y: 138.68))
        bezier3Path.addLine(to: CGPoint(x: 91.08, y: 136.96))
        bezier3Path.addCurve(to: CGPoint(x: 88.49, y: 135.89), controlPoint1: CGPoint(x: 90.21, y: 136.66), controlPoint2: CGPoint(x: 89.33, y: 136.29))
        bezier3Path.addLine(to: CGPoint(x: 83.85, y: 133.68))
        bezier3Path.addLine(to: CGPoint(x: 80.22, y: 137.31))
        bezier3Path.addLine(to: CGPoint(x: 75.94, y: 141.59))
        bezier3Path.addLine(to: CGPoint(x: 70.16, y: 135.82))
        bezier3Path.addLine(to: CGPoint(x: 74.45, y: 131.53))
        bezier3Path.addLine(to: CGPoint(x: 78.08, y: 127.9))
        bezier3Path.addLine(to: CGPoint(x: 75.87, y: 123.27))
        bezier3Path.addCurve(to: CGPoint(x: 74.79, y: 120.67), controlPoint1: CGPoint(x: 75.46, y: 122.42), controlPoint2: CGPoint(x: 75.1, y: 121.54))
        bezier3Path.addLine(to: CGPoint(x: 73.07, y: 115.84))
        bezier3Path.addLine(to: CGPoint(x: 67.95, y: 115.84))
        bezier3Path.addLine(to: CGPoint(x: 61.89, y: 115.84))
        bezier3Path.addLine(to: CGPoint(x: 61.89, y: 107.67))
        bezier3Path.addLine(to: CGPoint(x: 67.95, y: 107.67))
        bezier3Path.addLine(to: CGPoint(x: 73.07, y: 107.67))
        bezier3Path.addLine(to: CGPoint(x: 74.79, y: 102.84))
        bezier3Path.addCurve(to: CGPoint(x: 75.87, y: 100.24), controlPoint1: CGPoint(x: 75.1, y: 101.97), controlPoint2: CGPoint(x: 75.46, y: 101.09))
        bezier3Path.addLine(to: CGPoint(x: 78.08, y: 95.61))
        bezier3Path.addLine(to: CGPoint(x: 74.45, y: 91.98))
        bezier3Path.addLine(to: CGPoint(x: 70.16, y: 87.7))
        bezier3Path.addLine(to: CGPoint(x: 75.94, y: 81.92))
        bezier3Path.addLine(to: CGPoint(x: 80.22, y: 86.21))
        bezier3Path.addLine(to: CGPoint(x: 83.85, y: 89.84))
        bezier3Path.addLine(to: CGPoint(x: 88.49, y: 87.62))
        bezier3Path.addCurve(to: CGPoint(x: 91.08, y: 86.55), controlPoint1: CGPoint(x: 89.33, y: 87.22), controlPoint2: CGPoint(x: 90.21, y: 86.86))
        bezier3Path.addLine(to: CGPoint(x: 95.92, y: 84.83))
        bezier3Path.addLine(to: CGPoint(x: 95.92, y: 79.7))
        bezier3Path.addLine(to: CGPoint(x: 95.92, y: 73.64))
        bezier3Path.addLine(to: CGPoint(x: 104.08, y: 73.64))
        bezier3Path.close()
        whiteTrans75.setFill()
        bezier3Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func draw_100515IconSet_092016_FormsCanvas() {
        //// Color Declarations
        let fillColor5 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let fillColor7 = UIColor(red: 0.973, green: 0.640, blue: 0.239, alpha: 1.000)
        let fillColor8 = UIColor(red: 0.886, green: 0.130, blue: 0.170, alpha: 1.000)
        let fillColor10 = UIColor(red: 0.163, green: 0.157, blue: 0.157, alpha: 1.000)

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 29.2, y: 25.72, width: 141.4, height: 165.45))
        fillColor5.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 70.4, y: 9.92, width: 64, height: 31.65))
        fillColor5.setFill()
        rectangle2Path.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 99.47, y: 162.71))
        bezierPath.addLine(to: CGPoint(x: 45.43, y: 104.65))
        bezierPath.addLine(to: CGPoint(x: 93.92, y: 124.08))
        bezierPath.addLine(to: CGPoint(x: 158.76, y: 50.88))
        bezierPath.addLine(to: CGPoint(x: 99.47, y: 162.71))
        bezierPath.close()
        fillColor8.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 155.06, y: 13.22))
        bezier2Path.addLine(to: CGPoint(x: 143.88, y: 13.22))
        bezier2Path.addLine(to: CGPoint(x: 143.88, y: 26.46))
        bezier2Path.addLine(to: CGPoint(x: 144.86, y: 26.46))
        bezier2Path.addCurve(to: CGPoint(x: 166.74, y: 48.24), controlPoint1: CGPoint(x: 156.95, y: 26.46), controlPoint2: CGPoint(x: 166.74, y: 36.21))
        bezier2Path.addLine(to: CGPoint(x: 166.74, y: 164.19))
        bezier2Path.addCurve(to: CGPoint(x: 144.86, y: 185.97), controlPoint1: CGPoint(x: 166.74, y: 176.22), controlPoint2: CGPoint(x: 156.95, y: 185.97))
        bezier2Path.addLine(to: CGPoint(x: 55.14, y: 185.97))
        bezier2Path.addCurve(to: CGPoint(x: 33.26, y: 164.19), controlPoint1: CGPoint(x: 43.05, y: 185.97), controlPoint2: CGPoint(x: 33.26, y: 176.22))
        bezier2Path.addLine(to: CGPoint(x: 33.26, y: 48.24))
        bezier2Path.addCurve(to: CGPoint(x: 55.14, y: 26.46), controlPoint1: CGPoint(x: 33.26, y: 36.21), controlPoint2: CGPoint(x: 43.05, y: 26.46))
        bezier2Path.addLine(to: CGPoint(x: 57.27, y: 26.46))
        bezier2Path.addLine(to: CGPoint(x: 57.27, y: 13.22))
        bezier2Path.addLine(to: CGPoint(x: 44.94, y: 13.22))
        bezier2Path.addCurve(to: CGPoint(x: 23.16, y: 35), controlPoint1: CGPoint(x: 32.91, y: 13.22), controlPoint2: CGPoint(x: 23.16, y: 22.97))
        bezier2Path.addLine(to: CGPoint(x: 23.16, y: 175.86))
        bezier2Path.addCurve(to: CGPoint(x: 44.94, y: 197.64), controlPoint1: CGPoint(x: 23.16, y: 187.88), controlPoint2: CGPoint(x: 32.91, y: 197.64))
        bezier2Path.addLine(to: CGPoint(x: 155.06, y: 197.64))
        bezier2Path.addCurve(to: CGPoint(x: 176.84, y: 175.86), controlPoint1: CGPoint(x: 167.09, y: 197.64), controlPoint2: CGPoint(x: 176.84, y: 187.88))
        bezier2Path.addLine(to: CGPoint(x: 176.84, y: 35))
        bezier2Path.addCurve(to: CGPoint(x: 155.06, y: 13.22), controlPoint1: CGPoint(x: 176.84, y: 22.97), controlPoint2: CGPoint(x: 167.09, y: 13.22))
        bezier2Path.close()
        fillColor10.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 125.15, y: 30.67))
        bezier3Path.addCurve(to: CGPoint(x: 120.43, y: 37.18), controlPoint1: CGPoint(x: 125.15, y: 34.27), controlPoint2: CGPoint(x: 123.04, y: 37.18))
        bezier3Path.addLine(to: CGPoint(x: 82.54, y: 37.18))
        bezier3Path.addCurve(to: CGPoint(x: 77.82, y: 30.67), controlPoint1: CGPoint(x: 79.93, y: 37.18), controlPoint2: CGPoint(x: 77.82, y: 34.27))
        bezier3Path.addLine(to: CGPoint(x: 77.82, y: 16.25))
        bezier3Path.addCurve(to: CGPoint(x: 82.54, y: 9.75), controlPoint1: CGPoint(x: 77.82, y: 12.66), controlPoint2: CGPoint(x: 79.93, y: 9.75))
        bezier3Path.addLine(to: CGPoint(x: 120.43, y: 9.75))
        bezier3Path.addCurve(to: CGPoint(x: 125.15, y: 16.25), controlPoint1: CGPoint(x: 123.04, y: 9.75), controlPoint2: CGPoint(x: 125.15, y: 12.66))
        bezier3Path.addLine(to: CGPoint(x: 125.15, y: 30.67))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 130.63, y: 2.36))
        bezier3Path.addLine(to: CGPoint(x: 72.34, y: 2.36))
        bezier3Path.addCurve(to: CGPoint(x: 65.08, y: 12.37), controlPoint1: CGPoint(x: 68.33, y: 2.36), controlPoint2: CGPoint(x: 65.08, y: 6.84))
        bezier3Path.addLine(to: CGPoint(x: 65.08, y: 34.56))
        bezier3Path.addCurve(to: CGPoint(x: 72.34, y: 44.56), controlPoint1: CGPoint(x: 65.08, y: 40.08), controlPoint2: CGPoint(x: 68.33, y: 44.56))
        bezier3Path.addLine(to: CGPoint(x: 130.63, y: 44.56))
        bezier3Path.addCurve(to: CGPoint(x: 137.89, y: 34.56), controlPoint1: CGPoint(x: 134.64, y: 44.56), controlPoint2: CGPoint(x: 137.89, y: 40.08))
        bezier3Path.addLine(to: CGPoint(x: 137.89, y: 12.37))
        bezier3Path.addCurve(to: CGPoint(x: 130.63, y: 2.36), controlPoint1: CGPoint(x: 137.89, y: 6.84), controlPoint2: CGPoint(x: 134.64, y: 2.36))
        bezier3Path.close()
        fillColor7.setFill()
        bezier3Path.fill()
    }

    @objc dynamic public class func draw_100515IconSet_092016_FormswhiteCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor25 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.750)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 99.47, y: 162.71))
        bezierPath.addLine(to: CGPoint(x: 45.43, y: 104.65))
        bezierPath.addLine(to: CGPoint(x: 93.92, y: 124.08))
        bezierPath.addLine(to: CGPoint(x: 158.76, y: 50.88))
        bezierPath.addLine(to: CGPoint(x: 99.47, y: 162.71))
        bezierPath.close()
        fillColor25.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 155.06, y: 13.22))
        bezier2Path.addLine(to: CGPoint(x: 143.88, y: 13.22))
        bezier2Path.addLine(to: CGPoint(x: 143.88, y: 26.46))
        bezier2Path.addLine(to: CGPoint(x: 144.86, y: 26.46))
        bezier2Path.addCurve(to: CGPoint(x: 166.74, y: 48.24), controlPoint1: CGPoint(x: 156.95, y: 26.46), controlPoint2: CGPoint(x: 166.74, y: 36.21))
        bezier2Path.addLine(to: CGPoint(x: 166.74, y: 164.19))
        bezier2Path.addCurve(to: CGPoint(x: 144.86, y: 185.97), controlPoint1: CGPoint(x: 166.74, y: 176.22), controlPoint2: CGPoint(x: 156.95, y: 185.97))
        bezier2Path.addLine(to: CGPoint(x: 55.14, y: 185.97))
        bezier2Path.addCurve(to: CGPoint(x: 33.26, y: 164.19), controlPoint1: CGPoint(x: 43.05, y: 185.97), controlPoint2: CGPoint(x: 33.26, y: 176.22))
        bezier2Path.addLine(to: CGPoint(x: 33.26, y: 48.24))
        bezier2Path.addCurve(to: CGPoint(x: 55.14, y: 26.46), controlPoint1: CGPoint(x: 33.26, y: 36.21), controlPoint2: CGPoint(x: 43.05, y: 26.46))
        bezier2Path.addLine(to: CGPoint(x: 57.27, y: 26.46))
        bezier2Path.addLine(to: CGPoint(x: 57.27, y: 13.22))
        bezier2Path.addLine(to: CGPoint(x: 44.94, y: 13.22))
        bezier2Path.addCurve(to: CGPoint(x: 23.16, y: 35), controlPoint1: CGPoint(x: 32.91, y: 13.22), controlPoint2: CGPoint(x: 23.16, y: 22.97))
        bezier2Path.addLine(to: CGPoint(x: 23.16, y: 175.86))
        bezier2Path.addCurve(to: CGPoint(x: 44.94, y: 197.64), controlPoint1: CGPoint(x: 23.16, y: 187.88), controlPoint2: CGPoint(x: 32.91, y: 197.64))
        bezier2Path.addLine(to: CGPoint(x: 155.06, y: 197.64))
        bezier2Path.addCurve(to: CGPoint(x: 176.84, y: 175.86), controlPoint1: CGPoint(x: 167.09, y: 197.64), controlPoint2: CGPoint(x: 176.84, y: 187.88))
        bezier2Path.addLine(to: CGPoint(x: 176.84, y: 35))
        bezier2Path.addCurve(to: CGPoint(x: 155.06, y: 13.22), controlPoint1: CGPoint(x: 176.84, y: 22.97), controlPoint2: CGPoint(x: 167.09, y: 13.22))
        bezier2Path.close()
        fillColor25.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 125.15, y: 30.67))
        bezier3Path.addCurve(to: CGPoint(x: 120.43, y: 37.18), controlPoint1: CGPoint(x: 125.15, y: 34.27), controlPoint2: CGPoint(x: 123.04, y: 37.18))
        bezier3Path.addLine(to: CGPoint(x: 82.54, y: 37.18))
        bezier3Path.addCurve(to: CGPoint(x: 77.82, y: 30.67), controlPoint1: CGPoint(x: 79.93, y: 37.18), controlPoint2: CGPoint(x: 77.82, y: 34.27))
        bezier3Path.addLine(to: CGPoint(x: 77.82, y: 16.25))
        bezier3Path.addCurve(to: CGPoint(x: 82.54, y: 9.75), controlPoint1: CGPoint(x: 77.82, y: 12.66), controlPoint2: CGPoint(x: 79.93, y: 9.75))
        bezier3Path.addLine(to: CGPoint(x: 120.43, y: 9.75))
        bezier3Path.addCurve(to: CGPoint(x: 125.15, y: 16.25), controlPoint1: CGPoint(x: 123.04, y: 9.75), controlPoint2: CGPoint(x: 125.15, y: 12.66))
        bezier3Path.addLine(to: CGPoint(x: 125.15, y: 30.67))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 130.63, y: 2.36))
        bezier3Path.addLine(to: CGPoint(x: 72.34, y: 2.36))
        bezier3Path.addCurve(to: CGPoint(x: 65.08, y: 12.37), controlPoint1: CGPoint(x: 68.33, y: 2.36), controlPoint2: CGPoint(x: 65.08, y: 6.84))
        bezier3Path.addLine(to: CGPoint(x: 65.08, y: 34.56))
        bezier3Path.addCurve(to: CGPoint(x: 72.34, y: 44.56), controlPoint1: CGPoint(x: 65.08, y: 40.08), controlPoint2: CGPoint(x: 68.33, y: 44.56))
        bezier3Path.addLine(to: CGPoint(x: 130.63, y: 44.56))
        bezier3Path.addCurve(to: CGPoint(x: 137.89, y: 34.56), controlPoint1: CGPoint(x: 134.64, y: 44.56), controlPoint2: CGPoint(x: 137.89, y: 40.08))
        bezier3Path.addLine(to: CGPoint(x: 137.89, y: 12.37))
        bezier3Path.addCurve(to: CGPoint(x: 130.63, y: 2.36), controlPoint1: CGPoint(x: 137.89, y: 6.84), controlPoint2: CGPoint(x: 134.64, y: 2.36))
        bezier3Path.close()
        fillColor25.setFill()
        bezier3Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func draw_100515IconSet_092016_MemberswhiteCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor25 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.750)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 155.2, y: 13))
        bezierPath.addLine(to: CGPoint(x: 143.99, y: 13))
        bezierPath.addLine(to: CGPoint(x: 143.99, y: 26.27))
        bezierPath.addLine(to: CGPoint(x: 144.98, y: 26.27))
        bezierPath.addCurve(to: CGPoint(x: 166.91, y: 48.1), controlPoint1: CGPoint(x: 157.09, y: 26.27), controlPoint2: CGPoint(x: 166.91, y: 36.05))
        bezierPath.addLine(to: CGPoint(x: 166.91, y: 164.36))
        bezierPath.addCurve(to: CGPoint(x: 144.98, y: 186.19), controlPoint1: CGPoint(x: 166.91, y: 176.42), controlPoint2: CGPoint(x: 157.09, y: 186.19))
        bezierPath.addLine(to: CGPoint(x: 55.02, y: 186.19))
        bezierPath.addCurve(to: CGPoint(x: 33.09, y: 164.36), controlPoint1: CGPoint(x: 42.91, y: 186.19), controlPoint2: CGPoint(x: 33.09, y: 176.42))
        bezierPath.addLine(to: CGPoint(x: 33.09, y: 48.1))
        bezierPath.addCurve(to: CGPoint(x: 55.02, y: 26.27), controlPoint1: CGPoint(x: 33.09, y: 36.05), controlPoint2: CGPoint(x: 42.91, y: 26.27))
        bezierPath.addLine(to: CGPoint(x: 57.16, y: 26.27))
        bezierPath.addLine(to: CGPoint(x: 57.16, y: 13))
        bezierPath.addLine(to: CGPoint(x: 44.8, y: 13))
        bezierPath.addCurve(to: CGPoint(x: 22.96, y: 34.83), controlPoint1: CGPoint(x: 32.74, y: 13), controlPoint2: CGPoint(x: 22.96, y: 22.77))
        bezierPath.addLine(to: CGPoint(x: 22.96, y: 176.05))
        bezierPath.addCurve(to: CGPoint(x: 44.8, y: 197.89), controlPoint1: CGPoint(x: 22.96, y: 188.11), controlPoint2: CGPoint(x: 32.74, y: 197.89))
        bezierPath.addLine(to: CGPoint(x: 155.2, y: 197.89))
        bezierPath.addCurve(to: CGPoint(x: 177.04, y: 176.05), controlPoint1: CGPoint(x: 167.26, y: 197.89), controlPoint2: CGPoint(x: 177.04, y: 188.11))
        bezierPath.addLine(to: CGPoint(x: 177.04, y: 34.83))
        bezierPath.addCurve(to: CGPoint(x: 155.2, y: 13), controlPoint1: CGPoint(x: 177.04, y: 22.77), controlPoint2: CGPoint(x: 167.26, y: 13))
        bezierPath.close()
        fillColor25.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 125.22, y: 30.5))
        bezier2Path.addCurve(to: CGPoint(x: 120.48, y: 37.02), controlPoint1: CGPoint(x: 125.22, y: 34.1), controlPoint2: CGPoint(x: 123.1, y: 37.02))
        bezier2Path.addLine(to: CGPoint(x: 82.49, y: 37.02))
        bezier2Path.addCurve(to: CGPoint(x: 77.76, y: 30.5), controlPoint1: CGPoint(x: 79.88, y: 37.02), controlPoint2: CGPoint(x: 77.76, y: 34.1))
        bezier2Path.addLine(to: CGPoint(x: 77.76, y: 16.04))
        bezier2Path.addCurve(to: CGPoint(x: 82.49, y: 9.52), controlPoint1: CGPoint(x: 77.76, y: 12.44), controlPoint2: CGPoint(x: 79.88, y: 9.52))
        bezier2Path.addLine(to: CGPoint(x: 120.48, y: 9.52))
        bezier2Path.addCurve(to: CGPoint(x: 125.22, y: 16.04), controlPoint1: CGPoint(x: 123.1, y: 9.52), controlPoint2: CGPoint(x: 125.22, y: 12.44))
        bezier2Path.addLine(to: CGPoint(x: 125.22, y: 30.5))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 130.71, y: 2.11))
        bezier2Path.addLine(to: CGPoint(x: 72.27, y: 2.11))
        bezier2Path.addCurve(to: CGPoint(x: 64.99, y: 12.15), controlPoint1: CGPoint(x: 68.25, y: 2.11), controlPoint2: CGPoint(x: 64.99, y: 6.6))
        bezier2Path.addLine(to: CGPoint(x: 64.99, y: 34.39))
        bezier2Path.addCurve(to: CGPoint(x: 72.27, y: 44.42), controlPoint1: CGPoint(x: 64.99, y: 39.93), controlPoint2: CGPoint(x: 68.25, y: 44.42))
        bezier2Path.addLine(to: CGPoint(x: 130.71, y: 44.42))
        bezier2Path.addCurve(to: CGPoint(x: 137.99, y: 34.39), controlPoint1: CGPoint(x: 134.73, y: 44.42), controlPoint2: CGPoint(x: 137.99, y: 39.93))
        bezier2Path.addLine(to: CGPoint(x: 137.99, y: 12.15))
        bezier2Path.addCurve(to: CGPoint(x: 130.71, y: 2.11), controlPoint1: CGPoint(x: 137.99, y: 6.6), controlPoint2: CGPoint(x: 134.73, y: 2.11))
        bezier2Path.close()
        fillColor25.setFill()
        bezier2Path.fill()


        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath(rect: CGRect(x: 36.95, y: 65.77, width: 126.9, height: 82.05))
        clipPath.addClip()


        //// Group 2
        context.saveGState()
        context.setAlpha(0.6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 160.46, y: 122.25))
        bezier3Path.addCurve(to: CGPoint(x: 141.47, y: 112.58), controlPoint1: CGPoint(x: 158.78, y: 121.29), controlPoint2: CGPoint(x: 148.94, y: 114.84))
        bezier3Path.addLine(to: CGPoint(x: 141.47, y: 102.77))
        bezier3Path.addCurve(to: CGPoint(x: 145.2, y: 97), controlPoint1: CGPoint(x: 145.2, y: 101.59), controlPoint2: CGPoint(x: 145.2, y: 99.76))
        bezier3Path.addLine(to: CGPoint(x: 145.2, y: 90.34))
        bezier3Path.addCurve(to: CGPoint(x: 134.01, y: 78.66), controlPoint1: CGPoint(x: 145.2, y: 83.92), controlPoint2: CGPoint(x: 141.79, y: 78.66))
        bezier3Path.addCurve(to: CGPoint(x: 122.81, y: 90.34), controlPoint1: CGPoint(x: 126.22, y: 78.66), controlPoint2: CGPoint(x: 122.81, y: 83.92))
        bezier3Path.addLine(to: CGPoint(x: 122.81, y: 97))
        bezier3Path.addCurve(to: CGPoint(x: 126.54, y: 102.8), controlPoint1: CGPoint(x: 122.81, y: 99.79), controlPoint2: CGPoint(x: 122.81, y: 101.62))
        bezier3Path.addLine(to: CGPoint(x: 126.54, y: 112.58))
        bezier3Path.addCurve(to: CGPoint(x: 119.73, y: 115.37), controlPoint1: CGPoint(x: 124.38, y: 113.23), controlPoint2: CGPoint(x: 122.03, y: 114.25))
        bezier3Path.addCurve(to: CGPoint(x: 139.17, y: 126.05), controlPoint1: CGPoint(x: 126.87, y: 118.93), controlPoint2: CGPoint(x: 135.4, y: 123.87))
        bezier3Path.addLine(to: CGPoint(x: 140.51, y: 126.83))
        bezier3Path.addCurve(to: CGPoint(x: 146.65, y: 134.65), controlPoint1: CGPoint(x: 144.3, y: 128.98), controlPoint2: CGPoint(x: 145.97, y: 131.58))
        bezier3Path.addLine(to: CGPoint(x: 163.17, y: 134.65))
        bezier3Path.addCurve(to: CGPoint(x: 163.86, y: 133.78), controlPoint1: CGPoint(x: 163.55, y: 134.65), controlPoint2: CGPoint(x: 163.86, y: 134.15))
        bezier3Path.addLine(to: CGPoint(x: 163.86, y: 127.28))
        bezier3Path.addCurve(to: CGPoint(x: 160.46, y: 122.25), controlPoint1: CGPoint(x: 163.86, y: 124.55), controlPoint2: CGPoint(x: 162.54, y: 123.43))
        bezier3Path.close()
        fillColor25.setFill()
        bezier3Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 36.94, y: 126.83))
        bezier4Path.addLine(to: CGPoint(x: 36.94, y: 133.32))
        bezier4Path.addCurve(to: CGPoint(x: 37.63, y: 134.19), controlPoint1: CGPoint(x: 36.94, y: 133.7), controlPoint2: CGPoint(x: 37.25, y: 134.19))
        bezier4Path.addLine(to: CGPoint(x: 54.16, y: 134.19))
        bezier4Path.addCurve(to: CGPoint(x: 60.3, y: 126.37), controlPoint1: CGPoint(x: 54.83, y: 131.12), controlPoint2: CGPoint(x: 56.51, y: 128.52))
        bezier4Path.addLine(to: CGPoint(x: 61.63, y: 125.6))
        bezier4Path.addCurve(to: CGPoint(x: 81.08, y: 114.92), controlPoint1: CGPoint(x: 65.4, y: 123.42), controlPoint2: CGPoint(x: 73.93, y: 118.48))
        bezier4Path.addCurve(to: CGPoint(x: 74.26, y: 112.12), controlPoint1: CGPoint(x: 78.77, y: 113.8), controlPoint2: CGPoint(x: 76.42, y: 112.78))
        bezier4Path.addLine(to: CGPoint(x: 74.26, y: 102.35))
        bezier4Path.addCurve(to: CGPoint(x: 78, y: 96.55), controlPoint1: CGPoint(x: 78, y: 101.16), controlPoint2: CGPoint(x: 78, y: 99.34))
        bezier4Path.addLine(to: CGPoint(x: 78, y: 89.89))
        bezier4Path.addCurve(to: CGPoint(x: 66.8, y: 78.21), controlPoint1: CGPoint(x: 78, y: 83.47), controlPoint2: CGPoint(x: 74.59, y: 78.21))
        bezier4Path.addCurve(to: CGPoint(x: 55.6, y: 89.89), controlPoint1: CGPoint(x: 59.01, y: 78.21), controlPoint2: CGPoint(x: 55.6, y: 83.47))
        bezier4Path.addLine(to: CGPoint(x: 55.6, y: 96.55))
        bezier4Path.addCurve(to: CGPoint(x: 59.33, y: 102.32), controlPoint1: CGPoint(x: 55.6, y: 99.31), controlPoint2: CGPoint(x: 55.6, y: 101.14))
        bezier4Path.addLine(to: CGPoint(x: 59.33, y: 112.12))
        bezier4Path.addCurve(to: CGPoint(x: 40.34, y: 121.79), controlPoint1: CGPoint(x: 51.87, y: 114.39), controlPoint2: CGPoint(x: 42.02, y: 120.84))
        bezier4Path.addCurve(to: CGPoint(x: 36.94, y: 126.83), controlPoint1: CGPoint(x: 38.27, y: 122.98), controlPoint2: CGPoint(x: 36.94, y: 124.1))
        bezier4Path.close()
        fillColor25.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 143.15, y: 137.26))
        bezier5Path.addLine(to: CGPoint(x: 143.15, y: 146.59))
        bezier5Path.addCurve(to: CGPoint(x: 142.15, y: 147.85), controlPoint1: CGPoint(x: 143.15, y: 147.14), controlPoint2: CGPoint(x: 142.7, y: 147.85))
        bezier5Path.addLine(to: CGPoint(x: 58.31, y: 147.85))
        bezier5Path.addCurve(to: CGPoint(x: 57.31, y: 146.59), controlPoint1: CGPoint(x: 57.76, y: 147.85), controlPoint2: CGPoint(x: 57.31, y: 147.14))
        bezier5Path.addLine(to: CGPoint(x: 57.31, y: 137.26))
        bezier5Path.addCurve(to: CGPoint(x: 61.04, y: 130.02), controlPoint1: CGPoint(x: 57.31, y: 133.33), controlPoint2: CGPoint(x: 58.05, y: 131.72))
        bezier5Path.addCurve(to: CGPoint(x: 87.17, y: 116.12), controlPoint1: CGPoint(x: 63.44, y: 128.65), controlPoint2: CGPoint(x: 79.58, y: 119.38))
        bezier5Path.addLine(to: CGPoint(x: 87.17, y: 102.07))
        bezier5Path.addCurve(to: CGPoint(x: 83.44, y: 93.73), controlPoint1: CGPoint(x: 84.84, y: 100.37), controlPoint2: CGPoint(x: 83.44, y: 97.74))
        bezier5Path.addLine(to: CGPoint(x: 83.44, y: 82.59))
        bezier5Path.addCurve(to: CGPoint(x: 100.23, y: 65.8), controlPoint1: CGPoint(x: 83.44, y: 73.36), controlPoint2: CGPoint(x: 89.03, y: 65.8))
        bezier5Path.addCurve(to: CGPoint(x: 117.02, y: 82.59), controlPoint1: CGPoint(x: 111.43, y: 65.8), controlPoint2: CGPoint(x: 117.02, y: 73.36))
        bezier5Path.addLine(to: CGPoint(x: 117.02, y: 93.73))
        bezier5Path.addCurve(to: CGPoint(x: 113.29, y: 102.03), controlPoint1: CGPoint(x: 117.02, y: 97.7), controlPoint2: CGPoint(x: 115.62, y: 100.33))
        bezier5Path.addLine(to: CGPoint(x: 113.29, y: 116.12))
        bezier5Path.addCurve(to: CGPoint(x: 139.42, y: 130.02), controlPoint1: CGPoint(x: 121.34, y: 119.38), controlPoint2: CGPoint(x: 137.02, y: 128.65))
        bezier5Path.addCurve(to: CGPoint(x: 143.15, y: 137.26), controlPoint1: CGPoint(x: 142.41, y: 131.72), controlPoint2: CGPoint(x: 143.15, y: 133.33))
        bezier5Path.close()
        fillColor25.setFill()
        bezier5Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func draw_100515IconSet_092016Canvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor6 = UIColor(red: 0.201, green: 0.302, blue: 0.538, alpha: 1.000)
        let fillColor7 = UIColor(red: 0.973, green: 0.640, blue: 0.239, alpha: 1.000)
        let fillColor11 = UIColor(red: 0.267, green: 0.260, blue: 0.246, alpha: 1.000)
        let fillColor12 = UIColor(red: 0.121, green: 0.121, blue: 0.121, alpha: 1.000)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 155.2, y: 13))
        bezierPath.addLine(to: CGPoint(x: 143.99, y: 13))
        bezierPath.addLine(to: CGPoint(x: 143.99, y: 26.27))
        bezierPath.addLine(to: CGPoint(x: 144.98, y: 26.27))
        bezierPath.addCurve(to: CGPoint(x: 166.91, y: 48.1), controlPoint1: CGPoint(x: 157.09, y: 26.27), controlPoint2: CGPoint(x: 166.91, y: 36.05))
        bezierPath.addLine(to: CGPoint(x: 166.91, y: 164.36))
        bezierPath.addCurve(to: CGPoint(x: 144.98, y: 186.19), controlPoint1: CGPoint(x: 166.91, y: 176.42), controlPoint2: CGPoint(x: 157.09, y: 186.19))
        bezierPath.addLine(to: CGPoint(x: 55.02, y: 186.19))
        bezierPath.addCurve(to: CGPoint(x: 33.09, y: 164.36), controlPoint1: CGPoint(x: 42.91, y: 186.19), controlPoint2: CGPoint(x: 33.09, y: 176.42))
        bezierPath.addLine(to: CGPoint(x: 33.09, y: 48.1))
        bezierPath.addCurve(to: CGPoint(x: 55.02, y: 26.27), controlPoint1: CGPoint(x: 33.09, y: 36.05), controlPoint2: CGPoint(x: 42.91, y: 26.27))
        bezierPath.addLine(to: CGPoint(x: 57.16, y: 26.27))
        bezierPath.addLine(to: CGPoint(x: 57.16, y: 13))
        bezierPath.addLine(to: CGPoint(x: 44.8, y: 13))
        bezierPath.addCurve(to: CGPoint(x: 22.96, y: 34.83), controlPoint1: CGPoint(x: 32.74, y: 13), controlPoint2: CGPoint(x: 22.96, y: 22.77))
        bezierPath.addLine(to: CGPoint(x: 22.96, y: 176.05))
        bezierPath.addCurve(to: CGPoint(x: 44.8, y: 197.89), controlPoint1: CGPoint(x: 22.96, y: 188.11), controlPoint2: CGPoint(x: 32.74, y: 197.89))
        bezierPath.addLine(to: CGPoint(x: 155.2, y: 197.89))
        bezierPath.addCurve(to: CGPoint(x: 177.04, y: 176.05), controlPoint1: CGPoint(x: 167.26, y: 197.89), controlPoint2: CGPoint(x: 177.04, y: 188.11))
        bezierPath.addLine(to: CGPoint(x: 177.04, y: 34.83))
        bezierPath.addCurve(to: CGPoint(x: 155.2, y: 13), controlPoint1: CGPoint(x: 177.04, y: 22.77), controlPoint2: CGPoint(x: 167.26, y: 13))
        bezierPath.close()
        fillColor6.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 125.22, y: 30.5))
        bezier2Path.addCurve(to: CGPoint(x: 120.48, y: 37.02), controlPoint1: CGPoint(x: 125.22, y: 34.1), controlPoint2: CGPoint(x: 123.1, y: 37.02))
        bezier2Path.addLine(to: CGPoint(x: 82.49, y: 37.02))
        bezier2Path.addCurve(to: CGPoint(x: 77.76, y: 30.5), controlPoint1: CGPoint(x: 79.88, y: 37.02), controlPoint2: CGPoint(x: 77.76, y: 34.1))
        bezier2Path.addLine(to: CGPoint(x: 77.76, y: 16.04))
        bezier2Path.addCurve(to: CGPoint(x: 82.49, y: 9.52), controlPoint1: CGPoint(x: 77.76, y: 12.44), controlPoint2: CGPoint(x: 79.88, y: 9.52))
        bezier2Path.addLine(to: CGPoint(x: 120.48, y: 9.52))
        bezier2Path.addCurve(to: CGPoint(x: 125.22, y: 16.04), controlPoint1: CGPoint(x: 123.1, y: 9.52), controlPoint2: CGPoint(x: 125.22, y: 12.44))
        bezier2Path.addLine(to: CGPoint(x: 125.22, y: 30.5))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 130.71, y: 2.11))
        bezier2Path.addLine(to: CGPoint(x: 72.27, y: 2.11))
        bezier2Path.addCurve(to: CGPoint(x: 64.99, y: 12.15), controlPoint1: CGPoint(x: 68.25, y: 2.11), controlPoint2: CGPoint(x: 64.99, y: 6.6))
        bezier2Path.addLine(to: CGPoint(x: 64.99, y: 34.39))
        bezier2Path.addCurve(to: CGPoint(x: 72.27, y: 44.42), controlPoint1: CGPoint(x: 64.99, y: 39.93), controlPoint2: CGPoint(x: 68.25, y: 44.42))
        bezier2Path.addLine(to: CGPoint(x: 130.71, y: 44.42))
        bezier2Path.addCurve(to: CGPoint(x: 137.99, y: 34.39), controlPoint1: CGPoint(x: 134.73, y: 44.42), controlPoint2: CGPoint(x: 137.99, y: 39.93))
        bezier2Path.addLine(to: CGPoint(x: 137.99, y: 12.15))
        bezier2Path.addCurve(to: CGPoint(x: 130.71, y: 2.11), controlPoint1: CGPoint(x: 137.99, y: 6.6), controlPoint2: CGPoint(x: 134.73, y: 2.11))
        bezier2Path.close()
        fillColor7.setFill()
        bezier2Path.fill()


        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath(rect: CGRect(x: 36.95, y: 65.77, width: 126.9, height: 82.05))
        clipPath.addClip()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 160.46, y: 122.25))
        bezier3Path.addCurve(to: CGPoint(x: 141.47, y: 112.58), controlPoint1: CGPoint(x: 158.78, y: 121.29), controlPoint2: CGPoint(x: 148.94, y: 114.84))
        bezier3Path.addLine(to: CGPoint(x: 141.47, y: 102.77))
        bezier3Path.addCurve(to: CGPoint(x: 145.2, y: 97), controlPoint1: CGPoint(x: 145.2, y: 101.59), controlPoint2: CGPoint(x: 145.2, y: 99.76))
        bezier3Path.addLine(to: CGPoint(x: 145.2, y: 90.34))
        bezier3Path.addCurve(to: CGPoint(x: 134.01, y: 78.66), controlPoint1: CGPoint(x: 145.2, y: 83.92), controlPoint2: CGPoint(x: 141.79, y: 78.66))
        bezier3Path.addCurve(to: CGPoint(x: 122.81, y: 90.34), controlPoint1: CGPoint(x: 126.22, y: 78.66), controlPoint2: CGPoint(x: 122.81, y: 83.92))
        bezier3Path.addLine(to: CGPoint(x: 122.81, y: 97))
        bezier3Path.addCurve(to: CGPoint(x: 126.54, y: 102.8), controlPoint1: CGPoint(x: 122.81, y: 99.79), controlPoint2: CGPoint(x: 122.81, y: 101.62))
        bezier3Path.addLine(to: CGPoint(x: 126.54, y: 112.58))
        bezier3Path.addCurve(to: CGPoint(x: 119.73, y: 115.37), controlPoint1: CGPoint(x: 124.38, y: 113.23), controlPoint2: CGPoint(x: 122.03, y: 114.25))
        bezier3Path.addCurve(to: CGPoint(x: 139.17, y: 126.05), controlPoint1: CGPoint(x: 126.87, y: 118.93), controlPoint2: CGPoint(x: 135.4, y: 123.87))
        bezier3Path.addLine(to: CGPoint(x: 140.51, y: 126.83))
        bezier3Path.addCurve(to: CGPoint(x: 146.65, y: 134.65), controlPoint1: CGPoint(x: 144.3, y: 128.98), controlPoint2: CGPoint(x: 145.97, y: 131.58))
        bezier3Path.addLine(to: CGPoint(x: 163.17, y: 134.65))
        bezier3Path.addCurve(to: CGPoint(x: 163.86, y: 133.78), controlPoint1: CGPoint(x: 163.55, y: 134.65), controlPoint2: CGPoint(x: 163.86, y: 134.15))
        bezier3Path.addLine(to: CGPoint(x: 163.86, y: 127.28))
        bezier3Path.addCurve(to: CGPoint(x: 160.46, y: 122.25), controlPoint1: CGPoint(x: 163.86, y: 124.55), controlPoint2: CGPoint(x: 162.54, y: 123.43))
        bezier3Path.close()
        fillColor11.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 36.94, y: 126.83))
        bezier4Path.addLine(to: CGPoint(x: 36.94, y: 133.32))
        bezier4Path.addCurve(to: CGPoint(x: 37.63, y: 134.19), controlPoint1: CGPoint(x: 36.94, y: 133.7), controlPoint2: CGPoint(x: 37.25, y: 134.19))
        bezier4Path.addLine(to: CGPoint(x: 54.16, y: 134.19))
        bezier4Path.addCurve(to: CGPoint(x: 60.3, y: 126.37), controlPoint1: CGPoint(x: 54.83, y: 131.12), controlPoint2: CGPoint(x: 56.51, y: 128.52))
        bezier4Path.addLine(to: CGPoint(x: 61.63, y: 125.6))
        bezier4Path.addCurve(to: CGPoint(x: 81.08, y: 114.92), controlPoint1: CGPoint(x: 65.4, y: 123.42), controlPoint2: CGPoint(x: 73.93, y: 118.48))
        bezier4Path.addCurve(to: CGPoint(x: 74.26, y: 112.12), controlPoint1: CGPoint(x: 78.77, y: 113.8), controlPoint2: CGPoint(x: 76.42, y: 112.78))
        bezier4Path.addLine(to: CGPoint(x: 74.26, y: 102.35))
        bezier4Path.addCurve(to: CGPoint(x: 78, y: 96.55), controlPoint1: CGPoint(x: 78, y: 101.16), controlPoint2: CGPoint(x: 78, y: 99.34))
        bezier4Path.addLine(to: CGPoint(x: 78, y: 89.89))
        bezier4Path.addCurve(to: CGPoint(x: 66.8, y: 78.21), controlPoint1: CGPoint(x: 78, y: 83.47), controlPoint2: CGPoint(x: 74.59, y: 78.21))
        bezier4Path.addCurve(to: CGPoint(x: 55.6, y: 89.89), controlPoint1: CGPoint(x: 59.01, y: 78.21), controlPoint2: CGPoint(x: 55.6, y: 83.47))
        bezier4Path.addLine(to: CGPoint(x: 55.6, y: 96.55))
        bezier4Path.addCurve(to: CGPoint(x: 59.33, y: 102.32), controlPoint1: CGPoint(x: 55.6, y: 99.31), controlPoint2: CGPoint(x: 55.6, y: 101.14))
        bezier4Path.addLine(to: CGPoint(x: 59.33, y: 112.12))
        bezier4Path.addCurve(to: CGPoint(x: 40.34, y: 121.79), controlPoint1: CGPoint(x: 51.87, y: 114.39), controlPoint2: CGPoint(x: 42.02, y: 120.84))
        bezier4Path.addCurve(to: CGPoint(x: 36.94, y: 126.83), controlPoint1: CGPoint(x: 38.27, y: 122.98), controlPoint2: CGPoint(x: 36.94, y: 124.1))
        bezier4Path.close()
        fillColor11.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 143.15, y: 137.26))
        bezier5Path.addLine(to: CGPoint(x: 143.15, y: 146.59))
        bezier5Path.addCurve(to: CGPoint(x: 142.15, y: 147.85), controlPoint1: CGPoint(x: 143.15, y: 147.14), controlPoint2: CGPoint(x: 142.7, y: 147.85))
        bezier5Path.addLine(to: CGPoint(x: 58.31, y: 147.85))
        bezier5Path.addCurve(to: CGPoint(x: 57.31, y: 146.59), controlPoint1: CGPoint(x: 57.76, y: 147.85), controlPoint2: CGPoint(x: 57.31, y: 147.14))
        bezier5Path.addLine(to: CGPoint(x: 57.31, y: 137.26))
        bezier5Path.addCurve(to: CGPoint(x: 61.04, y: 130.02), controlPoint1: CGPoint(x: 57.31, y: 133.33), controlPoint2: CGPoint(x: 58.05, y: 131.72))
        bezier5Path.addCurve(to: CGPoint(x: 87.17, y: 116.12), controlPoint1: CGPoint(x: 63.44, y: 128.65), controlPoint2: CGPoint(x: 79.58, y: 119.38))
        bezier5Path.addLine(to: CGPoint(x: 87.17, y: 102.07))
        bezier5Path.addCurve(to: CGPoint(x: 83.44, y: 93.73), controlPoint1: CGPoint(x: 84.84, y: 100.37), controlPoint2: CGPoint(x: 83.44, y: 97.74))
        bezier5Path.addLine(to: CGPoint(x: 83.44, y: 82.59))
        bezier5Path.addCurve(to: CGPoint(x: 100.23, y: 65.8), controlPoint1: CGPoint(x: 83.44, y: 73.36), controlPoint2: CGPoint(x: 89.03, y: 65.8))
        bezier5Path.addCurve(to: CGPoint(x: 117.02, y: 82.59), controlPoint1: CGPoint(x: 111.43, y: 65.8), controlPoint2: CGPoint(x: 117.02, y: 73.36))
        bezier5Path.addLine(to: CGPoint(x: 117.02, y: 93.73))
        bezier5Path.addCurve(to: CGPoint(x: 113.29, y: 102.03), controlPoint1: CGPoint(x: 117.02, y: 97.7), controlPoint2: CGPoint(x: 115.62, y: 100.33))
        bezier5Path.addLine(to: CGPoint(x: 113.29, y: 116.12))
        bezier5Path.addCurve(to: CGPoint(x: 139.42, y: 130.02), controlPoint1: CGPoint(x: 121.34, y: 119.38), controlPoint2: CGPoint(x: 137.02, y: 128.65))
        bezier5Path.addCurve(to: CGPoint(x: 143.15, y: 137.26), controlPoint1: CGPoint(x: 142.41, y: 131.72), controlPoint2: CGPoint(x: 143.15, y: 133.33))
        bezier5Path.close()
        fillColor12.setFill()
        bezier5Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func draw_100515IconSet_092016_GeneralToDoListsCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor5 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let fillColor6 = UIColor(red: 0.201, green: 0.302, blue: 0.538, alpha: 1.000)
        let fillColor7 = UIColor(red: 0.973, green: 0.640, blue: 0.239, alpha: 1.000)
        let fillColor10 = UIColor(red: 0.163, green: 0.157, blue: 0.157, alpha: 1.000)

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 73.97, y: 7.15, width: 56.55, height: 34.2))
        fillColor5.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 30.12, y: 26.2, width: 140.65, height: 161.9))
        fillColor5.setFill()
        rectangle2Path.fill()


        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath(rect: CGRect(x: 23.15, y: 2.38, width: 153.7, height: 195.25))
        clipPath.addClip()


        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: 50.3, y: 63.75, width: 27.6, height: 27.6))
        fillColor6.setFill()
        ovalPath.fill()


        //// Oval 2 Drawing
        let oval2Path = UIBezierPath(ovalIn: CGRect(x: 48.65, y: 101.05, width: 27.6, height: 27.6))
        fillColor6.setFill()
        oval2Path.fill()


        //// Oval 3 Drawing
        let oval3Path = UIBezierPath(ovalIn: CGRect(x: 48.65, y: 138, width: 27.6, height: 27.6))
        fillColor6.setFill()
        oval3Path.fill()


        //// Rectangle 3 Drawing
        let rectangle3Path = UIBezierPath(rect: CGRect(x: 84.78, y: 72.22, width: 63.25, height: 10.65))
        ButtonsForFJ092018.fillColor13.setFill()
        rectangle3Path.fill()


        //// Rectangle 4 Drawing
        let rectangle4Path = UIBezierPath(rect: CGRect(x: 84.78, y: 109.52, width: 63.25, height: 10.65))
        ButtonsForFJ092018.fillColor13.setFill()
        rectangle4Path.fill()


        //// Rectangle 5 Drawing
        let rectangle5Path = UIBezierPath(rect: CGRect(x: 84.78, y: 144.17, width: 63.25, height: 10.65))
        ButtonsForFJ092018.fillColor13.setFill()
        rectangle5Path.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 155.06, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 143.88, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 143.88, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 144.86, y: 26.46))
        bezierPath.addCurve(to: CGPoint(x: 166.74, y: 48.24), controlPoint1: CGPoint(x: 156.95, y: 26.46), controlPoint2: CGPoint(x: 166.74, y: 36.21))
        bezierPath.addLine(to: CGPoint(x: 166.74, y: 164.19))
        bezierPath.addCurve(to: CGPoint(x: 144.86, y: 185.97), controlPoint1: CGPoint(x: 166.74, y: 176.22), controlPoint2: CGPoint(x: 156.95, y: 185.97))
        bezierPath.addLine(to: CGPoint(x: 55.14, y: 185.97))
        bezierPath.addCurve(to: CGPoint(x: 33.26, y: 164.19), controlPoint1: CGPoint(x: 43.05, y: 185.97), controlPoint2: CGPoint(x: 33.26, y: 176.22))
        bezierPath.addLine(to: CGPoint(x: 33.26, y: 48.24))
        bezierPath.addCurve(to: CGPoint(x: 55.14, y: 26.46), controlPoint1: CGPoint(x: 33.26, y: 36.21), controlPoint2: CGPoint(x: 43.05, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 57.27, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 57.27, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 44.94, y: 13.22))
        bezierPath.addCurve(to: CGPoint(x: 23.16, y: 35), controlPoint1: CGPoint(x: 32.91, y: 13.22), controlPoint2: CGPoint(x: 23.16, y: 22.97))
        bezierPath.addLine(to: CGPoint(x: 23.16, y: 175.86))
        bezierPath.addCurve(to: CGPoint(x: 44.94, y: 197.64), controlPoint1: CGPoint(x: 23.16, y: 187.88), controlPoint2: CGPoint(x: 32.91, y: 197.64))
        bezierPath.addLine(to: CGPoint(x: 155.06, y: 197.64))
        bezierPath.addCurve(to: CGPoint(x: 176.84, y: 175.86), controlPoint1: CGPoint(x: 167.09, y: 197.64), controlPoint2: CGPoint(x: 176.84, y: 187.88))
        bezierPath.addLine(to: CGPoint(x: 176.84, y: 35))
        bezierPath.addCurve(to: CGPoint(x: 155.06, y: 13.22), controlPoint1: CGPoint(x: 176.84, y: 22.97), controlPoint2: CGPoint(x: 167.09, y: 13.22))
        bezierPath.close()
        fillColor10.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 125.15, y: 30.67))
        bezier2Path.addCurve(to: CGPoint(x: 120.43, y: 37.18), controlPoint1: CGPoint(x: 125.15, y: 34.27), controlPoint2: CGPoint(x: 123.04, y: 37.18))
        bezier2Path.addLine(to: CGPoint(x: 82.54, y: 37.18))
        bezier2Path.addCurve(to: CGPoint(x: 77.82, y: 30.67), controlPoint1: CGPoint(x: 79.93, y: 37.18), controlPoint2: CGPoint(x: 77.82, y: 34.27))
        bezier2Path.addLine(to: CGPoint(x: 77.82, y: 16.25))
        bezier2Path.addCurve(to: CGPoint(x: 82.54, y: 9.75), controlPoint1: CGPoint(x: 77.82, y: 12.66), controlPoint2: CGPoint(x: 79.93, y: 9.75))
        bezier2Path.addLine(to: CGPoint(x: 120.43, y: 9.75))
        bezier2Path.addCurve(to: CGPoint(x: 125.15, y: 16.25), controlPoint1: CGPoint(x: 123.04, y: 9.75), controlPoint2: CGPoint(x: 125.15, y: 12.66))
        bezier2Path.addLine(to: CGPoint(x: 125.15, y: 30.67))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 130.63, y: 2.36))
        bezier2Path.addLine(to: CGPoint(x: 72.34, y: 2.36))
        bezier2Path.addCurve(to: CGPoint(x: 65.08, y: 12.37), controlPoint1: CGPoint(x: 68.33, y: 2.36), controlPoint2: CGPoint(x: 65.08, y: 6.84))
        bezier2Path.addLine(to: CGPoint(x: 65.08, y: 34.56))
        bezier2Path.addCurve(to: CGPoint(x: 72.34, y: 44.56), controlPoint1: CGPoint(x: 65.08, y: 40.08), controlPoint2: CGPoint(x: 68.33, y: 44.56))
        bezier2Path.addLine(to: CGPoint(x: 130.63, y: 44.56))
        bezier2Path.addCurve(to: CGPoint(x: 137.89, y: 34.56), controlPoint1: CGPoint(x: 134.64, y: 44.56), controlPoint2: CGPoint(x: 137.89, y: 40.08))
        bezier2Path.addLine(to: CGPoint(x: 137.89, y: 12.37))
        bezier2Path.addCurve(to: CGPoint(x: 130.63, y: 2.36), controlPoint1: CGPoint(x: 137.89, y: 6.84), controlPoint2: CGPoint(x: 134.64, y: 2.36))
        bezier2Path.close()
        fillColor7.setFill()
        bezier2Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func draw_100515IconSet_092016_JournalAdministrativeCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor5 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let fillColor10 = UIColor(red: 0.163, green: 0.157, blue: 0.157, alpha: 1.000)
        let fillColor14 = UIColor(red: 0.179, green: 0.197, blue: 0.503, alpha: 1.000)

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 73.62, y: 8.15, width: 54.05, height: 30.6))
        fillColor5.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 29.22, y: 26.65, width: 142.05, height: 161.9))
        fillColor5.setFill()
        rectangle2Path.fill()


        //// Rectangle 3 Drawing
        let rectangle3Path = UIBezierPath(rect: CGRect(x: 47.98, y: 78.77, width: 105.25, height: 10.65))
        fillColor14.setFill()
        rectangle3Path.fill()


        //// Rectangle 4 Drawing
        let rectangle4Path = UIBezierPath(rect: CGRect(x: 47.98, y: 53.97, width: 105.25, height: 10.65))
        fillColor14.setFill()
        rectangle4Path.fill()


        //// Rectangle 5 Drawing
        let rectangle5Path = UIBezierPath(rect: CGRect(x: 47.98, y: 103.42, width: 105.25, height: 10.65))
        fillColor14.setFill()
        rectangle5Path.fill()


        //// Rectangle 6 Drawing
        let rectangle6Path = UIBezierPath(rect: CGRect(x: 47.98, y: 126.07, width: 105.25, height: 10.65))
        fillColor14.setFill()
        rectangle6Path.fill()


        //// Rectangle 7 Drawing
        let rectangle7Path = UIBezierPath(rect: CGRect(x: 47.98, y: 148.97, width: 105.25, height: 10.65))
        fillColor14.setFill()
        rectangle7Path.fill()


        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath(rect: CGRect(x: 23.15, y: 2.38, width: 153.7, height: 195.25))
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 155.06, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 143.88, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 143.88, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 144.86, y: 26.46))
        bezierPath.addCurve(to: CGPoint(x: 166.74, y: 48.24), controlPoint1: CGPoint(x: 156.95, y: 26.46), controlPoint2: CGPoint(x: 166.74, y: 36.21))
        bezierPath.addLine(to: CGPoint(x: 166.74, y: 164.19))
        bezierPath.addCurve(to: CGPoint(x: 144.86, y: 185.97), controlPoint1: CGPoint(x: 166.74, y: 176.22), controlPoint2: CGPoint(x: 156.95, y: 185.97))
        bezierPath.addLine(to: CGPoint(x: 55.14, y: 185.97))
        bezierPath.addCurve(to: CGPoint(x: 33.26, y: 164.19), controlPoint1: CGPoint(x: 43.05, y: 185.97), controlPoint2: CGPoint(x: 33.26, y: 176.22))
        bezierPath.addLine(to: CGPoint(x: 33.26, y: 48.24))
        bezierPath.addCurve(to: CGPoint(x: 55.14, y: 26.46), controlPoint1: CGPoint(x: 33.26, y: 36.21), controlPoint2: CGPoint(x: 43.05, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 57.27, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 57.27, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 44.94, y: 13.22))
        bezierPath.addCurve(to: CGPoint(x: 23.16, y: 35), controlPoint1: CGPoint(x: 32.91, y: 13.22), controlPoint2: CGPoint(x: 23.16, y: 22.97))
        bezierPath.addLine(to: CGPoint(x: 23.16, y: 175.86))
        bezierPath.addCurve(to: CGPoint(x: 44.94, y: 197.64), controlPoint1: CGPoint(x: 23.16, y: 187.89), controlPoint2: CGPoint(x: 32.91, y: 197.64))
        bezierPath.addLine(to: CGPoint(x: 155.06, y: 197.64))
        bezierPath.addCurve(to: CGPoint(x: 176.84, y: 175.86), controlPoint1: CGPoint(x: 167.09, y: 197.64), controlPoint2: CGPoint(x: 176.84, y: 187.89))
        bezierPath.addLine(to: CGPoint(x: 176.84, y: 35))
        bezierPath.addCurve(to: CGPoint(x: 155.06, y: 13.22), controlPoint1: CGPoint(x: 176.84, y: 22.97), controlPoint2: CGPoint(x: 167.09, y: 13.22))
        bezierPath.close()
        fillColor10.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 125.15, y: 30.67))
        bezier2Path.addCurve(to: CGPoint(x: 120.43, y: 37.18), controlPoint1: CGPoint(x: 125.15, y: 34.27), controlPoint2: CGPoint(x: 123.04, y: 37.18))
        bezier2Path.addLine(to: CGPoint(x: 82.54, y: 37.18))
        bezier2Path.addCurve(to: CGPoint(x: 77.82, y: 30.67), controlPoint1: CGPoint(x: 79.93, y: 37.18), controlPoint2: CGPoint(x: 77.82, y: 34.27))
        bezier2Path.addLine(to: CGPoint(x: 77.82, y: 16.25))
        bezier2Path.addCurve(to: CGPoint(x: 82.54, y: 9.75), controlPoint1: CGPoint(x: 77.82, y: 12.66), controlPoint2: CGPoint(x: 79.93, y: 9.75))
        bezier2Path.addLine(to: CGPoint(x: 120.43, y: 9.75))
        bezier2Path.addCurve(to: CGPoint(x: 125.15, y: 16.25), controlPoint1: CGPoint(x: 123.04, y: 9.75), controlPoint2: CGPoint(x: 125.15, y: 12.66))
        bezier2Path.addLine(to: CGPoint(x: 125.15, y: 30.67))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 130.63, y: 2.36))
        bezier2Path.addLine(to: CGPoint(x: 72.34, y: 2.36))
        bezier2Path.addCurve(to: CGPoint(x: 65.08, y: 12.37), controlPoint1: CGPoint(x: 68.33, y: 2.36), controlPoint2: CGPoint(x: 65.08, y: 6.84))
        bezier2Path.addLine(to: CGPoint(x: 65.08, y: 34.56))
        bezier2Path.addCurve(to: CGPoint(x: 72.34, y: 44.56), controlPoint1: CGPoint(x: 65.08, y: 40.08), controlPoint2: CGPoint(x: 68.33, y: 44.56))
        bezier2Path.addLine(to: CGPoint(x: 130.63, y: 44.56))
        bezier2Path.addCurve(to: CGPoint(x: 137.89, y: 34.56), controlPoint1: CGPoint(x: 134.64, y: 44.56), controlPoint2: CGPoint(x: 137.89, y: 40.08))
        bezier2Path.addLine(to: CGPoint(x: 137.89, y: 12.37))
        bezier2Path.addCurve(to: CGPoint(x: 130.63, y: 2.36), controlPoint1: CGPoint(x: 137.89, y: 6.84), controlPoint2: CGPoint(x: 134.64, y: 2.36))
        bezier2Path.close()
        ButtonsForFJ092018.fillColor15.setFill()
        bezier2Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func draw_100515IconSet_092016_rescueCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor16 = UIColor(red: 0.978, green: 0.640, blue: 0.236, alpha: 1.000)

        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath(rect: CGRect(x: 2.38, y: 2.38, width: 195.25, height: 195.25))
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 100, y: 2.36))
        bezierPath.addCurve(to: CGPoint(x: 2.36, y: 100), controlPoint1: CGPoint(x: 46.08, y: 2.36), controlPoint2: CGPoint(x: 2.36, y: 46.08))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 197.64), controlPoint1: CGPoint(x: 2.36, y: 153.92), controlPoint2: CGPoint(x: 46.08, y: 197.64))
        bezierPath.addCurve(to: CGPoint(x: 197.64, y: 100), controlPoint1: CGPoint(x: 153.92, y: 197.64), controlPoint2: CGPoint(x: 197.64, y: 153.92))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 2.36), controlPoint1: CGPoint(x: 197.64, y: 46.08), controlPoint2: CGPoint(x: 153.92, y: 2.36))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 100, y: 9.1))
        bezierPath.addCurve(to: CGPoint(x: 190.9, y: 100), controlPoint1: CGPoint(x: 150.12, y: 9.1), controlPoint2: CGPoint(x: 190.9, y: 49.88))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 190.9), controlPoint1: CGPoint(x: 190.9, y: 150.12), controlPoint2: CGPoint(x: 150.12, y: 190.9))
        bezierPath.addCurve(to: CGPoint(x: 9.1, y: 100), controlPoint1: CGPoint(x: 49.88, y: 190.9), controlPoint2: CGPoint(x: 9.1, y: 150.12))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 9.1), controlPoint1: CGPoint(x: 9.1, y: 49.88), controlPoint2: CGPoint(x: 49.88, y: 9.1))
        bezierPath.close()
        fillColor16.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 100, y: 21.89))
        bezier2Path.addCurve(to: CGPoint(x: 21.89, y: 100), controlPoint1: CGPoint(x: 56.86, y: 21.89), controlPoint2: CGPoint(x: 21.89, y: 56.86))
        bezier2Path.addCurve(to: CGPoint(x: 100, y: 178.11), controlPoint1: CGPoint(x: 21.89, y: 143.14), controlPoint2: CGPoint(x: 56.86, y: 178.11))
        bezier2Path.addCurve(to: CGPoint(x: 178.11, y: 100), controlPoint1: CGPoint(x: 143.14, y: 178.11), controlPoint2: CGPoint(x: 178.11, y: 143.14))
        bezier2Path.addCurve(to: CGPoint(x: 100, y: 21.89), controlPoint1: CGPoint(x: 178.11, y: 56.86), controlPoint2: CGPoint(x: 143.14, y: 21.89))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 100, y: 28.62))
        bezier2Path.addCurve(to: CGPoint(x: 171.38, y: 100), controlPoint1: CGPoint(x: 139.36, y: 28.62), controlPoint2: CGPoint(x: 171.38, y: 60.64))
        bezier2Path.addCurve(to: CGPoint(x: 100, y: 171.38), controlPoint1: CGPoint(x: 171.38, y: 139.36), controlPoint2: CGPoint(x: 139.36, y: 171.38))
        bezier2Path.addCurve(to: CGPoint(x: 28.62, y: 100), controlPoint1: CGPoint(x: 60.64, y: 171.38), controlPoint2: CGPoint(x: 28.62, y: 139.36))
        bezier2Path.addCurve(to: CGPoint(x: 100, y: 28.62), controlPoint1: CGPoint(x: 28.62, y: 60.64), controlPoint2: CGPoint(x: 60.64, y: 28.62))
        bezier2Path.close()
        fillColor16.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 160.73, y: 81.53))
        bezier3Path.addLine(to: CGPoint(x: 118.47, y: 81.53))
        bezier3Path.addLine(to: CGPoint(x: 118.47, y: 39.27))
        bezier3Path.addLine(to: CGPoint(x: 81.53, y: 39.27))
        bezier3Path.addLine(to: CGPoint(x: 81.53, y: 81.53))
        bezier3Path.addLine(to: CGPoint(x: 39.26, y: 81.53))
        bezier3Path.addLine(to: CGPoint(x: 39.26, y: 118.47))
        bezier3Path.addLine(to: CGPoint(x: 81.53, y: 118.47))
        bezier3Path.addLine(to: CGPoint(x: 81.53, y: 160.73))
        bezier3Path.addLine(to: CGPoint(x: 118.47, y: 160.73))
        bezier3Path.addLine(to: CGPoint(x: 118.47, y: 118.47))
        bezier3Path.addLine(to: CGPoint(x: 160.73, y: 118.47))
        bezier3Path.addLine(to: CGPoint(x: 160.73, y: 81.53))
        bezier3Path.close()
        fillColor16.setFill()
        bezier3Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func draw_100515IconSet_092016_fireCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor3 = UIColor(red: 0.816, green: 0.254, blue: 0.173, alpha: 1.000)
        let fillColor17 = UIColor(red: 0.876, green: 0.131, blue: 0.170, alpha: 1.000)

        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath(rect: CGRect(x: 18.57, y: 2.38, width: 162.85, height: 195.25))
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 45.98, y: 94.05))
        bezierPath.addCurve(to: CGPoint(x: 81.77, y: 191.61), controlPoint1: CGPoint(x: 18.57, y: 131.15), controlPoint2: CGPoint(x: 37.04, y: 181.72))
        bezierPath.addCurve(to: CGPoint(x: 172.14, y: 154.29), controlPoint1: CGPoint(x: 111.11, y: 198.09), controlPoint2: CGPoint(x: 163, y: 188.17))
        bezierPath.addCurve(to: CGPoint(x: 141.76, y: 77.18), controlPoint1: CGPoint(x: 181.43, y: 119.89), controlPoint2: CGPoint(x: 168.17, y: 96.04))
        bezierPath.addCurve(to: CGPoint(x: 104.45, y: 108.8), controlPoint1: CGPoint(x: 144.85, y: 91.82), controlPoint2: CGPoint(x: 116.49, y: 122.19))
        bezierPath.addCurve(to: CGPoint(x: 130.57, y: 67.58), controlPoint1: CGPoint(x: 92.86, y: 95.93), controlPoint2: CGPoint(x: 118.66, y: 74.69))
        bezierPath.addCurve(to: CGPoint(x: 114.74, y: 2.36), controlPoint1: CGPoint(x: 151.18, y: 55.27), controlPoint2: CGPoint(x: 143.29, y: 17.02))
        bezierPath.addCurve(to: CGPoint(x: 110.65, y: 32.39), controlPoint1: CGPoint(x: 116.17, y: 6.32), controlPoint2: CGPoint(x: 125.58, y: 17.11))
        bezierPath.addCurve(to: CGPoint(x: 45.98, y: 94.05), controlPoint1: CGPoint(x: 78.67, y: 62.07), controlPoint2: CGPoint(x: 69.15, y: 65.48))
        bezierPath.close()
        fillColor17.setFill()
        bezierPath.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Group 2
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip 2
        let clip2Path = UIBezierPath(rect: CGRect(x: 0.83, y: 284.25, width: 191.15, height: 122.4))
        clip2Path.addClip()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 136.11, y: 197.11))
        bezier2Path.addCurve(to: CGPoint(x: 61.88, y: 271.35), controlPoint1: CGPoint(x: 95.12, y: 197.11), controlPoint2: CGPoint(x: 61.88, y: 230.35))
        bezier2Path.addCurve(to: CGPoint(x: 136.11, y: 345.58), controlPoint1: CGPoint(x: 61.88, y: 312.34), controlPoint2: CGPoint(x: 95.12, y: 345.58))
        bezier2Path.addCurve(to: CGPoint(x: 210.35, y: 271.35), controlPoint1: CGPoint(x: 177.11, y: 345.58), controlPoint2: CGPoint(x: 210.35, y: 312.34))
        bezier2Path.addCurve(to: CGPoint(x: 136.11, y: 197.11), controlPoint1: CGPoint(x: 210.35, y: 230.35), controlPoint2: CGPoint(x: 177.11, y: 197.11))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 136.11, y: 208.8))
        bezier2Path.addCurve(to: CGPoint(x: 180.34, y: 227.12), controlPoint1: CGPoint(x: 152.82, y: 208.8), controlPoint2: CGPoint(x: 168.53, y: 215.31))
        bezier2Path.addCurve(to: CGPoint(x: 198.66, y: 271.35), controlPoint1: CGPoint(x: 192.15, y: 238.93), controlPoint2: CGPoint(x: 198.66, y: 254.64))
        bezier2Path.addCurve(to: CGPoint(x: 180.34, y: 315.57), controlPoint1: CGPoint(x: 198.66, y: 288.05), controlPoint2: CGPoint(x: 192.15, y: 303.76))
        bezier2Path.addCurve(to: CGPoint(x: 136.11, y: 333.89), controlPoint1: CGPoint(x: 168.53, y: 327.39), controlPoint2: CGPoint(x: 152.82, y: 333.89))
        bezier2Path.addCurve(to: CGPoint(x: 91.89, y: 315.57), controlPoint1: CGPoint(x: 119.41, y: 333.89), controlPoint2: CGPoint(x: 103.7, y: 327.39))
        bezier2Path.addCurve(to: CGPoint(x: 73.57, y: 271.35), controlPoint1: CGPoint(x: 80.07, y: 303.76), controlPoint2: CGPoint(x: 73.57, y: 288.05))
        bezier2Path.addCurve(to: CGPoint(x: 91.89, y: 227.12), controlPoint1: CGPoint(x: 73.57, y: 254.64), controlPoint2: CGPoint(x: 80.07, y: 238.93))
        bezier2Path.addCurve(to: CGPoint(x: 136.11, y: 208.8), controlPoint1: CGPoint(x: 103.7, y: 215.31), controlPoint2: CGPoint(x: 119.41, y: 208.8))
        bezier2Path.close()
        fillColor3.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 136.11, y: 171.13))
        bezier3Path.addCurve(to: CGPoint(x: 35.9, y: 271.35), controlPoint1: CGPoint(x: 80.77, y: 171.13), controlPoint2: CGPoint(x: 35.9, y: 216))
        bezier3Path.addCurve(to: CGPoint(x: 136.11, y: 371.56), controlPoint1: CGPoint(x: 35.9, y: 326.69), controlPoint2: CGPoint(x: 80.77, y: 371.56))
        bezier3Path.addCurve(to: CGPoint(x: 236.33, y: 271.35), controlPoint1: CGPoint(x: 191.46, y: 371.56), controlPoint2: CGPoint(x: 236.33, y: 326.69))
        bezier3Path.addCurve(to: CGPoint(x: 136.11, y: 171.13), controlPoint1: CGPoint(x: 236.33, y: 216), controlPoint2: CGPoint(x: 191.46, y: 171.13))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 136.11, y: 186.91))
        bezier3Path.addCurve(to: CGPoint(x: 195.82, y: 211.64), controlPoint1: CGPoint(x: 158.67, y: 186.91), controlPoint2: CGPoint(x: 179.87, y: 195.69))
        bezier3Path.addCurve(to: CGPoint(x: 220.55, y: 271.35), controlPoint1: CGPoint(x: 211.77, y: 227.59), controlPoint2: CGPoint(x: 220.55, y: 248.79))
        bezier3Path.addCurve(to: CGPoint(x: 195.82, y: 331.05), controlPoint1: CGPoint(x: 220.55, y: 293.9), controlPoint2: CGPoint(x: 211.77, y: 315.1))
        bezier3Path.addCurve(to: CGPoint(x: 136.11, y: 355.78), controlPoint1: CGPoint(x: 179.87, y: 347), controlPoint2: CGPoint(x: 158.67, y: 355.78))
        bezier3Path.addCurve(to: CGPoint(x: 76.41, y: 331.05), controlPoint1: CGPoint(x: 113.56, y: 355.78), controlPoint2: CGPoint(x: 92.36, y: 347))
        bezier3Path.addCurve(to: CGPoint(x: 51.68, y: 271.35), controlPoint1: CGPoint(x: 60.46, y: 315.1), controlPoint2: CGPoint(x: 51.68, y: 293.9))
        bezier3Path.addCurve(to: CGPoint(x: 76.41, y: 211.64), controlPoint1: CGPoint(x: 51.68, y: 248.79), controlPoint2: CGPoint(x: 60.46, y: 227.59))
        bezier3Path.addCurve(to: CGPoint(x: 136.11, y: 186.91), controlPoint1: CGPoint(x: 92.36, y: 195.69), controlPoint2: CGPoint(x: 113.56, y: 186.91))
        bezier3Path.close()
        fillColor3.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 136.11, y: 136.06))
        bezier4Path.addCurve(to: CGPoint(x: 0.82, y: 271.35), controlPoint1: CGPoint(x: 61.4, y: 136.06), controlPoint2: CGPoint(x: 0.82, y: 196.63))
        bezier4Path.addCurve(to: CGPoint(x: 136.11, y: 406.64), controlPoint1: CGPoint(x: 0.82, y: 346.07), controlPoint2: CGPoint(x: 61.4, y: 406.64))
        bezier4Path.addCurve(to: CGPoint(x: 271.41, y: 271.35), controlPoint1: CGPoint(x: 210.83, y: 406.64), controlPoint2: CGPoint(x: 271.41, y: 346.07))
        bezier4Path.addCurve(to: CGPoint(x: 136.11, y: 136.06), controlPoint1: CGPoint(x: 271.41, y: 196.63), controlPoint2: CGPoint(x: 210.83, y: 136.06))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 136.11, y: 157.36))
        bezier4Path.addCurve(to: CGPoint(x: 216.72, y: 190.74), controlPoint1: CGPoint(x: 166.56, y: 157.36), controlPoint2: CGPoint(x: 195.19, y: 169.21))
        bezier4Path.addCurve(to: CGPoint(x: 250.1, y: 271.35), controlPoint1: CGPoint(x: 238.25, y: 212.27), controlPoint2: CGPoint(x: 250.1, y: 240.9))
        bezier4Path.addCurve(to: CGPoint(x: 216.72, y: 351.95), controlPoint1: CGPoint(x: 250.1, y: 301.79), controlPoint2: CGPoint(x: 238.25, y: 330.42))
        bezier4Path.addCurve(to: CGPoint(x: 136.11, y: 385.34), controlPoint1: CGPoint(x: 195.19, y: 373.48), controlPoint2: CGPoint(x: 166.56, y: 385.34))
        bezier4Path.addCurve(to: CGPoint(x: 55.51, y: 351.95), controlPoint1: CGPoint(x: 105.67, y: 385.34), controlPoint2: CGPoint(x: 77.04, y: 373.48))
        bezier4Path.addCurve(to: CGPoint(x: 22.12, y: 271.35), controlPoint1: CGPoint(x: 33.98, y: 330.42), controlPoint2: CGPoint(x: 22.12, y: 301.79))
        bezier4Path.addCurve(to: CGPoint(x: 55.51, y: 190.74), controlPoint1: CGPoint(x: 22.12, y: 240.9), controlPoint2: CGPoint(x: 33.98, y: 212.27))
        bezier4Path.addCurve(to: CGPoint(x: 136.11, y: 157.36), controlPoint1: CGPoint(x: 77.04, y: 169.21), controlPoint2: CGPoint(x: 105.67, y: 157.36))
        bezier4Path.close()
        fillColor3.setFill()
        bezier4Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func draw_100515IconSet_timestampwhiteCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor25 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.750)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 155.2, y: 13))
        bezierPath.addLine(to: CGPoint(x: 143.99, y: 13))
        bezierPath.addLine(to: CGPoint(x: 143.99, y: 26.27))
        bezierPath.addLine(to: CGPoint(x: 144.98, y: 26.27))
        bezierPath.addCurve(to: CGPoint(x: 166.91, y: 48.1), controlPoint1: CGPoint(x: 157.09, y: 26.27), controlPoint2: CGPoint(x: 166.91, y: 36.05))
        bezierPath.addLine(to: CGPoint(x: 166.91, y: 164.36))
        bezierPath.addCurve(to: CGPoint(x: 144.98, y: 186.19), controlPoint1: CGPoint(x: 166.91, y: 176.42), controlPoint2: CGPoint(x: 157.09, y: 186.19))
        bezierPath.addLine(to: CGPoint(x: 55.02, y: 186.19))
        bezierPath.addCurve(to: CGPoint(x: 33.09, y: 164.36), controlPoint1: CGPoint(x: 42.91, y: 186.19), controlPoint2: CGPoint(x: 33.09, y: 176.42))
        bezierPath.addLine(to: CGPoint(x: 33.09, y: 48.1))
        bezierPath.addCurve(to: CGPoint(x: 55.02, y: 26.27), controlPoint1: CGPoint(x: 33.09, y: 36.05), controlPoint2: CGPoint(x: 42.91, y: 26.27))
        bezierPath.addLine(to: CGPoint(x: 57.16, y: 26.27))
        bezierPath.addLine(to: CGPoint(x: 57.16, y: 13))
        bezierPath.addLine(to: CGPoint(x: 44.8, y: 13))
        bezierPath.addCurve(to: CGPoint(x: 22.96, y: 34.83), controlPoint1: CGPoint(x: 32.74, y: 13), controlPoint2: CGPoint(x: 22.96, y: 22.77))
        bezierPath.addLine(to: CGPoint(x: 22.96, y: 176.05))
        bezierPath.addCurve(to: CGPoint(x: 44.8, y: 197.89), controlPoint1: CGPoint(x: 22.96, y: 188.11), controlPoint2: CGPoint(x: 32.74, y: 197.89))
        bezierPath.addLine(to: CGPoint(x: 155.2, y: 197.89))
        bezierPath.addCurve(to: CGPoint(x: 177.04, y: 176.05), controlPoint1: CGPoint(x: 167.26, y: 197.89), controlPoint2: CGPoint(x: 177.04, y: 188.11))
        bezierPath.addLine(to: CGPoint(x: 177.04, y: 34.83))
        bezierPath.addCurve(to: CGPoint(x: 155.2, y: 13), controlPoint1: CGPoint(x: 177.04, y: 22.77), controlPoint2: CGPoint(x: 167.26, y: 13))
        bezierPath.close()
        fillColor25.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 125.22, y: 30.5))
        bezier2Path.addCurve(to: CGPoint(x: 120.48, y: 37.02), controlPoint1: CGPoint(x: 125.22, y: 34.1), controlPoint2: CGPoint(x: 123.1, y: 37.02))
        bezier2Path.addLine(to: CGPoint(x: 82.49, y: 37.02))
        bezier2Path.addCurve(to: CGPoint(x: 77.76, y: 30.5), controlPoint1: CGPoint(x: 79.88, y: 37.02), controlPoint2: CGPoint(x: 77.76, y: 34.1))
        bezier2Path.addLine(to: CGPoint(x: 77.76, y: 16.04))
        bezier2Path.addCurve(to: CGPoint(x: 82.49, y: 9.52), controlPoint1: CGPoint(x: 77.76, y: 12.44), controlPoint2: CGPoint(x: 79.88, y: 9.52))
        bezier2Path.addLine(to: CGPoint(x: 120.48, y: 9.52))
        bezier2Path.addCurve(to: CGPoint(x: 125.22, y: 16.04), controlPoint1: CGPoint(x: 123.1, y: 9.52), controlPoint2: CGPoint(x: 125.22, y: 12.44))
        bezier2Path.addLine(to: CGPoint(x: 125.22, y: 30.5))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 130.71, y: 2.11))
        bezier2Path.addLine(to: CGPoint(x: 72.27, y: 2.11))
        bezier2Path.addCurve(to: CGPoint(x: 64.99, y: 12.15), controlPoint1: CGPoint(x: 68.25, y: 2.11), controlPoint2: CGPoint(x: 64.99, y: 6.6))
        bezier2Path.addLine(to: CGPoint(x: 64.99, y: 34.39))
        bezier2Path.addCurve(to: CGPoint(x: 72.27, y: 44.42), controlPoint1: CGPoint(x: 64.99, y: 39.93), controlPoint2: CGPoint(x: 68.25, y: 44.42))
        bezier2Path.addLine(to: CGPoint(x: 130.71, y: 44.42))
        bezier2Path.addCurve(to: CGPoint(x: 137.99, y: 34.39), controlPoint1: CGPoint(x: 134.73, y: 44.42), controlPoint2: CGPoint(x: 137.99, y: 39.93))
        bezier2Path.addLine(to: CGPoint(x: 137.99, y: 12.15))
        bezier2Path.addCurve(to: CGPoint(x: 130.71, y: 2.11), controlPoint1: CGPoint(x: 137.99, y: 6.6), controlPoint2: CGPoint(x: 134.73, y: 2.11))
        bezier2Path.close()
        fillColor25.setFill()
        bezier2Path.fill()


        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath()
        clipPath.move(to: CGPoint(x: 135.39, y: 45.65))
        clipPath.addLine(to: CGPoint(x: 119.96, y: 65.91))
        clipPath.addLine(to: CGPoint(x: 139.75, y: 79.55))
        clipPath.addLine(to: CGPoint(x: 96.92, y: 127.51))
        clipPath.addLine(to: CGPoint(x: 46.48, y: 112.06))
        clipPath.addLine(to: CGPoint(x: 58.48, y: 79.55))
        clipPath.addLine(to: CGPoint(x: 31.03, y: 59.47))
        clipPath.addLine(to: CGPoint(x: 33.14, y: 174.26))
        clipPath.addLine(to: CGPoint(x: 162.8, y: 174.26))
        clipPath.addLine(to: CGPoint(x: 162.8, y: 45.65))
        clipPath.addLine(to: CGPoint(x: 135.39, y: 45.65))
        clipPath.close()
        clipPath.addClip()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 99.75, y: 150.72))
        bezier3Path.addCurve(to: CGPoint(x: 59.47, y: 110.45), controlPoint1: CGPoint(x: 77.54, y: 150.72), controlPoint2: CGPoint(x: 59.47, y: 132.66))
        bezier3Path.addCurve(to: CGPoint(x: 99.75, y: 70.17), controlPoint1: CGPoint(x: 59.47, y: 88.24), controlPoint2: CGPoint(x: 77.54, y: 70.17))
        bezier3Path.addCurve(to: CGPoint(x: 140.02, y: 110.45), controlPoint1: CGPoint(x: 121.96, y: 70.17), controlPoint2: CGPoint(x: 140.02, y: 88.24))
        bezier3Path.addCurve(to: CGPoint(x: 99.75, y: 150.72), controlPoint1: CGPoint(x: 140.02, y: 132.66), controlPoint2: CGPoint(x: 121.96, y: 150.72))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 99.75, y: 48.85))
        bezier3Path.addCurve(to: CGPoint(x: 38.15, y: 110.45), controlPoint1: CGPoint(x: 65.78, y: 48.85), controlPoint2: CGPoint(x: 38.15, y: 76.48))
        bezier3Path.addCurve(to: CGPoint(x: 99.75, y: 172.04), controlPoint1: CGPoint(x: 38.15, y: 144.41), controlPoint2: CGPoint(x: 65.78, y: 172.04))
        bezier3Path.addCurve(to: CGPoint(x: 161.34, y: 110.45), controlPoint1: CGPoint(x: 133.71, y: 172.04), controlPoint2: CGPoint(x: 161.34, y: 144.41))
        bezier3Path.addCurve(to: CGPoint(x: 99.75, y: 48.85), controlPoint1: CGPoint(x: 161.34, y: 76.48), controlPoint2: CGPoint(x: 133.71, y: 48.85))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 99.75, y: 155.72))
        bezier3Path.addCurve(to: CGPoint(x: 145.02, y: 110.45), controlPoint1: CGPoint(x: 124.75, y: 155.72), controlPoint2: CGPoint(x: 145.02, y: 135.45))
        bezier3Path.addCurve(to: CGPoint(x: 99.75, y: 65.17), controlPoint1: CGPoint(x: 145.02, y: 85.44), controlPoint2: CGPoint(x: 124.75, y: 65.17))
        bezier3Path.addCurve(to: CGPoint(x: 54.47, y: 110.45), controlPoint1: CGPoint(x: 74.74, y: 65.17), controlPoint2: CGPoint(x: 54.47, y: 85.44))
        bezier3Path.addCurve(to: CGPoint(x: 99.75, y: 155.72), controlPoint1: CGPoint(x: 54.47, y: 135.45), controlPoint2: CGPoint(x: 74.74, y: 155.72))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 99.75, y: 53.85))
        bezier3Path.addCurve(to: CGPoint(x: 156.34, y: 110.45), controlPoint1: CGPoint(x: 131, y: 53.85), controlPoint2: CGPoint(x: 156.34, y: 79.19))
        bezier3Path.addCurve(to: CGPoint(x: 99.75, y: 167.04), controlPoint1: CGPoint(x: 156.34, y: 141.7), controlPoint2: CGPoint(x: 131, y: 167.04))
        bezier3Path.addCurve(to: CGPoint(x: 43.15, y: 110.45), controlPoint1: CGPoint(x: 68.49, y: 167.04), controlPoint2: CGPoint(x: 43.15, y: 141.7))
        bezier3Path.addCurve(to: CGPoint(x: 99.75, y: 53.85), controlPoint1: CGPoint(x: 43.15, y: 79.19), controlPoint2: CGPoint(x: 68.49, y: 53.85))
        bezier3Path.close()
        fillColor25.setFill()
        bezier3Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 123.72, y: 73.19))
        bezier5Path.addLine(to: CGPoint(x: 99.82, y: 110.42))
        bezier5Path.addLine(to: CGPoint(x: 62.86, y: 92.27))
        bezier5Path.addLine(to: CGPoint(x: 54.78, y: 95.03))
        bezier5Path.addLine(to: CGPoint(x: 57.84, y: 103.46))
        bezier5Path.addLine(to: CGPoint(x: 101.52, y: 123.75))
        bezier5Path.addLine(to: CGPoint(x: 132.02, y: 78.41))
        bezier5Path.addLine(to: CGPoint(x: 132.82, y: 67.42))
        bezier5Path.addLine(to: CGPoint(x: 123.72, y: 73.19))
        bezier5Path.close()
        fillColor25.setFill()
        bezier5Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func draw_100515IconSet_092016Canvas2(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor25 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.750)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 155.2, y: 13))
        bezierPath.addLine(to: CGPoint(x: 143.99, y: 13))
        bezierPath.addLine(to: CGPoint(x: 143.99, y: 26.27))
        bezierPath.addLine(to: CGPoint(x: 144.98, y: 26.27))
        bezierPath.addCurve(to: CGPoint(x: 166.91, y: 48.1), controlPoint1: CGPoint(x: 157.09, y: 26.27), controlPoint2: CGPoint(x: 166.91, y: 36.05))
        bezierPath.addLine(to: CGPoint(x: 166.91, y: 164.36))
        bezierPath.addCurve(to: CGPoint(x: 144.98, y: 186.19), controlPoint1: CGPoint(x: 166.91, y: 176.42), controlPoint2: CGPoint(x: 157.09, y: 186.19))
        bezierPath.addLine(to: CGPoint(x: 55.02, y: 186.19))
        bezierPath.addCurve(to: CGPoint(x: 33.09, y: 164.36), controlPoint1: CGPoint(x: 42.91, y: 186.19), controlPoint2: CGPoint(x: 33.09, y: 176.42))
        bezierPath.addLine(to: CGPoint(x: 33.09, y: 48.1))
        bezierPath.addCurve(to: CGPoint(x: 55.02, y: 26.27), controlPoint1: CGPoint(x: 33.09, y: 36.05), controlPoint2: CGPoint(x: 42.91, y: 26.27))
        bezierPath.addLine(to: CGPoint(x: 57.16, y: 26.27))
        bezierPath.addLine(to: CGPoint(x: 57.16, y: 13))
        bezierPath.addLine(to: CGPoint(x: 44.8, y: 13))
        bezierPath.addCurve(to: CGPoint(x: 22.96, y: 34.83), controlPoint1: CGPoint(x: 32.74, y: 13), controlPoint2: CGPoint(x: 22.96, y: 22.77))
        bezierPath.addLine(to: CGPoint(x: 22.96, y: 176.05))
        bezierPath.addCurve(to: CGPoint(x: 44.8, y: 197.89), controlPoint1: CGPoint(x: 22.96, y: 188.11), controlPoint2: CGPoint(x: 32.74, y: 197.89))
        bezierPath.addLine(to: CGPoint(x: 155.2, y: 197.89))
        bezierPath.addCurve(to: CGPoint(x: 177.04, y: 176.05), controlPoint1: CGPoint(x: 167.26, y: 197.89), controlPoint2: CGPoint(x: 177.04, y: 188.11))
        bezierPath.addLine(to: CGPoint(x: 177.04, y: 34.83))
        bezierPath.addCurve(to: CGPoint(x: 155.2, y: 13), controlPoint1: CGPoint(x: 177.04, y: 22.77), controlPoint2: CGPoint(x: 167.26, y: 13))
        bezierPath.close()
        fillColor25.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 125.22, y: 30.5))
        bezier2Path.addCurve(to: CGPoint(x: 120.48, y: 37.02), controlPoint1: CGPoint(x: 125.22, y: 34.1), controlPoint2: CGPoint(x: 123.1, y: 37.02))
        bezier2Path.addLine(to: CGPoint(x: 82.49, y: 37.02))
        bezier2Path.addCurve(to: CGPoint(x: 77.76, y: 30.5), controlPoint1: CGPoint(x: 79.88, y: 37.02), controlPoint2: CGPoint(x: 77.76, y: 34.1))
        bezier2Path.addLine(to: CGPoint(x: 77.76, y: 16.04))
        bezier2Path.addCurve(to: CGPoint(x: 82.49, y: 9.52), controlPoint1: CGPoint(x: 77.76, y: 12.44), controlPoint2: CGPoint(x: 79.88, y: 9.52))
        bezier2Path.addLine(to: CGPoint(x: 120.48, y: 9.52))
        bezier2Path.addCurve(to: CGPoint(x: 125.22, y: 16.04), controlPoint1: CGPoint(x: 123.1, y: 9.52), controlPoint2: CGPoint(x: 125.22, y: 12.44))
        bezier2Path.addLine(to: CGPoint(x: 125.22, y: 30.5))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 130.71, y: 2.11))
        bezier2Path.addLine(to: CGPoint(x: 72.27, y: 2.11))
        bezier2Path.addCurve(to: CGPoint(x: 64.99, y: 12.15), controlPoint1: CGPoint(x: 68.25, y: 2.11), controlPoint2: CGPoint(x: 64.99, y: 6.6))
        bezier2Path.addLine(to: CGPoint(x: 64.99, y: 34.39))
        bezier2Path.addCurve(to: CGPoint(x: 72.27, y: 44.42), controlPoint1: CGPoint(x: 64.99, y: 39.93), controlPoint2: CGPoint(x: 68.25, y: 44.42))
        bezier2Path.addLine(to: CGPoint(x: 130.71, y: 44.42))
        bezier2Path.addCurve(to: CGPoint(x: 137.99, y: 34.39), controlPoint1: CGPoint(x: 134.73, y: 44.42), controlPoint2: CGPoint(x: 137.99, y: 39.93))
        bezier2Path.addLine(to: CGPoint(x: 137.99, y: 12.15))
        bezier2Path.addCurve(to: CGPoint(x: 130.71, y: 2.11), controlPoint1: CGPoint(x: 137.99, y: 6.6), controlPoint2: CGPoint(x: 134.73, y: 2.11))
        bezier2Path.close()
        fillColor25.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 121.19, y: 113.68))
        bezier3Path.addCurve(to: CGPoint(x: 93.6, y: 125.07), controlPoint1: CGPoint(x: 118.4, y: 124.03), controlPoint2: CGPoint(x: 102.56, y: 127.05))
        bezier3Path.addCurve(to: CGPoint(x: 82.67, y: 95.29), controlPoint1: CGPoint(x: 79.94, y: 122.06), controlPoint2: CGPoint(x: 74.3, y: 106.62))
        bezier3Path.addCurve(to: CGPoint(x: 102.42, y: 76.46), controlPoint1: CGPoint(x: 89.74, y: 86.57), controlPoint2: CGPoint(x: 92.65, y: 85.52))
        bezier3Path.addCurve(to: CGPoint(x: 103.66, y: 67.29), controlPoint1: CGPoint(x: 106.97, y: 71.8), controlPoint2: CGPoint(x: 104.1, y: 68.5))
        bezier3Path.addCurve(to: CGPoint(x: 108.5, y: 87.21), controlPoint1: CGPoint(x: 112.38, y: 71.77), controlPoint2: CGPoint(x: 114.79, y: 83.45))
        bezier3Path.addCurve(to: CGPoint(x: 100.52, y: 99.79), controlPoint1: CGPoint(x: 104.86, y: 89.38), controlPoint2: CGPoint(x: 96.98, y: 95.86))
        bezier3Path.addCurve(to: CGPoint(x: 111.91, y: 90.14), controlPoint1: CGPoint(x: 104.2, y: 103.88), controlPoint2: CGPoint(x: 112.86, y: 94.61))
        bezier3Path.addCurve(to: CGPoint(x: 121.19, y: 113.68), controlPoint1: CGPoint(x: 119.98, y: 95.9), controlPoint2: CGPoint(x: 124.03, y: 103.18))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 100.77, y: 49))
        bezier3Path.addCurve(to: CGPoint(x: 62.43, y: 87.35), controlPoint1: CGPoint(x: 79.59, y: 49), controlPoint2: CGPoint(x: 62.43, y: 66.17))
        bezier3Path.addCurve(to: CGPoint(x: 100.77, y: 182.36), controlPoint1: CGPoint(x: 62.82, y: 106.09), controlPoint2: CGPoint(x: 100.77, y: 182.36))
        bezier3Path.addCurve(to: CGPoint(x: 139.12, y: 87.35), controlPoint1: CGPoint(x: 100.77, y: 182.36), controlPoint2: CGPoint(x: 138.79, y: 103.54))
        bezier3Path.addCurve(to: CGPoint(x: 100.77, y: 49), controlPoint1: CGPoint(x: 139.12, y: 66.17), controlPoint2: CGPoint(x: 121.95, y: 49))
        bezier3Path.close()
        fillColor25.setFill()
        bezier3Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func draw_100515IconSet_092016_FormswhiteCanvas2() {
        //// Color Declarations
        let fillColor25 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.750)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 99.47, y: 162.71))
        bezierPath.addLine(to: CGPoint(x: 45.43, y: 104.65))
        bezierPath.addLine(to: CGPoint(x: 93.92, y: 124.08))
        bezierPath.addLine(to: CGPoint(x: 158.76, y: 50.88))
        bezierPath.addLine(to: CGPoint(x: 99.47, y: 162.71))
        bezierPath.close()
        fillColor25.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 155.06, y: 13.22))
        bezier2Path.addLine(to: CGPoint(x: 143.88, y: 13.22))
        bezier2Path.addLine(to: CGPoint(x: 143.88, y: 26.46))
        bezier2Path.addLine(to: CGPoint(x: 144.86, y: 26.46))
        bezier2Path.addCurve(to: CGPoint(x: 166.74, y: 48.24), controlPoint1: CGPoint(x: 156.95, y: 26.46), controlPoint2: CGPoint(x: 166.74, y: 36.21))
        bezier2Path.addLine(to: CGPoint(x: 166.74, y: 164.19))
        bezier2Path.addCurve(to: CGPoint(x: 144.86, y: 185.97), controlPoint1: CGPoint(x: 166.74, y: 176.22), controlPoint2: CGPoint(x: 156.95, y: 185.97))
        bezier2Path.addLine(to: CGPoint(x: 55.14, y: 185.97))
        bezier2Path.addCurve(to: CGPoint(x: 33.26, y: 164.19), controlPoint1: CGPoint(x: 43.05, y: 185.97), controlPoint2: CGPoint(x: 33.26, y: 176.22))
        bezier2Path.addLine(to: CGPoint(x: 33.26, y: 48.24))
        bezier2Path.addCurve(to: CGPoint(x: 55.14, y: 26.46), controlPoint1: CGPoint(x: 33.26, y: 36.21), controlPoint2: CGPoint(x: 43.05, y: 26.46))
        bezier2Path.addLine(to: CGPoint(x: 57.27, y: 26.46))
        bezier2Path.addLine(to: CGPoint(x: 57.27, y: 13.22))
        bezier2Path.addLine(to: CGPoint(x: 44.94, y: 13.22))
        bezier2Path.addCurve(to: CGPoint(x: 23.16, y: 35), controlPoint1: CGPoint(x: 32.91, y: 13.22), controlPoint2: CGPoint(x: 23.16, y: 22.97))
        bezier2Path.addLine(to: CGPoint(x: 23.16, y: 175.86))
        bezier2Path.addCurve(to: CGPoint(x: 44.94, y: 197.64), controlPoint1: CGPoint(x: 23.16, y: 187.88), controlPoint2: CGPoint(x: 32.91, y: 197.64))
        bezier2Path.addLine(to: CGPoint(x: 155.06, y: 197.64))
        bezier2Path.addCurve(to: CGPoint(x: 176.84, y: 175.86), controlPoint1: CGPoint(x: 167.09, y: 197.64), controlPoint2: CGPoint(x: 176.84, y: 187.88))
        bezier2Path.addLine(to: CGPoint(x: 176.84, y: 35))
        bezier2Path.addCurve(to: CGPoint(x: 155.06, y: 13.22), controlPoint1: CGPoint(x: 176.84, y: 22.97), controlPoint2: CGPoint(x: 167.09, y: 13.22))
        bezier2Path.close()
        fillColor25.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 125.15, y: 30.67))
        bezier3Path.addCurve(to: CGPoint(x: 120.43, y: 37.18), controlPoint1: CGPoint(x: 125.15, y: 34.27), controlPoint2: CGPoint(x: 123.04, y: 37.18))
        bezier3Path.addLine(to: CGPoint(x: 82.54, y: 37.18))
        bezier3Path.addCurve(to: CGPoint(x: 77.82, y: 30.67), controlPoint1: CGPoint(x: 79.93, y: 37.18), controlPoint2: CGPoint(x: 77.82, y: 34.27))
        bezier3Path.addLine(to: CGPoint(x: 77.82, y: 16.25))
        bezier3Path.addCurve(to: CGPoint(x: 82.54, y: 9.75), controlPoint1: CGPoint(x: 77.82, y: 12.66), controlPoint2: CGPoint(x: 79.93, y: 9.75))
        bezier3Path.addLine(to: CGPoint(x: 120.43, y: 9.75))
        bezier3Path.addCurve(to: CGPoint(x: 125.15, y: 16.25), controlPoint1: CGPoint(x: 123.04, y: 9.75), controlPoint2: CGPoint(x: 125.15, y: 12.66))
        bezier3Path.addLine(to: CGPoint(x: 125.15, y: 30.67))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 130.63, y: 2.36))
        bezier3Path.addLine(to: CGPoint(x: 72.34, y: 2.36))
        bezier3Path.addCurve(to: CGPoint(x: 65.08, y: 12.37), controlPoint1: CGPoint(x: 68.33, y: 2.36), controlPoint2: CGPoint(x: 65.08, y: 6.84))
        bezier3Path.addLine(to: CGPoint(x: 65.08, y: 34.56))
        bezier3Path.addCurve(to: CGPoint(x: 72.34, y: 44.56), controlPoint1: CGPoint(x: 65.08, y: 40.08), controlPoint2: CGPoint(x: 68.33, y: 44.56))
        bezier3Path.addLine(to: CGPoint(x: 130.63, y: 44.56))
        bezier3Path.addCurve(to: CGPoint(x: 137.89, y: 34.56), controlPoint1: CGPoint(x: 134.64, y: 44.56), controlPoint2: CGPoint(x: 137.89, y: 40.08))
        bezier3Path.addLine(to: CGPoint(x: 137.89, y: 12.37))
        bezier3Path.addCurve(to: CGPoint(x: 130.63, y: 2.36), controlPoint1: CGPoint(x: 137.89, y: 6.84), controlPoint2: CGPoint(x: 134.64, y: 2.36))
        bezier3Path.close()
        fillColor25.setFill()
        bezier3Path.fill()
    }

    @objc dynamic public class func drawWhiteSettings(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.draw_100515IconSet_092016_SettingswhiteCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawWhiteTimestamp(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.draw_100515IconSet_timestampwhiteCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawWhiteForm(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.draw_100515IconSet_092016_FormswhiteCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawWhiteMembers(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.draw_100515IconSet_092016_MemberswhiteCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawWhiteMap(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.draw_100515IconSet_092016Canvas2(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawFullcolorEMS(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.draw_100515IconSet_092016_emsCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func draw_100515IconSet_092016_IncidentDatawhiteCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor25 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.750)

        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath(rect: CGRect(x: 5.5, y: 2.38, width: 189, height: 195.25))
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 81.48, y: 96.59))
        bezierPath.addCurve(to: CGPoint(x: 63.24, y: 78.35), controlPoint1: CGPoint(x: 71.41, y: 96.59), controlPoint2: CGPoint(x: 63.24, y: 88.42))
        bezierPath.addCurve(to: CGPoint(x: 81.48, y: 60.11), controlPoint1: CGPoint(x: 63.24, y: 68.28), controlPoint2: CGPoint(x: 71.41, y: 60.11))
        bezierPath.addCurve(to: CGPoint(x: 99.72, y: 78.35), controlPoint1: CGPoint(x: 91.55, y: 60.11), controlPoint2: CGPoint(x: 99.72, y: 68.28))
        bezierPath.addCurve(to: CGPoint(x: 81.48, y: 96.59), controlPoint1: CGPoint(x: 99.72, y: 88.42), controlPoint2: CGPoint(x: 91.55, y: 96.59))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 81.48, y: 2.36))
        bezierPath.addCurve(to: CGPoint(x: 5.49, y: 78.35), controlPoint1: CGPoint(x: 39.51, y: 2.36), controlPoint2: CGPoint(x: 5.49, y: 36.38))
        bezierPath.addCurve(to: CGPoint(x: 81.48, y: 154.34), controlPoint1: CGPoint(x: 5.49, y: 120.32), controlPoint2: CGPoint(x: 39.51, y: 154.34))
        bezierPath.addCurve(to: CGPoint(x: 157.47, y: 78.35), controlPoint1: CGPoint(x: 123.45, y: 154.34), controlPoint2: CGPoint(x: 157.47, y: 120.32))
        bezierPath.addCurve(to: CGPoint(x: 81.48, y: 2.36), controlPoint1: CGPoint(x: 157.47, y: 36.38), controlPoint2: CGPoint(x: 123.45, y: 2.36))
        bezierPath.close()
        fillColor25.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 194.51, y: 98.78))
        bezier2Path.addCurve(to: CGPoint(x: 180.93, y: 82.95), controlPoint1: CGPoint(x: 194.51, y: 90.66), controlPoint2: CGPoint(x: 190.01, y: 83.52))
        bezier2Path.addCurve(to: CGPoint(x: 165.31, y: 96.93), controlPoint1: CGPoint(x: 171.85, y: 82.38), controlPoint2: CGPoint(x: 166.11, y: 90.78))
        bezier2Path.addCurve(to: CGPoint(x: 175.04, y: 111.54), controlPoint1: CGPoint(x: 164.27, y: 104.96), controlPoint2: CGPoint(x: 167.37, y: 110.92))
        bezier2Path.addCurve(to: CGPoint(x: 114.15, y: 176.05), controlPoint1: CGPoint(x: 171.35, y: 159.77), controlPoint2: CGPoint(x: 134.93, y: 174.04))
        bezier2Path.addLine(to: CGPoint(x: 114.15, y: 167.1))
        bezier2Path.addLine(to: CGPoint(x: 46.16, y: 167.1))
        bezier2Path.addLine(to: CGPoint(x: 46.16, y: 197.64))
        bezier2Path.addLine(to: CGPoint(x: 114.15, y: 197.64))
        bezier2Path.addLine(to: CGPoint(x: 114.15, y: 187.93))
        bezier2Path.addCurve(to: CGPoint(x: 186.03, y: 111.06), controlPoint1: CGPoint(x: 137.64, y: 187.56), controlPoint2: CGPoint(x: 186.03, y: 172.15))
        bezier2Path.addCurve(to: CGPoint(x: 194.51, y: 98.78), controlPoint1: CGPoint(x: 191.35, y: 109.16), controlPoint2: CGPoint(x: 194.51, y: 104.75))
        bezier2Path.close()
        fillColor25.setFill()
        bezier2Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawWhiteIncidentData(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.draw_100515IconSet_092016_IncidentDatawhiteCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawFullcolorRescue(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.draw_100515IconSet_092016_rescueCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawFullColorFire(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.draw_100515IconSet_092016_fireCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawFullColorAdministrative(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.draw_100515IconSet_092016_JournalAdministrativeCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawFullColorGeneral(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.draw_100515IconSet_092016_GeneralToDoListsCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawFullColorMembers(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.draw_100515IconSet_092016Canvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawAdminWhiteCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor25 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.750)

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 47.98, y: 78.77, width: 105.25, height: 10.65))
        fillColor25.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 47.98, y: 53.97, width: 105.25, height: 10.65))
        fillColor25.setFill()
        rectangle2Path.fill()


        //// Rectangle 3 Drawing
        let rectangle3Path = UIBezierPath(rect: CGRect(x: 47.98, y: 103.42, width: 105.25, height: 10.65))
        fillColor25.setFill()
        rectangle3Path.fill()


        //// Rectangle 4 Drawing
        let rectangle4Path = UIBezierPath(rect: CGRect(x: 47.98, y: 126.07, width: 105.25, height: 10.65))
        fillColor25.setFill()
        rectangle4Path.fill()


        //// Rectangle 5 Drawing
        let rectangle5Path = UIBezierPath(rect: CGRect(x: 47.98, y: 148.97, width: 105.25, height: 10.65))
        fillColor25.setFill()
        rectangle5Path.fill()


        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath(rect: CGRect(x: 23.15, y: 2.38, width: 153.7, height: 195.25))
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 155.06, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 143.88, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 143.88, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 144.86, y: 26.46))
        bezierPath.addCurve(to: CGPoint(x: 166.74, y: 48.24), controlPoint1: CGPoint(x: 156.95, y: 26.46), controlPoint2: CGPoint(x: 166.74, y: 36.21))
        bezierPath.addLine(to: CGPoint(x: 166.74, y: 164.19))
        bezierPath.addCurve(to: CGPoint(x: 144.86, y: 185.97), controlPoint1: CGPoint(x: 166.74, y: 176.22), controlPoint2: CGPoint(x: 156.95, y: 185.97))
        bezierPath.addLine(to: CGPoint(x: 55.14, y: 185.97))
        bezierPath.addCurve(to: CGPoint(x: 33.26, y: 164.19), controlPoint1: CGPoint(x: 43.05, y: 185.97), controlPoint2: CGPoint(x: 33.26, y: 176.22))
        bezierPath.addLine(to: CGPoint(x: 33.26, y: 48.24))
        bezierPath.addCurve(to: CGPoint(x: 55.14, y: 26.46), controlPoint1: CGPoint(x: 33.26, y: 36.21), controlPoint2: CGPoint(x: 43.05, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 57.27, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 57.27, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 44.94, y: 13.22))
        bezierPath.addCurve(to: CGPoint(x: 23.16, y: 35), controlPoint1: CGPoint(x: 32.91, y: 13.22), controlPoint2: CGPoint(x: 23.16, y: 22.97))
        bezierPath.addLine(to: CGPoint(x: 23.16, y: 175.86))
        bezierPath.addCurve(to: CGPoint(x: 44.94, y: 197.64), controlPoint1: CGPoint(x: 23.16, y: 187.89), controlPoint2: CGPoint(x: 32.91, y: 197.64))
        bezierPath.addLine(to: CGPoint(x: 155.06, y: 197.64))
        bezierPath.addCurve(to: CGPoint(x: 176.84, y: 175.86), controlPoint1: CGPoint(x: 167.09, y: 197.64), controlPoint2: CGPoint(x: 176.84, y: 187.89))
        bezierPath.addLine(to: CGPoint(x: 176.84, y: 35))
        bezierPath.addCurve(to: CGPoint(x: 155.06, y: 13.22), controlPoint1: CGPoint(x: 176.84, y: 22.97), controlPoint2: CGPoint(x: 167.09, y: 13.22))
        bezierPath.close()
        fillColor25.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 125.15, y: 30.67))
        bezier2Path.addCurve(to: CGPoint(x: 120.43, y: 37.18), controlPoint1: CGPoint(x: 125.15, y: 34.27), controlPoint2: CGPoint(x: 123.04, y: 37.18))
        bezier2Path.addLine(to: CGPoint(x: 82.54, y: 37.18))
        bezier2Path.addCurve(to: CGPoint(x: 77.82, y: 30.67), controlPoint1: CGPoint(x: 79.93, y: 37.18), controlPoint2: CGPoint(x: 77.82, y: 34.27))
        bezier2Path.addLine(to: CGPoint(x: 77.82, y: 16.25))
        bezier2Path.addCurve(to: CGPoint(x: 82.54, y: 9.75), controlPoint1: CGPoint(x: 77.82, y: 12.66), controlPoint2: CGPoint(x: 79.93, y: 9.75))
        bezier2Path.addLine(to: CGPoint(x: 120.43, y: 9.75))
        bezier2Path.addCurve(to: CGPoint(x: 125.15, y: 16.25), controlPoint1: CGPoint(x: 123.04, y: 9.75), controlPoint2: CGPoint(x: 125.15, y: 12.66))
        bezier2Path.addLine(to: CGPoint(x: 125.15, y: 30.67))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 130.63, y: 2.36))
        bezier2Path.addLine(to: CGPoint(x: 72.34, y: 2.36))
        bezier2Path.addCurve(to: CGPoint(x: 65.08, y: 12.37), controlPoint1: CGPoint(x: 68.33, y: 2.36), controlPoint2: CGPoint(x: 65.08, y: 6.84))
        bezier2Path.addLine(to: CGPoint(x: 65.08, y: 34.56))
        bezier2Path.addCurve(to: CGPoint(x: 72.34, y: 44.56), controlPoint1: CGPoint(x: 65.08, y: 40.08), controlPoint2: CGPoint(x: 68.33, y: 44.56))
        bezier2Path.addLine(to: CGPoint(x: 130.63, y: 44.56))
        bezier2Path.addCurve(to: CGPoint(x: 137.89, y: 34.56), controlPoint1: CGPoint(x: 134.64, y: 44.56), controlPoint2: CGPoint(x: 137.89, y: 40.08))
        bezier2Path.addLine(to: CGPoint(x: 137.89, y: 12.37))
        bezier2Path.addCurve(to: CGPoint(x: 130.63, y: 2.36), controlPoint1: CGPoint(x: 137.89, y: 6.84), controlPoint2: CGPoint(x: 134.64, y: 2.36))
        bezier2Path.close()
        fillColor25.setFill()
        bezier2Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawWhiteAdmin(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawAdminWhiteCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawFullcolorMembersCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor5 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let fillColor6 = UIColor(red: 0.201, green: 0.302, blue: 0.538, alpha: 1.000)
        let fillColor7 = UIColor(red: 0.973, green: 0.640, blue: 0.239, alpha: 1.000)
        let fillColor11 = UIColor(red: 0.267, green: 0.260, blue: 0.246, alpha: 1.000)
        let fillColor12 = UIColor(red: 0.121, green: 0.121, blue: 0.121, alpha: 1.000)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 126, y: 26))
        bezierPath.addLine(to: CGPoint(x: 126, y: 31.77))
        bezierPath.addCurve(to: CGPoint(x: 120.56, y: 37), controlPoint1: CGPoint(x: 126, y: 34.58), controlPoint2: CGPoint(x: 123.37, y: 37))
        bezierPath.addLine(to: CGPoint(x: 82.7, y: 37))
        bezierPath.addCurve(to: CGPoint(x: 78, y: 31.77), controlPoint1: CGPoint(x: 79.89, y: 37), controlPoint2: CGPoint(x: 78, y: 34.58))
        bezierPath.addLine(to: CGPoint(x: 78, y: 26))
        bezierPath.addLine(to: CGPoint(x: 29, y: 26))
        bezierPath.addLine(to: CGPoint(x: 29, y: 191))
        bezierPath.addLine(to: CGPoint(x: 171, y: 191))
        bezierPath.addLine(to: CGPoint(x: 171, y: 26))
        bezierPath.addLine(to: CGPoint(x: 126, y: 26))
        bezierPath.close()
        fillColor5.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 155.2, y: 13))
        bezier2Path.addLine(to: CGPoint(x: 143.99, y: 13))
        bezier2Path.addLine(to: CGPoint(x: 143.99, y: 26.27))
        bezier2Path.addLine(to: CGPoint(x: 144.98, y: 26.27))
        bezier2Path.addCurve(to: CGPoint(x: 166.91, y: 48.1), controlPoint1: CGPoint(x: 157.09, y: 26.27), controlPoint2: CGPoint(x: 166.91, y: 36.05))
        bezier2Path.addLine(to: CGPoint(x: 166.91, y: 164.36))
        bezier2Path.addCurve(to: CGPoint(x: 144.98, y: 186.19), controlPoint1: CGPoint(x: 166.91, y: 176.42), controlPoint2: CGPoint(x: 157.09, y: 186.19))
        bezier2Path.addLine(to: CGPoint(x: 55.02, y: 186.19))
        bezier2Path.addCurve(to: CGPoint(x: 33.09, y: 164.36), controlPoint1: CGPoint(x: 42.91, y: 186.19), controlPoint2: CGPoint(x: 33.09, y: 176.42))
        bezier2Path.addLine(to: CGPoint(x: 33.09, y: 48.1))
        bezier2Path.addCurve(to: CGPoint(x: 55.02, y: 26.27), controlPoint1: CGPoint(x: 33.09, y: 36.05), controlPoint2: CGPoint(x: 42.91, y: 26.27))
        bezier2Path.addLine(to: CGPoint(x: 57.16, y: 26.27))
        bezier2Path.addLine(to: CGPoint(x: 57.16, y: 13))
        bezier2Path.addLine(to: CGPoint(x: 44.8, y: 13))
        bezier2Path.addCurve(to: CGPoint(x: 22.96, y: 34.83), controlPoint1: CGPoint(x: 32.74, y: 13), controlPoint2: CGPoint(x: 22.96, y: 22.77))
        bezier2Path.addLine(to: CGPoint(x: 22.96, y: 176.05))
        bezier2Path.addCurve(to: CGPoint(x: 44.8, y: 197.89), controlPoint1: CGPoint(x: 22.96, y: 188.11), controlPoint2: CGPoint(x: 32.74, y: 197.89))
        bezier2Path.addLine(to: CGPoint(x: 155.2, y: 197.89))
        bezier2Path.addCurve(to: CGPoint(x: 177.04, y: 176.05), controlPoint1: CGPoint(x: 167.26, y: 197.89), controlPoint2: CGPoint(x: 177.04, y: 188.11))
        bezier2Path.addLine(to: CGPoint(x: 177.04, y: 34.83))
        bezier2Path.addCurve(to: CGPoint(x: 155.2, y: 13), controlPoint1: CGPoint(x: 177.04, y: 22.77), controlPoint2: CGPoint(x: 167.26, y: 13))
        bezier2Path.close()
        fillColor6.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 125.22, y: 30.5))
        bezier3Path.addCurve(to: CGPoint(x: 120.48, y: 37.02), controlPoint1: CGPoint(x: 125.22, y: 34.1), controlPoint2: CGPoint(x: 123.1, y: 37.02))
        bezier3Path.addLine(to: CGPoint(x: 82.49, y: 37.02))
        bezier3Path.addCurve(to: CGPoint(x: 77.76, y: 30.5), controlPoint1: CGPoint(x: 79.88, y: 37.02), controlPoint2: CGPoint(x: 77.76, y: 34.1))
        bezier3Path.addLine(to: CGPoint(x: 77.76, y: 16.04))
        bezier3Path.addCurve(to: CGPoint(x: 82.49, y: 9.52), controlPoint1: CGPoint(x: 77.76, y: 12.44), controlPoint2: CGPoint(x: 79.88, y: 9.52))
        bezier3Path.addLine(to: CGPoint(x: 120.48, y: 9.52))
        bezier3Path.addCurve(to: CGPoint(x: 125.22, y: 16.04), controlPoint1: CGPoint(x: 123.1, y: 9.52), controlPoint2: CGPoint(x: 125.22, y: 12.44))
        bezier3Path.addLine(to: CGPoint(x: 125.22, y: 30.5))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 130.71, y: 2.11))
        bezier3Path.addLine(to: CGPoint(x: 72.27, y: 2.11))
        bezier3Path.addCurve(to: CGPoint(x: 64.99, y: 12.15), controlPoint1: CGPoint(x: 68.25, y: 2.11), controlPoint2: CGPoint(x: 64.99, y: 6.6))
        bezier3Path.addLine(to: CGPoint(x: 64.99, y: 34.39))
        bezier3Path.addCurve(to: CGPoint(x: 72.27, y: 44.42), controlPoint1: CGPoint(x: 64.99, y: 39.93), controlPoint2: CGPoint(x: 68.25, y: 44.42))
        bezier3Path.addLine(to: CGPoint(x: 130.71, y: 44.42))
        bezier3Path.addCurve(to: CGPoint(x: 137.99, y: 34.39), controlPoint1: CGPoint(x: 134.73, y: 44.42), controlPoint2: CGPoint(x: 137.99, y: 39.93))
        bezier3Path.addLine(to: CGPoint(x: 137.99, y: 12.15))
        bezier3Path.addCurve(to: CGPoint(x: 130.71, y: 2.11), controlPoint1: CGPoint(x: 137.99, y: 6.6), controlPoint2: CGPoint(x: 134.73, y: 2.11))
        bezier3Path.close()
        fillColor7.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 160.46, y: 122.25))
        bezier4Path.addCurve(to: CGPoint(x: 141.47, y: 112.58), controlPoint1: CGPoint(x: 158.78, y: 121.29), controlPoint2: CGPoint(x: 148.94, y: 114.84))
        bezier4Path.addLine(to: CGPoint(x: 141.47, y: 102.77))
        bezier4Path.addCurve(to: CGPoint(x: 145.2, y: 97), controlPoint1: CGPoint(x: 145.2, y: 101.59), controlPoint2: CGPoint(x: 145.2, y: 99.76))
        bezier4Path.addLine(to: CGPoint(x: 145.2, y: 90.34))
        bezier4Path.addCurve(to: CGPoint(x: 134.01, y: 78.66), controlPoint1: CGPoint(x: 145.2, y: 83.92), controlPoint2: CGPoint(x: 141.79, y: 78.66))
        bezier4Path.addCurve(to: CGPoint(x: 122.81, y: 90.34), controlPoint1: CGPoint(x: 126.22, y: 78.66), controlPoint2: CGPoint(x: 122.81, y: 83.92))
        bezier4Path.addLine(to: CGPoint(x: 122.81, y: 97))
        bezier4Path.addCurve(to: CGPoint(x: 126.54, y: 102.8), controlPoint1: CGPoint(x: 122.81, y: 99.79), controlPoint2: CGPoint(x: 122.81, y: 101.62))
        bezier4Path.addLine(to: CGPoint(x: 126.54, y: 112.58))
        bezier4Path.addCurve(to: CGPoint(x: 119.73, y: 115.37), controlPoint1: CGPoint(x: 124.38, y: 113.23), controlPoint2: CGPoint(x: 122.03, y: 114.25))
        bezier4Path.addCurve(to: CGPoint(x: 139.17, y: 126.05), controlPoint1: CGPoint(x: 126.87, y: 118.93), controlPoint2: CGPoint(x: 135.4, y: 123.87))
        bezier4Path.addLine(to: CGPoint(x: 140.51, y: 126.83))
        bezier4Path.addCurve(to: CGPoint(x: 146.65, y: 134.65), controlPoint1: CGPoint(x: 144.3, y: 128.98), controlPoint2: CGPoint(x: 145.97, y: 131.58))
        bezier4Path.addLine(to: CGPoint(x: 163.17, y: 134.65))
        bezier4Path.addCurve(to: CGPoint(x: 163.86, y: 133.78), controlPoint1: CGPoint(x: 163.55, y: 134.65), controlPoint2: CGPoint(x: 163.86, y: 134.15))
        bezier4Path.addLine(to: CGPoint(x: 163.86, y: 127.28))
        bezier4Path.addCurve(to: CGPoint(x: 160.46, y: 122.25), controlPoint1: CGPoint(x: 163.86, y: 124.55), controlPoint2: CGPoint(x: 162.54, y: 123.43))
        bezier4Path.close()
        fillColor11.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 36.94, y: 126.83))
        bezier5Path.addLine(to: CGPoint(x: 36.94, y: 133.32))
        bezier5Path.addCurve(to: CGPoint(x: 37.63, y: 134.19), controlPoint1: CGPoint(x: 36.94, y: 133.7), controlPoint2: CGPoint(x: 37.25, y: 134.19))
        bezier5Path.addLine(to: CGPoint(x: 54.16, y: 134.19))
        bezier5Path.addCurve(to: CGPoint(x: 60.3, y: 126.37), controlPoint1: CGPoint(x: 54.83, y: 131.12), controlPoint2: CGPoint(x: 56.51, y: 128.52))
        bezier5Path.addLine(to: CGPoint(x: 61.63, y: 125.6))
        bezier5Path.addCurve(to: CGPoint(x: 81.08, y: 114.92), controlPoint1: CGPoint(x: 65.4, y: 123.42), controlPoint2: CGPoint(x: 73.93, y: 118.48))
        bezier5Path.addCurve(to: CGPoint(x: 74.26, y: 112.12), controlPoint1: CGPoint(x: 78.77, y: 113.8), controlPoint2: CGPoint(x: 76.42, y: 112.78))
        bezier5Path.addLine(to: CGPoint(x: 74.26, y: 102.35))
        bezier5Path.addCurve(to: CGPoint(x: 78, y: 96.55), controlPoint1: CGPoint(x: 78, y: 101.16), controlPoint2: CGPoint(x: 78, y: 99.34))
        bezier5Path.addLine(to: CGPoint(x: 78, y: 89.89))
        bezier5Path.addCurve(to: CGPoint(x: 66.8, y: 78.21), controlPoint1: CGPoint(x: 78, y: 83.47), controlPoint2: CGPoint(x: 74.59, y: 78.21))
        bezier5Path.addCurve(to: CGPoint(x: 55.6, y: 89.89), controlPoint1: CGPoint(x: 59.01, y: 78.21), controlPoint2: CGPoint(x: 55.6, y: 83.47))
        bezier5Path.addLine(to: CGPoint(x: 55.6, y: 96.55))
        bezier5Path.addCurve(to: CGPoint(x: 59.33, y: 102.32), controlPoint1: CGPoint(x: 55.6, y: 99.31), controlPoint2: CGPoint(x: 55.6, y: 101.14))
        bezier5Path.addLine(to: CGPoint(x: 59.33, y: 112.12))
        bezier5Path.addCurve(to: CGPoint(x: 40.34, y: 121.79), controlPoint1: CGPoint(x: 51.87, y: 114.39), controlPoint2: CGPoint(x: 42.02, y: 120.84))
        bezier5Path.addCurve(to: CGPoint(x: 36.94, y: 126.83), controlPoint1: CGPoint(x: 38.27, y: 122.98), controlPoint2: CGPoint(x: 36.94, y: 124.1))
        bezier5Path.close()
        fillColor11.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 143.15, y: 137.26))
        bezier6Path.addLine(to: CGPoint(x: 143.15, y: 146.59))
        bezier6Path.addCurve(to: CGPoint(x: 142.15, y: 147.85), controlPoint1: CGPoint(x: 143.15, y: 147.14), controlPoint2: CGPoint(x: 142.7, y: 147.85))
        bezier6Path.addLine(to: CGPoint(x: 58.31, y: 147.85))
        bezier6Path.addCurve(to: CGPoint(x: 57.31, y: 146.59), controlPoint1: CGPoint(x: 57.76, y: 147.85), controlPoint2: CGPoint(x: 57.31, y: 147.14))
        bezier6Path.addLine(to: CGPoint(x: 57.31, y: 137.26))
        bezier6Path.addCurve(to: CGPoint(x: 61.04, y: 130.02), controlPoint1: CGPoint(x: 57.31, y: 133.33), controlPoint2: CGPoint(x: 58.05, y: 131.72))
        bezier6Path.addCurve(to: CGPoint(x: 87.17, y: 116.12), controlPoint1: CGPoint(x: 63.44, y: 128.65), controlPoint2: CGPoint(x: 79.58, y: 119.38))
        bezier6Path.addLine(to: CGPoint(x: 87.17, y: 102.07))
        bezier6Path.addCurve(to: CGPoint(x: 83.44, y: 93.73), controlPoint1: CGPoint(x: 84.84, y: 100.37), controlPoint2: CGPoint(x: 83.44, y: 97.74))
        bezier6Path.addLine(to: CGPoint(x: 83.44, y: 82.59))
        bezier6Path.addCurve(to: CGPoint(x: 100.23, y: 65.8), controlPoint1: CGPoint(x: 83.44, y: 73.36), controlPoint2: CGPoint(x: 89.03, y: 65.8))
        bezier6Path.addCurve(to: CGPoint(x: 117.02, y: 82.59), controlPoint1: CGPoint(x: 111.43, y: 65.8), controlPoint2: CGPoint(x: 117.02, y: 73.36))
        bezier6Path.addLine(to: CGPoint(x: 117.02, y: 93.73))
        bezier6Path.addCurve(to: CGPoint(x: 113.29, y: 102.03), controlPoint1: CGPoint(x: 117.02, y: 97.7), controlPoint2: CGPoint(x: 115.62, y: 100.33))
        bezier6Path.addLine(to: CGPoint(x: 113.29, y: 116.12))
        bezier6Path.addCurve(to: CGPoint(x: 139.42, y: 130.02), controlPoint1: CGPoint(x: 121.34, y: 119.38), controlPoint2: CGPoint(x: 137.02, y: 128.65))
        bezier6Path.addCurve(to: CGPoint(x: 143.15, y: 137.26), controlPoint1: CGPoint(x: 142.41, y: 131.72), controlPoint2: CGPoint(x: 143.15, y: 133.33))
        bezier6Path.close()
        fillColor12.setFill()
        bezier6Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawFullColoredMembers(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawFullcolorMembersCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawMapMarkerCOMMUNITYCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let gradientColor = UIColor(red: 0.268, green: 0.469, blue: 0.741, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.057, green: 0.113, blue: 0.227, alpha: 1.000)
        let fillColor2 = UIColor(red: 0.181, green: 0.706, blue: 0.929, alpha: 1.000)
        let fillColor18 = UIColor(red: 0.996, green: 0.996, blue: 0.996, alpha: 0.750)

        //// Gradient Declarations
        let gradient = CGGradient(colorsSpace: nil, colors: [gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 1])!

        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath()
        clipPath.move(to: CGPoint(x: 48.21, y: 5.06))
        clipPath.addCurve(to: CGPoint(x: 25.16, y: 25.03), controlPoint1: CGPoint(x: 35.5, y: 5.06), controlPoint2: CGPoint(x: 25.16, y: 14.02))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 25.03))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 126.24))
        clipPath.addCurve(to: CGPoint(x: 48.04, y: 146.21), controlPoint1: CGPoint(x: 25.16, y: 136.8), controlPoint2: CGPoint(x: 34.99, y: 145.38))
        clipPath.addLine(to: CGPoint(x: 48.04, y: 146.21))
        clipPath.addLine(to: CGPoint(x: 48.2, y: 146.22))
        clipPath.addCurve(to: CGPoint(x: 96.87, y: 182.79), controlPoint1: CGPoint(x: 81.5, y: 146.35), controlPoint2: CGPoint(x: 96.72, y: 182.43))
        clipPath.addLine(to: CGPoint(x: 96.87, y: 182.79))
        clipPath.addLine(to: CGPoint(x: 99.7, y: 189.73))
        clipPath.addLine(to: CGPoint(x: 102, y: 182.59))
        clipPath.addCurve(to: CGPoint(x: 151.67, y: 146.22), controlPoint1: CGPoint(x: 102.11, y: 182.22), controlPoint2: CGPoint(x: 114.1, y: 146.22))
        clipPath.addLine(to: CGPoint(x: 151.67, y: 146.22))
        clipPath.addLine(to: CGPoint(x: 151.83, y: 146.22))
        clipPath.addCurve(to: CGPoint(x: 174.84, y: 126.24), controlPoint1: CGPoint(x: 164.52, y: 146.06), controlPoint2: CGPoint(x: 174.84, y: 137.1))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 126.24))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 25.03))
        clipPath.addCurve(to: CGPoint(x: 151.79, y: 5.06), controlPoint1: CGPoint(x: 174.84, y: 14.02), controlPoint2: CGPoint(x: 164.5, y: 5.06))
        clipPath.addLine(to: CGPoint(x: 151.79, y: 5.06))
        clipPath.addLine(to: CGPoint(x: 48.21, y: 5.06))
        clipPath.close()
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 48.21, y: 5.06))
        bezierPath.addCurve(to: CGPoint(x: 25.16, y: 25.03), controlPoint1: CGPoint(x: 35.5, y: 5.06), controlPoint2: CGPoint(x: 25.16, y: 14.02))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 25.03))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 126.24))
        bezierPath.addCurve(to: CGPoint(x: 48.04, y: 146.21), controlPoint1: CGPoint(x: 25.16, y: 136.8), controlPoint2: CGPoint(x: 34.99, y: 145.38))
        bezierPath.addLine(to: CGPoint(x: 48.04, y: 146.21))
        bezierPath.addLine(to: CGPoint(x: 48.2, y: 146.22))
        bezierPath.addCurve(to: CGPoint(x: 96.87, y: 182.79), controlPoint1: CGPoint(x: 81.5, y: 146.35), controlPoint2: CGPoint(x: 96.72, y: 182.43))
        bezierPath.addLine(to: CGPoint(x: 96.87, y: 182.79))
        bezierPath.addLine(to: CGPoint(x: 99.7, y: 189.73))
        bezierPath.addLine(to: CGPoint(x: 102, y: 182.59))
        bezierPath.addCurve(to: CGPoint(x: 151.67, y: 146.22), controlPoint1: CGPoint(x: 102.11, y: 182.22), controlPoint2: CGPoint(x: 114.1, y: 146.22))
        bezierPath.addLine(to: CGPoint(x: 151.67, y: 146.22))
        bezierPath.addLine(to: CGPoint(x: 151.83, y: 146.22))
        bezierPath.addCurve(to: CGPoint(x: 174.84, y: 126.24), controlPoint1: CGPoint(x: 164.52, y: 146.06), controlPoint2: CGPoint(x: 174.84, y: 137.1))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 126.24))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 25.03))
        bezierPath.addCurve(to: CGPoint(x: 151.79, y: 5.06), controlPoint1: CGPoint(x: 174.84, y: 14.02), controlPoint2: CGPoint(x: 164.5, y: 5.06))
        bezierPath.addLine(to: CGPoint(x: 151.79, y: 5.06))
        bezierPath.addLine(to: CGPoint(x: 48.21, y: 5.06))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(gradient,
            start: CGPoint(x: 100, y: 189.73),
            end: CGPoint(x: 100, y: 5.06),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 2.33))
        bezier3Path.addLine(to: CGPoint(x: 48.21, y: 2.33))
        bezier3Path.addCurve(to: CGPoint(x: 22.43, y: 25.03), controlPoint1: CGPoint(x: 33.99, y: 2.33), controlPoint2: CGPoint(x: 22.43, y: 12.51))
        bezier3Path.addLine(to: CGPoint(x: 22.43, y: 126.24))
        bezier3Path.addCurve(to: CGPoint(x: 47.86, y: 148.94), controlPoint1: CGPoint(x: 22.43, y: 138.26), controlPoint2: CGPoint(x: 33.36, y: 148.02))
        bezier3Path.addLine(to: CGPoint(x: 48.02, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 48.19, y: 148.95))
        bezier3Path.addCurve(to: CGPoint(x: 94.34, y: 183.82), controlPoint1: CGPoint(x: 79.76, y: 149.07), controlPoint2: CGPoint(x: 94.19, y: 183.48))
        bezier3Path.addLine(to: CGPoint(x: 100.02, y: 197.71))
        bezier3Path.addLine(to: CGPoint(x: 104.6, y: 183.42))
        bezier3Path.addCurve(to: CGPoint(x: 114.95, y: 165.85), controlPoint1: CGPoint(x: 104.62, y: 183.35), controlPoint2: CGPoint(x: 107.57, y: 174.49))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 148.95), controlPoint1: CGPoint(x: 124.54, y: 154.64), controlPoint2: CGPoint(x: 136.89, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.78, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.82, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.86, y: 148.95))
        bezier3Path.addCurve(to: CGPoint(x: 177.57, y: 126.24), controlPoint1: CGPoint(x: 166.04, y: 148.77), controlPoint2: CGPoint(x: 177.57, y: 138.59))
        bezier3Path.addLine(to: CGPoint(x: 177.57, y: 25.03))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 2.33), controlPoint1: CGPoint(x: 177.57, y: 12.51), controlPoint2: CGPoint(x: 166.01, y: 2.33))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 7.79))
        bezier3Path.addCurve(to: CGPoint(x: 172.11, y: 25.03), controlPoint1: CGPoint(x: 163.01, y: 7.79), controlPoint2: CGPoint(x: 172.11, y: 15.51))
        bezier3Path.addLine(to: CGPoint(x: 172.11, y: 126.24))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 143.49), controlPoint1: CGPoint(x: 172.11, y: 135.77), controlPoint2: CGPoint(x: 162.65, y: 143.35))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 143.49), controlPoint1: CGPoint(x: 151.75, y: 143.49), controlPoint2: CGPoint(x: 151.71, y: 143.49))
        bezier3Path.addCurve(to: CGPoint(x: 99.39, y: 181.75), controlPoint1: CGPoint(x: 111.67, y: 143.48), controlPoint2: CGPoint(x: 99.39, y: 181.75))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 143.49), controlPoint1: CGPoint(x: 99.39, y: 181.75), controlPoint2: CGPoint(x: 83.79, y: 143.62))
        bezier3Path.addCurve(to: CGPoint(x: 27.89, y: 126.24), controlPoint1: CGPoint(x: 37.14, y: 142.78), controlPoint2: CGPoint(x: 27.89, y: 135.77))
        bezier3Path.addLine(to: CGPoint(x: 27.89, y: 25.03))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 7.79), controlPoint1: CGPoint(x: 27.89, y: 15.51), controlPoint2: CGPoint(x: 36.99, y: 7.79))
        bezier3Path.addLine(to: CGPoint(x: 151.79, y: 7.79))
        bezier3Path.close()
        fillColor2.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 134.01, y: 25.75))
        bezier4Path.addLine(to: CGPoint(x: 127.29, y: 25.75))
        bezier4Path.addLine(to: CGPoint(x: 127.29, y: 33.71))
        bezier4Path.addLine(to: CGPoint(x: 127.88, y: 33.71))
        bezier4Path.addCurve(to: CGPoint(x: 141.04, y: 46.81), controlPoint1: CGPoint(x: 135.15, y: 33.71), controlPoint2: CGPoint(x: 141.04, y: 39.58))
        bezier4Path.addLine(to: CGPoint(x: 141.04, y: 116.57))
        bezier4Path.addCurve(to: CGPoint(x: 127.88, y: 129.67), controlPoint1: CGPoint(x: 141.04, y: 123.8), controlPoint2: CGPoint(x: 135.15, y: 129.67))
        bezier4Path.addLine(to: CGPoint(x: 73.9, y: 129.67))
        bezier4Path.addCurve(to: CGPoint(x: 60.74, y: 116.57), controlPoint1: CGPoint(x: 66.64, y: 129.67), controlPoint2: CGPoint(x: 60.74, y: 123.8))
        bezier4Path.addLine(to: CGPoint(x: 60.74, y: 46.81))
        bezier4Path.addCurve(to: CGPoint(x: 73.9, y: 33.71), controlPoint1: CGPoint(x: 60.74, y: 39.58), controlPoint2: CGPoint(x: 66.64, y: 33.71))
        bezier4Path.addLine(to: CGPoint(x: 75.19, y: 33.71))
        bezier4Path.addLine(to: CGPoint(x: 75.19, y: 25.75))
        bezier4Path.addLine(to: CGPoint(x: 67.77, y: 25.75))
        bezier4Path.addCurve(to: CGPoint(x: 54.67, y: 38.85), controlPoint1: CGPoint(x: 60.53, y: 25.75), controlPoint2: CGPoint(x: 54.67, y: 31.61))
        bezier4Path.addLine(to: CGPoint(x: 54.67, y: 123.58))
        bezier4Path.addCurve(to: CGPoint(x: 67.77, y: 136.68), controlPoint1: CGPoint(x: 54.67, y: 130.82), controlPoint2: CGPoint(x: 60.53, y: 136.68))
        bezier4Path.addLine(to: CGPoint(x: 134.01, y: 136.68))
        bezier4Path.addCurve(to: CGPoint(x: 147.11, y: 123.58), controlPoint1: CGPoint(x: 141.25, y: 136.68), controlPoint2: CGPoint(x: 147.11, y: 130.82))
        bezier4Path.addLine(to: CGPoint(x: 147.11, y: 38.85))
        bezier4Path.addCurve(to: CGPoint(x: 134.01, y: 25.75), controlPoint1: CGPoint(x: 147.11, y: 31.61), controlPoint2: CGPoint(x: 141.25, y: 25.75))
        bezier4Path.close()
        fillColor18.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 116.02, y: 36.25))
        bezier5Path.addCurve(to: CGPoint(x: 113.18, y: 40.16), controlPoint1: CGPoint(x: 116.02, y: 38.41), controlPoint2: CGPoint(x: 114.75, y: 40.16))
        bezier5Path.addLine(to: CGPoint(x: 90.39, y: 40.16))
        bezier5Path.addCurve(to: CGPoint(x: 87.55, y: 36.25), controlPoint1: CGPoint(x: 88.82, y: 40.16), controlPoint2: CGPoint(x: 87.55, y: 38.41))
        bezier5Path.addLine(to: CGPoint(x: 87.55, y: 27.57))
        bezier5Path.addCurve(to: CGPoint(x: 90.39, y: 23.66), controlPoint1: CGPoint(x: 87.55, y: 25.41), controlPoint2: CGPoint(x: 88.82, y: 23.66))
        bezier5Path.addLine(to: CGPoint(x: 113.18, y: 23.66))
        bezier5Path.addCurve(to: CGPoint(x: 116.02, y: 27.57), controlPoint1: CGPoint(x: 114.75, y: 23.66), controlPoint2: CGPoint(x: 116.02, y: 25.41))
        bezier5Path.addLine(to: CGPoint(x: 116.02, y: 36.25))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 119.32, y: 19.22))
        bezier5Path.addLine(to: CGPoint(x: 84.25, y: 19.22))
        bezier5Path.addCurve(to: CGPoint(x: 79.88, y: 25.24), controlPoint1: CGPoint(x: 81.84, y: 19.22), controlPoint2: CGPoint(x: 79.88, y: 21.91))
        bezier5Path.addLine(to: CGPoint(x: 79.88, y: 38.58))
        bezier5Path.addCurve(to: CGPoint(x: 84.25, y: 44.6), controlPoint1: CGPoint(x: 79.88, y: 41.91), controlPoint2: CGPoint(x: 81.84, y: 44.6))
        bezier5Path.addLine(to: CGPoint(x: 119.32, y: 44.6))
        bezier5Path.addCurve(to: CGPoint(x: 123.69, y: 38.58), controlPoint1: CGPoint(x: 121.73, y: 44.6), controlPoint2: CGPoint(x: 123.69, y: 41.91))
        bezier5Path.addLine(to: CGPoint(x: 123.69, y: 25.24))
        bezier5Path.addCurve(to: CGPoint(x: 119.32, y: 19.22), controlPoint1: CGPoint(x: 123.69, y: 21.91), controlPoint2: CGPoint(x: 121.73, y: 19.22))
        bezier5Path.close()
        fillColor18.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 137.17, y: 91.3))
        bezier6Path.addCurve(to: CGPoint(x: 125.77, y: 85.5), controlPoint1: CGPoint(x: 136.16, y: 90.73), controlPoint2: CGPoint(x: 130.25, y: 86.86))
        bezier6Path.addLine(to: CGPoint(x: 125.77, y: 79.61))
        bezier6Path.addCurve(to: CGPoint(x: 128.01, y: 76.15), controlPoint1: CGPoint(x: 128.01, y: 78.9), controlPoint2: CGPoint(x: 128.01, y: 77.81))
        bezier6Path.addLine(to: CGPoint(x: 128.01, y: 72.16))
        bezier6Path.addCurve(to: CGPoint(x: 121.29, y: 65.15), controlPoint1: CGPoint(x: 128.01, y: 68.3), controlPoint2: CGPoint(x: 125.97, y: 65.15))
        bezier6Path.addCurve(to: CGPoint(x: 114.58, y: 72.16), controlPoint1: CGPoint(x: 116.62, y: 65.15), controlPoint2: CGPoint(x: 114.58, y: 68.3))
        bezier6Path.addLine(to: CGPoint(x: 114.58, y: 76.15))
        bezier6Path.addCurve(to: CGPoint(x: 116.82, y: 79.63), controlPoint1: CGPoint(x: 114.58, y: 77.83), controlPoint2: CGPoint(x: 114.58, y: 78.92))
        bezier6Path.addLine(to: CGPoint(x: 116.82, y: 85.5))
        bezier6Path.addCurve(to: CGPoint(x: 112.73, y: 87.18), controlPoint1: CGPoint(x: 115.52, y: 85.89), controlPoint2: CGPoint(x: 114.11, y: 86.5))
        bezier6Path.addCurve(to: CGPoint(x: 124.39, y: 93.58), controlPoint1: CGPoint(x: 117.01, y: 89.31), controlPoint2: CGPoint(x: 122.13, y: 92.28))
        bezier6Path.addLine(to: CGPoint(x: 125.2, y: 94.05))
        bezier6Path.addCurve(to: CGPoint(x: 128.88, y: 98.74), controlPoint1: CGPoint(x: 127.47, y: 95.34), controlPoint2: CGPoint(x: 128.47, y: 96.9))
        bezier6Path.addLine(to: CGPoint(x: 138.79, y: 98.74))
        bezier6Path.addCurve(to: CGPoint(x: 139.21, y: 98.22), controlPoint1: CGPoint(x: 139.02, y: 98.74), controlPoint2: CGPoint(x: 139.21, y: 98.44))
        bezier6Path.addLine(to: CGPoint(x: 139.21, y: 94.32))
        bezier6Path.addCurve(to: CGPoint(x: 137.17, y: 91.3), controlPoint1: CGPoint(x: 139.21, y: 92.68), controlPoint2: CGPoint(x: 138.41, y: 92.01))
        bezier6Path.close()
        fillColor18.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: 63.05, y: 94.05))
        bezier7Path.addLine(to: CGPoint(x: 63.05, y: 97.94))
        bezier7Path.addCurve(to: CGPoint(x: 63.47, y: 98.47), controlPoint1: CGPoint(x: 63.05, y: 98.17), controlPoint2: CGPoint(x: 63.24, y: 98.47))
        bezier7Path.addLine(to: CGPoint(x: 73.39, y: 98.47))
        bezier7Path.addCurve(to: CGPoint(x: 77.07, y: 93.77), controlPoint1: CGPoint(x: 73.79, y: 96.63), controlPoint2: CGPoint(x: 74.79, y: 95.07))
        bezier7Path.addLine(to: CGPoint(x: 77.87, y: 93.31))
        bezier7Path.addCurve(to: CGPoint(x: 89.54, y: 86.9), controlPoint1: CGPoint(x: 80.13, y: 92), controlPoint2: CGPoint(x: 85.25, y: 89.04))
        bezier7Path.addCurve(to: CGPoint(x: 85.45, y: 85.23), controlPoint1: CGPoint(x: 88.16, y: 86.23), controlPoint2: CGPoint(x: 86.75, y: 85.62))
        bezier7Path.addLine(to: CGPoint(x: 85.45, y: 79.36))
        bezier7Path.addCurve(to: CGPoint(x: 87.69, y: 75.88), controlPoint1: CGPoint(x: 87.69, y: 78.65), controlPoint2: CGPoint(x: 87.69, y: 77.55))
        bezier7Path.addLine(to: CGPoint(x: 87.69, y: 71.89))
        bezier7Path.addCurve(to: CGPoint(x: 80.97, y: 64.88), controlPoint1: CGPoint(x: 87.69, y: 68.03), controlPoint2: CGPoint(x: 85.64, y: 64.88))
        bezier7Path.addCurve(to: CGPoint(x: 74.25, y: 71.89), controlPoint1: CGPoint(x: 76.3, y: 64.88), controlPoint2: CGPoint(x: 74.25, y: 68.03))
        bezier7Path.addLine(to: CGPoint(x: 74.25, y: 75.88))
        bezier7Path.addCurve(to: CGPoint(x: 76.49, y: 79.34), controlPoint1: CGPoint(x: 74.25, y: 77.54), controlPoint2: CGPoint(x: 74.25, y: 78.63))
        bezier7Path.addLine(to: CGPoint(x: 76.49, y: 85.23))
        bezier7Path.addCurve(to: CGPoint(x: 65.1, y: 91.03), controlPoint1: CGPoint(x: 72.01, y: 86.59), controlPoint2: CGPoint(x: 66.1, y: 90.46))
        bezier7Path.addCurve(to: CGPoint(x: 63.05, y: 94.05), controlPoint1: CGPoint(x: 63.85, y: 91.74), controlPoint2: CGPoint(x: 63.05, y: 92.41))
        bezier7Path.close()
        fillColor18.setFill()
        bezier7Path.fill()


        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: 126.78, y: 100.31))
        bezier8Path.addLine(to: CGPoint(x: 126.78, y: 105.91))
        bezier8Path.addCurve(to: CGPoint(x: 126.18, y: 106.66), controlPoint1: CGPoint(x: 126.78, y: 106.23), controlPoint2: CGPoint(x: 126.51, y: 106.66))
        bezier8Path.addLine(to: CGPoint(x: 75.88, y: 106.66))
        bezier8Path.addCurve(to: CGPoint(x: 75.28, y: 105.91), controlPoint1: CGPoint(x: 75.55, y: 106.66), controlPoint2: CGPoint(x: 75.28, y: 106.23))
        bezier8Path.addLine(to: CGPoint(x: 75.28, y: 100.31))
        bezier8Path.addCurve(to: CGPoint(x: 77.52, y: 95.96), controlPoint1: CGPoint(x: 75.28, y: 97.95), controlPoint2: CGPoint(x: 75.72, y: 96.98))
        bezier8Path.addCurve(to: CGPoint(x: 93.19, y: 87.63), controlPoint1: CGPoint(x: 78.96, y: 95.14), controlPoint2: CGPoint(x: 88.64, y: 89.58))
        bezier8Path.addLine(to: CGPoint(x: 93.19, y: 79.19))
        bezier8Path.addCurve(to: CGPoint(x: 90.95, y: 74.19), controlPoint1: CGPoint(x: 91.79, y: 78.17), controlPoint2: CGPoint(x: 90.95, y: 76.6))
        bezier8Path.addLine(to: CGPoint(x: 90.95, y: 67.51))
        bezier8Path.addCurve(to: CGPoint(x: 101.03, y: 57.43), controlPoint1: CGPoint(x: 90.95, y: 61.96), controlPoint2: CGPoint(x: 94.31, y: 57.43))
        bezier8Path.addCurve(to: CGPoint(x: 111.11, y: 67.51), controlPoint1: CGPoint(x: 107.75, y: 57.43), controlPoint2: CGPoint(x: 111.11, y: 61.96))
        bezier8Path.addLine(to: CGPoint(x: 111.11, y: 74.19))
        bezier8Path.addCurve(to: CGPoint(x: 108.87, y: 79.17), controlPoint1: CGPoint(x: 111.11, y: 76.57), controlPoint2: CGPoint(x: 110.26, y: 78.15))
        bezier8Path.addLine(to: CGPoint(x: 108.87, y: 87.63))
        bezier8Path.addCurve(to: CGPoint(x: 124.54, y: 95.96), controlPoint1: CGPoint(x: 113.7, y: 89.58), controlPoint2: CGPoint(x: 123.1, y: 95.14))
        bezier8Path.addCurve(to: CGPoint(x: 126.78, y: 100.31), controlPoint1: CGPoint(x: 126.33, y: 96.98), controlPoint2: CGPoint(x: 126.78, y: 97.95))
        bezier8Path.close()
        fillColor18.setFill()
        bezier8Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawMapMarkerADMINISTRATIVECanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 200, resizedFrame.height / 200)


        //// Color Declarations
        let gradientColor = UIColor(red: 0.268, green: 0.469, blue: 0.741, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.057, green: 0.113, blue: 0.227, alpha: 1.000)
        let fillColor2 = UIColor(red: 0.181, green: 0.706, blue: 0.929, alpha: 1.000)
        let fillColor18 = UIColor(red: 0.996, green: 0.996, blue: 0.996, alpha: 0.750)

        //// Gradient Declarations
        let gradient = CGGradient(colorsSpace: nil, colors: [gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 1])!

        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath()
        clipPath.move(to: CGPoint(x: 48.21, y: 5.06))
        clipPath.addCurve(to: CGPoint(x: 25.16, y: 25.03), controlPoint1: CGPoint(x: 35.5, y: 5.06), controlPoint2: CGPoint(x: 25.16, y: 14.02))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 25.03))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 126.24))
        clipPath.addCurve(to: CGPoint(x: 48.04, y: 146.21), controlPoint1: CGPoint(x: 25.16, y: 136.8), controlPoint2: CGPoint(x: 34.99, y: 145.38))
        clipPath.addLine(to: CGPoint(x: 48.04, y: 146.21))
        clipPath.addLine(to: CGPoint(x: 48.2, y: 146.22))
        clipPath.addCurve(to: CGPoint(x: 96.87, y: 182.79), controlPoint1: CGPoint(x: 81.5, y: 146.35), controlPoint2: CGPoint(x: 96.72, y: 182.43))
        clipPath.addLine(to: CGPoint(x: 96.87, y: 182.79))
        clipPath.addLine(to: CGPoint(x: 99.7, y: 189.73))
        clipPath.addLine(to: CGPoint(x: 102, y: 182.59))
        clipPath.addCurve(to: CGPoint(x: 151.67, y: 146.22), controlPoint1: CGPoint(x: 102.11, y: 182.22), controlPoint2: CGPoint(x: 114.1, y: 146.22))
        clipPath.addLine(to: CGPoint(x: 151.67, y: 146.22))
        clipPath.addLine(to: CGPoint(x: 151.83, y: 146.22))
        clipPath.addCurve(to: CGPoint(x: 174.84, y: 126.24), controlPoint1: CGPoint(x: 164.52, y: 146.06), controlPoint2: CGPoint(x: 174.84, y: 137.1))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 126.24))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 25.03))
        clipPath.addCurve(to: CGPoint(x: 151.79, y: 5.06), controlPoint1: CGPoint(x: 174.84, y: 14.02), controlPoint2: CGPoint(x: 164.5, y: 5.06))
        clipPath.addLine(to: CGPoint(x: 151.79, y: 5.06))
        clipPath.addLine(to: CGPoint(x: 48.21, y: 5.06))
        clipPath.close()
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 48.21, y: 5.06))
        bezierPath.addCurve(to: CGPoint(x: 25.16, y: 25.03), controlPoint1: CGPoint(x: 35.5, y: 5.06), controlPoint2: CGPoint(x: 25.16, y: 14.02))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 25.03))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 126.24))
        bezierPath.addCurve(to: CGPoint(x: 48.04, y: 146.21), controlPoint1: CGPoint(x: 25.16, y: 136.8), controlPoint2: CGPoint(x: 34.99, y: 145.38))
        bezierPath.addLine(to: CGPoint(x: 48.04, y: 146.21))
        bezierPath.addLine(to: CGPoint(x: 48.2, y: 146.22))
        bezierPath.addCurve(to: CGPoint(x: 96.87, y: 182.79), controlPoint1: CGPoint(x: 81.5, y: 146.35), controlPoint2: CGPoint(x: 96.72, y: 182.43))
        bezierPath.addLine(to: CGPoint(x: 96.87, y: 182.79))
        bezierPath.addLine(to: CGPoint(x: 99.7, y: 189.73))
        bezierPath.addLine(to: CGPoint(x: 102, y: 182.59))
        bezierPath.addCurve(to: CGPoint(x: 151.67, y: 146.22), controlPoint1: CGPoint(x: 102.11, y: 182.22), controlPoint2: CGPoint(x: 114.1, y: 146.22))
        bezierPath.addLine(to: CGPoint(x: 151.67, y: 146.22))
        bezierPath.addLine(to: CGPoint(x: 151.83, y: 146.22))
        bezierPath.addCurve(to: CGPoint(x: 174.84, y: 126.24), controlPoint1: CGPoint(x: 164.52, y: 146.06), controlPoint2: CGPoint(x: 174.84, y: 137.1))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 126.24))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 25.03))
        bezierPath.addCurve(to: CGPoint(x: 151.79, y: 5.06), controlPoint1: CGPoint(x: 174.84, y: 14.02), controlPoint2: CGPoint(x: 164.5, y: 5.06))
        bezierPath.addLine(to: CGPoint(x: 151.79, y: 5.06))
        bezierPath.addLine(to: CGPoint(x: 48.21, y: 5.06))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(gradient,
            start: CGPoint(x: 100, y: 189.73),
            end: CGPoint(x: 100, y: 5.06),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 2.33))
        bezier3Path.addLine(to: CGPoint(x: 48.21, y: 2.33))
        bezier3Path.addCurve(to: CGPoint(x: 22.43, y: 25.03), controlPoint1: CGPoint(x: 33.99, y: 2.33), controlPoint2: CGPoint(x: 22.43, y: 12.51))
        bezier3Path.addLine(to: CGPoint(x: 22.43, y: 126.24))
        bezier3Path.addCurve(to: CGPoint(x: 47.86, y: 148.94), controlPoint1: CGPoint(x: 22.43, y: 138.26), controlPoint2: CGPoint(x: 33.36, y: 148.02))
        bezier3Path.addLine(to: CGPoint(x: 48.02, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 48.19, y: 148.95))
        bezier3Path.addCurve(to: CGPoint(x: 94.34, y: 183.82), controlPoint1: CGPoint(x: 79.76, y: 149.07), controlPoint2: CGPoint(x: 94.19, y: 183.48))
        bezier3Path.addLine(to: CGPoint(x: 100.02, y: 197.71))
        bezier3Path.addLine(to: CGPoint(x: 104.6, y: 183.42))
        bezier3Path.addCurve(to: CGPoint(x: 114.95, y: 165.85), controlPoint1: CGPoint(x: 104.62, y: 183.35), controlPoint2: CGPoint(x: 107.57, y: 174.49))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 148.95), controlPoint1: CGPoint(x: 124.54, y: 154.64), controlPoint2: CGPoint(x: 136.89, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.78, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.82, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.86, y: 148.95))
        bezier3Path.addCurve(to: CGPoint(x: 177.57, y: 126.24), controlPoint1: CGPoint(x: 166.04, y: 148.77), controlPoint2: CGPoint(x: 177.57, y: 138.59))
        bezier3Path.addLine(to: CGPoint(x: 177.57, y: 25.03))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 2.33), controlPoint1: CGPoint(x: 177.57, y: 12.51), controlPoint2: CGPoint(x: 166.01, y: 2.33))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 7.79))
        bezier3Path.addCurve(to: CGPoint(x: 172.11, y: 25.03), controlPoint1: CGPoint(x: 163.01, y: 7.79), controlPoint2: CGPoint(x: 172.11, y: 15.51))
        bezier3Path.addLine(to: CGPoint(x: 172.11, y: 126.24))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 143.49), controlPoint1: CGPoint(x: 172.11, y: 135.77), controlPoint2: CGPoint(x: 162.65, y: 143.35))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 143.49), controlPoint1: CGPoint(x: 151.75, y: 143.49), controlPoint2: CGPoint(x: 151.71, y: 143.49))
        bezier3Path.addCurve(to: CGPoint(x: 99.39, y: 181.75), controlPoint1: CGPoint(x: 111.67, y: 143.48), controlPoint2: CGPoint(x: 99.39, y: 181.75))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 143.49), controlPoint1: CGPoint(x: 99.39, y: 181.75), controlPoint2: CGPoint(x: 83.79, y: 143.62))
        bezier3Path.addCurve(to: CGPoint(x: 27.89, y: 126.24), controlPoint1: CGPoint(x: 37.14, y: 142.78), controlPoint2: CGPoint(x: 27.89, y: 135.77))
        bezier3Path.addLine(to: CGPoint(x: 27.89, y: 25.03))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 7.79), controlPoint1: CGPoint(x: 27.89, y: 15.51), controlPoint2: CGPoint(x: 36.99, y: 7.79))
        bezier3Path.addLine(to: CGPoint(x: 151.79, y: 7.79))
        bezier3Path.close()
        fillColor2.setFill()
        bezier3Path.fill()


        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 69.42, y: 65, width: 63.15, height: 6.4))
        fillColor18.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 69.42, y: 50.1, width: 63.15, height: 6.4))
        fillColor18.setFill()
        rectangle2Path.fill()


        //// Rectangle 3 Drawing
        let rectangle3Path = UIBezierPath(rect: CGRect(x: 69.42, y: 79.8, width: 63.15, height: 6.4))
        context.saveGState()
        context.setShadow(offset: CGSize(width: ButtonsForFJ092018.shadow.shadowOffset.width * resizedShadowScale, height: ButtonsForFJ092018.shadow.shadowOffset.height * resizedShadowScale), blur: ButtonsForFJ092018.shadow.shadowBlurRadius * resizedShadowScale, color: (ButtonsForFJ092018.shadow.shadowColor as! UIColor).cgColor)
        fillColor18.setFill()
        rectangle3Path.fill()
        context.restoreGState()



        //// Rectangle 4 Drawing
        let rectangle4Path = UIBezierPath(rect: CGRect(x: 69.42, y: 93.35, width: 63.15, height: 6.4))
        fillColor18.setFill()
        rectangle4Path.fill()


        //// Rectangle 5 Drawing
        let rectangle5Path = UIBezierPath(rect: CGRect(x: 69.42, y: 107.1, width: 63.15, height: 6.4))
        fillColor18.setFill()
        rectangle5Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 133.71, y: 25.66))
        bezier4Path.addLine(to: CGPoint(x: 127, y: 25.66))
        bezier4Path.addLine(to: CGPoint(x: 127, y: 33.6))
        bezier4Path.addLine(to: CGPoint(x: 127.59, y: 33.6))
        bezier4Path.addCurve(to: CGPoint(x: 140.71, y: 46.67), controlPoint1: CGPoint(x: 134.84, y: 33.6), controlPoint2: CGPoint(x: 140.71, y: 39.45))
        bezier4Path.addLine(to: CGPoint(x: 140.71, y: 116.24))
        bezier4Path.addCurve(to: CGPoint(x: 127.59, y: 129.31), controlPoint1: CGPoint(x: 140.71, y: 123.46), controlPoint2: CGPoint(x: 134.84, y: 129.31))
        bezier4Path.addLine(to: CGPoint(x: 73.75, y: 129.31))
        bezier4Path.addCurve(to: CGPoint(x: 60.62, y: 116.24), controlPoint1: CGPoint(x: 66.5, y: 129.31), controlPoint2: CGPoint(x: 60.62, y: 123.46))
        bezier4Path.addLine(to: CGPoint(x: 60.62, y: 46.67))
        bezier4Path.addCurve(to: CGPoint(x: 73.75, y: 33.6), controlPoint1: CGPoint(x: 60.62, y: 39.45), controlPoint2: CGPoint(x: 66.5, y: 33.6))
        bezier4Path.addLine(to: CGPoint(x: 75.03, y: 33.6))
        bezier4Path.addLine(to: CGPoint(x: 75.03, y: 25.66))
        bezier4Path.addLine(to: CGPoint(x: 67.63, y: 25.66))
        bezier4Path.addCurve(to: CGPoint(x: 54.56, y: 38.73), controlPoint1: CGPoint(x: 60.41, y: 25.66), controlPoint2: CGPoint(x: 54.56, y: 31.51))
        bezier4Path.addLine(to: CGPoint(x: 54.56, y: 123.24))
        bezier4Path.addCurve(to: CGPoint(x: 67.63, y: 136.31), controlPoint1: CGPoint(x: 54.56, y: 130.46), controlPoint2: CGPoint(x: 60.41, y: 136.31))
        bezier4Path.addLine(to: CGPoint(x: 133.71, y: 136.31))
        bezier4Path.addCurve(to: CGPoint(x: 146.77, y: 123.24), controlPoint1: CGPoint(x: 140.92, y: 136.31), controlPoint2: CGPoint(x: 146.77, y: 130.46))
        bezier4Path.addLine(to: CGPoint(x: 146.77, y: 38.73))
        bezier4Path.addCurve(to: CGPoint(x: 133.71, y: 25.66), controlPoint1: CGPoint(x: 146.77, y: 31.51), controlPoint2: CGPoint(x: 140.92, y: 25.66))
        bezier4Path.close()
        fillColor18.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 115.76, y: 36.13))
        bezier5Path.addCurve(to: CGPoint(x: 112.93, y: 40.04), controlPoint1: CGPoint(x: 115.76, y: 38.29), controlPoint2: CGPoint(x: 114.49, y: 40.04))
        bezier5Path.addLine(to: CGPoint(x: 90.19, y: 40.04))
        bezier5Path.addCurve(to: CGPoint(x: 87.36, y: 36.13), controlPoint1: CGPoint(x: 88.63, y: 40.04), controlPoint2: CGPoint(x: 87.36, y: 38.29))
        bezier5Path.addLine(to: CGPoint(x: 87.36, y: 27.48))
        bezier5Path.addCurve(to: CGPoint(x: 90.19, y: 23.58), controlPoint1: CGPoint(x: 87.36, y: 25.32), controlPoint2: CGPoint(x: 88.63, y: 23.58))
        bezier5Path.addLine(to: CGPoint(x: 112.93, y: 23.58))
        bezier5Path.addCurve(to: CGPoint(x: 115.76, y: 27.48), controlPoint1: CGPoint(x: 114.49, y: 23.58), controlPoint2: CGPoint(x: 115.76, y: 25.32))
        bezier5Path.addLine(to: CGPoint(x: 115.76, y: 36.13))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 119.05, y: 19.15))
        bezier5Path.addLine(to: CGPoint(x: 84.07, y: 19.15))
        bezier5Path.addCurve(to: CGPoint(x: 79.71, y: 25.15), controlPoint1: CGPoint(x: 81.66, y: 19.15), controlPoint2: CGPoint(x: 79.71, y: 21.83))
        bezier5Path.addLine(to: CGPoint(x: 79.71, y: 38.46))
        bezier5Path.addCurve(to: CGPoint(x: 84.07, y: 44.47), controlPoint1: CGPoint(x: 79.71, y: 41.78), controlPoint2: CGPoint(x: 81.66, y: 44.47))
        bezier5Path.addLine(to: CGPoint(x: 119.05, y: 44.47))
        bezier5Path.addCurve(to: CGPoint(x: 123.41, y: 38.46), controlPoint1: CGPoint(x: 121.45, y: 44.47), controlPoint2: CGPoint(x: 123.41, y: 41.78))
        bezier5Path.addLine(to: CGPoint(x: 123.41, y: 25.15))
        bezier5Path.addCurve(to: CGPoint(x: 119.05, y: 19.15), controlPoint1: CGPoint(x: 123.41, y: 21.83), controlPoint2: CGPoint(x: 121.45, y: 19.15))
        bezier5Path.close()
        fillColor18.setFill()
        bezier5Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawMapMarkerGENERALCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let gradientColor = UIColor(red: 0.268, green: 0.469, blue: 0.741, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.057, green: 0.113, blue: 0.227, alpha: 1.000)
        let fillColor2 = UIColor(red: 0.181, green: 0.706, blue: 0.929, alpha: 1.000)
        let fillColor18 = UIColor(red: 0.996, green: 0.996, blue: 0.996, alpha: 0.750)

        //// Gradient Declarations
        let gradient = CGGradient(colorsSpace: nil, colors: [gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 1])!

        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath()
        clipPath.move(to: CGPoint(x: 48.21, y: 5.06))
        clipPath.addCurve(to: CGPoint(x: 25.16, y: 25.03), controlPoint1: CGPoint(x: 35.5, y: 5.06), controlPoint2: CGPoint(x: 25.16, y: 14.02))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 25.03))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 126.24))
        clipPath.addCurve(to: CGPoint(x: 48.04, y: 146.21), controlPoint1: CGPoint(x: 25.16, y: 136.8), controlPoint2: CGPoint(x: 34.99, y: 145.38))
        clipPath.addLine(to: CGPoint(x: 48.04, y: 146.21))
        clipPath.addLine(to: CGPoint(x: 48.2, y: 146.22))
        clipPath.addCurve(to: CGPoint(x: 96.87, y: 182.79), controlPoint1: CGPoint(x: 81.5, y: 146.35), controlPoint2: CGPoint(x: 96.72, y: 182.43))
        clipPath.addLine(to: CGPoint(x: 96.87, y: 182.79))
        clipPath.addLine(to: CGPoint(x: 99.7, y: 189.73))
        clipPath.addLine(to: CGPoint(x: 102, y: 182.59))
        clipPath.addCurve(to: CGPoint(x: 151.67, y: 146.22), controlPoint1: CGPoint(x: 102.11, y: 182.22), controlPoint2: CGPoint(x: 114.1, y: 146.22))
        clipPath.addLine(to: CGPoint(x: 151.67, y: 146.22))
        clipPath.addLine(to: CGPoint(x: 151.83, y: 146.22))
        clipPath.addCurve(to: CGPoint(x: 174.84, y: 126.24), controlPoint1: CGPoint(x: 164.52, y: 146.06), controlPoint2: CGPoint(x: 174.84, y: 137.1))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 126.24))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 25.03))
        clipPath.addCurve(to: CGPoint(x: 151.79, y: 5.06), controlPoint1: CGPoint(x: 174.84, y: 14.02), controlPoint2: CGPoint(x: 164.5, y: 5.06))
        clipPath.addLine(to: CGPoint(x: 151.79, y: 5.06))
        clipPath.addLine(to: CGPoint(x: 48.21, y: 5.06))
        clipPath.close()
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 48.21, y: 5.06))
        bezierPath.addCurve(to: CGPoint(x: 25.16, y: 25.03), controlPoint1: CGPoint(x: 35.5, y: 5.06), controlPoint2: CGPoint(x: 25.16, y: 14.02))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 25.03))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 126.24))
        bezierPath.addCurve(to: CGPoint(x: 48.04, y: 146.21), controlPoint1: CGPoint(x: 25.16, y: 136.8), controlPoint2: CGPoint(x: 34.99, y: 145.38))
        bezierPath.addLine(to: CGPoint(x: 48.04, y: 146.21))
        bezierPath.addLine(to: CGPoint(x: 48.2, y: 146.22))
        bezierPath.addCurve(to: CGPoint(x: 96.87, y: 182.79), controlPoint1: CGPoint(x: 81.5, y: 146.35), controlPoint2: CGPoint(x: 96.72, y: 182.43))
        bezierPath.addLine(to: CGPoint(x: 96.87, y: 182.79))
        bezierPath.addLine(to: CGPoint(x: 99.7, y: 189.73))
        bezierPath.addLine(to: CGPoint(x: 102, y: 182.59))
        bezierPath.addCurve(to: CGPoint(x: 151.67, y: 146.22), controlPoint1: CGPoint(x: 102.11, y: 182.22), controlPoint2: CGPoint(x: 114.1, y: 146.22))
        bezierPath.addLine(to: CGPoint(x: 151.67, y: 146.22))
        bezierPath.addLine(to: CGPoint(x: 151.83, y: 146.22))
        bezierPath.addCurve(to: CGPoint(x: 174.84, y: 126.24), controlPoint1: CGPoint(x: 164.52, y: 146.06), controlPoint2: CGPoint(x: 174.84, y: 137.1))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 126.24))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 25.03))
        bezierPath.addCurve(to: CGPoint(x: 151.79, y: 5.06), controlPoint1: CGPoint(x: 174.84, y: 14.02), controlPoint2: CGPoint(x: 164.5, y: 5.06))
        bezierPath.addLine(to: CGPoint(x: 151.79, y: 5.06))
        bezierPath.addLine(to: CGPoint(x: 48.21, y: 5.06))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(gradient,
            start: CGPoint(x: 100, y: 189.73),
            end: CGPoint(x: 100, y: 5.06),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 2.33))
        bezier3Path.addLine(to: CGPoint(x: 48.21, y: 2.33))
        bezier3Path.addCurve(to: CGPoint(x: 22.43, y: 25.03), controlPoint1: CGPoint(x: 33.99, y: 2.33), controlPoint2: CGPoint(x: 22.43, y: 12.51))
        bezier3Path.addLine(to: CGPoint(x: 22.43, y: 126.24))
        bezier3Path.addCurve(to: CGPoint(x: 47.86, y: 148.94), controlPoint1: CGPoint(x: 22.43, y: 138.26), controlPoint2: CGPoint(x: 33.36, y: 148.02))
        bezier3Path.addLine(to: CGPoint(x: 48.02, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 48.19, y: 148.95))
        bezier3Path.addCurve(to: CGPoint(x: 94.34, y: 183.82), controlPoint1: CGPoint(x: 79.76, y: 149.07), controlPoint2: CGPoint(x: 94.19, y: 183.48))
        bezier3Path.addLine(to: CGPoint(x: 100.02, y: 197.71))
        bezier3Path.addLine(to: CGPoint(x: 104.6, y: 183.42))
        bezier3Path.addCurve(to: CGPoint(x: 114.95, y: 165.85), controlPoint1: CGPoint(x: 104.62, y: 183.35), controlPoint2: CGPoint(x: 107.57, y: 174.49))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 148.95), controlPoint1: CGPoint(x: 124.54, y: 154.64), controlPoint2: CGPoint(x: 136.89, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.78, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.82, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.86, y: 148.95))
        bezier3Path.addCurve(to: CGPoint(x: 177.57, y: 126.24), controlPoint1: CGPoint(x: 166.04, y: 148.77), controlPoint2: CGPoint(x: 177.57, y: 138.59))
        bezier3Path.addLine(to: CGPoint(x: 177.57, y: 25.03))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 2.33), controlPoint1: CGPoint(x: 177.57, y: 12.51), controlPoint2: CGPoint(x: 166.01, y: 2.33))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 7.79))
        bezier3Path.addCurve(to: CGPoint(x: 172.11, y: 25.03), controlPoint1: CGPoint(x: 163.01, y: 7.79), controlPoint2: CGPoint(x: 172.11, y: 15.51))
        bezier3Path.addLine(to: CGPoint(x: 172.11, y: 126.24))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 143.49), controlPoint1: CGPoint(x: 172.11, y: 135.77), controlPoint2: CGPoint(x: 162.65, y: 143.35))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 143.49), controlPoint1: CGPoint(x: 151.75, y: 143.49), controlPoint2: CGPoint(x: 151.71, y: 143.49))
        bezier3Path.addCurve(to: CGPoint(x: 99.39, y: 181.75), controlPoint1: CGPoint(x: 111.67, y: 143.48), controlPoint2: CGPoint(x: 99.39, y: 181.75))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 143.49), controlPoint1: CGPoint(x: 99.39, y: 181.75), controlPoint2: CGPoint(x: 83.79, y: 143.62))
        bezier3Path.addCurve(to: CGPoint(x: 27.89, y: 126.24), controlPoint1: CGPoint(x: 37.14, y: 142.78), controlPoint2: CGPoint(x: 27.89, y: 135.77))
        bezier3Path.addLine(to: CGPoint(x: 27.89, y: 25.03))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 7.79), controlPoint1: CGPoint(x: 27.89, y: 15.51), controlPoint2: CGPoint(x: 36.99, y: 7.79))
        bezier3Path.addLine(to: CGPoint(x: 151.79, y: 7.79))
        bezier3Path.close()
        fillColor2.setFill()
        bezier3Path.fill()


        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: 71.95, y: 56.05, width: 16.6, height: 16.6))
        fillColor18.setFill()
        ovalPath.fill()


        //// Oval 2 Drawing
        let oval2Path = UIBezierPath(ovalIn: CGRect(x: 70.95, y: 78.45, width: 16.6, height: 16.6))
        fillColor18.setFill()
        oval2Path.fill()


        //// Oval 3 Drawing
        let oval3Path = UIBezierPath(ovalIn: CGRect(x: 70.95, y: 100.65, width: 16.6, height: 16.6))
        fillColor18.setFill()
        oval3Path.fill()


        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 92.68, y: 61.15, width: 37.95, height: 6.4))
        fillColor18.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 92.68, y: 83.55, width: 37.95, height: 6.4))
        fillColor18.setFill()
        rectangle2Path.fill()


        //// Rectangle 3 Drawing
        let rectangle3Path = UIBezierPath(rect: CGRect(x: 92.68, y: 104.35, width: 37.95, height: 6.4))
        fillColor18.setFill()
        rectangle3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 134.82, y: 25.77))
        bezier4Path.addLine(to: CGPoint(x: 128.12, y: 25.77))
        bezier4Path.addLine(to: CGPoint(x: 128.12, y: 33.71))
        bezier4Path.addLine(to: CGPoint(x: 128.7, y: 33.71))
        bezier4Path.addCurve(to: CGPoint(x: 141.83, y: 46.78), controlPoint1: CGPoint(x: 135.95, y: 33.71), controlPoint2: CGPoint(x: 141.83, y: 39.56))
        bezier4Path.addLine(to: CGPoint(x: 141.83, y: 116.35))
        bezier4Path.addCurve(to: CGPoint(x: 128.7, y: 129.42), controlPoint1: CGPoint(x: 141.83, y: 123.57), controlPoint2: CGPoint(x: 135.95, y: 129.42))
        bezier4Path.addLine(to: CGPoint(x: 74.87, y: 129.42))
        bezier4Path.addCurve(to: CGPoint(x: 61.74, y: 116.35), controlPoint1: CGPoint(x: 67.62, y: 129.42), controlPoint2: CGPoint(x: 61.74, y: 123.57))
        bezier4Path.addLine(to: CGPoint(x: 61.74, y: 46.78))
        bezier4Path.addCurve(to: CGPoint(x: 74.87, y: 33.71), controlPoint1: CGPoint(x: 61.74, y: 39.56), controlPoint2: CGPoint(x: 67.62, y: 33.71))
        bezier4Path.addLine(to: CGPoint(x: 76.15, y: 33.71))
        bezier4Path.addLine(to: CGPoint(x: 76.15, y: 25.77))
        bezier4Path.addLine(to: CGPoint(x: 68.75, y: 25.77))
        bezier4Path.addCurve(to: CGPoint(x: 55.68, y: 38.84), controlPoint1: CGPoint(x: 61.53, y: 25.77), controlPoint2: CGPoint(x: 55.68, y: 31.62))
        bezier4Path.addLine(to: CGPoint(x: 55.68, y: 123.35))
        bezier4Path.addCurve(to: CGPoint(x: 68.75, y: 136.42), controlPoint1: CGPoint(x: 55.68, y: 130.57), controlPoint2: CGPoint(x: 61.53, y: 136.42))
        bezier4Path.addLine(to: CGPoint(x: 134.82, y: 136.42))
        bezier4Path.addCurve(to: CGPoint(x: 147.89, y: 123.35), controlPoint1: CGPoint(x: 142.04, y: 136.42), controlPoint2: CGPoint(x: 147.89, y: 130.57))
        bezier4Path.addLine(to: CGPoint(x: 147.89, y: 38.84))
        bezier4Path.addCurve(to: CGPoint(x: 134.82, y: 25.77), controlPoint1: CGPoint(x: 147.89, y: 31.62), controlPoint2: CGPoint(x: 142.04, y: 25.77))
        bezier4Path.close()
        fillColor18.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 116.88, y: 36.24))
        bezier5Path.addCurve(to: CGPoint(x: 114.05, y: 40.15), controlPoint1: CGPoint(x: 116.88, y: 38.4), controlPoint2: CGPoint(x: 115.61, y: 40.15))
        bezier5Path.addLine(to: CGPoint(x: 91.31, y: 40.15))
        bezier5Path.addCurve(to: CGPoint(x: 88.48, y: 36.24), controlPoint1: CGPoint(x: 89.74, y: 40.15), controlPoint2: CGPoint(x: 88.48, y: 38.4))
        bezier5Path.addLine(to: CGPoint(x: 88.48, y: 27.59))
        bezier5Path.addCurve(to: CGPoint(x: 91.31, y: 23.69), controlPoint1: CGPoint(x: 88.48, y: 25.43), controlPoint2: CGPoint(x: 89.74, y: 23.69))
        bezier5Path.addLine(to: CGPoint(x: 114.05, y: 23.69))
        bezier5Path.addCurve(to: CGPoint(x: 116.88, y: 27.59), controlPoint1: CGPoint(x: 115.61, y: 23.69), controlPoint2: CGPoint(x: 116.88, y: 25.43))
        bezier5Path.addLine(to: CGPoint(x: 116.88, y: 36.24))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 120.17, y: 19.26))
        bezier5Path.addLine(to: CGPoint(x: 85.19, y: 19.26))
        bezier5Path.addCurve(to: CGPoint(x: 80.83, y: 25.26), controlPoint1: CGPoint(x: 82.78, y: 19.26), controlPoint2: CGPoint(x: 80.83, y: 21.94))
        bezier5Path.addLine(to: CGPoint(x: 80.83, y: 38.57))
        bezier5Path.addCurve(to: CGPoint(x: 85.19, y: 44.58), controlPoint1: CGPoint(x: 80.83, y: 41.89), controlPoint2: CGPoint(x: 82.78, y: 44.58))
        bezier5Path.addLine(to: CGPoint(x: 120.17, y: 44.58))
        bezier5Path.addCurve(to: CGPoint(x: 124.52, y: 38.57), controlPoint1: CGPoint(x: 122.57, y: 44.58), controlPoint2: CGPoint(x: 124.52, y: 41.89))
        bezier5Path.addLine(to: CGPoint(x: 124.52, y: 25.26))
        bezier5Path.addCurve(to: CGPoint(x: 120.17, y: 19.26), controlPoint1: CGPoint(x: 124.52, y: 21.94), controlPoint2: CGPoint(x: 122.57, y: 19.26))
        bezier5Path.close()
        fillColor18.setFill()
        bezier5Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawMapMarkerFIRECanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let gradientColor = UIColor(red: 0.268, green: 0.469, blue: 0.741, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.057, green: 0.113, blue: 0.227, alpha: 1.000)
        let fillColor2 = UIColor(red: 0.181, green: 0.706, blue: 0.929, alpha: 1.000)
        let fillColor18 = UIColor(red: 0.996, green: 0.996, blue: 0.996, alpha: 0.750)

        //// Gradient Declarations
        let gradient = CGGradient(colorsSpace: nil, colors: [gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 1])!

        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath()
        clipPath.move(to: CGPoint(x: 48.21, y: 5.06))
        clipPath.addCurve(to: CGPoint(x: 25.16, y: 25.03), controlPoint1: CGPoint(x: 35.5, y: 5.06), controlPoint2: CGPoint(x: 25.16, y: 14.02))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 25.03))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 126.24))
        clipPath.addCurve(to: CGPoint(x: 48.04, y: 146.21), controlPoint1: CGPoint(x: 25.16, y: 136.8), controlPoint2: CGPoint(x: 34.99, y: 145.38))
        clipPath.addLine(to: CGPoint(x: 48.04, y: 146.21))
        clipPath.addLine(to: CGPoint(x: 48.2, y: 146.22))
        clipPath.addCurve(to: CGPoint(x: 96.87, y: 182.79), controlPoint1: CGPoint(x: 81.5, y: 146.35), controlPoint2: CGPoint(x: 96.72, y: 182.43))
        clipPath.addLine(to: CGPoint(x: 96.87, y: 182.79))
        clipPath.addLine(to: CGPoint(x: 99.7, y: 189.73))
        clipPath.addLine(to: CGPoint(x: 102, y: 182.59))
        clipPath.addCurve(to: CGPoint(x: 151.67, y: 146.22), controlPoint1: CGPoint(x: 102.11, y: 182.22), controlPoint2: CGPoint(x: 114.1, y: 146.22))
        clipPath.addLine(to: CGPoint(x: 151.67, y: 146.22))
        clipPath.addLine(to: CGPoint(x: 151.83, y: 146.22))
        clipPath.addCurve(to: CGPoint(x: 174.84, y: 126.24), controlPoint1: CGPoint(x: 164.52, y: 146.06), controlPoint2: CGPoint(x: 174.84, y: 137.1))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 126.24))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 25.03))
        clipPath.addCurve(to: CGPoint(x: 151.79, y: 5.06), controlPoint1: CGPoint(x: 174.84, y: 14.02), controlPoint2: CGPoint(x: 164.5, y: 5.06))
        clipPath.addLine(to: CGPoint(x: 151.79, y: 5.06))
        clipPath.addLine(to: CGPoint(x: 48.21, y: 5.06))
        clipPath.close()
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 48.21, y: 5.06))
        bezierPath.addCurve(to: CGPoint(x: 25.16, y: 25.03), controlPoint1: CGPoint(x: 35.5, y: 5.06), controlPoint2: CGPoint(x: 25.16, y: 14.02))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 25.03))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 126.24))
        bezierPath.addCurve(to: CGPoint(x: 48.04, y: 146.21), controlPoint1: CGPoint(x: 25.16, y: 136.8), controlPoint2: CGPoint(x: 34.99, y: 145.38))
        bezierPath.addLine(to: CGPoint(x: 48.04, y: 146.21))
        bezierPath.addLine(to: CGPoint(x: 48.2, y: 146.22))
        bezierPath.addCurve(to: CGPoint(x: 96.87, y: 182.79), controlPoint1: CGPoint(x: 81.5, y: 146.35), controlPoint2: CGPoint(x: 96.72, y: 182.43))
        bezierPath.addLine(to: CGPoint(x: 96.87, y: 182.79))
        bezierPath.addLine(to: CGPoint(x: 99.7, y: 189.73))
        bezierPath.addLine(to: CGPoint(x: 102, y: 182.59))
        bezierPath.addCurve(to: CGPoint(x: 151.67, y: 146.22), controlPoint1: CGPoint(x: 102.11, y: 182.22), controlPoint2: CGPoint(x: 114.1, y: 146.22))
        bezierPath.addLine(to: CGPoint(x: 151.67, y: 146.22))
        bezierPath.addLine(to: CGPoint(x: 151.83, y: 146.22))
        bezierPath.addCurve(to: CGPoint(x: 174.84, y: 126.24), controlPoint1: CGPoint(x: 164.52, y: 146.06), controlPoint2: CGPoint(x: 174.84, y: 137.1))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 126.24))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 25.03))
        bezierPath.addCurve(to: CGPoint(x: 151.79, y: 5.06), controlPoint1: CGPoint(x: 174.84, y: 14.02), controlPoint2: CGPoint(x: 164.5, y: 5.06))
        bezierPath.addLine(to: CGPoint(x: 151.79, y: 5.06))
        bezierPath.addLine(to: CGPoint(x: 48.21, y: 5.06))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(gradient,
            start: CGPoint(x: 100, y: 189.73),
            end: CGPoint(x: 100, y: 5.06),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 2.33))
        bezier3Path.addLine(to: CGPoint(x: 48.21, y: 2.33))
        bezier3Path.addCurve(to: CGPoint(x: 22.43, y: 25.03), controlPoint1: CGPoint(x: 33.99, y: 2.33), controlPoint2: CGPoint(x: 22.43, y: 12.51))
        bezier3Path.addLine(to: CGPoint(x: 22.43, y: 126.24))
        bezier3Path.addCurve(to: CGPoint(x: 47.86, y: 148.94), controlPoint1: CGPoint(x: 22.43, y: 138.26), controlPoint2: CGPoint(x: 33.36, y: 148.02))
        bezier3Path.addLine(to: CGPoint(x: 48.02, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 48.19, y: 148.95))
        bezier3Path.addCurve(to: CGPoint(x: 94.34, y: 183.82), controlPoint1: CGPoint(x: 79.76, y: 149.07), controlPoint2: CGPoint(x: 94.19, y: 183.48))
        bezier3Path.addLine(to: CGPoint(x: 100.02, y: 197.71))
        bezier3Path.addLine(to: CGPoint(x: 104.6, y: 183.42))
        bezier3Path.addCurve(to: CGPoint(x: 114.95, y: 165.85), controlPoint1: CGPoint(x: 104.62, y: 183.35), controlPoint2: CGPoint(x: 107.57, y: 174.49))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 148.95), controlPoint1: CGPoint(x: 124.54, y: 154.64), controlPoint2: CGPoint(x: 136.89, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.78, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.82, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.86, y: 148.95))
        bezier3Path.addCurve(to: CGPoint(x: 177.57, y: 126.24), controlPoint1: CGPoint(x: 166.04, y: 148.77), controlPoint2: CGPoint(x: 177.57, y: 138.59))
        bezier3Path.addLine(to: CGPoint(x: 177.57, y: 25.03))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 2.33), controlPoint1: CGPoint(x: 177.57, y: 12.51), controlPoint2: CGPoint(x: 166.01, y: 2.33))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 7.79))
        bezier3Path.addCurve(to: CGPoint(x: 172.11, y: 25.03), controlPoint1: CGPoint(x: 163.01, y: 7.79), controlPoint2: CGPoint(x: 172.11, y: 15.51))
        bezier3Path.addLine(to: CGPoint(x: 172.11, y: 126.24))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 143.49), controlPoint1: CGPoint(x: 172.11, y: 135.77), controlPoint2: CGPoint(x: 162.65, y: 143.35))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 143.49), controlPoint1: CGPoint(x: 151.75, y: 143.49), controlPoint2: CGPoint(x: 151.71, y: 143.49))
        bezier3Path.addCurve(to: CGPoint(x: 99.39, y: 181.75), controlPoint1: CGPoint(x: 111.67, y: 143.48), controlPoint2: CGPoint(x: 99.39, y: 181.75))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 143.49), controlPoint1: CGPoint(x: 99.39, y: 181.75), controlPoint2: CGPoint(x: 83.79, y: 143.62))
        bezier3Path.addCurve(to: CGPoint(x: 27.89, y: 126.24), controlPoint1: CGPoint(x: 37.14, y: 142.78), controlPoint2: CGPoint(x: 27.89, y: 135.77))
        bezier3Path.addLine(to: CGPoint(x: 27.89, y: 25.03))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 7.79), controlPoint1: CGPoint(x: 27.89, y: 15.51), controlPoint2: CGPoint(x: 36.99, y: 7.79))
        bezier3Path.addLine(to: CGPoint(x: 151.79, y: 7.79))
        bezier3Path.close()
        fillColor2.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 64.5, y: 78.46))
        bezier4Path.addCurve(to: CGPoint(x: 85.97, y: 137), controlPoint1: CGPoint(x: 48.05, y: 100.72), controlPoint2: CGPoint(x: 59.13, y: 131.07))
        bezier4Path.addCurve(to: CGPoint(x: 140.19, y: 114.6), controlPoint1: CGPoint(x: 103.57, y: 140.88), controlPoint2: CGPoint(x: 134.71, y: 134.94))
        bezier4Path.addCurve(to: CGPoint(x: 121.96, y: 68.34), controlPoint1: CGPoint(x: 145.76, y: 93.96), controlPoint2: CGPoint(x: 137.81, y: 79.66))
        bezier4Path.addCurve(to: CGPoint(x: 99.58, y: 87.31), controlPoint1: CGPoint(x: 123.82, y: 77.12), controlPoint2: CGPoint(x: 106.8, y: 95.34))
        bezier4Path.addCurve(to: CGPoint(x: 115.25, y: 62.58), controlPoint1: CGPoint(x: 92.63, y: 79.59), controlPoint2: CGPoint(x: 108.1, y: 66.84))
        bezier4Path.addCurve(to: CGPoint(x: 105.75, y: 23.45), controlPoint1: CGPoint(x: 127.62, y: 55.2), controlPoint2: CGPoint(x: 122.88, y: 32.25))
        bezier4Path.addCurve(to: CGPoint(x: 103.3, y: 41.47), controlPoint1: CGPoint(x: 106.61, y: 25.83), controlPoint2: CGPoint(x: 112.26, y: 32.3))
        bezier4Path.addCurve(to: CGPoint(x: 64.5, y: 78.46), controlPoint1: CGPoint(x: 84.11, y: 59.27), controlPoint2: CGPoint(x: 78.4, y: 61.32))
        bezier4Path.close()
        fillColor18.setFill()
        bezier4Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawMapMarkerRESCUECanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let gradientColor = UIColor(red: 0.268, green: 0.469, blue: 0.741, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.057, green: 0.113, blue: 0.227, alpha: 1.000)
        let fillColor2 = UIColor(red: 0.181, green: 0.706, blue: 0.929, alpha: 1.000)
        let fillColor18 = UIColor(red: 0.996, green: 0.996, blue: 0.996, alpha: 0.750)

        //// Gradient Declarations
        let gradient = CGGradient(colorsSpace: nil, colors: [gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 1])!

        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath()
        clipPath.move(to: CGPoint(x: 48.21, y: 5.06))
        clipPath.addCurve(to: CGPoint(x: 25.16, y: 25.03), controlPoint1: CGPoint(x: 35.5, y: 5.06), controlPoint2: CGPoint(x: 25.16, y: 14.02))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 25.03))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 126.24))
        clipPath.addCurve(to: CGPoint(x: 48.04, y: 146.21), controlPoint1: CGPoint(x: 25.16, y: 136.8), controlPoint2: CGPoint(x: 34.99, y: 145.38))
        clipPath.addLine(to: CGPoint(x: 48.04, y: 146.21))
        clipPath.addLine(to: CGPoint(x: 48.2, y: 146.22))
        clipPath.addCurve(to: CGPoint(x: 96.87, y: 182.79), controlPoint1: CGPoint(x: 81.5, y: 146.35), controlPoint2: CGPoint(x: 96.72, y: 182.43))
        clipPath.addLine(to: CGPoint(x: 96.87, y: 182.79))
        clipPath.addLine(to: CGPoint(x: 99.7, y: 189.73))
        clipPath.addLine(to: CGPoint(x: 102, y: 182.59))
        clipPath.addCurve(to: CGPoint(x: 151.67, y: 146.22), controlPoint1: CGPoint(x: 102.11, y: 182.22), controlPoint2: CGPoint(x: 114.1, y: 146.22))
        clipPath.addLine(to: CGPoint(x: 151.67, y: 146.22))
        clipPath.addLine(to: CGPoint(x: 151.83, y: 146.22))
        clipPath.addCurve(to: CGPoint(x: 174.84, y: 126.24), controlPoint1: CGPoint(x: 164.52, y: 146.06), controlPoint2: CGPoint(x: 174.84, y: 137.1))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 126.24))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 25.03))
        clipPath.addCurve(to: CGPoint(x: 151.79, y: 5.06), controlPoint1: CGPoint(x: 174.84, y: 14.02), controlPoint2: CGPoint(x: 164.5, y: 5.06))
        clipPath.addLine(to: CGPoint(x: 151.79, y: 5.06))
        clipPath.addLine(to: CGPoint(x: 48.21, y: 5.06))
        clipPath.close()
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 48.21, y: 5.06))
        bezierPath.addCurve(to: CGPoint(x: 25.16, y: 25.03), controlPoint1: CGPoint(x: 35.5, y: 5.06), controlPoint2: CGPoint(x: 25.16, y: 14.02))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 25.03))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 126.24))
        bezierPath.addCurve(to: CGPoint(x: 48.04, y: 146.21), controlPoint1: CGPoint(x: 25.16, y: 136.8), controlPoint2: CGPoint(x: 34.99, y: 145.38))
        bezierPath.addLine(to: CGPoint(x: 48.04, y: 146.21))
        bezierPath.addLine(to: CGPoint(x: 48.2, y: 146.22))
        bezierPath.addCurve(to: CGPoint(x: 96.87, y: 182.79), controlPoint1: CGPoint(x: 81.5, y: 146.35), controlPoint2: CGPoint(x: 96.72, y: 182.43))
        bezierPath.addLine(to: CGPoint(x: 96.87, y: 182.79))
        bezierPath.addLine(to: CGPoint(x: 99.7, y: 189.73))
        bezierPath.addLine(to: CGPoint(x: 102, y: 182.59))
        bezierPath.addCurve(to: CGPoint(x: 151.67, y: 146.22), controlPoint1: CGPoint(x: 102.11, y: 182.22), controlPoint2: CGPoint(x: 114.1, y: 146.22))
        bezierPath.addLine(to: CGPoint(x: 151.67, y: 146.22))
        bezierPath.addLine(to: CGPoint(x: 151.83, y: 146.22))
        bezierPath.addCurve(to: CGPoint(x: 174.84, y: 126.24), controlPoint1: CGPoint(x: 164.52, y: 146.06), controlPoint2: CGPoint(x: 174.84, y: 137.1))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 126.24))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 25.03))
        bezierPath.addCurve(to: CGPoint(x: 151.79, y: 5.06), controlPoint1: CGPoint(x: 174.84, y: 14.02), controlPoint2: CGPoint(x: 164.5, y: 5.06))
        bezierPath.addLine(to: CGPoint(x: 151.79, y: 5.06))
        bezierPath.addLine(to: CGPoint(x: 48.21, y: 5.06))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(gradient,
            start: CGPoint(x: 100, y: 189.73),
            end: CGPoint(x: 100, y: 5.06),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 2.33))
        bezier3Path.addLine(to: CGPoint(x: 48.21, y: 2.33))
        bezier3Path.addCurve(to: CGPoint(x: 22.43, y: 25.03), controlPoint1: CGPoint(x: 33.99, y: 2.33), controlPoint2: CGPoint(x: 22.43, y: 12.51))
        bezier3Path.addLine(to: CGPoint(x: 22.43, y: 126.24))
        bezier3Path.addCurve(to: CGPoint(x: 47.86, y: 148.94), controlPoint1: CGPoint(x: 22.43, y: 138.26), controlPoint2: CGPoint(x: 33.36, y: 148.02))
        bezier3Path.addLine(to: CGPoint(x: 48.02, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 48.19, y: 148.95))
        bezier3Path.addCurve(to: CGPoint(x: 94.34, y: 183.82), controlPoint1: CGPoint(x: 79.76, y: 149.07), controlPoint2: CGPoint(x: 94.19, y: 183.48))
        bezier3Path.addLine(to: CGPoint(x: 100.02, y: 197.71))
        bezier3Path.addLine(to: CGPoint(x: 104.6, y: 183.42))
        bezier3Path.addCurve(to: CGPoint(x: 114.95, y: 165.85), controlPoint1: CGPoint(x: 104.62, y: 183.35), controlPoint2: CGPoint(x: 107.57, y: 174.49))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 148.95), controlPoint1: CGPoint(x: 124.54, y: 154.64), controlPoint2: CGPoint(x: 136.89, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.78, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.82, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.86, y: 148.95))
        bezier3Path.addCurve(to: CGPoint(x: 177.57, y: 126.24), controlPoint1: CGPoint(x: 166.04, y: 148.77), controlPoint2: CGPoint(x: 177.57, y: 138.59))
        bezier3Path.addLine(to: CGPoint(x: 177.57, y: 25.03))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 2.33), controlPoint1: CGPoint(x: 177.57, y: 12.51), controlPoint2: CGPoint(x: 166.01, y: 2.33))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 7.79))
        bezier3Path.addCurve(to: CGPoint(x: 172.11, y: 25.03), controlPoint1: CGPoint(x: 163.01, y: 7.79), controlPoint2: CGPoint(x: 172.11, y: 15.51))
        bezier3Path.addLine(to: CGPoint(x: 172.11, y: 126.24))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 143.49), controlPoint1: CGPoint(x: 172.11, y: 135.77), controlPoint2: CGPoint(x: 162.65, y: 143.35))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 143.49), controlPoint1: CGPoint(x: 151.75, y: 143.49), controlPoint2: CGPoint(x: 151.71, y: 143.49))
        bezier3Path.addCurve(to: CGPoint(x: 99.39, y: 181.75), controlPoint1: CGPoint(x: 111.67, y: 143.48), controlPoint2: CGPoint(x: 99.39, y: 181.75))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 143.49), controlPoint1: CGPoint(x: 99.39, y: 181.75), controlPoint2: CGPoint(x: 83.79, y: 143.62))
        bezier3Path.addCurve(to: CGPoint(x: 27.89, y: 126.24), controlPoint1: CGPoint(x: 37.14, y: 142.78), controlPoint2: CGPoint(x: 27.89, y: 135.77))
        bezier3Path.addLine(to: CGPoint(x: 27.89, y: 25.03))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 7.79), controlPoint1: CGPoint(x: 27.89, y: 15.51), controlPoint2: CGPoint(x: 36.99, y: 7.79))
        bezier3Path.addLine(to: CGPoint(x: 151.79, y: 7.79))
        bezier3Path.close()
        fillColor2.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 100.43, y: 22.93))
        bezier4Path.addCurve(to: CGPoint(x: 41.85, y: 81.51), controlPoint1: CGPoint(x: 68.08, y: 22.93), controlPoint2: CGPoint(x: 41.85, y: 49.16))
        bezier4Path.addCurve(to: CGPoint(x: 100.43, y: 140.1), controlPoint1: CGPoint(x: 41.85, y: 113.87), controlPoint2: CGPoint(x: 68.08, y: 140.1))
        bezier4Path.addCurve(to: CGPoint(x: 159.01, y: 81.51), controlPoint1: CGPoint(x: 132.78, y: 140.1), controlPoint2: CGPoint(x: 159.01, y: 113.87))
        bezier4Path.addCurve(to: CGPoint(x: 100.43, y: 22.93), controlPoint1: CGPoint(x: 159.01, y: 49.16), controlPoint2: CGPoint(x: 132.78, y: 22.93))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 100.43, y: 26.97))
        bezier4Path.addCurve(to: CGPoint(x: 154.97, y: 81.51), controlPoint1: CGPoint(x: 130.5, y: 26.97), controlPoint2: CGPoint(x: 154.97, y: 51.44))
        bezier4Path.addCurve(to: CGPoint(x: 100.43, y: 136.06), controlPoint1: CGPoint(x: 154.97, y: 111.59), controlPoint2: CGPoint(x: 130.5, y: 136.06))
        bezier4Path.addCurve(to: CGPoint(x: 45.89, y: 81.51), controlPoint1: CGPoint(x: 70.35, y: 136.06), controlPoint2: CGPoint(x: 45.89, y: 111.59))
        bezier4Path.addCurve(to: CGPoint(x: 100.43, y: 26.97), controlPoint1: CGPoint(x: 45.89, y: 51.44), controlPoint2: CGPoint(x: 70.35, y: 26.97))
        bezier4Path.close()
        fillColor18.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 100.43, y: 34.65))
        bezier5Path.addCurve(to: CGPoint(x: 53.56, y: 81.51), controlPoint1: CGPoint(x: 74.55, y: 34.65), controlPoint2: CGPoint(x: 53.56, y: 55.63))
        bezier5Path.addCurve(to: CGPoint(x: 100.43, y: 128.38), controlPoint1: CGPoint(x: 53.56, y: 107.4), controlPoint2: CGPoint(x: 74.55, y: 128.38))
        bezier5Path.addCurve(to: CGPoint(x: 147.3, y: 81.51), controlPoint1: CGPoint(x: 126.31, y: 128.38), controlPoint2: CGPoint(x: 147.3, y: 107.4))
        bezier5Path.addCurve(to: CGPoint(x: 100.43, y: 34.65), controlPoint1: CGPoint(x: 147.3, y: 55.63), controlPoint2: CGPoint(x: 126.31, y: 34.65))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 100.43, y: 38.69))
        bezier5Path.addCurve(to: CGPoint(x: 143.25, y: 81.51), controlPoint1: CGPoint(x: 124.04, y: 38.69), controlPoint2: CGPoint(x: 143.25, y: 57.9))
        bezier5Path.addCurve(to: CGPoint(x: 100.43, y: 124.34), controlPoint1: CGPoint(x: 143.25, y: 105.13), controlPoint2: CGPoint(x: 124.04, y: 124.34))
        bezier5Path.addCurve(to: CGPoint(x: 57.6, y: 81.51), controlPoint1: CGPoint(x: 76.81, y: 124.34), controlPoint2: CGPoint(x: 57.6, y: 105.13))
        bezier5Path.addCurve(to: CGPoint(x: 100.43, y: 38.69), controlPoint1: CGPoint(x: 57.6, y: 57.9), controlPoint2: CGPoint(x: 76.81, y: 38.69))
        bezier5Path.close()
        fillColor18.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 136.87, y: 70.43))
        bezier6Path.addLine(to: CGPoint(x: 111.51, y: 70.43))
        bezier6Path.addLine(to: CGPoint(x: 111.51, y: 45.07))
        bezier6Path.addLine(to: CGPoint(x: 89.35, y: 45.07))
        bezier6Path.addLine(to: CGPoint(x: 89.35, y: 70.43))
        bezier6Path.addLine(to: CGPoint(x: 63.99, y: 70.43))
        bezier6Path.addLine(to: CGPoint(x: 63.99, y: 92.6))
        bezier6Path.addLine(to: CGPoint(x: 89.35, y: 92.6))
        bezier6Path.addLine(to: CGPoint(x: 89.35, y: 117.95))
        bezier6Path.addLine(to: CGPoint(x: 111.51, y: 117.95))
        bezier6Path.addLine(to: CGPoint(x: 111.51, y: 92.6))
        bezier6Path.addLine(to: CGPoint(x: 136.87, y: 92.6))
        bezier6Path.addLine(to: CGPoint(x: 136.87, y: 70.43))
        bezier6Path.close()
        fillColor18.setFill()
        bezier6Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawMapMarkerEMSCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let gradientColor = UIColor(red: 0.268, green: 0.469, blue: 0.741, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.057, green: 0.113, blue: 0.227, alpha: 1.000)
        let fillColor2 = UIColor(red: 0.181, green: 0.706, blue: 0.929, alpha: 1.000)
        let fillColor18 = UIColor(red: 0.996, green: 0.996, blue: 0.996, alpha: 0.750)

        //// Gradient Declarations
        let gradient = CGGradient(colorsSpace: nil, colors: [gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 1])!

        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath()
        clipPath.move(to: CGPoint(x: 48.21, y: 5.06))
        clipPath.addCurve(to: CGPoint(x: 25.16, y: 25.03), controlPoint1: CGPoint(x: 35.5, y: 5.06), controlPoint2: CGPoint(x: 25.16, y: 14.02))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 25.03))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 126.24))
        clipPath.addCurve(to: CGPoint(x: 48.04, y: 146.21), controlPoint1: CGPoint(x: 25.16, y: 136.8), controlPoint2: CGPoint(x: 34.99, y: 145.38))
        clipPath.addLine(to: CGPoint(x: 48.04, y: 146.21))
        clipPath.addLine(to: CGPoint(x: 48.2, y: 146.22))
        clipPath.addCurve(to: CGPoint(x: 96.87, y: 182.79), controlPoint1: CGPoint(x: 81.5, y: 146.35), controlPoint2: CGPoint(x: 96.72, y: 182.43))
        clipPath.addLine(to: CGPoint(x: 96.87, y: 182.79))
        clipPath.addLine(to: CGPoint(x: 99.7, y: 189.73))
        clipPath.addLine(to: CGPoint(x: 102, y: 182.59))
        clipPath.addCurve(to: CGPoint(x: 151.67, y: 146.22), controlPoint1: CGPoint(x: 102.11, y: 182.22), controlPoint2: CGPoint(x: 114.1, y: 146.22))
        clipPath.addLine(to: CGPoint(x: 151.67, y: 146.22))
        clipPath.addLine(to: CGPoint(x: 151.83, y: 146.22))
        clipPath.addCurve(to: CGPoint(x: 174.84, y: 126.24), controlPoint1: CGPoint(x: 164.52, y: 146.06), controlPoint2: CGPoint(x: 174.84, y: 137.1))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 126.24))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 25.03))
        clipPath.addCurve(to: CGPoint(x: 151.79, y: 5.06), controlPoint1: CGPoint(x: 174.84, y: 14.02), controlPoint2: CGPoint(x: 164.5, y: 5.06))
        clipPath.addLine(to: CGPoint(x: 151.79, y: 5.06))
        clipPath.addLine(to: CGPoint(x: 48.21, y: 5.06))
        clipPath.close()
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 48.21, y: 5.06))
        bezierPath.addCurve(to: CGPoint(x: 25.16, y: 25.03), controlPoint1: CGPoint(x: 35.5, y: 5.06), controlPoint2: CGPoint(x: 25.16, y: 14.02))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 25.03))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 126.24))
        bezierPath.addCurve(to: CGPoint(x: 48.04, y: 146.21), controlPoint1: CGPoint(x: 25.16, y: 136.8), controlPoint2: CGPoint(x: 34.99, y: 145.38))
        bezierPath.addLine(to: CGPoint(x: 48.04, y: 146.21))
        bezierPath.addLine(to: CGPoint(x: 48.2, y: 146.22))
        bezierPath.addCurve(to: CGPoint(x: 96.87, y: 182.79), controlPoint1: CGPoint(x: 81.5, y: 146.35), controlPoint2: CGPoint(x: 96.72, y: 182.43))
        bezierPath.addLine(to: CGPoint(x: 96.87, y: 182.79))
        bezierPath.addLine(to: CGPoint(x: 99.7, y: 189.73))
        bezierPath.addLine(to: CGPoint(x: 102, y: 182.59))
        bezierPath.addCurve(to: CGPoint(x: 151.67, y: 146.22), controlPoint1: CGPoint(x: 102.11, y: 182.22), controlPoint2: CGPoint(x: 114.1, y: 146.22))
        bezierPath.addLine(to: CGPoint(x: 151.67, y: 146.22))
        bezierPath.addLine(to: CGPoint(x: 151.83, y: 146.22))
        bezierPath.addCurve(to: CGPoint(x: 174.84, y: 126.24), controlPoint1: CGPoint(x: 164.52, y: 146.06), controlPoint2: CGPoint(x: 174.84, y: 137.1))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 126.24))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 25.03))
        bezierPath.addCurve(to: CGPoint(x: 151.79, y: 5.06), controlPoint1: CGPoint(x: 174.84, y: 14.02), controlPoint2: CGPoint(x: 164.5, y: 5.06))
        bezierPath.addLine(to: CGPoint(x: 151.79, y: 5.06))
        bezierPath.addLine(to: CGPoint(x: 48.21, y: 5.06))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(gradient,
            start: CGPoint(x: 100, y: 189.73),
            end: CGPoint(x: 100, y: 5.06),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 2.33))
        bezier3Path.addLine(to: CGPoint(x: 48.21, y: 2.33))
        bezier3Path.addCurve(to: CGPoint(x: 22.43, y: 25.03), controlPoint1: CGPoint(x: 33.99, y: 2.33), controlPoint2: CGPoint(x: 22.43, y: 12.51))
        bezier3Path.addLine(to: CGPoint(x: 22.43, y: 126.24))
        bezier3Path.addCurve(to: CGPoint(x: 47.86, y: 148.94), controlPoint1: CGPoint(x: 22.43, y: 138.26), controlPoint2: CGPoint(x: 33.36, y: 148.02))
        bezier3Path.addLine(to: CGPoint(x: 48.02, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 48.19, y: 148.95))
        bezier3Path.addCurve(to: CGPoint(x: 94.34, y: 183.82), controlPoint1: CGPoint(x: 79.76, y: 149.07), controlPoint2: CGPoint(x: 94.19, y: 183.48))
        bezier3Path.addLine(to: CGPoint(x: 100.02, y: 197.71))
        bezier3Path.addLine(to: CGPoint(x: 104.6, y: 183.42))
        bezier3Path.addCurve(to: CGPoint(x: 114.95, y: 165.85), controlPoint1: CGPoint(x: 104.62, y: 183.35), controlPoint2: CGPoint(x: 107.57, y: 174.49))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 148.95), controlPoint1: CGPoint(x: 124.54, y: 154.64), controlPoint2: CGPoint(x: 136.89, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.78, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.82, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.86, y: 148.95))
        bezier3Path.addCurve(to: CGPoint(x: 177.57, y: 126.24), controlPoint1: CGPoint(x: 166.04, y: 148.77), controlPoint2: CGPoint(x: 177.57, y: 138.59))
        bezier3Path.addLine(to: CGPoint(x: 177.57, y: 25.03))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 2.33), controlPoint1: CGPoint(x: 177.57, y: 12.51), controlPoint2: CGPoint(x: 166.01, y: 2.33))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 7.79))
        bezier3Path.addCurve(to: CGPoint(x: 172.11, y: 25.03), controlPoint1: CGPoint(x: 163.01, y: 7.79), controlPoint2: CGPoint(x: 172.11, y: 15.51))
        bezier3Path.addLine(to: CGPoint(x: 172.11, y: 126.24))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 143.49), controlPoint1: CGPoint(x: 172.11, y: 135.77), controlPoint2: CGPoint(x: 162.65, y: 143.35))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 143.49), controlPoint1: CGPoint(x: 151.75, y: 143.49), controlPoint2: CGPoint(x: 151.71, y: 143.49))
        bezier3Path.addCurve(to: CGPoint(x: 99.39, y: 181.75), controlPoint1: CGPoint(x: 111.67, y: 143.48), controlPoint2: CGPoint(x: 99.39, y: 181.75))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 143.49), controlPoint1: CGPoint(x: 99.39, y: 181.75), controlPoint2: CGPoint(x: 83.79, y: 143.62))
        bezier3Path.addCurve(to: CGPoint(x: 27.89, y: 126.24), controlPoint1: CGPoint(x: 37.14, y: 142.78), controlPoint2: CGPoint(x: 27.89, y: 135.77))
        bezier3Path.addLine(to: CGPoint(x: 27.89, y: 25.03))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 7.79), controlPoint1: CGPoint(x: 27.89, y: 15.51), controlPoint2: CGPoint(x: 36.99, y: 7.79))
        bezier3Path.addLine(to: CGPoint(x: 151.79, y: 7.79))
        bezier3Path.close()
        fillColor2.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 158.18, y: 67.22))
        bezier4Path.addLine(to: CGPoint(x: 148.59, y: 46.5))
        bezier4Path.addLine(to: CGPoint(x: 111.64, y: 63.61))
        bezier4Path.addLine(to: CGPoint(x: 111.64, y: 22.89))
        bezier4Path.addLine(to: CGPoint(x: 88.81, y: 22.89))
        bezier4Path.addLine(to: CGPoint(x: 88.81, y: 63.74))
        bezier4Path.addLine(to: CGPoint(x: 51.62, y: 46.84))
        bezier4Path.addLine(to: CGPoint(x: 42.17, y: 67.62))
        bezier4Path.addLine(to: CGPoint(x: 72.85, y: 81.57))
        bezier4Path.addLine(to: CGPoint(x: 42.27, y: 95.73))
        bezier4Path.addLine(to: CGPoint(x: 51.86, y: 116.45))
        bezier4Path.addLine(to: CGPoint(x: 88.81, y: 99.34))
        bezier4Path.addLine(to: CGPoint(x: 88.81, y: 140.06))
        bezier4Path.addLine(to: CGPoint(x: 111.64, y: 140.06))
        bezier4Path.addLine(to: CGPoint(x: 111.64, y: 99.2))
        bezier4Path.addLine(to: CGPoint(x: 148.83, y: 116.11))
        bezier4Path.addLine(to: CGPoint(x: 158.28, y: 95.32))
        bezier4Path.addLine(to: CGPoint(x: 127.6, y: 81.38))
        bezier4Path.addLine(to: CGPoint(x: 158.18, y: 67.22))
        bezier4Path.close()
        fillColor18.setFill()
        bezier4Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawCommunityMapMarker(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawMapMarkerCOMMUNITYCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawAdministrativeMapMarker(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawMapMarkerADMINISTRATIVECanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawGeneralMapMarker(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawMapMarkerGENERALCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawEmsMapMarker(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawMapMarkerEMSCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawRescueMapMarker(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawMapMarkerRESCUECanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawFireMapMarker(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawMapMarkerFIRECanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawLocationIncidentRedCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor19 = UIColor(red: 0.872, green: 0.130, blue: 0.168, alpha: 1.000)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 101.66, y: 67.17))
        bezierPath.addCurve(to: CGPoint(x: 89.77, y: 55.29), controlPoint1: CGPoint(x: 95.1, y: 67.17), controlPoint2: CGPoint(x: 89.77, y: 61.84))
        bezierPath.addCurve(to: CGPoint(x: 101.66, y: 43.41), controlPoint1: CGPoint(x: 89.77, y: 48.74), controlPoint2: CGPoint(x: 95.1, y: 43.41))
        bezierPath.addCurve(to: CGPoint(x: 113.54, y: 55.29), controlPoint1: CGPoint(x: 108.21, y: 43.41), controlPoint2: CGPoint(x: 113.54, y: 48.74))
        bezierPath.addCurve(to: CGPoint(x: 101.66, y: 67.17), controlPoint1: CGPoint(x: 113.54, y: 61.84), controlPoint2: CGPoint(x: 108.21, y: 67.17))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 101.66, y: 8.4))
        bezierPath.addCurve(to: CGPoint(x: 54.76, y: 55.29), controlPoint1: CGPoint(x: 75.8, y: 8.4), controlPoint2: CGPoint(x: 54.76, y: 29.43))
        bezierPath.addCurve(to: CGPoint(x: 62.56, y: 81.19), controlPoint1: CGPoint(x: 54.76, y: 64.56), controlPoint2: CGPoint(x: 57.45, y: 73.5))
        bezierPath.addLine(to: CGPoint(x: 94.58, y: 155.42))
        bezierPath.addLine(to: CGPoint(x: 101.66, y: 171.85))
        bezierPath.addLine(to: CGPoint(x: 108.74, y: 155.42))
        bezierPath.addLine(to: CGPoint(x: 140.59, y: 81.43))
        bezierPath.addCurve(to: CGPoint(x: 148.55, y: 55.29), controlPoint1: CGPoint(x: 145.8, y: 73.68), controlPoint2: CGPoint(x: 148.55, y: 64.66))
        bezierPath.addCurve(to: CGPoint(x: 101.66, y: 8.4), controlPoint1: CGPoint(x: 148.55, y: 29.43), controlPoint2: CGPoint(x: 127.51, y: 8.4))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 101.66, y: 74.88))
        bezierPath.addCurve(to: CGPoint(x: 121.25, y: 55.29), controlPoint1: CGPoint(x: 112.48, y: 74.88), controlPoint2: CGPoint(x: 121.25, y: 66.11))
        bezierPath.addCurve(to: CGPoint(x: 101.66, y: 35.7), controlPoint1: CGPoint(x: 121.25, y: 44.47), controlPoint2: CGPoint(x: 112.48, y: 35.7))
        bezierPath.addCurve(to: CGPoint(x: 82.06, y: 55.29), controlPoint1: CGPoint(x: 90.83, y: 35.7), controlPoint2: CGPoint(x: 82.06, y: 44.47))
        bezierPath.addCurve(to: CGPoint(x: 101.66, y: 74.88), controlPoint1: CGPoint(x: 82.06, y: 66.11), controlPoint2: CGPoint(x: 90.83, y: 74.88))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 101.66, y: 16.11))
        bezierPath.addCurve(to: CGPoint(x: 140.84, y: 55.29), controlPoint1: CGPoint(x: 123.3, y: 16.11), controlPoint2: CGPoint(x: 140.84, y: 33.65))
        bezierPath.addCurve(to: CGPoint(x: 133.81, y: 77.69), controlPoint1: CGPoint(x: 140.84, y: 63.62), controlPoint2: CGPoint(x: 138.24, y: 71.34))
        bezierPath.addLine(to: CGPoint(x: 101.66, y: 152.37))
        bezierPath.addLine(to: CGPoint(x: 69.35, y: 77.47))
        bezierPath.addCurve(to: CGPoint(x: 62.47, y: 55.29), controlPoint1: CGPoint(x: 65.01, y: 71.16), controlPoint2: CGPoint(x: 62.47, y: 63.52))
        bezierPath.addCurve(to: CGPoint(x: 101.66, y: 16.11), controlPoint1: CGPoint(x: 62.47, y: 33.65), controlPoint2: CGPoint(x: 80.01, y: 16.11))
        bezierPath.close()
        fillColor19.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 142.28, y: 136.57))
        bezier2Path.addLine(to: CGPoint(x: 108.46, y: 136.57))
        bezier2Path.addLine(to: CGPoint(x: 101.66, y: 152.37))
        bezier2Path.addLine(to: CGPoint(x: 94.84, y: 136.57))
        bezier2Path.addLine(to: CGPoint(x: 59.09, y: 136.57))
        bezier2Path.addLine(to: CGPoint(x: 14.19, y: 191.45))
        bezier2Path.addLine(to: CGPoint(x: 185.81, y: 191.45))
        bezier2Path.addLine(to: CGPoint(x: 142.28, y: 136.57))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 138.56, y: 144.28))
        bezier2Path.addLine(to: CGPoint(x: 169.86, y: 183.74))
        bezier2Path.addLine(to: CGPoint(x: 30.45, y: 183.74))
        bezier2Path.addLine(to: CGPoint(x: 62.74, y: 144.28))
        bezier2Path.addLine(to: CGPoint(x: 89.77, y: 144.28))
        bezier2Path.addLine(to: CGPoint(x: 94.58, y: 155.42))
        bezier2Path.addCurve(to: CGPoint(x: 101.66, y: 160.08), controlPoint1: CGPoint(x: 95.8, y: 158.25), controlPoint2: CGPoint(x: 98.58, y: 160.08))
        bezier2Path.addLine(to: CGPoint(x: 101.66, y: 160.08))
        bezier2Path.addCurve(to: CGPoint(x: 108.74, y: 155.42), controlPoint1: CGPoint(x: 104.74, y: 160.08), controlPoint2: CGPoint(x: 107.52, y: 158.25))
        bezier2Path.addLine(to: CGPoint(x: 113.53, y: 144.28))
        bezier2Path.addLine(to: CGPoint(x: 138.56, y: 144.28))
        bezier2Path.close()
        fillColor19.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 94.84, y: 136.57))
        bezier3Path.addLine(to: CGPoint(x: 59.17, y: 136.57))
        bezier3Path.addLine(to: CGPoint(x: 62.94, y: 144.11))
        bezier3Path.addLine(to: CGPoint(x: 98.11, y: 144.15))
        bezier3Path.addLine(to: CGPoint(x: 94.84, y: 136.57))
        bezier3Path.close()
        fillColor19.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 142.37, y: 136.57))
        bezier4Path.addLine(to: CGPoint(x: 108.46, y: 136.57))
        bezier4Path.addLine(to: CGPoint(x: 105.19, y: 144.15))
        bezier4Path.addLine(to: CGPoint(x: 138.48, y: 144.19))
        bezier4Path.addLine(to: CGPoint(x: 142.37, y: 136.57))
        bezier4Path.close()
        fillColor19.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 59.09, y: 136.57))
        bezier5Path.addLine(to: CGPoint(x: 14.19, y: 191.45))
        bezier5Path.addLine(to: CGPoint(x: 30.45, y: 183.74))
        bezier5Path.addLine(to: CGPoint(x: 62.95, y: 144.1))
        bezier5Path.addLine(to: CGPoint(x: 59.09, y: 136.57))
        bezier5Path.close()
        fillColor19.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 138.48, y: 144.19))
        bezier6Path.addLine(to: CGPoint(x: 169.95, y: 183.85))
        bezier6Path.addLine(to: CGPoint(x: 185.81, y: 191.45))
        bezier6Path.addLine(to: CGPoint(x: 142.37, y: 136.57))
        bezier6Path.addLine(to: CGPoint(x: 138.48, y: 144.19))
        bezier6Path.close()
        fillColor19.setFill()
        bezier6Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawWorldMapIncidentRedCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor19 = UIColor(red: 0.872, green: 0.130, blue: 0.168, alpha: 1.000)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 70.15, y: 167.51))
        bezierPath.addCurve(to: CGPoint(x: 42.15, y: 145.6), controlPoint1: CGPoint(x: 59.12, y: 162.56), controlPoint2: CGPoint(x: 49.54, y: 155))
        bezierPath.addLine(to: CGPoint(x: 55.91, y: 145.6))
        bezierPath.addCurve(to: CGPoint(x: 70.15, y: 167.51), controlPoint1: CGPoint(x: 60.1, y: 154.79), controlPoint2: CGPoint(x: 65.2, y: 161.98))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 92.89, y: 169.24))
        bezierPath.addCurve(to: CGPoint(x: 71.31, y: 145.6), controlPoint1: CGPoint(x: 88.76, y: 166.64), controlPoint2: CGPoint(x: 79.04, y: 159.44))
        bezierPath.addLine(to: CGPoint(x: 92.89, y: 145.6))
        bezierPath.addLine(to: CGPoint(x: 92.89, y: 169.24))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 107.39, y: 169.24))
        bezierPath.addLine(to: CGPoint(x: 107.39, y: 145.6))
        bezierPath.addLine(to: CGPoint(x: 128.98, y: 145.6))
        bezierPath.addCurve(to: CGPoint(x: 107.39, y: 169.24), controlPoint1: CGPoint(x: 121.23, y: 159.46), controlPoint2: CGPoint(x: 111.5, y: 166.66))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 129.92, y: 167.76))
        bezierPath.addCurve(to: CGPoint(x: 144.38, y: 145.6), controlPoint1: CGPoint(x: 134.93, y: 162.2), controlPoint2: CGPoint(x: 140.13, y: 154.93))
        bezierPath.addLine(to: CGPoint(x: 158.44, y: 145.6))
        bezierPath.addCurve(to: CGPoint(x: 129.92, y: 167.76), controlPoint1: CGPoint(x: 150.94, y: 155.15), controlPoint2: CGPoint(x: 141.17, y: 162.82))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 33.26, y: 131.1))
        bezierPath.addCurve(to: CGPoint(x: 26.7, y: 107.44), controlPoint1: CGPoint(x: 29.85, y: 123.77), controlPoint2: CGPoint(x: 27.54, y: 115.83))
        bezierPath.addLine(to: CGPoint(x: 47.02, y: 107.44))
        bezierPath.addCurve(to: CGPoint(x: 50.69, y: 131.1), controlPoint1: CGPoint(x: 47.51, y: 116.19), controlPoint2: CGPoint(x: 48.78, y: 124.09))
        bezierPath.addLine(to: CGPoint(x: 33.26, y: 131.1))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 65.08, y: 131.1))
        bezierPath.addCurve(to: CGPoint(x: 60.75, y: 107.44), controlPoint1: CGPoint(x: 62.88, y: 124.29), controlPoint2: CGPoint(x: 61.31, y: 116.44))
        bezierPath.addLine(to: CGPoint(x: 92.89, y: 107.44))
        bezierPath.addLine(to: CGPoint(x: 92.89, y: 131.1))
        bezierPath.addLine(to: CGPoint(x: 65.08, y: 131.1))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 107.39, y: 131.1))
        bezierPath.addLine(to: CGPoint(x: 107.39, y: 107.44))
        bezierPath.addLine(to: CGPoint(x: 139.53, y: 107.44))
        bezierPath.addCurve(to: CGPoint(x: 135.21, y: 131.1), controlPoint1: CGPoint(x: 138.97, y: 116.44), controlPoint2: CGPoint(x: 137.41, y: 124.29))
        bezierPath.addLine(to: CGPoint(x: 107.39, y: 131.1))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 149.59, y: 131.1))
        bezierPath.addCurve(to: CGPoint(x: 153.27, y: 107.44), controlPoint1: CGPoint(x: 151.51, y: 124.09), controlPoint2: CGPoint(x: 152.78, y: 116.19))
        bezierPath.addLine(to: CGPoint(x: 173.89, y: 107.44))
        bezierPath.addCurve(to: CGPoint(x: 167.33, y: 131.1), controlPoint1: CGPoint(x: 173.05, y: 115.83), controlPoint2: CGPoint(x: 170.74, y: 123.77))
        bezierPath.addLine(to: CGPoint(x: 149.59, y: 131.1))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 26.69, y: 92.94))
        bezierPath.addCurve(to: CGPoint(x: 33.11, y: 69.29), controlPoint1: CGPoint(x: 27.49, y: 84.56), controlPoint2: CGPoint(x: 29.74, y: 76.62))
        bezierPath.addLine(to: CGPoint(x: 50.69, y: 69.29))
        bezierPath.addCurve(to: CGPoint(x: 47.02, y: 92.94), controlPoint1: CGPoint(x: 48.78, y: 76.29), controlPoint2: CGPoint(x: 47.51, y: 84.2))
        bezierPath.addLine(to: CGPoint(x: 26.69, y: 92.94))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 60.75, y: 92.94))
        bezierPath.addCurve(to: CGPoint(x: 65.08, y: 69.29), controlPoint1: CGPoint(x: 61.31, y: 83.95), controlPoint2: CGPoint(x: 62.88, y: 76.1))
        bezierPath.addLine(to: CGPoint(x: 92.89, y: 69.29))
        bezierPath.addLine(to: CGPoint(x: 92.89, y: 92.94))
        bezierPath.addLine(to: CGPoint(x: 60.75, y: 92.94))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 107.39, y: 92.94))
        bezierPath.addLine(to: CGPoint(x: 107.39, y: 69.29))
        bezierPath.addLine(to: CGPoint(x: 135.21, y: 69.29))
        bezierPath.addCurve(to: CGPoint(x: 139.53, y: 92.94), controlPoint1: CGPoint(x: 137.41, y: 76.1), controlPoint2: CGPoint(x: 138.97, y: 83.95))
        bezierPath.addLine(to: CGPoint(x: 107.39, y: 92.94))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 153.27, y: 92.94))
        bezierPath.addCurve(to: CGPoint(x: 149.59, y: 69.29), controlPoint1: CGPoint(x: 152.78, y: 84.2), controlPoint2: CGPoint(x: 151.51, y: 76.29))
        bezierPath.addLine(to: CGPoint(x: 167.48, y: 69.29))
        bezierPath.addCurve(to: CGPoint(x: 173.9, y: 92.94), controlPoint1: CGPoint(x: 170.85, y: 76.62), controlPoint2: CGPoint(x: 173.1, y: 84.56))
        bezierPath.addLine(to: CGPoint(x: 153.27, y: 92.94))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 41.92, y: 54.78))
        bezierPath.addCurve(to: CGPoint(x: 70.6, y: 32.34), controlPoint1: CGPoint(x: 49.43, y: 45.12), controlPoint2: CGPoint(x: 59.26, y: 37.34))
        bezierPath.addCurve(to: CGPoint(x: 55.91, y: 54.78), controlPoint1: CGPoint(x: 65.52, y: 37.93), controlPoint2: CGPoint(x: 60.23, y: 45.31))
        bezierPath.addLine(to: CGPoint(x: 41.92, y: 54.78))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 144.38, y: 54.78))
        bezierPath.addCurve(to: CGPoint(x: 129.47, y: 32.09), controlPoint1: CGPoint(x: 139.99, y: 45.18), controlPoint2: CGPoint(x: 134.61, y: 37.71))
        bezierPath.addCurve(to: CGPoint(x: 158.67, y: 54.78), controlPoint1: CGPoint(x: 141.04, y: 37.07), controlPoint2: CGPoint(x: 151.04, y: 44.96))
        bezierPath.addLine(to: CGPoint(x: 144.38, y: 54.78))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 71.31, y: 54.78))
        bezierPath.addCurve(to: CGPoint(x: 92.89, y: 31.15), controlPoint1: CGPoint(x: 79.04, y: 40.94), controlPoint2: CGPoint(x: 88.76, y: 33.74))
        bezierPath.addLine(to: CGPoint(x: 92.89, y: 54.78))
        bezierPath.addLine(to: CGPoint(x: 71.31, y: 54.78))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 107.39, y: 54.78))
        bezierPath.addLine(to: CGPoint(x: 107.39, y: 31.15))
        bezierPath.addCurve(to: CGPoint(x: 128.98, y: 54.78), controlPoint1: CGPoint(x: 111.52, y: 33.74), controlPoint2: CGPoint(x: 121.24, y: 40.94))
        bezierPath.addLine(to: CGPoint(x: 107.39, y: 54.78))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 100.14, y: 8.56))
        bezierPath.addCurve(to: CGPoint(x: 8.56, y: 100.14), controlPoint1: CGPoint(x: 49.56, y: 8.56), controlPoint2: CGPoint(x: 8.56, y: 49.57))
        bezierPath.addCurve(to: CGPoint(x: 100.14, y: 191.72), controlPoint1: CGPoint(x: 8.56, y: 150.72), controlPoint2: CGPoint(x: 49.56, y: 191.72))
        bezierPath.addCurve(to: CGPoint(x: 191.72, y: 100.14), controlPoint1: CGPoint(x: 150.72, y: 191.72), controlPoint2: CGPoint(x: 191.72, y: 150.72))
        bezierPath.addCurve(to: CGPoint(x: 100.14, y: 8.56), controlPoint1: CGPoint(x: 191.72, y: 49.57), controlPoint2: CGPoint(x: 150.72, y: 8.56))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 70.14, y: 170.51))
        bezierPath.addCurve(to: CGPoint(x: 72.57, y: 169.28), controlPoint1: CGPoint(x: 71.08, y: 170.51), controlPoint2: CGPoint(x: 71.99, y: 170.07))
        bezierPath.addCurve(to: CGPoint(x: 72.38, y: 165.51), controlPoint1: CGPoint(x: 73.4, y: 168.13), controlPoint2: CGPoint(x: 73.33, y: 166.56))
        bezierPath.addCurve(to: CGPoint(x: 58.64, y: 144.36), controlPoint1: CGPoint(x: 66.83, y: 159.31), controlPoint2: CGPoint(x: 62.21, y: 152.19))
        bezierPath.addCurve(to: CGPoint(x: 55.91, y: 142.6), controlPoint1: CGPoint(x: 58.15, y: 143.29), controlPoint2: CGPoint(x: 57.09, y: 142.6))
        bezierPath.addLine(to: CGPoint(x: 42.15, y: 142.6))
        bezierPath.addCurve(to: CGPoint(x: 39.45, y: 144.29), controlPoint1: CGPoint(x: 41, y: 142.6), controlPoint2: CGPoint(x: 39.96, y: 143.26))
        bezierPath.addCurve(to: CGPoint(x: 39.79, y: 147.46), controlPoint1: CGPoint(x: 38.95, y: 145.32), controlPoint2: CGPoint(x: 39.08, y: 146.55))
        bezierPath.addCurve(to: CGPoint(x: 68.92, y: 170.24), controlPoint1: CGPoint(x: 47.51, y: 157.28), controlPoint2: CGPoint(x: 57.58, y: 165.16))
        bezierPath.addCurve(to: CGPoint(x: 70.14, y: 170.51), controlPoint1: CGPoint(x: 69.31, y: 170.42), controlPoint2: CGPoint(x: 69.73, y: 170.51))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 92.89, y: 172.24))
        bezierPath.addCurve(to: CGPoint(x: 94.34, y: 171.86), controlPoint1: CGPoint(x: 93.39, y: 172.24), controlPoint2: CGPoint(x: 93.89, y: 172.11))
        bezierPath.addCurve(to: CGPoint(x: 95.89, y: 169.24), controlPoint1: CGPoint(x: 95.3, y: 171.33), controlPoint2: CGPoint(x: 95.89, y: 170.33))
        bezierPath.addLine(to: CGPoint(x: 95.89, y: 145.6))
        bezierPath.addCurve(to: CGPoint(x: 92.89, y: 142.6), controlPoint1: CGPoint(x: 95.89, y: 143.95), controlPoint2: CGPoint(x: 94.55, y: 142.6))
        bezierPath.addLine(to: CGPoint(x: 71.31, y: 142.6))
        bezierPath.addCurve(to: CGPoint(x: 68.72, y: 144.08), controlPoint1: CGPoint(x: 70.24, y: 142.6), controlPoint2: CGPoint(x: 69.26, y: 143.17))
        bezierPath.addCurve(to: CGPoint(x: 68.69, y: 147.07), controlPoint1: CGPoint(x: 68.18, y: 145), controlPoint2: CGPoint(x: 68.17, y: 146.14))
        bezierPath.addCurve(to: CGPoint(x: 91.3, y: 171.78), controlPoint1: CGPoint(x: 76.86, y: 161.68), controlPoint2: CGPoint(x: 87.22, y: 169.22))
        bezierPath.addCurve(to: CGPoint(x: 92.89, y: 172.24), controlPoint1: CGPoint(x: 91.78, y: 172.08), controlPoint2: CGPoint(x: 92.34, y: 172.24))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 107.39, y: 172.24))
        bezierPath.addCurve(to: CGPoint(x: 108.99, y: 171.78), controlPoint1: CGPoint(x: 107.95, y: 172.24), controlPoint2: CGPoint(x: 108.51, y: 172.09))
        bezierPath.addCurve(to: CGPoint(x: 131.6, y: 147.07), controlPoint1: CGPoint(x: 113.07, y: 169.21), controlPoint2: CGPoint(x: 123.44, y: 161.66))
        bezierPath.addCurve(to: CGPoint(x: 131.57, y: 144.08), controlPoint1: CGPoint(x: 132.12, y: 146.14), controlPoint2: CGPoint(x: 132.1, y: 145))
        bezierPath.addCurve(to: CGPoint(x: 128.98, y: 142.6), controlPoint1: CGPoint(x: 131.03, y: 143.17), controlPoint2: CGPoint(x: 130.04, y: 142.6))
        bezierPath.addLine(to: CGPoint(x: 107.39, y: 142.6))
        bezierPath.addCurve(to: CGPoint(x: 104.39, y: 145.6), controlPoint1: CGPoint(x: 105.74, y: 142.6), controlPoint2: CGPoint(x: 104.39, y: 143.95))
        bezierPath.addLine(to: CGPoint(x: 104.39, y: 169.24))
        bezierPath.addCurve(to: CGPoint(x: 105.94, y: 171.87), controlPoint1: CGPoint(x: 104.39, y: 170.34), controlPoint2: CGPoint(x: 104.99, y: 171.34))
        bezierPath.addCurve(to: CGPoint(x: 107.39, y: 172.24), controlPoint1: CGPoint(x: 106.4, y: 172.12), controlPoint2: CGPoint(x: 106.9, y: 172.24))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 129.93, y: 170.76))
        bezierPath.addCurve(to: CGPoint(x: 131.13, y: 170.51), controlPoint1: CGPoint(x: 130.33, y: 170.76), controlPoint2: CGPoint(x: 130.74, y: 170.68))
        bezierPath.addCurve(to: CGPoint(x: 160.8, y: 147.46), controlPoint1: CGPoint(x: 142.68, y: 165.43), controlPoint2: CGPoint(x: 152.94, y: 157.46))
        bezierPath.addCurve(to: CGPoint(x: 161.14, y: 144.29), controlPoint1: CGPoint(x: 161.51, y: 146.55), controlPoint2: CGPoint(x: 161.64, y: 145.32))
        bezierPath.addCurve(to: CGPoint(x: 158.44, y: 142.6), controlPoint1: CGPoint(x: 160.63, y: 143.26), controlPoint2: CGPoint(x: 159.59, y: 142.6))
        bezierPath.addLine(to: CGPoint(x: 144.38, y: 142.6))
        bezierPath.addCurve(to: CGPoint(x: 141.65, y: 144.36), controlPoint1: CGPoint(x: 143.2, y: 142.6), controlPoint2: CGPoint(x: 142.13, y: 143.29))
        bezierPath.addCurve(to: CGPoint(x: 127.7, y: 165.75), controlPoint1: CGPoint(x: 138.03, y: 152.29), controlPoint2: CGPoint(x: 133.34, y: 159.49))
        bezierPath.addCurve(to: CGPoint(x: 127.49, y: 169.52), controlPoint1: CGPoint(x: 126.75, y: 166.8), controlPoint2: CGPoint(x: 126.67, y: 168.37))
        bezierPath.addCurve(to: CGPoint(x: 129.93, y: 170.76), controlPoint1: CGPoint(x: 128.07, y: 170.32), controlPoint2: CGPoint(x: 128.99, y: 170.76))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 33.26, y: 134.1))
        bezierPath.addLine(to: CGPoint(x: 50.69, y: 134.1))
        bezierPath.addCurve(to: CGPoint(x: 53.08, y: 132.92), controlPoint1: CGPoint(x: 51.63, y: 134.1), controlPoint2: CGPoint(x: 52.51, y: 133.66))
        bezierPath.addCurve(to: CGPoint(x: 53.59, y: 130.31), controlPoint1: CGPoint(x: 53.65, y: 132.18), controlPoint2: CGPoint(x: 53.83, y: 131.21))
        bezierPath.addCurve(to: CGPoint(x: 50.01, y: 107.28), controlPoint1: CGPoint(x: 51.68, y: 123.35), controlPoint2: CGPoint(x: 50.48, y: 115.6))
        bezierPath.addCurve(to: CGPoint(x: 47.02, y: 104.44), controlPoint1: CGPoint(x: 49.92, y: 105.69), controlPoint2: CGPoint(x: 48.61, y: 104.44))
        bezierPath.addLine(to: CGPoint(x: 26.7, y: 104.44))
        bezierPath.addCurve(to: CGPoint(x: 24.48, y: 105.43), controlPoint1: CGPoint(x: 25.85, y: 104.44), controlPoint2: CGPoint(x: 25.05, y: 104.8))
        bezierPath.addCurve(to: CGPoint(x: 23.72, y: 107.74), controlPoint1: CGPoint(x: 23.91, y: 106.06), controlPoint2: CGPoint(x: 23.63, y: 106.9))
        bezierPath.addCurve(to: CGPoint(x: 30.54, y: 132.37), controlPoint1: CGPoint(x: 24.57, y: 116.18), controlPoint2: CGPoint(x: 26.86, y: 124.47))
        bezierPath.addCurve(to: CGPoint(x: 33.26, y: 134.1), controlPoint1: CGPoint(x: 31.03, y: 133.42), controlPoint2: CGPoint(x: 32.1, y: 134.1))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 65.08, y: 134.1))
        bezierPath.addLine(to: CGPoint(x: 92.89, y: 134.1))
        bezierPath.addCurve(to: CGPoint(x: 95.89, y: 131.1), controlPoint1: CGPoint(x: 94.55, y: 134.1), controlPoint2: CGPoint(x: 95.89, y: 132.76))
        bezierPath.addLine(to: CGPoint(x: 95.89, y: 107.44))
        bezierPath.addCurve(to: CGPoint(x: 92.89, y: 104.44), controlPoint1: CGPoint(x: 95.89, y: 105.79), controlPoint2: CGPoint(x: 94.55, y: 104.44))
        bezierPath.addLine(to: CGPoint(x: 60.75, y: 104.44))
        bezierPath.addCurve(to: CGPoint(x: 58.57, y: 105.39), controlPoint1: CGPoint(x: 59.93, y: 104.44), controlPoint2: CGPoint(x: 59.14, y: 104.79))
        bezierPath.addCurve(to: CGPoint(x: 57.76, y: 107.63), controlPoint1: CGPoint(x: 58, y: 105.99), controlPoint2: CGPoint(x: 57.71, y: 106.8))
        bezierPath.addCurve(to: CGPoint(x: 62.22, y: 132.02), controlPoint1: CGPoint(x: 58.3, y: 116.31), controlPoint2: CGPoint(x: 59.8, y: 124.52))
        bezierPath.addCurve(to: CGPoint(x: 65.08, y: 134.1), controlPoint1: CGPoint(x: 62.62, y: 133.26), controlPoint2: CGPoint(x: 63.78, y: 134.1))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 107.39, y: 134.1))
        bezierPath.addLine(to: CGPoint(x: 135.21, y: 134.1))
        bezierPath.addCurve(to: CGPoint(x: 138.06, y: 132.02), controlPoint1: CGPoint(x: 136.51, y: 134.1), controlPoint2: CGPoint(x: 137.66, y: 133.26))
        bezierPath.addCurve(to: CGPoint(x: 142.53, y: 107.63), controlPoint1: CGPoint(x: 140.48, y: 124.52), controlPoint2: CGPoint(x: 141.99, y: 116.31))
        bezierPath.addCurve(to: CGPoint(x: 141.72, y: 105.39), controlPoint1: CGPoint(x: 142.58, y: 106.8), controlPoint2: CGPoint(x: 142.28, y: 105.99))
        bezierPath.addCurve(to: CGPoint(x: 139.53, y: 104.44), controlPoint1: CGPoint(x: 141.15, y: 104.79), controlPoint2: CGPoint(x: 140.36, y: 104.44))
        bezierPath.addLine(to: CGPoint(x: 107.39, y: 104.44))
        bezierPath.addCurve(to: CGPoint(x: 104.39, y: 107.44), controlPoint1: CGPoint(x: 105.74, y: 104.44), controlPoint2: CGPoint(x: 104.39, y: 105.79))
        bezierPath.addLine(to: CGPoint(x: 104.39, y: 131.1))
        bezierPath.addCurve(to: CGPoint(x: 107.39, y: 134.1), controlPoint1: CGPoint(x: 104.39, y: 132.76), controlPoint2: CGPoint(x: 105.74, y: 134.1))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 149.59, y: 134.1))
        bezierPath.addLine(to: CGPoint(x: 167.33, y: 134.1))
        bezierPath.addCurve(to: CGPoint(x: 170.05, y: 132.37), controlPoint1: CGPoint(x: 168.5, y: 134.1), controlPoint2: CGPoint(x: 169.56, y: 133.42))
        bezierPath.addCurve(to: CGPoint(x: 176.87, y: 107.74), controlPoint1: CGPoint(x: 173.73, y: 124.47), controlPoint2: CGPoint(x: 176.03, y: 116.18))
        bezierPath.addCurve(to: CGPoint(x: 176.11, y: 105.43), controlPoint1: CGPoint(x: 176.96, y: 106.9), controlPoint2: CGPoint(x: 176.68, y: 106.06))
        bezierPath.addCurve(to: CGPoint(x: 173.89, y: 104.44), controlPoint1: CGPoint(x: 175.55, y: 104.8), controlPoint2: CGPoint(x: 174.74, y: 104.44))
        bezierPath.addLine(to: CGPoint(x: 153.27, y: 104.44))
        bezierPath.addCurve(to: CGPoint(x: 150.27, y: 107.28), controlPoint1: CGPoint(x: 151.68, y: 104.44), controlPoint2: CGPoint(x: 150.36, y: 105.69))
        bezierPath.addCurve(to: CGPoint(x: 146.7, y: 130.31), controlPoint1: CGPoint(x: 149.8, y: 115.6), controlPoint2: CGPoint(x: 148.6, y: 123.35))
        bezierPath.addCurve(to: CGPoint(x: 147.21, y: 132.92), controlPoint1: CGPoint(x: 146.45, y: 131.21), controlPoint2: CGPoint(x: 146.64, y: 132.18))
        bezierPath.addCurve(to: CGPoint(x: 149.59, y: 134.1), controlPoint1: CGPoint(x: 147.78, y: 133.66), controlPoint2: CGPoint(x: 148.66, y: 134.1))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 26.69, y: 95.94))
        bezierPath.addLine(to: CGPoint(x: 47.02, y: 95.94))
        bezierPath.addCurve(to: CGPoint(x: 50.01, y: 93.11), controlPoint1: CGPoint(x: 48.61, y: 95.94), controlPoint2: CGPoint(x: 49.92, y: 94.7))
        bezierPath.addCurve(to: CGPoint(x: 53.59, y: 70.08), controlPoint1: CGPoint(x: 50.48, y: 84.78), controlPoint2: CGPoint(x: 51.68, y: 77.04))
        bezierPath.addCurve(to: CGPoint(x: 53.08, y: 67.47), controlPoint1: CGPoint(x: 53.83, y: 69.17), controlPoint2: CGPoint(x: 53.65, y: 68.21))
        bezierPath.addCurve(to: CGPoint(x: 50.69, y: 66.29), controlPoint1: CGPoint(x: 52.51, y: 66.72), controlPoint2: CGPoint(x: 51.63, y: 66.29))
        bezierPath.addLine(to: CGPoint(x: 33.11, y: 66.29))
        bezierPath.addCurve(to: CGPoint(x: 30.39, y: 68.03), controlPoint1: CGPoint(x: 31.94, y: 66.29), controlPoint2: CGPoint(x: 30.88, y: 66.97))
        bezierPath.addCurve(to: CGPoint(x: 23.7, y: 92.65), controlPoint1: CGPoint(x: 26.76, y: 75.92), controlPoint2: CGPoint(x: 24.51, y: 84.21))
        bezierPath.addCurve(to: CGPoint(x: 24.47, y: 94.96), controlPoint1: CGPoint(x: 23.62, y: 93.5), controlPoint2: CGPoint(x: 23.9, y: 94.33))
        bezierPath.addCurve(to: CGPoint(x: 26.69, y: 95.94), controlPoint1: CGPoint(x: 25.04, y: 95.58), controlPoint2: CGPoint(x: 25.84, y: 95.94))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 60.75, y: 95.94))
        bezierPath.addLine(to: CGPoint(x: 92.89, y: 95.94))
        bezierPath.addCurve(to: CGPoint(x: 95.89, y: 92.94), controlPoint1: CGPoint(x: 94.55, y: 95.94), controlPoint2: CGPoint(x: 95.89, y: 94.6))
        bezierPath.addLine(to: CGPoint(x: 95.89, y: 69.29))
        bezierPath.addCurve(to: CGPoint(x: 92.89, y: 66.29), controlPoint1: CGPoint(x: 95.89, y: 67.63), controlPoint2: CGPoint(x: 94.55, y: 66.29))
        bezierPath.addLine(to: CGPoint(x: 65.08, y: 66.29))
        bezierPath.addCurve(to: CGPoint(x: 62.22, y: 68.36), controlPoint1: CGPoint(x: 63.78, y: 66.29), controlPoint2: CGPoint(x: 62.62, y: 67.13))
        bezierPath.addCurve(to: CGPoint(x: 57.76, y: 92.75), controlPoint1: CGPoint(x: 59.8, y: 75.87), controlPoint2: CGPoint(x: 58.3, y: 84.07))
        bezierPath.addCurve(to: CGPoint(x: 58.57, y: 95), controlPoint1: CGPoint(x: 57.71, y: 93.58), controlPoint2: CGPoint(x: 58, y: 94.39))
        bezierPath.addCurve(to: CGPoint(x: 60.75, y: 95.94), controlPoint1: CGPoint(x: 59.14, y: 95.6), controlPoint2: CGPoint(x: 59.93, y: 95.94))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 107.39, y: 95.94))
        bezierPath.addLine(to: CGPoint(x: 139.53, y: 95.94))
        bezierPath.addCurve(to: CGPoint(x: 141.72, y: 95), controlPoint1: CGPoint(x: 140.36, y: 95.94), controlPoint2: CGPoint(x: 141.15, y: 95.6))
        bezierPath.addCurve(to: CGPoint(x: 142.53, y: 92.75), controlPoint1: CGPoint(x: 142.28, y: 94.39), controlPoint2: CGPoint(x: 142.58, y: 93.58))
        bezierPath.addCurve(to: CGPoint(x: 138.06, y: 68.36), controlPoint1: CGPoint(x: 141.99, y: 84.07), controlPoint2: CGPoint(x: 140.48, y: 75.87))
        bezierPath.addCurve(to: CGPoint(x: 135.21, y: 66.29), controlPoint1: CGPoint(x: 137.66, y: 67.13), controlPoint2: CGPoint(x: 136.51, y: 66.29))
        bezierPath.addLine(to: CGPoint(x: 107.39, y: 66.29))
        bezierPath.addCurve(to: CGPoint(x: 104.39, y: 69.29), controlPoint1: CGPoint(x: 105.74, y: 66.29), controlPoint2: CGPoint(x: 104.39, y: 67.63))
        bezierPath.addLine(to: CGPoint(x: 104.39, y: 92.94))
        bezierPath.addCurve(to: CGPoint(x: 107.39, y: 95.94), controlPoint1: CGPoint(x: 104.39, y: 94.6), controlPoint2: CGPoint(x: 105.74, y: 95.94))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 153.27, y: 95.94))
        bezierPath.addLine(to: CGPoint(x: 173.9, y: 95.94))
        bezierPath.addCurve(to: CGPoint(x: 176.12, y: 94.96), controlPoint1: CGPoint(x: 174.75, y: 95.94), controlPoint2: CGPoint(x: 175.56, y: 95.58))
        bezierPath.addCurve(to: CGPoint(x: 176.89, y: 92.65), controlPoint1: CGPoint(x: 176.69, y: 94.33), controlPoint2: CGPoint(x: 176.97, y: 93.5))
        bezierPath.addCurve(to: CGPoint(x: 170.21, y: 68.03), controlPoint1: CGPoint(x: 176.08, y: 84.2), controlPoint2: CGPoint(x: 173.83, y: 75.92))
        bezierPath.addCurve(to: CGPoint(x: 167.48, y: 66.29), controlPoint1: CGPoint(x: 169.72, y: 66.97), controlPoint2: CGPoint(x: 168.65, y: 66.29))
        bezierPath.addLine(to: CGPoint(x: 149.59, y: 66.29))
        bezierPath.addCurve(to: CGPoint(x: 147.21, y: 67.47), controlPoint1: CGPoint(x: 148.66, y: 66.29), controlPoint2: CGPoint(x: 147.78, y: 66.72))
        bezierPath.addCurve(to: CGPoint(x: 146.7, y: 70.08), controlPoint1: CGPoint(x: 146.64, y: 68.21), controlPoint2: CGPoint(x: 146.45, y: 69.17))
        bezierPath.addCurve(to: CGPoint(x: 150.27, y: 93.11), controlPoint1: CGPoint(x: 148.6, y: 77.04), controlPoint2: CGPoint(x: 149.8, y: 84.78))
        bezierPath.addCurve(to: CGPoint(x: 153.27, y: 95.94), controlPoint1: CGPoint(x: 150.36, y: 94.7), controlPoint2: CGPoint(x: 151.68, y: 95.94))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 41.92, y: 57.78))
        bezierPath.addLine(to: CGPoint(x: 55.91, y: 57.78))
        bezierPath.addCurve(to: CGPoint(x: 58.64, y: 56.03), controlPoint1: CGPoint(x: 57.09, y: 57.78), controlPoint2: CGPoint(x: 58.15, y: 57.1))
        bezierPath.addCurve(to: CGPoint(x: 72.82, y: 34.36), controlPoint1: CGPoint(x: 62.31, y: 47.97), controlPoint2: CGPoint(x: 67.08, y: 40.68))
        bezierPath.addCurve(to: CGPoint(x: 73.03, y: 30.59), controlPoint1: CGPoint(x: 73.77, y: 33.31), controlPoint2: CGPoint(x: 73.86, y: 31.74))
        bezierPath.addCurve(to: CGPoint(x: 70.6, y: 29.34), controlPoint1: CGPoint(x: 72.46, y: 29.79), controlPoint2: CGPoint(x: 71.54, y: 29.34))
        bezierPath.addCurve(to: CGPoint(x: 69.39, y: 29.6), controlPoint1: CGPoint(x: 70.19, y: 29.34), controlPoint2: CGPoint(x: 69.78, y: 29.42))
        bezierPath.addCurve(to: CGPoint(x: 39.55, y: 52.94), controlPoint1: CGPoint(x: 57.75, y: 34.73), controlPoint2: CGPoint(x: 47.43, y: 42.8))
        bezierPath.addCurve(to: CGPoint(x: 39.23, y: 56.1), controlPoint1: CGPoint(x: 38.85, y: 53.85), controlPoint2: CGPoint(x: 38.72, y: 55.07))
        bezierPath.addCurve(to: CGPoint(x: 41.92, y: 57.78), controlPoint1: CGPoint(x: 39.73, y: 57.13), controlPoint2: CGPoint(x: 40.78, y: 57.78))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 144.38, y: 57.78))
        bezierPath.addLine(to: CGPoint(x: 158.67, y: 57.78))
        bezierPath.addCurve(to: CGPoint(x: 161.36, y: 56.1), controlPoint1: CGPoint(x: 159.82, y: 57.78), controlPoint2: CGPoint(x: 160.86, y: 57.13))
        bezierPath.addCurve(to: CGPoint(x: 161.04, y: 52.94), controlPoint1: CGPoint(x: 161.87, y: 55.07), controlPoint2: CGPoint(x: 161.74, y: 53.85))
        bezierPath.addCurve(to: CGPoint(x: 130.66, y: 29.33), controlPoint1: CGPoint(x: 153.01, y: 42.6), controlPoint2: CGPoint(x: 142.5, y: 34.44))
        bezierPath.addCurve(to: CGPoint(x: 129.47, y: 29.09), controlPoint1: CGPoint(x: 130.27, y: 29.17), controlPoint2: CGPoint(x: 129.87, y: 29.09))
        bezierPath.addCurve(to: CGPoint(x: 127.03, y: 30.35), controlPoint1: CGPoint(x: 128.52, y: 29.09), controlPoint2: CGPoint(x: 127.6, y: 29.54))
        bezierPath.addCurve(to: CGPoint(x: 127.26, y: 34.11), controlPoint1: CGPoint(x: 126.21, y: 31.5), controlPoint2: CGPoint(x: 126.3, y: 33.07))
        bezierPath.addCurve(to: CGPoint(x: 141.65, y: 56.03), controlPoint1: CGPoint(x: 133.07, y: 40.47), controlPoint2: CGPoint(x: 137.91, y: 47.84))
        bezierPath.addCurve(to: CGPoint(x: 144.38, y: 57.78), controlPoint1: CGPoint(x: 142.13, y: 57.1), controlPoint2: CGPoint(x: 143.2, y: 57.78))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 71.31, y: 57.78))
        bezierPath.addLine(to: CGPoint(x: 92.89, y: 57.78))
        bezierPath.addCurve(to: CGPoint(x: 95.89, y: 54.78), controlPoint1: CGPoint(x: 94.55, y: 57.78), controlPoint2: CGPoint(x: 95.89, y: 56.44))
        bezierPath.addLine(to: CGPoint(x: 95.89, y: 31.15))
        bezierPath.addCurve(to: CGPoint(x: 94.34, y: 28.52), controlPoint1: CGPoint(x: 95.89, y: 30.06), controlPoint2: CGPoint(x: 95.3, y: 29.05))
        bezierPath.addCurve(to: CGPoint(x: 92.89, y: 28.15), controlPoint1: CGPoint(x: 93.89, y: 28.27), controlPoint2: CGPoint(x: 93.39, y: 28.15))
        bezierPath.addCurve(to: CGPoint(x: 91.3, y: 28.61), controlPoint1: CGPoint(x: 92.34, y: 28.15), controlPoint2: CGPoint(x: 91.78, y: 28.3))
        bezierPath.addCurve(to: CGPoint(x: 68.69, y: 53.32), controlPoint1: CGPoint(x: 87.22, y: 31.17), controlPoint2: CGPoint(x: 76.86, y: 38.7))
        bezierPath.addCurve(to: CGPoint(x: 68.72, y: 56.3), controlPoint1: CGPoint(x: 68.17, y: 54.25), controlPoint2: CGPoint(x: 68.18, y: 55.38))
        bezierPath.addCurve(to: CGPoint(x: 71.31, y: 57.78), controlPoint1: CGPoint(x: 69.26, y: 57.22), controlPoint2: CGPoint(x: 70.24, y: 57.78))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 107.39, y: 57.78))
        bezierPath.addLine(to: CGPoint(x: 128.98, y: 57.78))
        bezierPath.addCurve(to: CGPoint(x: 131.57, y: 56.3), controlPoint1: CGPoint(x: 130.04, y: 57.78), controlPoint2: CGPoint(x: 131.03, y: 57.22))
        bezierPath.addCurve(to: CGPoint(x: 131.6, y: 53.32), controlPoint1: CGPoint(x: 132.1, y: 55.38), controlPoint2: CGPoint(x: 132.12, y: 54.25))
        bezierPath.addCurve(to: CGPoint(x: 108.99, y: 28.61), controlPoint1: CGPoint(x: 123.43, y: 38.7), controlPoint2: CGPoint(x: 113.07, y: 31.17))
        bezierPath.addCurve(to: CGPoint(x: 107.39, y: 28.15), controlPoint1: CGPoint(x: 108.5, y: 28.3), controlPoint2: CGPoint(x: 107.95, y: 28.15))
        bezierPath.addCurve(to: CGPoint(x: 105.94, y: 28.52), controlPoint1: CGPoint(x: 106.9, y: 28.15), controlPoint2: CGPoint(x: 106.4, y: 28.27))
        bezierPath.addCurve(to: CGPoint(x: 104.39, y: 31.15), controlPoint1: CGPoint(x: 104.99, y: 29.05), controlPoint2: CGPoint(x: 104.39, y: 30.06))
        bezierPath.addLine(to: CGPoint(x: 104.39, y: 54.78))
        bezierPath.addCurve(to: CGPoint(x: 107.39, y: 57.78), controlPoint1: CGPoint(x: 104.39, y: 56.44), controlPoint2: CGPoint(x: 105.74, y: 57.78))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 100.14, y: 11.56))
        bezierPath.addCurve(to: CGPoint(x: 188.72, y: 100.14), controlPoint1: CGPoint(x: 148.99, y: 11.56), controlPoint2: CGPoint(x: 188.72, y: 51.3))
        bezierPath.addCurve(to: CGPoint(x: 100.14, y: 188.72), controlPoint1: CGPoint(x: 188.72, y: 148.98), controlPoint2: CGPoint(x: 148.99, y: 188.72))
        bezierPath.addCurve(to: CGPoint(x: 11.56, y: 100.14), controlPoint1: CGPoint(x: 51.3, y: 188.72), controlPoint2: CGPoint(x: 11.56, y: 148.98))
        bezierPath.addCurve(to: CGPoint(x: 100.14, y: 11.56), controlPoint1: CGPoint(x: 11.56, y: 51.3), controlPoint2: CGPoint(x: 51.3, y: 11.56))
        bezierPath.close()
        fillColor19.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawTimeIncidentRedCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor19 = UIColor(red: 0.872, green: 0.130, blue: 0.168, alpha: 1.000)

        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath()
        clipPath.move(to: CGPoint(x: 153, y: 0))
        clipPath.addLine(to: CGPoint(x: 131.08, y: 28.78))
        clipPath.addLine(to: CGPoint(x: 160.82, y: 49.27))
        clipPath.addLine(to: CGPoint(x: 96.46, y: 121.34))
        clipPath.addLine(to: CGPoint(x: 20.69, y: 98.12))
        clipPath.addLine(to: CGPoint(x: 38.71, y: 49.27))
        clipPath.addLine(to: CGPoint(x: 0, y: 20.96))
        clipPath.addLine(to: CGPoint(x: 0, y: 156.82))
        clipPath.addLine(to: CGPoint(x: 0.64, y: 191.57))
        clipPath.addLine(to: CGPoint(x: 195.45, y: 191.57))
        clipPath.addLine(to: CGPoint(x: 195.45, y: 0))
        clipPath.addLine(to: CGPoint(x: 153, y: 0))
        clipPath.close()
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 100.72, y: 156.21))
        bezierPath.addCurve(to: CGPoint(x: 40.2, y: 95.7), controlPoint1: CGPoint(x: 67.35, y: 156.21), controlPoint2: CGPoint(x: 40.2, y: 129.07))
        bezierPath.addCurve(to: CGPoint(x: 100.72, y: 35.19), controlPoint1: CGPoint(x: 40.2, y: 62.33), controlPoint2: CGPoint(x: 67.35, y: 35.19))
        bezierPath.addCurve(to: CGPoint(x: 161.23, y: 95.7), controlPoint1: CGPoint(x: 134.08, y: 35.19), controlPoint2: CGPoint(x: 161.23, y: 62.33))
        bezierPath.addCurve(to: CGPoint(x: 100.72, y: 156.21), controlPoint1: CGPoint(x: 161.23, y: 129.07), controlPoint2: CGPoint(x: 134.08, y: 156.21))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 100.72, y: 3.15))
        bezierPath.addCurve(to: CGPoint(x: 8.17, y: 95.7), controlPoint1: CGPoint(x: 49.69, y: 3.15), controlPoint2: CGPoint(x: 8.17, y: 44.67))
        bezierPath.addCurve(to: CGPoint(x: 100.72, y: 188.24), controlPoint1: CGPoint(x: 8.17, y: 146.73), controlPoint2: CGPoint(x: 49.69, y: 188.24))
        bezierPath.addCurve(to: CGPoint(x: 193.26, y: 95.7), controlPoint1: CGPoint(x: 151.74, y: 188.24), controlPoint2: CGPoint(x: 193.26, y: 146.73))
        bezierPath.addCurve(to: CGPoint(x: 100.72, y: 3.15), controlPoint1: CGPoint(x: 193.26, y: 44.67), controlPoint2: CGPoint(x: 151.74, y: 3.15))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 100.72, y: 163.72))
        bezierPath.addCurve(to: CGPoint(x: 168.74, y: 95.7), controlPoint1: CGPoint(x: 138.28, y: 163.72), controlPoint2: CGPoint(x: 168.74, y: 133.27))
        bezierPath.addCurve(to: CGPoint(x: 100.72, y: 27.67), controlPoint1: CGPoint(x: 168.74, y: 58.13), controlPoint2: CGPoint(x: 138.28, y: 27.67))
        bezierPath.addCurve(to: CGPoint(x: 32.69, y: 95.7), controlPoint1: CGPoint(x: 63.15, y: 27.67), controlPoint2: CGPoint(x: 32.69, y: 58.13))
        bezierPath.addCurve(to: CGPoint(x: 100.72, y: 163.72), controlPoint1: CGPoint(x: 32.69, y: 133.27), controlPoint2: CGPoint(x: 63.15, y: 163.72))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 100.72, y: 10.67))
        bezierPath.addCurve(to: CGPoint(x: 185.75, y: 95.7), controlPoint1: CGPoint(x: 147.68, y: 10.67), controlPoint2: CGPoint(x: 185.75, y: 48.74))
        bezierPath.addCurve(to: CGPoint(x: 100.72, y: 180.73), controlPoint1: CGPoint(x: 185.75, y: 142.66), controlPoint2: CGPoint(x: 147.68, y: 180.73))
        bezierPath.addCurve(to: CGPoint(x: 15.68, y: 95.7), controlPoint1: CGPoint(x: 53.75, y: 180.73), controlPoint2: CGPoint(x: 15.68, y: 142.66))
        bezierPath.addCurve(to: CGPoint(x: 100.72, y: 10.67), controlPoint1: CGPoint(x: 15.68, y: 48.74), controlPoint2: CGPoint(x: 53.75, y: 10.67))
        bezierPath.close()
        fillColor19.setFill()
        bezierPath.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 136.74, y: 39.72))
        bezier3Path.addLine(to: CGPoint(x: 100.82, y: 95.65))
        bezier3Path.addLine(to: CGPoint(x: 45.29, y: 68.39))
        bezier3Path.addLine(to: CGPoint(x: 33.16, y: 72.54))
        bezier3Path.addLine(to: CGPoint(x: 37.75, y: 85.21))
        bezier3Path.addLine(to: CGPoint(x: 103.37, y: 115.69))
        bezier3Path.addLine(to: CGPoint(x: 149.2, y: 47.56))
        bezier3Path.addLine(to: CGPoint(x: 150.4, y: 31.05))
        bezier3Path.addLine(to: CGPoint(x: 136.74, y: 39.72))
        bezier3Path.close()
        fillColor19.setFill()
        bezier3Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLocationRedIncident(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawLocationIncidentRedCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawWorldRedIncident(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawWorldMapIncidentRedCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawTimeRedIncident(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawTimeIncidentRedCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawLocation9b9b9bCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor20 = UIColor(red: 0.534, green: 0.533, blue: 0.533, alpha: 1.000)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 101.66, y: 67.17))
        bezierPath.addCurve(to: CGPoint(x: 89.77, y: 55.29), controlPoint1: CGPoint(x: 95.1, y: 67.17), controlPoint2: CGPoint(x: 89.77, y: 61.84))
        bezierPath.addCurve(to: CGPoint(x: 101.66, y: 43.41), controlPoint1: CGPoint(x: 89.77, y: 48.74), controlPoint2: CGPoint(x: 95.1, y: 43.41))
        bezierPath.addCurve(to: CGPoint(x: 113.54, y: 55.29), controlPoint1: CGPoint(x: 108.21, y: 43.41), controlPoint2: CGPoint(x: 113.54, y: 48.74))
        bezierPath.addCurve(to: CGPoint(x: 101.66, y: 67.17), controlPoint1: CGPoint(x: 113.54, y: 61.84), controlPoint2: CGPoint(x: 108.21, y: 67.17))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 101.66, y: 8.4))
        bezierPath.addCurve(to: CGPoint(x: 54.76, y: 55.29), controlPoint1: CGPoint(x: 75.8, y: 8.4), controlPoint2: CGPoint(x: 54.76, y: 29.43))
        bezierPath.addCurve(to: CGPoint(x: 62.56, y: 81.19), controlPoint1: CGPoint(x: 54.76, y: 64.56), controlPoint2: CGPoint(x: 57.45, y: 73.5))
        bezierPath.addLine(to: CGPoint(x: 94.58, y: 155.42))
        bezierPath.addLine(to: CGPoint(x: 101.66, y: 171.85))
        bezierPath.addLine(to: CGPoint(x: 108.74, y: 155.42))
        bezierPath.addLine(to: CGPoint(x: 140.59, y: 81.43))
        bezierPath.addCurve(to: CGPoint(x: 148.55, y: 55.29), controlPoint1: CGPoint(x: 145.8, y: 73.68), controlPoint2: CGPoint(x: 148.55, y: 64.66))
        bezierPath.addCurve(to: CGPoint(x: 101.66, y: 8.4), controlPoint1: CGPoint(x: 148.55, y: 29.43), controlPoint2: CGPoint(x: 127.51, y: 8.4))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 101.66, y: 74.88))
        bezierPath.addCurve(to: CGPoint(x: 121.25, y: 55.29), controlPoint1: CGPoint(x: 112.48, y: 74.88), controlPoint2: CGPoint(x: 121.25, y: 66.11))
        bezierPath.addCurve(to: CGPoint(x: 101.66, y: 35.7), controlPoint1: CGPoint(x: 121.25, y: 44.47), controlPoint2: CGPoint(x: 112.48, y: 35.7))
        bezierPath.addCurve(to: CGPoint(x: 82.06, y: 55.29), controlPoint1: CGPoint(x: 90.83, y: 35.7), controlPoint2: CGPoint(x: 82.06, y: 44.47))
        bezierPath.addCurve(to: CGPoint(x: 101.66, y: 74.88), controlPoint1: CGPoint(x: 82.06, y: 66.11), controlPoint2: CGPoint(x: 90.83, y: 74.88))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 101.66, y: 16.11))
        bezierPath.addCurve(to: CGPoint(x: 140.84, y: 55.29), controlPoint1: CGPoint(x: 123.3, y: 16.11), controlPoint2: CGPoint(x: 140.84, y: 33.65))
        bezierPath.addCurve(to: CGPoint(x: 133.81, y: 77.69), controlPoint1: CGPoint(x: 140.84, y: 63.62), controlPoint2: CGPoint(x: 138.24, y: 71.34))
        bezierPath.addLine(to: CGPoint(x: 101.66, y: 152.37))
        bezierPath.addLine(to: CGPoint(x: 69.35, y: 77.47))
        bezierPath.addCurve(to: CGPoint(x: 62.47, y: 55.29), controlPoint1: CGPoint(x: 65.01, y: 71.16), controlPoint2: CGPoint(x: 62.47, y: 63.52))
        bezierPath.addCurve(to: CGPoint(x: 101.66, y: 16.11), controlPoint1: CGPoint(x: 62.47, y: 33.65), controlPoint2: CGPoint(x: 80.01, y: 16.11))
        bezierPath.close()
        fillColor20.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 142.28, y: 136.57))
        bezier2Path.addLine(to: CGPoint(x: 108.46, y: 136.57))
        bezier2Path.addLine(to: CGPoint(x: 101.66, y: 152.37))
        bezier2Path.addLine(to: CGPoint(x: 94.84, y: 136.57))
        bezier2Path.addLine(to: CGPoint(x: 59.09, y: 136.57))
        bezier2Path.addLine(to: CGPoint(x: 14.19, y: 191.45))
        bezier2Path.addLine(to: CGPoint(x: 185.81, y: 191.45))
        bezier2Path.addLine(to: CGPoint(x: 142.28, y: 136.57))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 138.56, y: 144.28))
        bezier2Path.addLine(to: CGPoint(x: 169.86, y: 183.74))
        bezier2Path.addLine(to: CGPoint(x: 30.45, y: 183.74))
        bezier2Path.addLine(to: CGPoint(x: 62.74, y: 144.28))
        bezier2Path.addLine(to: CGPoint(x: 89.77, y: 144.28))
        bezier2Path.addLine(to: CGPoint(x: 94.58, y: 155.42))
        bezier2Path.addCurve(to: CGPoint(x: 101.66, y: 160.08), controlPoint1: CGPoint(x: 95.8, y: 158.25), controlPoint2: CGPoint(x: 98.58, y: 160.08))
        bezier2Path.addLine(to: CGPoint(x: 101.66, y: 160.08))
        bezier2Path.addCurve(to: CGPoint(x: 108.74, y: 155.42), controlPoint1: CGPoint(x: 104.74, y: 160.08), controlPoint2: CGPoint(x: 107.52, y: 158.25))
        bezier2Path.addLine(to: CGPoint(x: 113.53, y: 144.28))
        bezier2Path.addLine(to: CGPoint(x: 138.56, y: 144.28))
        bezier2Path.close()
        fillColor20.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 94.84, y: 136.57))
        bezier3Path.addLine(to: CGPoint(x: 59.17, y: 136.57))
        bezier3Path.addLine(to: CGPoint(x: 62.94, y: 144.11))
        bezier3Path.addLine(to: CGPoint(x: 98.11, y: 144.15))
        bezier3Path.addLine(to: CGPoint(x: 94.84, y: 136.57))
        bezier3Path.close()
        fillColor20.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 142.37, y: 136.57))
        bezier4Path.addLine(to: CGPoint(x: 108.46, y: 136.57))
        bezier4Path.addLine(to: CGPoint(x: 105.19, y: 144.15))
        bezier4Path.addLine(to: CGPoint(x: 138.48, y: 144.19))
        bezier4Path.addLine(to: CGPoint(x: 142.37, y: 136.57))
        bezier4Path.close()
        fillColor20.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 59.09, y: 136.57))
        bezier5Path.addLine(to: CGPoint(x: 14.19, y: 191.45))
        bezier5Path.addLine(to: CGPoint(x: 30.45, y: 183.74))
        bezier5Path.addLine(to: CGPoint(x: 62.95, y: 144.1))
        bezier5Path.addLine(to: CGPoint(x: 59.09, y: 136.57))
        bezier5Path.close()
        fillColor20.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 138.48, y: 144.19))
        bezier6Path.addLine(to: CGPoint(x: 169.95, y: 183.85))
        bezier6Path.addLine(to: CGPoint(x: 185.81, y: 191.45))
        bezier6Path.addLine(to: CGPoint(x: 142.37, y: 136.57))
        bezier6Path.addLine(to: CGPoint(x: 138.48, y: 144.19))
        bezier6Path.close()
        fillColor20.setFill()
        bezier6Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func draw_9b9b9bLocation(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawLocation9b9b9bCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawMapMarker_icons10312016_FIRECanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let gradientColor = UIColor(red: 0.268, green: 0.469, blue: 0.741, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.057, green: 0.113, blue: 0.227, alpha: 1.000)
        let fillColor18 = UIColor(red: 0.996, green: 0.996, blue: 0.996, alpha: 0.750)
        let fillColor21 = UIColor(red: 0.877, green: 0.045, blue: 0.113, alpha: 1.000)

        //// Gradient Declarations
        let gradient = CGGradient(colorsSpace: nil, colors: [gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 1])!

        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath()
        clipPath.move(to: CGPoint(x: 48.21, y: 5.06))
        clipPath.addCurve(to: CGPoint(x: 25.16, y: 25.03), controlPoint1: CGPoint(x: 35.5, y: 5.06), controlPoint2: CGPoint(x: 25.16, y: 14.02))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 25.03))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 126.24))
        clipPath.addCurve(to: CGPoint(x: 48.03, y: 146.21), controlPoint1: CGPoint(x: 25.16, y: 136.8), controlPoint2: CGPoint(x: 34.99, y: 145.38))
        clipPath.addLine(to: CGPoint(x: 48.03, y: 146.21))
        clipPath.addLine(to: CGPoint(x: 48.2, y: 146.22))
        clipPath.addCurve(to: CGPoint(x: 96.87, y: 182.79), controlPoint1: CGPoint(x: 81.5, y: 146.35), controlPoint2: CGPoint(x: 96.72, y: 182.43))
        clipPath.addLine(to: CGPoint(x: 96.87, y: 182.79))
        clipPath.addLine(to: CGPoint(x: 99.7, y: 189.73))
        clipPath.addLine(to: CGPoint(x: 102, y: 182.59))
        clipPath.addCurve(to: CGPoint(x: 151.67, y: 146.22), controlPoint1: CGPoint(x: 102.11, y: 182.22), controlPoint2: CGPoint(x: 114.1, y: 146.22))
        clipPath.addLine(to: CGPoint(x: 151.67, y: 146.22))
        clipPath.addLine(to: CGPoint(x: 151.83, y: 146.22))
        clipPath.addCurve(to: CGPoint(x: 174.84, y: 126.24), controlPoint1: CGPoint(x: 164.52, y: 146.06), controlPoint2: CGPoint(x: 174.84, y: 137.1))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 126.24))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 25.03))
        clipPath.addCurve(to: CGPoint(x: 151.79, y: 5.06), controlPoint1: CGPoint(x: 174.84, y: 14.02), controlPoint2: CGPoint(x: 164.5, y: 5.06))
        clipPath.addLine(to: CGPoint(x: 151.79, y: 5.06))
        clipPath.addLine(to: CGPoint(x: 48.21, y: 5.06))
        clipPath.close()
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 48.21, y: 5.06))
        bezierPath.addCurve(to: CGPoint(x: 25.16, y: 25.03), controlPoint1: CGPoint(x: 35.5, y: 5.06), controlPoint2: CGPoint(x: 25.16, y: 14.02))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 25.03))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 126.24))
        bezierPath.addCurve(to: CGPoint(x: 48.03, y: 146.21), controlPoint1: CGPoint(x: 25.16, y: 136.8), controlPoint2: CGPoint(x: 34.99, y: 145.38))
        bezierPath.addLine(to: CGPoint(x: 48.03, y: 146.21))
        bezierPath.addLine(to: CGPoint(x: 48.2, y: 146.22))
        bezierPath.addCurve(to: CGPoint(x: 96.87, y: 182.79), controlPoint1: CGPoint(x: 81.5, y: 146.35), controlPoint2: CGPoint(x: 96.72, y: 182.43))
        bezierPath.addLine(to: CGPoint(x: 96.87, y: 182.79))
        bezierPath.addLine(to: CGPoint(x: 99.7, y: 189.73))
        bezierPath.addLine(to: CGPoint(x: 102, y: 182.59))
        bezierPath.addCurve(to: CGPoint(x: 151.67, y: 146.22), controlPoint1: CGPoint(x: 102.11, y: 182.22), controlPoint2: CGPoint(x: 114.1, y: 146.22))
        bezierPath.addLine(to: CGPoint(x: 151.67, y: 146.22))
        bezierPath.addLine(to: CGPoint(x: 151.83, y: 146.22))
        bezierPath.addCurve(to: CGPoint(x: 174.84, y: 126.24), controlPoint1: CGPoint(x: 164.52, y: 146.06), controlPoint2: CGPoint(x: 174.84, y: 137.1))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 126.24))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 25.03))
        bezierPath.addCurve(to: CGPoint(x: 151.79, y: 5.06), controlPoint1: CGPoint(x: 174.84, y: 14.02), controlPoint2: CGPoint(x: 164.5, y: 5.06))
        bezierPath.addLine(to: CGPoint(x: 151.79, y: 5.06))
        bezierPath.addLine(to: CGPoint(x: 48.21, y: 5.06))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(gradient,
            start: CGPoint(x: 100, y: 189.73),
            end: CGPoint(x: 100, y: 5.06),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 2.33))
        bezier3Path.addLine(to: CGPoint(x: 48.21, y: 2.33))
        bezier3Path.addCurve(to: CGPoint(x: 22.43, y: 25.03), controlPoint1: CGPoint(x: 33.99, y: 2.33), controlPoint2: CGPoint(x: 22.43, y: 12.51))
        bezier3Path.addLine(to: CGPoint(x: 22.43, y: 126.24))
        bezier3Path.addCurve(to: CGPoint(x: 47.86, y: 148.94), controlPoint1: CGPoint(x: 22.43, y: 138.26), controlPoint2: CGPoint(x: 33.36, y: 148.02))
        bezier3Path.addLine(to: CGPoint(x: 48.02, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 48.19, y: 148.95))
        bezier3Path.addCurve(to: CGPoint(x: 94.34, y: 183.82), controlPoint1: CGPoint(x: 79.76, y: 149.07), controlPoint2: CGPoint(x: 94.19, y: 183.48))
        bezier3Path.addLine(to: CGPoint(x: 100.02, y: 197.71))
        bezier3Path.addLine(to: CGPoint(x: 104.6, y: 183.42))
        bezier3Path.addCurve(to: CGPoint(x: 114.95, y: 165.85), controlPoint1: CGPoint(x: 104.62, y: 183.35), controlPoint2: CGPoint(x: 107.57, y: 174.49))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 148.95), controlPoint1: CGPoint(x: 124.54, y: 154.64), controlPoint2: CGPoint(x: 136.89, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.78, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.82, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.86, y: 148.95))
        bezier3Path.addCurve(to: CGPoint(x: 177.57, y: 126.24), controlPoint1: CGPoint(x: 166.04, y: 148.77), controlPoint2: CGPoint(x: 177.57, y: 138.59))
        bezier3Path.addLine(to: CGPoint(x: 177.57, y: 25.03))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 2.33), controlPoint1: CGPoint(x: 177.57, y: 12.51), controlPoint2: CGPoint(x: 166.01, y: 2.33))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 7.79))
        bezier3Path.addCurve(to: CGPoint(x: 172.11, y: 25.03), controlPoint1: CGPoint(x: 163.01, y: 7.79), controlPoint2: CGPoint(x: 172.11, y: 15.51))
        bezier3Path.addLine(to: CGPoint(x: 172.11, y: 126.24))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 143.49), controlPoint1: CGPoint(x: 172.11, y: 135.77), controlPoint2: CGPoint(x: 162.65, y: 143.35))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 143.49), controlPoint1: CGPoint(x: 151.75, y: 143.49), controlPoint2: CGPoint(x: 151.71, y: 143.49))
        bezier3Path.addCurve(to: CGPoint(x: 99.39, y: 181.75), controlPoint1: CGPoint(x: 111.67, y: 143.48), controlPoint2: CGPoint(x: 99.39, y: 181.75))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 143.49), controlPoint1: CGPoint(x: 99.39, y: 181.75), controlPoint2: CGPoint(x: 83.79, y: 143.62))
        bezier3Path.addCurve(to: CGPoint(x: 27.89, y: 126.24), controlPoint1: CGPoint(x: 37.14, y: 142.78), controlPoint2: CGPoint(x: 27.89, y: 135.77))
        bezier3Path.addLine(to: CGPoint(x: 27.89, y: 25.03))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 7.79), controlPoint1: CGPoint(x: 27.89, y: 15.51), controlPoint2: CGPoint(x: 36.99, y: 7.79))
        bezier3Path.addLine(to: CGPoint(x: 151.79, y: 7.79))
        bezier3Path.close()
        fillColor21.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 64.5, y: 78.46))
        bezier4Path.addCurve(to: CGPoint(x: 85.97, y: 137), controlPoint1: CGPoint(x: 48.05, y: 100.72), controlPoint2: CGPoint(x: 59.13, y: 131.07))
        bezier4Path.addCurve(to: CGPoint(x: 140.19, y: 114.6), controlPoint1: CGPoint(x: 103.57, y: 140.88), controlPoint2: CGPoint(x: 134.71, y: 134.94))
        bezier4Path.addCurve(to: CGPoint(x: 121.96, y: 68.34), controlPoint1: CGPoint(x: 145.76, y: 93.96), controlPoint2: CGPoint(x: 137.81, y: 79.66))
        bezier4Path.addCurve(to: CGPoint(x: 99.58, y: 87.31), controlPoint1: CGPoint(x: 123.82, y: 77.12), controlPoint2: CGPoint(x: 106.8, y: 95.34))
        bezier4Path.addCurve(to: CGPoint(x: 115.25, y: 62.58), controlPoint1: CGPoint(x: 92.63, y: 79.59), controlPoint2: CGPoint(x: 108.1, y: 66.84))
        bezier4Path.addCurve(to: CGPoint(x: 105.75, y: 23.45), controlPoint1: CGPoint(x: 127.62, y: 55.2), controlPoint2: CGPoint(x: 122.88, y: 32.25))
        bezier4Path.addCurve(to: CGPoint(x: 103.3, y: 41.47), controlPoint1: CGPoint(x: 106.61, y: 25.83), controlPoint2: CGPoint(x: 112.26, y: 32.3))
        bezier4Path.addCurve(to: CGPoint(x: 64.5, y: 78.46), controlPoint1: CGPoint(x: 84.11, y: 59.27), controlPoint2: CGPoint(x: 78.4, y: 61.32))
        bezier4Path.close()
        fillColor18.setFill()
        bezier4Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawMapMarker_icons10312016_RESCUECanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let gradientColor = UIColor(red: 0.268, green: 0.469, blue: 0.741, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.057, green: 0.113, blue: 0.227, alpha: 1.000)
        let fillColor18 = UIColor(red: 0.996, green: 0.996, blue: 0.996, alpha: 0.750)
        let fillColor22 = UIColor(red: 0.970, green: 0.628, blue: 0.199, alpha: 1.000)

        //// Gradient Declarations
        let gradient = CGGradient(colorsSpace: nil, colors: [gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 1])!

        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath()
        clipPath.move(to: CGPoint(x: 48.21, y: 5.06))
        clipPath.addCurve(to: CGPoint(x: 25.16, y: 25.03), controlPoint1: CGPoint(x: 35.5, y: 5.06), controlPoint2: CGPoint(x: 25.16, y: 14.02))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 25.03))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 126.24))
        clipPath.addCurve(to: CGPoint(x: 48.03, y: 146.21), controlPoint1: CGPoint(x: 25.16, y: 136.8), controlPoint2: CGPoint(x: 34.99, y: 145.38))
        clipPath.addLine(to: CGPoint(x: 48.03, y: 146.21))
        clipPath.addLine(to: CGPoint(x: 48.2, y: 146.22))
        clipPath.addCurve(to: CGPoint(x: 96.87, y: 182.79), controlPoint1: CGPoint(x: 81.5, y: 146.35), controlPoint2: CGPoint(x: 96.72, y: 182.43))
        clipPath.addLine(to: CGPoint(x: 96.87, y: 182.79))
        clipPath.addLine(to: CGPoint(x: 99.7, y: 189.73))
        clipPath.addLine(to: CGPoint(x: 102, y: 182.59))
        clipPath.addCurve(to: CGPoint(x: 151.67, y: 146.22), controlPoint1: CGPoint(x: 102.11, y: 182.22), controlPoint2: CGPoint(x: 114.1, y: 146.22))
        clipPath.addLine(to: CGPoint(x: 151.67, y: 146.22))
        clipPath.addLine(to: CGPoint(x: 151.83, y: 146.22))
        clipPath.addCurve(to: CGPoint(x: 174.84, y: 126.24), controlPoint1: CGPoint(x: 164.52, y: 146.06), controlPoint2: CGPoint(x: 174.84, y: 137.1))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 126.24))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 25.03))
        clipPath.addCurve(to: CGPoint(x: 151.79, y: 5.06), controlPoint1: CGPoint(x: 174.84, y: 14.02), controlPoint2: CGPoint(x: 164.5, y: 5.06))
        clipPath.addLine(to: CGPoint(x: 151.79, y: 5.06))
        clipPath.addLine(to: CGPoint(x: 48.21, y: 5.06))
        clipPath.close()
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 48.21, y: 5.06))
        bezierPath.addCurve(to: CGPoint(x: 25.16, y: 25.03), controlPoint1: CGPoint(x: 35.5, y: 5.06), controlPoint2: CGPoint(x: 25.16, y: 14.02))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 25.03))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 126.24))
        bezierPath.addCurve(to: CGPoint(x: 48.03, y: 146.21), controlPoint1: CGPoint(x: 25.16, y: 136.8), controlPoint2: CGPoint(x: 34.99, y: 145.38))
        bezierPath.addLine(to: CGPoint(x: 48.03, y: 146.21))
        bezierPath.addLine(to: CGPoint(x: 48.2, y: 146.22))
        bezierPath.addCurve(to: CGPoint(x: 96.87, y: 182.79), controlPoint1: CGPoint(x: 81.5, y: 146.35), controlPoint2: CGPoint(x: 96.72, y: 182.43))
        bezierPath.addLine(to: CGPoint(x: 96.87, y: 182.79))
        bezierPath.addLine(to: CGPoint(x: 99.7, y: 189.73))
        bezierPath.addLine(to: CGPoint(x: 102, y: 182.59))
        bezierPath.addCurve(to: CGPoint(x: 151.67, y: 146.22), controlPoint1: CGPoint(x: 102.11, y: 182.22), controlPoint2: CGPoint(x: 114.1, y: 146.22))
        bezierPath.addLine(to: CGPoint(x: 151.67, y: 146.22))
        bezierPath.addLine(to: CGPoint(x: 151.83, y: 146.22))
        bezierPath.addCurve(to: CGPoint(x: 174.84, y: 126.24), controlPoint1: CGPoint(x: 164.52, y: 146.06), controlPoint2: CGPoint(x: 174.84, y: 137.1))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 126.24))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 25.03))
        bezierPath.addCurve(to: CGPoint(x: 151.79, y: 5.06), controlPoint1: CGPoint(x: 174.84, y: 14.02), controlPoint2: CGPoint(x: 164.5, y: 5.06))
        bezierPath.addLine(to: CGPoint(x: 151.79, y: 5.06))
        bezierPath.addLine(to: CGPoint(x: 48.21, y: 5.06))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(gradient,
            start: CGPoint(x: 100, y: 189.73),
            end: CGPoint(x: 100, y: 5.06),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 2.33))
        bezier3Path.addLine(to: CGPoint(x: 48.21, y: 2.33))
        bezier3Path.addCurve(to: CGPoint(x: 22.43, y: 25.03), controlPoint1: CGPoint(x: 33.99, y: 2.33), controlPoint2: CGPoint(x: 22.43, y: 12.51))
        bezier3Path.addLine(to: CGPoint(x: 22.43, y: 126.24))
        bezier3Path.addCurve(to: CGPoint(x: 47.86, y: 148.94), controlPoint1: CGPoint(x: 22.43, y: 138.26), controlPoint2: CGPoint(x: 33.36, y: 148.02))
        bezier3Path.addLine(to: CGPoint(x: 48.02, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 48.19, y: 148.95))
        bezier3Path.addCurve(to: CGPoint(x: 94.34, y: 183.82), controlPoint1: CGPoint(x: 79.76, y: 149.07), controlPoint2: CGPoint(x: 94.19, y: 183.48))
        bezier3Path.addLine(to: CGPoint(x: 100.02, y: 197.71))
        bezier3Path.addLine(to: CGPoint(x: 104.6, y: 183.42))
        bezier3Path.addCurve(to: CGPoint(x: 114.95, y: 165.85), controlPoint1: CGPoint(x: 104.62, y: 183.35), controlPoint2: CGPoint(x: 107.57, y: 174.49))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 148.95), controlPoint1: CGPoint(x: 124.54, y: 154.64), controlPoint2: CGPoint(x: 136.89, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.78, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.82, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.86, y: 148.95))
        bezier3Path.addCurve(to: CGPoint(x: 177.57, y: 126.24), controlPoint1: CGPoint(x: 166.04, y: 148.77), controlPoint2: CGPoint(x: 177.57, y: 138.59))
        bezier3Path.addLine(to: CGPoint(x: 177.57, y: 25.03))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 2.33), controlPoint1: CGPoint(x: 177.57, y: 12.51), controlPoint2: CGPoint(x: 166.01, y: 2.33))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 7.79))
        bezier3Path.addCurve(to: CGPoint(x: 172.11, y: 25.03), controlPoint1: CGPoint(x: 163.01, y: 7.79), controlPoint2: CGPoint(x: 172.11, y: 15.51))
        bezier3Path.addLine(to: CGPoint(x: 172.11, y: 126.24))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 143.49), controlPoint1: CGPoint(x: 172.11, y: 135.77), controlPoint2: CGPoint(x: 162.65, y: 143.35))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 143.49), controlPoint1: CGPoint(x: 151.75, y: 143.49), controlPoint2: CGPoint(x: 151.71, y: 143.49))
        bezier3Path.addCurve(to: CGPoint(x: 99.39, y: 181.75), controlPoint1: CGPoint(x: 111.67, y: 143.48), controlPoint2: CGPoint(x: 99.39, y: 181.75))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 143.49), controlPoint1: CGPoint(x: 99.39, y: 181.75), controlPoint2: CGPoint(x: 83.79, y: 143.62))
        bezier3Path.addCurve(to: CGPoint(x: 27.89, y: 126.24), controlPoint1: CGPoint(x: 37.14, y: 142.78), controlPoint2: CGPoint(x: 27.89, y: 135.77))
        bezier3Path.addLine(to: CGPoint(x: 27.89, y: 25.03))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 7.79), controlPoint1: CGPoint(x: 27.89, y: 15.51), controlPoint2: CGPoint(x: 36.99, y: 7.79))
        bezier3Path.addLine(to: CGPoint(x: 151.79, y: 7.79))
        bezier3Path.close()
        fillColor22.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 100.43, y: 22.93))
        bezier4Path.addCurve(to: CGPoint(x: 41.85, y: 81.51), controlPoint1: CGPoint(x: 68.08, y: 22.93), controlPoint2: CGPoint(x: 41.85, y: 49.16))
        bezier4Path.addCurve(to: CGPoint(x: 100.43, y: 140.1), controlPoint1: CGPoint(x: 41.85, y: 113.87), controlPoint2: CGPoint(x: 68.08, y: 140.1))
        bezier4Path.addCurve(to: CGPoint(x: 159.01, y: 81.51), controlPoint1: CGPoint(x: 132.78, y: 140.1), controlPoint2: CGPoint(x: 159.01, y: 113.87))
        bezier4Path.addCurve(to: CGPoint(x: 100.43, y: 22.93), controlPoint1: CGPoint(x: 159.01, y: 49.16), controlPoint2: CGPoint(x: 132.78, y: 22.93))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 100.43, y: 26.97))
        bezier4Path.addCurve(to: CGPoint(x: 154.97, y: 81.51), controlPoint1: CGPoint(x: 130.5, y: 26.97), controlPoint2: CGPoint(x: 154.97, y: 51.44))
        bezier4Path.addCurve(to: CGPoint(x: 100.43, y: 136.06), controlPoint1: CGPoint(x: 154.97, y: 111.59), controlPoint2: CGPoint(x: 130.5, y: 136.06))
        bezier4Path.addCurve(to: CGPoint(x: 45.89, y: 81.51), controlPoint1: CGPoint(x: 70.35, y: 136.06), controlPoint2: CGPoint(x: 45.89, y: 111.59))
        bezier4Path.addCurve(to: CGPoint(x: 100.43, y: 26.97), controlPoint1: CGPoint(x: 45.89, y: 51.44), controlPoint2: CGPoint(x: 70.35, y: 26.97))
        bezier4Path.close()
        fillColor18.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 100.43, y: 34.65))
        bezier5Path.addCurve(to: CGPoint(x: 53.56, y: 81.51), controlPoint1: CGPoint(x: 74.55, y: 34.65), controlPoint2: CGPoint(x: 53.56, y: 55.63))
        bezier5Path.addCurve(to: CGPoint(x: 100.43, y: 128.38), controlPoint1: CGPoint(x: 53.56, y: 107.4), controlPoint2: CGPoint(x: 74.55, y: 128.38))
        bezier5Path.addCurve(to: CGPoint(x: 147.3, y: 81.51), controlPoint1: CGPoint(x: 126.31, y: 128.38), controlPoint2: CGPoint(x: 147.3, y: 107.4))
        bezier5Path.addCurve(to: CGPoint(x: 100.43, y: 34.65), controlPoint1: CGPoint(x: 147.3, y: 55.63), controlPoint2: CGPoint(x: 126.31, y: 34.65))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 100.43, y: 38.69))
        bezier5Path.addCurve(to: CGPoint(x: 143.25, y: 81.51), controlPoint1: CGPoint(x: 124.04, y: 38.69), controlPoint2: CGPoint(x: 143.25, y: 57.9))
        bezier5Path.addCurve(to: CGPoint(x: 100.43, y: 124.34), controlPoint1: CGPoint(x: 143.25, y: 105.13), controlPoint2: CGPoint(x: 124.04, y: 124.34))
        bezier5Path.addCurve(to: CGPoint(x: 57.6, y: 81.51), controlPoint1: CGPoint(x: 76.81, y: 124.34), controlPoint2: CGPoint(x: 57.6, y: 105.13))
        bezier5Path.addCurve(to: CGPoint(x: 100.43, y: 38.69), controlPoint1: CGPoint(x: 57.6, y: 57.9), controlPoint2: CGPoint(x: 76.81, y: 38.69))
        bezier5Path.close()
        fillColor18.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 136.87, y: 70.43))
        bezier6Path.addLine(to: CGPoint(x: 111.51, y: 70.43))
        bezier6Path.addLine(to: CGPoint(x: 111.51, y: 45.07))
        bezier6Path.addLine(to: CGPoint(x: 89.35, y: 45.07))
        bezier6Path.addLine(to: CGPoint(x: 89.35, y: 70.43))
        bezier6Path.addLine(to: CGPoint(x: 63.99, y: 70.43))
        bezier6Path.addLine(to: CGPoint(x: 63.99, y: 92.6))
        bezier6Path.addLine(to: CGPoint(x: 89.35, y: 92.6))
        bezier6Path.addLine(to: CGPoint(x: 89.35, y: 117.95))
        bezier6Path.addLine(to: CGPoint(x: 111.51, y: 117.95))
        bezier6Path.addLine(to: CGPoint(x: 111.51, y: 92.6))
        bezier6Path.addLine(to: CGPoint(x: 136.87, y: 92.6))
        bezier6Path.addLine(to: CGPoint(x: 136.87, y: 70.43))
        bezier6Path.close()
        fillColor18.setFill()
        bezier6Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawEmslightblue(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor23 = UIColor(red: 0.248, green: 0.438, blue: 0.692, alpha: 1.000)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 196.59, y: 76.24))
        bezierPath.addLine(to: CGPoint(x: 180.6, y: 41.71))
        bezierPath.addLine(to: CGPoint(x: 119.03, y: 70.22))
        bezierPath.addLine(to: CGPoint(x: 119.03, y: 2.36))
        bezierPath.addLine(to: CGPoint(x: 80.97, y: 2.36))
        bezierPath.addLine(to: CGPoint(x: 80.97, y: 70.45))
        bezierPath.addLine(to: CGPoint(x: 18.99, y: 42.27))
        bezierPath.addLine(to: CGPoint(x: 3.24, y: 76.91))
        bezierPath.addLine(to: CGPoint(x: 54.38, y: 100.16))
        bezierPath.addLine(to: CGPoint(x: 3.41, y: 123.76))
        bezierPath.addLine(to: CGPoint(x: 19.4, y: 158.29))
        bezierPath.addLine(to: CGPoint(x: 80.97, y: 129.78))
        bezierPath.addLine(to: CGPoint(x: 80.97, y: 197.64))
        bezierPath.addLine(to: CGPoint(x: 119.03, y: 197.64))
        bezierPath.addLine(to: CGPoint(x: 119.03, y: 129.55))
        bezierPath.addLine(to: CGPoint(x: 181.01, y: 157.73))
        bezierPath.addLine(to: CGPoint(x: 196.76, y: 123.09))
        bezierPath.addLine(to: CGPoint(x: 145.62, y: 99.84))
        bezierPath.addLine(to: CGPoint(x: 196.59, y: 76.24))
        bezierPath.close()
        fillColor23.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawEmslightbluesm(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawEmslightblue(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawFireredbordersmall(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawMapMarker_icons10312016_FIRECanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawRescueyellowbordersmall(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawMapMarker_icons10312016_RESCUECanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawBluelock103120162Canvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor28 = UIColor(red: 0.096, green: 0.373, blue: 0.678, alpha: 1.000)
        let fillColor29 = UIColor(red: 0.380, green: 0.762, blue: 0.890, alpha: 1.000)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 100.07, y: 2.69))
        bezierPath.addLine(to: CGPoint(x: 100.07, y: 2.69))
        bezierPath.addCurve(to: CGPoint(x: 53.7, y: 26.11), controlPoint1: CGPoint(x: 74.07, y: 2.69), controlPoint2: CGPoint(x: 60.5, y: 15.43))
        bezierPath.addCurve(to: CGPoint(x: 42.46, y: 77.03), controlPoint1: CGPoint(x: 46.03, y: 38.14), controlPoint2: CGPoint(x: 42.46, y: 54.32))
        bezierPath.addCurve(to: CGPoint(x: 63.68, y: 100.7), controlPoint1: CGPoint(x: 42.46, y: 87.33), controlPoint2: CGPoint(x: 49.75, y: 98.77))
        bezierPath.addCurve(to: CGPoint(x: 68.2, y: 101.08), controlPoint1: CGPoint(x: 64.96, y: 100.87), controlPoint2: CGPoint(x: 66.39, y: 100.99))
        bezierPath.addCurve(to: CGPoint(x: 77.7, y: 101.24), controlPoint1: CGPoint(x: 70.52, y: 101.18), controlPoint2: CGPoint(x: 73.63, y: 101.24))
        bezierPath.addCurve(to: CGPoint(x: 134.73, y: 99.97), controlPoint1: CGPoint(x: 97.26, y: 101.24), controlPoint2: CGPoint(x: 133.21, y: 100.02))
        bezierPath.addCurve(to: CGPoint(x: 157.54, y: 76.37), controlPoint1: CGPoint(x: 147.45, y: 99.54), controlPoint2: CGPoint(x: 157.54, y: 89.1))
        bezierPath.addCurve(to: CGPoint(x: 144.98, y: 25.11), controlPoint1: CGPoint(x: 157.54, y: 54.24), controlPoint2: CGPoint(x: 153.43, y: 37.48))
        bezierPath.addCurve(to: CGPoint(x: 101.35, y: 2.7), controlPoint1: CGPoint(x: 138.13, y: 15.09), controlPoint2: CGPoint(x: 125, y: 3.07))
        bezierPath.addCurve(to: CGPoint(x: 100.07, y: 2.69), controlPoint1: CGPoint(x: 100.92, y: 2.7), controlPoint2: CGPoint(x: 100.49, y: 2.69))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 100.07, y: 26.3))
        bezierPath.addCurve(to: CGPoint(x: 100.99, y: 26.31), controlPoint1: CGPoint(x: 100.37, y: 26.3), controlPoint2: CGPoint(x: 100.68, y: 26.3))
        bezierPath.addCurve(to: CGPoint(x: 133.93, y: 76.37), controlPoint1: CGPoint(x: 122.4, y: 26.64), controlPoint2: CGPoint(x: 133.93, y: 41.63))
        bezierPath.addCurve(to: CGPoint(x: 77.7, y: 77.63), controlPoint1: CGPoint(x: 133.93, y: 76.37), controlPoint2: CGPoint(x: 97.09, y: 77.63))
        bezierPath.addCurve(to: CGPoint(x: 66.07, y: 77.03), controlPoint1: CGPoint(x: 70.77, y: 77.63), controlPoint2: CGPoint(x: 66.07, y: 77.47))
        bezierPath.addCurve(to: CGPoint(x: 100.07, y: 26.3), controlPoint1: CGPoint(x: 66.07, y: 42.7), controlPoint2: CGPoint(x: 74.84, y: 26.3))
        bezierPath.close()
        fillColor28.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 115.63, y: 163.61))
        bezier2Path.addLine(to: CGPoint(x: 86.71, y: 163.93))
        bezier2Path.addLine(to: CGPoint(x: 93.11, y: 140.05))
        bezier2Path.addCurve(to: CGPoint(x: 82.63, y: 123.99), controlPoint1: CGPoint(x: 86.94, y: 137.33), controlPoint2: CGPoint(x: 82.63, y: 131.17))
        bezier2Path.addCurve(to: CGPoint(x: 100.2, y: 106.42), controlPoint1: CGPoint(x: 82.63, y: 114.29), controlPoint2: CGPoint(x: 90.5, y: 106.42))
        bezier2Path.addCurve(to: CGPoint(x: 117.77, y: 123.99), controlPoint1: CGPoint(x: 109.9, y: 106.42), controlPoint2: CGPoint(x: 117.77, y: 114.29))
        bezier2Path.addCurve(to: CGPoint(x: 109.09, y: 139.12), controlPoint1: CGPoint(x: 117.77, y: 130.44), controlPoint2: CGPoint(x: 114.28, y: 136.07))
        bezier2Path.addLine(to: CGPoint(x: 115.63, y: 163.61))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 163.05, y: 67.04))
        bezier2Path.addLine(to: CGPoint(x: 36.95, y: 67.04))
        bezier2Path.addCurve(to: CGPoint(x: 24.11, y: 79.87), controlPoint1: CGPoint(x: 29.89, y: 67.04), controlPoint2: CGPoint(x: 24.11, y: 72.81))
        bezier2Path.addLine(to: CGPoint(x: 24.11, y: 184.95))
        bezier2Path.addCurve(to: CGPoint(x: 36.95, y: 197.79), controlPoint1: CGPoint(x: 24.11, y: 192.01), controlPoint2: CGPoint(x: 29.89, y: 197.79))
        bezier2Path.addLine(to: CGPoint(x: 163.05, y: 197.79))
        bezier2Path.addCurve(to: CGPoint(x: 175.89, y: 184.95), controlPoint1: CGPoint(x: 170.11, y: 197.79), controlPoint2: CGPoint(x: 175.89, y: 192.01))
        bezier2Path.addLine(to: CGPoint(x: 175.89, y: 79.87))
        bezier2Path.addCurve(to: CGPoint(x: 163.05, y: 67.04), controlPoint1: CGPoint(x: 175.89, y: 72.81), controlPoint2: CGPoint(x: 170.11, y: 67.04))
        bezier2Path.close()
        fillColor29.setFill()
        bezier2Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLockblue(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawBluelock103120162Canvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawSearchwhiteCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor18 = UIColor(red: 0.996, green: 0.996, blue: 0.996, alpha: 0.750)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 154.06, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 142.88, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 142.88, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 143.86, y: 26.46))
        bezierPath.addCurve(to: CGPoint(x: 165.74, y: 48.24), controlPoint1: CGPoint(x: 155.95, y: 26.46), controlPoint2: CGPoint(x: 165.74, y: 36.21))
        bezierPath.addLine(to: CGPoint(x: 165.74, y: 164.19))
        bezierPath.addCurve(to: CGPoint(x: 143.86, y: 185.97), controlPoint1: CGPoint(x: 165.74, y: 176.22), controlPoint2: CGPoint(x: 155.95, y: 185.97))
        bezierPath.addLine(to: CGPoint(x: 54.14, y: 185.97))
        bezierPath.addCurve(to: CGPoint(x: 32.26, y: 164.19), controlPoint1: CGPoint(x: 42.05, y: 185.97), controlPoint2: CGPoint(x: 32.26, y: 176.22))
        bezierPath.addLine(to: CGPoint(x: 32.26, y: 48.24))
        bezierPath.addCurve(to: CGPoint(x: 54.14, y: 26.46), controlPoint1: CGPoint(x: 32.26, y: 36.21), controlPoint2: CGPoint(x: 42.05, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 56.27, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 56.27, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 43.94, y: 13.22))
        bezierPath.addCurve(to: CGPoint(x: 22.16, y: 35), controlPoint1: CGPoint(x: 31.91, y: 13.22), controlPoint2: CGPoint(x: 22.16, y: 22.97))
        bezierPath.addLine(to: CGPoint(x: 22.16, y: 175.86))
        bezierPath.addCurve(to: CGPoint(x: 43.94, y: 197.64), controlPoint1: CGPoint(x: 22.16, y: 187.88), controlPoint2: CGPoint(x: 31.91, y: 197.64))
        bezierPath.addLine(to: CGPoint(x: 154.06, y: 197.64))
        bezierPath.addCurve(to: CGPoint(x: 175.84, y: 175.86), controlPoint1: CGPoint(x: 166.09, y: 197.64), controlPoint2: CGPoint(x: 175.84, y: 187.88))
        bezierPath.addLine(to: CGPoint(x: 175.84, y: 35))
        bezierPath.addCurve(to: CGPoint(x: 154.06, y: 13.22), controlPoint1: CGPoint(x: 175.84, y: 22.97), controlPoint2: CGPoint(x: 166.09, y: 13.22))
        bezierPath.close()
        fillColor18.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 124.15, y: 30.67))
        bezier2Path.addCurve(to: CGPoint(x: 119.43, y: 37.18), controlPoint1: CGPoint(x: 124.15, y: 34.27), controlPoint2: CGPoint(x: 122.04, y: 37.18))
        bezier2Path.addLine(to: CGPoint(x: 81.54, y: 37.18))
        bezier2Path.addCurve(to: CGPoint(x: 76.82, y: 30.67), controlPoint1: CGPoint(x: 78.93, y: 37.18), controlPoint2: CGPoint(x: 76.82, y: 34.27))
        bezier2Path.addLine(to: CGPoint(x: 76.82, y: 16.25))
        bezier2Path.addCurve(to: CGPoint(x: 81.54, y: 9.75), controlPoint1: CGPoint(x: 76.82, y: 12.66), controlPoint2: CGPoint(x: 78.93, y: 9.75))
        bezier2Path.addLine(to: CGPoint(x: 119.43, y: 9.75))
        bezier2Path.addCurve(to: CGPoint(x: 124.15, y: 16.25), controlPoint1: CGPoint(x: 122.04, y: 9.75), controlPoint2: CGPoint(x: 124.15, y: 12.66))
        bezier2Path.addLine(to: CGPoint(x: 124.15, y: 30.67))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 129.63, y: 2.36))
        bezier2Path.addLine(to: CGPoint(x: 71.34, y: 2.36))
        bezier2Path.addCurve(to: CGPoint(x: 64.08, y: 12.37), controlPoint1: CGPoint(x: 67.33, y: 2.36), controlPoint2: CGPoint(x: 64.08, y: 6.84))
        bezier2Path.addLine(to: CGPoint(x: 64.08, y: 34.56))
        bezier2Path.addCurve(to: CGPoint(x: 71.34, y: 44.56), controlPoint1: CGPoint(x: 64.08, y: 40.08), controlPoint2: CGPoint(x: 67.33, y: 44.56))
        bezier2Path.addLine(to: CGPoint(x: 129.63, y: 44.56))
        bezier2Path.addCurve(to: CGPoint(x: 136.89, y: 34.56), controlPoint1: CGPoint(x: 133.64, y: 44.56), controlPoint2: CGPoint(x: 136.89, y: 40.08))
        bezier2Path.addLine(to: CGPoint(x: 136.89, y: 12.37))
        bezier2Path.addCurve(to: CGPoint(x: 129.63, y: 2.36), controlPoint1: CGPoint(x: 136.89, y: 6.84), controlPoint2: CGPoint(x: 133.64, y: 2.36))
        bezier2Path.close()
        fillColor18.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 85.18, y: 137.31))
        bezier3Path.addCurve(to: CGPoint(x: 52.36, y: 98.07), controlPoint1: CGPoint(x: 65.28, y: 135.54), controlPoint2: CGPoint(x: 50.58, y: 117.97))
        bezier3Path.addCurve(to: CGPoint(x: 91.59, y: 65.25), controlPoint1: CGPoint(x: 54.13, y: 78.17), controlPoint2: CGPoint(x: 71.7, y: 63.48))
        bezier3Path.addCurve(to: CGPoint(x: 124.41, y: 104.49), controlPoint1: CGPoint(x: 111.49, y: 67.02), controlPoint2: CGPoint(x: 126.18, y: 84.59))
        bezier3Path.addCurve(to: CGPoint(x: 85.18, y: 137.31), controlPoint1: CGPoint(x: 122.64, y: 124.38), controlPoint2: CGPoint(x: 105.07, y: 139.08))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 158.15, y: 168.34))
        bezier3Path.addLine(to: CGPoint(x: 121.35, y: 131.77))
        bezier3Path.addCurve(to: CGPoint(x: 133.13, y: 105.26), controlPoint1: CGPoint(x: 127.87, y: 124.73), controlPoint2: CGPoint(x: 132.21, y: 115.56))
        bezier3Path.addCurve(to: CGPoint(x: 92.37, y: 56.54), controlPoint1: CGPoint(x: 135.33, y: 80.55), controlPoint2: CGPoint(x: 117.08, y: 58.74))
        bezier3Path.addCurve(to: CGPoint(x: 43.64, y: 97.29), controlPoint1: CGPoint(x: 67.66, y: 54.34), controlPoint2: CGPoint(x: 45.84, y: 72.59))
        bezier3Path.addCurve(to: CGPoint(x: 84.4, y: 146.02), controlPoint1: CGPoint(x: 41.44, y: 122), controlPoint2: CGPoint(x: 59.69, y: 143.82))
        bezier3Path.addCurve(to: CGPoint(x: 114, y: 138.17), controlPoint1: CGPoint(x: 95.32, y: 146.99), controlPoint2: CGPoint(x: 105.66, y: 143.97))
        bezier3Path.addLine(to: CGPoint(x: 144.67, y: 180.37))
        bezier3Path.addLine(to: CGPoint(x: 158.15, y: 168.34))
        bezier3Path.close()
        fillColor18.setFill()
        bezier3Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawSearchfullcolorCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor18 = UIColor(red: 0.996, green: 0.996, blue: 0.996, alpha: 0.750)
        let fillColor30 = UIColor(red: 0.164, green: 0.157, blue: 0.156, alpha: 1.000)
        let fillColor31 = UIColor(red: 0.971, green: 0.637, blue: 0.242, alpha: 1.000)
        let fillColor32 = UIColor(red: 0.882, green: 0.135, blue: 0.171, alpha: 1.000)

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 28.2, y: 25.72, width: 141.4, height: 165.45))
        fillColor18.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 69.4, y: 9.92, width: 64, height: 31.65))
        fillColor18.setFill()
        rectangle2Path.fill()


        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath(rect: CGRect(x: 22.15, y: 2.38, width: 153.7, height: 195.25))
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 154.06, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 142.88, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 142.88, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 143.86, y: 26.46))
        bezierPath.addCurve(to: CGPoint(x: 165.74, y: 48.24), controlPoint1: CGPoint(x: 155.95, y: 26.46), controlPoint2: CGPoint(x: 165.74, y: 36.21))
        bezierPath.addLine(to: CGPoint(x: 165.74, y: 164.19))
        bezierPath.addCurve(to: CGPoint(x: 143.86, y: 185.97), controlPoint1: CGPoint(x: 165.74, y: 176.22), controlPoint2: CGPoint(x: 155.95, y: 185.97))
        bezierPath.addLine(to: CGPoint(x: 54.14, y: 185.97))
        bezierPath.addCurve(to: CGPoint(x: 32.26, y: 164.19), controlPoint1: CGPoint(x: 42.05, y: 185.97), controlPoint2: CGPoint(x: 32.26, y: 176.22))
        bezierPath.addLine(to: CGPoint(x: 32.26, y: 48.24))
        bezierPath.addCurve(to: CGPoint(x: 54.14, y: 26.46), controlPoint1: CGPoint(x: 32.26, y: 36.21), controlPoint2: CGPoint(x: 42.05, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 56.27, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 56.27, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 43.94, y: 13.22))
        bezierPath.addCurve(to: CGPoint(x: 22.16, y: 35), controlPoint1: CGPoint(x: 31.91, y: 13.22), controlPoint2: CGPoint(x: 22.16, y: 22.97))
        bezierPath.addLine(to: CGPoint(x: 22.16, y: 175.86))
        bezierPath.addCurve(to: CGPoint(x: 43.94, y: 197.64), controlPoint1: CGPoint(x: 22.16, y: 187.88), controlPoint2: CGPoint(x: 31.91, y: 197.64))
        bezierPath.addLine(to: CGPoint(x: 154.06, y: 197.64))
        bezierPath.addCurve(to: CGPoint(x: 175.84, y: 175.86), controlPoint1: CGPoint(x: 166.09, y: 197.64), controlPoint2: CGPoint(x: 175.84, y: 187.88))
        bezierPath.addLine(to: CGPoint(x: 175.84, y: 35))
        bezierPath.addCurve(to: CGPoint(x: 154.06, y: 13.22), controlPoint1: CGPoint(x: 175.84, y: 22.97), controlPoint2: CGPoint(x: 166.09, y: 13.22))
        bezierPath.close()
        fillColor30.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 124.15, y: 30.67))
        bezier2Path.addCurve(to: CGPoint(x: 119.43, y: 37.18), controlPoint1: CGPoint(x: 124.15, y: 34.27), controlPoint2: CGPoint(x: 122.04, y: 37.18))
        bezier2Path.addLine(to: CGPoint(x: 81.54, y: 37.18))
        bezier2Path.addCurve(to: CGPoint(x: 76.82, y: 30.67), controlPoint1: CGPoint(x: 78.93, y: 37.18), controlPoint2: CGPoint(x: 76.82, y: 34.27))
        bezier2Path.addLine(to: CGPoint(x: 76.82, y: 16.25))
        bezier2Path.addCurve(to: CGPoint(x: 81.54, y: 9.75), controlPoint1: CGPoint(x: 76.82, y: 12.66), controlPoint2: CGPoint(x: 78.93, y: 9.75))
        bezier2Path.addLine(to: CGPoint(x: 119.43, y: 9.75))
        bezier2Path.addCurve(to: CGPoint(x: 124.15, y: 16.25), controlPoint1: CGPoint(x: 122.04, y: 9.75), controlPoint2: CGPoint(x: 124.15, y: 12.66))
        bezier2Path.addLine(to: CGPoint(x: 124.15, y: 30.67))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 129.63, y: 2.36))
        bezier2Path.addLine(to: CGPoint(x: 71.34, y: 2.36))
        bezier2Path.addCurve(to: CGPoint(x: 64.08, y: 12.37), controlPoint1: CGPoint(x: 67.33, y: 2.36), controlPoint2: CGPoint(x: 64.08, y: 6.84))
        bezier2Path.addLine(to: CGPoint(x: 64.08, y: 34.56))
        bezier2Path.addCurve(to: CGPoint(x: 71.34, y: 44.56), controlPoint1: CGPoint(x: 64.08, y: 40.08), controlPoint2: CGPoint(x: 67.33, y: 44.56))
        bezier2Path.addLine(to: CGPoint(x: 129.63, y: 44.56))
        bezier2Path.addCurve(to: CGPoint(x: 136.89, y: 34.56), controlPoint1: CGPoint(x: 133.64, y: 44.56), controlPoint2: CGPoint(x: 136.89, y: 40.08))
        bezier2Path.addLine(to: CGPoint(x: 136.89, y: 12.37))
        bezier2Path.addCurve(to: CGPoint(x: 129.63, y: 2.36), controlPoint1: CGPoint(x: 136.89, y: 6.84), controlPoint2: CGPoint(x: 133.64, y: 2.36))
        bezier2Path.close()
        fillColor31.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 85.18, y: 137.31))
        bezier3Path.addCurve(to: CGPoint(x: 52.36, y: 98.07), controlPoint1: CGPoint(x: 65.28, y: 135.54), controlPoint2: CGPoint(x: 50.58, y: 117.97))
        bezier3Path.addCurve(to: CGPoint(x: 91.59, y: 65.25), controlPoint1: CGPoint(x: 54.13, y: 78.17), controlPoint2: CGPoint(x: 71.7, y: 63.48))
        bezier3Path.addCurve(to: CGPoint(x: 124.41, y: 104.49), controlPoint1: CGPoint(x: 111.49, y: 67.02), controlPoint2: CGPoint(x: 126.18, y: 84.59))
        bezier3Path.addCurve(to: CGPoint(x: 85.18, y: 137.31), controlPoint1: CGPoint(x: 122.64, y: 124.38), controlPoint2: CGPoint(x: 105.07, y: 139.08))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 158.15, y: 168.34))
        bezier3Path.addLine(to: CGPoint(x: 121.35, y: 131.77))
        bezier3Path.addCurve(to: CGPoint(x: 133.13, y: 105.26), controlPoint1: CGPoint(x: 127.87, y: 124.73), controlPoint2: CGPoint(x: 132.21, y: 115.56))
        bezier3Path.addCurve(to: CGPoint(x: 92.37, y: 56.54), controlPoint1: CGPoint(x: 135.33, y: 80.55), controlPoint2: CGPoint(x: 117.08, y: 58.74))
        bezier3Path.addCurve(to: CGPoint(x: 43.64, y: 97.29), controlPoint1: CGPoint(x: 67.66, y: 54.34), controlPoint2: CGPoint(x: 45.84, y: 72.59))
        bezier3Path.addCurve(to: CGPoint(x: 84.4, y: 146.02), controlPoint1: CGPoint(x: 41.44, y: 122), controlPoint2: CGPoint(x: 59.69, y: 143.82))
        bezier3Path.addCurve(to: CGPoint(x: 114, y: 138.17), controlPoint1: CGPoint(x: 95.32, y: 146.99), controlPoint2: CGPoint(x: 105.66, y: 143.97))
        bezier3Path.addLine(to: CGPoint(x: 144.67, y: 180.37))
        bezier3Path.addLine(to: CGPoint(x: 158.15, y: 168.34))
        bezier3Path.close()
        fillColor32.setFill()
        bezier3Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawSearchwhitemain(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawSearchwhiteCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawFullcolorsearch(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawSearchfullcolorCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawGradientForMap() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Color Declarations
        let gradient5Color = UIColor(red: 0.247, green: 0.439, blue: 0.690, alpha: 0.800)
        let gradient5Color2 = UIColor(red: 0.075, green: 0.145, blue: 0.267, alpha: 0.800)

        //// Gradient Declarations
        let gradient5 = CGGradient(colorsSpace: nil, colors: [gradient5Color2.cgColor, gradient5Color.cgColor] as CFArray, locations: [0, 1])!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 100, height: 100))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(gradient5, start: CGPoint(x: 50, y: -0), end: CGPoint(x: 50, y: 100), options: [])
        context.restoreGState()
    }

    @objc dynamic public class func drawFireMapButton(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol 2 Drawing
        let symbol2Rect = CGRect(x: 10, y: 10, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbol2Rect)
        context.translateBy(x: symbol2Rect.minX, y: symbol2Rect.minY)

        ButtonsForFJ092018.drawMapMarker_icons10312016_FIRECanvas(frame: CGRect(origin: .zero, size: symbol2Rect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawCorrectrescuemapbutton(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol 2 Drawing
        let symbol2Rect = CGRect(x: 10, y: 10, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbol2Rect)
        context.translateBy(x: symbol2Rect.minX, y: symbol2Rect.minY)

        ButtonsForFJ092018.drawMapMarker_icons10312016_RESCUECanvas(frame: CGRect(origin: .zero, size: symbol2Rect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawReescueMapButton(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol 2 Drawing
        let symbol2Rect = CGRect(x: 10, y: 10, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbol2Rect)
        context.translateBy(x: symbol2Rect.minX, y: symbol2Rect.minY)

        ButtonsForFJ092018.drawMapMarkerEMSCanvas(frame: CGRect(origin: .zero, size: symbol2Rect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawMapMarker_icons10312016_incidentdataCanvas() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Color Declarations
        let gradientColor7 = UIColor(red: 0.265, green: 0.430, blue: 0.653, alpha: 1.000)
        let gradientColor8 = UIColor(red: 0.065, green: 0.091, blue: 0.157, alpha: 1.000)
        let fillColor33 = UIColor(red: 0.792, green: 0.076, blue: 0.127, alpha: 1.000)
        let fillColor34 = UIColor(red: 0.813, green: 0.119, blue: 0.177, alpha: 1.000)

        //// Gradient Declarations
        let gradient6 = CGGradient(colorsSpace: nil, colors: [gradientColor7.cgColor, gradientColor8.cgColor] as CFArray, locations: [0, 1])!

        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath()
        clipPath.move(to: CGPoint(x: 48.21, y: 5.06))
        clipPath.addCurve(to: CGPoint(x: 25.16, y: 25.03), controlPoint1: CGPoint(x: 35.5, y: 5.06), controlPoint2: CGPoint(x: 25.16, y: 14.02))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 25.03))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 126.24))
        clipPath.addCurve(to: CGPoint(x: 48.03, y: 146.21), controlPoint1: CGPoint(x: 25.16, y: 136.8), controlPoint2: CGPoint(x: 34.99, y: 145.38))
        clipPath.addLine(to: CGPoint(x: 48.03, y: 146.21))
        clipPath.addLine(to: CGPoint(x: 48.2, y: 146.22))
        clipPath.addCurve(to: CGPoint(x: 96.87, y: 182.79), controlPoint1: CGPoint(x: 81.5, y: 146.35), controlPoint2: CGPoint(x: 96.72, y: 182.43))
        clipPath.addLine(to: CGPoint(x: 96.87, y: 182.79))
        clipPath.addLine(to: CGPoint(x: 99.7, y: 189.73))
        clipPath.addLine(to: CGPoint(x: 102, y: 182.59))
        clipPath.addCurve(to: CGPoint(x: 151.67, y: 146.22), controlPoint1: CGPoint(x: 102.11, y: 182.22), controlPoint2: CGPoint(x: 114.1, y: 146.22))
        clipPath.addLine(to: CGPoint(x: 151.67, y: 146.22))
        clipPath.addLine(to: CGPoint(x: 151.83, y: 146.22))
        clipPath.addCurve(to: CGPoint(x: 174.84, y: 126.24), controlPoint1: CGPoint(x: 164.52, y: 146.06), controlPoint2: CGPoint(x: 174.84, y: 137.1))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 126.24))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 25.03))
        clipPath.addCurve(to: CGPoint(x: 151.79, y: 5.06), controlPoint1: CGPoint(x: 174.84, y: 14.02), controlPoint2: CGPoint(x: 164.5, y: 5.06))
        clipPath.addLine(to: CGPoint(x: 151.79, y: 5.06))
        clipPath.addLine(to: CGPoint(x: 48.21, y: 5.06))
        clipPath.close()
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 48.21, y: 5.06))
        bezierPath.addCurve(to: CGPoint(x: 25.16, y: 25.03), controlPoint1: CGPoint(x: 35.5, y: 5.06), controlPoint2: CGPoint(x: 25.16, y: 14.02))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 25.03))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 126.24))
        bezierPath.addCurve(to: CGPoint(x: 48.03, y: 146.21), controlPoint1: CGPoint(x: 25.16, y: 136.8), controlPoint2: CGPoint(x: 34.99, y: 145.38))
        bezierPath.addLine(to: CGPoint(x: 48.03, y: 146.21))
        bezierPath.addLine(to: CGPoint(x: 48.2, y: 146.22))
        bezierPath.addCurve(to: CGPoint(x: 96.87, y: 182.79), controlPoint1: CGPoint(x: 81.5, y: 146.35), controlPoint2: CGPoint(x: 96.72, y: 182.43))
        bezierPath.addLine(to: CGPoint(x: 96.87, y: 182.79))
        bezierPath.addLine(to: CGPoint(x: 99.7, y: 189.73))
        bezierPath.addLine(to: CGPoint(x: 102, y: 182.59))
        bezierPath.addCurve(to: CGPoint(x: 151.67, y: 146.22), controlPoint1: CGPoint(x: 102.11, y: 182.22), controlPoint2: CGPoint(x: 114.1, y: 146.22))
        bezierPath.addLine(to: CGPoint(x: 151.67, y: 146.22))
        bezierPath.addLine(to: CGPoint(x: 151.83, y: 146.22))
        bezierPath.addCurve(to: CGPoint(x: 174.84, y: 126.24), controlPoint1: CGPoint(x: 164.52, y: 146.06), controlPoint2: CGPoint(x: 174.84, y: 137.1))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 126.24))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 25.03))
        bezierPath.addCurve(to: CGPoint(x: 151.79, y: 5.06), controlPoint1: CGPoint(x: 174.84, y: 14.02), controlPoint2: CGPoint(x: 164.5, y: 5.06))
        bezierPath.addLine(to: CGPoint(x: 151.79, y: 5.06))
        bezierPath.addLine(to: CGPoint(x: 48.21, y: 5.06))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(gradient6,
            start: CGPoint(x: 100, y: 189.73),
            end: CGPoint(x: 100, y: 5.06),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 2.33))
        bezier3Path.addLine(to: CGPoint(x: 48.21, y: 2.33))
        bezier3Path.addCurve(to: CGPoint(x: 22.43, y: 25.03), controlPoint1: CGPoint(x: 33.99, y: 2.33), controlPoint2: CGPoint(x: 22.43, y: 12.51))
        bezier3Path.addLine(to: CGPoint(x: 22.43, y: 126.24))
        bezier3Path.addCurve(to: CGPoint(x: 47.86, y: 148.94), controlPoint1: CGPoint(x: 22.43, y: 138.26), controlPoint2: CGPoint(x: 33.36, y: 148.02))
        bezier3Path.addLine(to: CGPoint(x: 48.02, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 48.19, y: 148.95))
        bezier3Path.addCurve(to: CGPoint(x: 82.82, y: 166.03), controlPoint1: CGPoint(x: 61.21, y: 149), controlPoint2: CGPoint(x: 72.86, y: 154.75))
        bezier3Path.addCurve(to: CGPoint(x: 94.34, y: 183.83), controlPoint1: CGPoint(x: 90.56, y: 174.79), controlPoint2: CGPoint(x: 94.3, y: 183.74))
        bezier3Path.addLine(to: CGPoint(x: 100.04, y: 197.62))
        bezier3Path.addLine(to: CGPoint(x: 104.6, y: 183.42))
        bezier3Path.addCurve(to: CGPoint(x: 114.95, y: 165.85), controlPoint1: CGPoint(x: 104.62, y: 183.35), controlPoint2: CGPoint(x: 107.57, y: 174.49))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 148.95), controlPoint1: CGPoint(x: 124.54, y: 154.64), controlPoint2: CGPoint(x: 136.89, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.78, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.82, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.86, y: 148.95))
        bezier3Path.addCurve(to: CGPoint(x: 177.57, y: 126.24), controlPoint1: CGPoint(x: 166.04, y: 148.77), controlPoint2: CGPoint(x: 177.57, y: 138.59))
        bezier3Path.addLine(to: CGPoint(x: 177.57, y: 25.03))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 2.33), controlPoint1: CGPoint(x: 177.57, y: 12.51), controlPoint2: CGPoint(x: 166.01, y: 2.33))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 7.79))
        bezier3Path.addCurve(to: CGPoint(x: 172.11, y: 25.03), controlPoint1: CGPoint(x: 163.01, y: 7.79), controlPoint2: CGPoint(x: 172.11, y: 15.51))
        bezier3Path.addLine(to: CGPoint(x: 172.11, y: 126.24))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 143.49), controlPoint1: CGPoint(x: 172.11, y: 135.77), controlPoint2: CGPoint(x: 162.65, y: 143.35))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 143.49), controlPoint1: CGPoint(x: 151.75, y: 143.49), controlPoint2: CGPoint(x: 151.71, y: 143.49))
        bezier3Path.addCurve(to: CGPoint(x: 99.39, y: 181.75), controlPoint1: CGPoint(x: 111.67, y: 143.48), controlPoint2: CGPoint(x: 99.39, y: 181.75))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 143.49), controlPoint1: CGPoint(x: 99.39, y: 181.75), controlPoint2: CGPoint(x: 83.79, y: 143.62))
        bezier3Path.addCurve(to: CGPoint(x: 27.89, y: 126.24), controlPoint1: CGPoint(x: 37.14, y: 142.78), controlPoint2: CGPoint(x: 27.89, y: 135.77))
        bezier3Path.addLine(to: CGPoint(x: 27.89, y: 25.03))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 7.79), controlPoint1: CGPoint(x: 27.89, y: 15.51), controlPoint2: CGPoint(x: 36.99, y: 7.79))
        bezier3Path.addLine(to: CGPoint(x: 151.79, y: 7.79))
        bezier3Path.close()
        fillColor33.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 92.9, y: 75.94))
        bezier4Path.addCurve(to: CGPoint(x: 81.37, y: 64.41), controlPoint1: CGPoint(x: 86.53, y: 75.94), controlPoint2: CGPoint(x: 81.37, y: 70.78))
        bezier4Path.addCurve(to: CGPoint(x: 92.9, y: 52.89), controlPoint1: CGPoint(x: 81.37, y: 58.05), controlPoint2: CGPoint(x: 86.53, y: 52.89))
        bezier4Path.addCurve(to: CGPoint(x: 104.42, y: 64.41), controlPoint1: CGPoint(x: 99.26, y: 52.89), controlPoint2: CGPoint(x: 104.42, y: 58.05))
        bezier4Path.addCurve(to: CGPoint(x: 92.9, y: 75.94), controlPoint1: CGPoint(x: 104.42, y: 70.78), controlPoint2: CGPoint(x: 99.26, y: 75.94))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 92.9, y: 16.39))
        bezier4Path.addCurve(to: CGPoint(x: 44.87, y: 64.41), controlPoint1: CGPoint(x: 66.37, y: 16.39), controlPoint2: CGPoint(x: 44.87, y: 37.89))
        bezier4Path.addCurve(to: CGPoint(x: 92.9, y: 112.44), controlPoint1: CGPoint(x: 44.87, y: 90.94), controlPoint2: CGPoint(x: 66.37, y: 112.44))
        bezier4Path.addCurve(to: CGPoint(x: 140.92, y: 64.41), controlPoint1: CGPoint(x: 119.42, y: 112.44), controlPoint2: CGPoint(x: 140.92, y: 90.94))
        bezier4Path.addCurve(to: CGPoint(x: 92.9, y: 16.39), controlPoint1: CGPoint(x: 140.92, y: 37.89), controlPoint2: CGPoint(x: 119.42, y: 16.39))
        bezier4Path.close()
        fillColor34.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 164.33, y: 77.33))
        bezier5Path.addCurve(to: CGPoint(x: 155.75, y: 67.32), controlPoint1: CGPoint(x: 164.33, y: 72.19), controlPoint2: CGPoint(x: 161.49, y: 67.68))
        bezier5Path.addCurve(to: CGPoint(x: 145.88, y: 76.16), controlPoint1: CGPoint(x: 150.01, y: 66.96), controlPoint2: CGPoint(x: 146.39, y: 72.27))
        bezier5Path.addCurve(to: CGPoint(x: 152.03, y: 85.39), controlPoint1: CGPoint(x: 145.22, y: 81.23), controlPoint2: CGPoint(x: 147.18, y: 85))
        bezier5Path.addCurve(to: CGPoint(x: 113.55, y: 126.16), controlPoint1: CGPoint(x: 149.7, y: 115.88), controlPoint2: CGPoint(x: 126.68, y: 124.89))
        bezier5Path.addLine(to: CGPoint(x: 113.55, y: 120.5))
        bezier5Path.addLine(to: CGPoint(x: 70.57, y: 120.5))
        bezier5Path.addLine(to: CGPoint(x: 70.57, y: 139.81))
        bezier5Path.addLine(to: CGPoint(x: 113.55, y: 139.81))
        bezier5Path.addLine(to: CGPoint(x: 113.55, y: 133.67))
        bezier5Path.addCurve(to: CGPoint(x: 158.98, y: 85.09), controlPoint1: CGPoint(x: 128.39, y: 133.44), controlPoint2: CGPoint(x: 158.98, y: 123.7))
        bezier5Path.addCurve(to: CGPoint(x: 164.33, y: 77.33), controlPoint1: CGPoint(x: 162.34, y: 83.89), controlPoint2: CGPoint(x: 164.33, y: 81.1))
        bezier5Path.close()
        fillColor34.setFill()
        bezier5Path.fill()
    }

    @objc dynamic public class func drawWhiteincidentdataCanvas2(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let gradientColor7 = UIColor(red: 0.265, green: 0.430, blue: 0.653, alpha: 1.000)
        let gradientColor8 = UIColor(red: 0.065, green: 0.091, blue: 0.157, alpha: 1.000)
        let fillColor33 = UIColor(red: 0.792, green: 0.076, blue: 0.127, alpha: 1.000)
        let fillColor35 = UIColor(red: 1.000, green: 0.998, blue: 0.995, alpha: 1.000)

        //// Gradient Declarations
        let gradient6 = CGGradient(colorsSpace: nil, colors: [gradientColor7.cgColor, gradientColor8.cgColor] as CFArray, locations: [0, 1])!

        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath()
        clipPath.move(to: CGPoint(x: 48.21, y: 5.06))
        clipPath.addCurve(to: CGPoint(x: 25.16, y: 25.03), controlPoint1: CGPoint(x: 35.5, y: 5.06), controlPoint2: CGPoint(x: 25.16, y: 14.02))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 25.03))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 126.24))
        clipPath.addCurve(to: CGPoint(x: 48.03, y: 146.21), controlPoint1: CGPoint(x: 25.16, y: 136.8), controlPoint2: CGPoint(x: 34.99, y: 145.38))
        clipPath.addLine(to: CGPoint(x: 48.03, y: 146.21))
        clipPath.addLine(to: CGPoint(x: 48.2, y: 146.22))
        clipPath.addCurve(to: CGPoint(x: 96.87, y: 182.79), controlPoint1: CGPoint(x: 81.5, y: 146.35), controlPoint2: CGPoint(x: 96.72, y: 182.43))
        clipPath.addLine(to: CGPoint(x: 96.87, y: 182.79))
        clipPath.addLine(to: CGPoint(x: 99.7, y: 189.73))
        clipPath.addLine(to: CGPoint(x: 102, y: 182.59))
        clipPath.addCurve(to: CGPoint(x: 151.67, y: 146.22), controlPoint1: CGPoint(x: 102.11, y: 182.22), controlPoint2: CGPoint(x: 114.1, y: 146.22))
        clipPath.addLine(to: CGPoint(x: 151.67, y: 146.22))
        clipPath.addLine(to: CGPoint(x: 151.83, y: 146.22))
        clipPath.addCurve(to: CGPoint(x: 174.84, y: 126.24), controlPoint1: CGPoint(x: 164.52, y: 146.06), controlPoint2: CGPoint(x: 174.84, y: 137.1))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 126.24))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 25.03))
        clipPath.addCurve(to: CGPoint(x: 151.79, y: 5.06), controlPoint1: CGPoint(x: 174.84, y: 14.02), controlPoint2: CGPoint(x: 164.5, y: 5.06))
        clipPath.addLine(to: CGPoint(x: 151.79, y: 5.06))
        clipPath.addLine(to: CGPoint(x: 48.21, y: 5.06))
        clipPath.close()
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 48.21, y: 5.06))
        bezierPath.addCurve(to: CGPoint(x: 25.16, y: 25.03), controlPoint1: CGPoint(x: 35.5, y: 5.06), controlPoint2: CGPoint(x: 25.16, y: 14.02))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 25.03))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 126.24))
        bezierPath.addCurve(to: CGPoint(x: 48.03, y: 146.21), controlPoint1: CGPoint(x: 25.16, y: 136.8), controlPoint2: CGPoint(x: 34.99, y: 145.38))
        bezierPath.addLine(to: CGPoint(x: 48.03, y: 146.21))
        bezierPath.addLine(to: CGPoint(x: 48.2, y: 146.22))
        bezierPath.addCurve(to: CGPoint(x: 96.87, y: 182.79), controlPoint1: CGPoint(x: 81.5, y: 146.35), controlPoint2: CGPoint(x: 96.72, y: 182.43))
        bezierPath.addLine(to: CGPoint(x: 96.87, y: 182.79))
        bezierPath.addLine(to: CGPoint(x: 99.7, y: 189.73))
        bezierPath.addLine(to: CGPoint(x: 102, y: 182.59))
        bezierPath.addCurve(to: CGPoint(x: 151.67, y: 146.22), controlPoint1: CGPoint(x: 102.11, y: 182.22), controlPoint2: CGPoint(x: 114.1, y: 146.22))
        bezierPath.addLine(to: CGPoint(x: 151.67, y: 146.22))
        bezierPath.addLine(to: CGPoint(x: 151.83, y: 146.22))
        bezierPath.addCurve(to: CGPoint(x: 174.84, y: 126.24), controlPoint1: CGPoint(x: 164.52, y: 146.06), controlPoint2: CGPoint(x: 174.84, y: 137.1))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 126.24))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 25.03))
        bezierPath.addCurve(to: CGPoint(x: 151.79, y: 5.06), controlPoint1: CGPoint(x: 174.84, y: 14.02), controlPoint2: CGPoint(x: 164.5, y: 5.06))
        bezierPath.addLine(to: CGPoint(x: 151.79, y: 5.06))
        bezierPath.addLine(to: CGPoint(x: 48.21, y: 5.06))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(gradient6,
            start: CGPoint(x: 100, y: 189.73),
            end: CGPoint(x: 100, y: 5.06),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 2.33))
        bezier3Path.addLine(to: CGPoint(x: 48.21, y: 2.33))
        bezier3Path.addCurve(to: CGPoint(x: 22.43, y: 25.03), controlPoint1: CGPoint(x: 33.99, y: 2.33), controlPoint2: CGPoint(x: 22.43, y: 12.51))
        bezier3Path.addLine(to: CGPoint(x: 22.43, y: 126.24))
        bezier3Path.addCurve(to: CGPoint(x: 47.86, y: 148.94), controlPoint1: CGPoint(x: 22.43, y: 138.26), controlPoint2: CGPoint(x: 33.36, y: 148.02))
        bezier3Path.addLine(to: CGPoint(x: 48.02, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 48.19, y: 148.95))
        bezier3Path.addCurve(to: CGPoint(x: 82.82, y: 166.03), controlPoint1: CGPoint(x: 61.21, y: 149), controlPoint2: CGPoint(x: 72.86, y: 154.75))
        bezier3Path.addCurve(to: CGPoint(x: 94.34, y: 183.83), controlPoint1: CGPoint(x: 90.56, y: 174.79), controlPoint2: CGPoint(x: 94.3, y: 183.74))
        bezier3Path.addLine(to: CGPoint(x: 100.04, y: 197.62))
        bezier3Path.addLine(to: CGPoint(x: 104.6, y: 183.42))
        bezier3Path.addCurve(to: CGPoint(x: 114.95, y: 165.85), controlPoint1: CGPoint(x: 104.62, y: 183.35), controlPoint2: CGPoint(x: 107.57, y: 174.49))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 148.95), controlPoint1: CGPoint(x: 124.54, y: 154.64), controlPoint2: CGPoint(x: 136.89, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.78, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.82, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.86, y: 148.95))
        bezier3Path.addCurve(to: CGPoint(x: 177.57, y: 126.24), controlPoint1: CGPoint(x: 166.04, y: 148.77), controlPoint2: CGPoint(x: 177.57, y: 138.59))
        bezier3Path.addLine(to: CGPoint(x: 177.57, y: 25.03))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 2.33), controlPoint1: CGPoint(x: 177.57, y: 12.51), controlPoint2: CGPoint(x: 166.01, y: 2.33))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 7.79))
        bezier3Path.addCurve(to: CGPoint(x: 172.11, y: 25.03), controlPoint1: CGPoint(x: 163.01, y: 7.79), controlPoint2: CGPoint(x: 172.11, y: 15.51))
        bezier3Path.addLine(to: CGPoint(x: 172.11, y: 126.24))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 143.49), controlPoint1: CGPoint(x: 172.11, y: 135.77), controlPoint2: CGPoint(x: 162.65, y: 143.35))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 143.49), controlPoint1: CGPoint(x: 151.75, y: 143.49), controlPoint2: CGPoint(x: 151.71, y: 143.49))
        bezier3Path.addCurve(to: CGPoint(x: 99.39, y: 181.75), controlPoint1: CGPoint(x: 111.67, y: 143.48), controlPoint2: CGPoint(x: 99.39, y: 181.75))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 143.49), controlPoint1: CGPoint(x: 99.39, y: 181.75), controlPoint2: CGPoint(x: 83.79, y: 143.62))
        bezier3Path.addCurve(to: CGPoint(x: 27.89, y: 126.24), controlPoint1: CGPoint(x: 37.14, y: 142.78), controlPoint2: CGPoint(x: 27.89, y: 135.77))
        bezier3Path.addLine(to: CGPoint(x: 27.89, y: 25.03))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 7.79), controlPoint1: CGPoint(x: 27.89, y: 15.51), controlPoint2: CGPoint(x: 36.99, y: 7.79))
        bezier3Path.addLine(to: CGPoint(x: 151.79, y: 7.79))
        bezier3Path.close()
        fillColor33.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 92.9, y: 75.94))
        bezier4Path.addCurve(to: CGPoint(x: 81.37, y: 64.41), controlPoint1: CGPoint(x: 86.53, y: 75.94), controlPoint2: CGPoint(x: 81.37, y: 70.78))
        bezier4Path.addCurve(to: CGPoint(x: 92.9, y: 52.89), controlPoint1: CGPoint(x: 81.37, y: 58.05), controlPoint2: CGPoint(x: 86.53, y: 52.89))
        bezier4Path.addCurve(to: CGPoint(x: 104.42, y: 64.41), controlPoint1: CGPoint(x: 99.26, y: 52.89), controlPoint2: CGPoint(x: 104.42, y: 58.05))
        bezier4Path.addCurve(to: CGPoint(x: 92.9, y: 75.94), controlPoint1: CGPoint(x: 104.42, y: 70.78), controlPoint2: CGPoint(x: 99.26, y: 75.94))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 92.9, y: 16.39))
        bezier4Path.addCurve(to: CGPoint(x: 44.87, y: 64.41), controlPoint1: CGPoint(x: 66.37, y: 16.39), controlPoint2: CGPoint(x: 44.87, y: 37.89))
        bezier4Path.addCurve(to: CGPoint(x: 92.9, y: 112.44), controlPoint1: CGPoint(x: 44.87, y: 90.94), controlPoint2: CGPoint(x: 66.37, y: 112.44))
        bezier4Path.addCurve(to: CGPoint(x: 140.92, y: 64.41), controlPoint1: CGPoint(x: 119.42, y: 112.44), controlPoint2: CGPoint(x: 140.92, y: 90.94))
        bezier4Path.addCurve(to: CGPoint(x: 92.9, y: 16.39), controlPoint1: CGPoint(x: 140.92, y: 37.89), controlPoint2: CGPoint(x: 119.42, y: 16.39))
        bezier4Path.close()
        fillColor35.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 164.33, y: 77.33))
        bezier5Path.addCurve(to: CGPoint(x: 155.75, y: 67.32), controlPoint1: CGPoint(x: 164.33, y: 72.19), controlPoint2: CGPoint(x: 161.49, y: 67.68))
        bezier5Path.addCurve(to: CGPoint(x: 145.88, y: 76.16), controlPoint1: CGPoint(x: 150.01, y: 66.96), controlPoint2: CGPoint(x: 146.39, y: 72.27))
        bezier5Path.addCurve(to: CGPoint(x: 152.03, y: 85.39), controlPoint1: CGPoint(x: 145.22, y: 81.23), controlPoint2: CGPoint(x: 147.18, y: 85))
        bezier5Path.addCurve(to: CGPoint(x: 113.55, y: 126.16), controlPoint1: CGPoint(x: 149.7, y: 115.88), controlPoint2: CGPoint(x: 126.68, y: 124.89))
        bezier5Path.addLine(to: CGPoint(x: 113.55, y: 120.5))
        bezier5Path.addLine(to: CGPoint(x: 70.57, y: 120.5))
        bezier5Path.addLine(to: CGPoint(x: 70.57, y: 139.81))
        bezier5Path.addLine(to: CGPoint(x: 113.55, y: 139.81))
        bezier5Path.addLine(to: CGPoint(x: 113.55, y: 133.67))
        bezier5Path.addCurve(to: CGPoint(x: 158.98, y: 85.09), controlPoint1: CGPoint(x: 128.39, y: 133.44), controlPoint2: CGPoint(x: 158.98, y: 123.7))
        bezier5Path.addCurve(to: CGPoint(x: 164.33, y: 77.33), controlPoint1: CGPoint(x: 162.34, y: 83.89), controlPoint2: CGPoint(x: 164.33, y: 81.1))
        bezier5Path.close()
        fillColor35.setFill()
        bezier5Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawIncidentDataMapButton(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol 2 Drawing
        let symbol2Rect = CGRect(x: 10, y: 10, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbol2Rect)
        context.translateBy(x: symbol2Rect.minX, y: symbol2Rect.minY)

        ButtonsForFJ092018.drawWhiteincidentdataCanvas2(frame: CGRect(origin: .zero, size: symbol2Rect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawWhiteUserLocation_directionCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let gradientColor7 = UIColor(red: 0.265, green: 0.430, blue: 0.653, alpha: 1.000)
        let gradientColor8 = UIColor(red: 0.065, green: 0.091, blue: 0.157, alpha: 1.000)
        let fillColor35 = UIColor(red: 1.000, green: 0.998, blue: 0.995, alpha: 1.000)

        //// Gradient Declarations
        let gradient6 = CGGradient(colorsSpace: nil, colors: [gradientColor7.cgColor, gradientColor8.cgColor] as CFArray, locations: [0, 1])!

        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath()
        clipPath.move(to: CGPoint(x: 48.21, y: 5.06))
        clipPath.addCurve(to: CGPoint(x: 25.16, y: 25.03), controlPoint1: CGPoint(x: 35.5, y: 5.06), controlPoint2: CGPoint(x: 25.16, y: 14.02))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 25.03))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 126.24))
        clipPath.addCurve(to: CGPoint(x: 48.03, y: 146.21), controlPoint1: CGPoint(x: 25.16, y: 136.8), controlPoint2: CGPoint(x: 34.99, y: 145.38))
        clipPath.addLine(to: CGPoint(x: 48.03, y: 146.21))
        clipPath.addLine(to: CGPoint(x: 48.2, y: 146.22))
        clipPath.addCurve(to: CGPoint(x: 96.87, y: 182.79), controlPoint1: CGPoint(x: 81.5, y: 146.35), controlPoint2: CGPoint(x: 96.72, y: 182.43))
        clipPath.addLine(to: CGPoint(x: 96.87, y: 182.79))
        clipPath.addLine(to: CGPoint(x: 99.7, y: 189.73))
        clipPath.addLine(to: CGPoint(x: 102, y: 182.59))
        clipPath.addCurve(to: CGPoint(x: 151.67, y: 146.22), controlPoint1: CGPoint(x: 102.11, y: 182.22), controlPoint2: CGPoint(x: 114.1, y: 146.22))
        clipPath.addLine(to: CGPoint(x: 151.67, y: 146.22))
        clipPath.addLine(to: CGPoint(x: 151.83, y: 146.22))
        clipPath.addCurve(to: CGPoint(x: 174.84, y: 126.24), controlPoint1: CGPoint(x: 164.52, y: 146.06), controlPoint2: CGPoint(x: 174.84, y: 137.1))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 126.24))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 25.03))
        clipPath.addCurve(to: CGPoint(x: 151.79, y: 5.06), controlPoint1: CGPoint(x: 174.84, y: 14.02), controlPoint2: CGPoint(x: 164.5, y: 5.06))
        clipPath.addLine(to: CGPoint(x: 151.79, y: 5.06))
        clipPath.addLine(to: CGPoint(x: 48.21, y: 5.06))
        clipPath.close()
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 48.21, y: 5.06))
        bezierPath.addCurve(to: CGPoint(x: 25.16, y: 25.03), controlPoint1: CGPoint(x: 35.5, y: 5.06), controlPoint2: CGPoint(x: 25.16, y: 14.02))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 25.03))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 126.24))
        bezierPath.addCurve(to: CGPoint(x: 48.03, y: 146.21), controlPoint1: CGPoint(x: 25.16, y: 136.8), controlPoint2: CGPoint(x: 34.99, y: 145.38))
        bezierPath.addLine(to: CGPoint(x: 48.03, y: 146.21))
        bezierPath.addLine(to: CGPoint(x: 48.2, y: 146.22))
        bezierPath.addCurve(to: CGPoint(x: 96.87, y: 182.79), controlPoint1: CGPoint(x: 81.5, y: 146.35), controlPoint2: CGPoint(x: 96.72, y: 182.43))
        bezierPath.addLine(to: CGPoint(x: 96.87, y: 182.79))
        bezierPath.addLine(to: CGPoint(x: 99.7, y: 189.73))
        bezierPath.addLine(to: CGPoint(x: 102, y: 182.59))
        bezierPath.addCurve(to: CGPoint(x: 151.67, y: 146.22), controlPoint1: CGPoint(x: 102.11, y: 182.22), controlPoint2: CGPoint(x: 114.1, y: 146.22))
        bezierPath.addLine(to: CGPoint(x: 151.67, y: 146.22))
        bezierPath.addLine(to: CGPoint(x: 151.83, y: 146.22))
        bezierPath.addCurve(to: CGPoint(x: 174.84, y: 126.24), controlPoint1: CGPoint(x: 164.52, y: 146.06), controlPoint2: CGPoint(x: 174.84, y: 137.1))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 126.24))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 25.03))
        bezierPath.addCurve(to: CGPoint(x: 151.79, y: 5.06), controlPoint1: CGPoint(x: 174.84, y: 14.02), controlPoint2: CGPoint(x: 164.5, y: 5.06))
        bezierPath.addLine(to: CGPoint(x: 151.79, y: 5.06))
        bezierPath.addLine(to: CGPoint(x: 48.21, y: 5.06))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(gradient6,
            start: CGPoint(x: 100, y: 189.73),
            end: CGPoint(x: 100, y: 5.06),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 2.33))
        bezier3Path.addLine(to: CGPoint(x: 48.21, y: 2.33))
        bezier3Path.addCurve(to: CGPoint(x: 22.43, y: 25.03), controlPoint1: CGPoint(x: 33.99, y: 2.33), controlPoint2: CGPoint(x: 22.43, y: 12.51))
        bezier3Path.addLine(to: CGPoint(x: 22.43, y: 126.24))
        bezier3Path.addCurve(to: CGPoint(x: 47.86, y: 148.94), controlPoint1: CGPoint(x: 22.43, y: 138.26), controlPoint2: CGPoint(x: 33.36, y: 148.02))
        bezier3Path.addLine(to: CGPoint(x: 48.02, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 48.19, y: 148.95))
        bezier3Path.addCurve(to: CGPoint(x: 82.82, y: 166.03), controlPoint1: CGPoint(x: 61.21, y: 149), controlPoint2: CGPoint(x: 72.86, y: 154.75))
        bezier3Path.addCurve(to: CGPoint(x: 94.34, y: 183.83), controlPoint1: CGPoint(x: 90.56, y: 174.79), controlPoint2: CGPoint(x: 94.3, y: 183.74))
        bezier3Path.addLine(to: CGPoint(x: 100.04, y: 197.62))
        bezier3Path.addLine(to: CGPoint(x: 104.6, y: 183.42))
        bezier3Path.addCurve(to: CGPoint(x: 114.95, y: 165.85), controlPoint1: CGPoint(x: 104.62, y: 183.35), controlPoint2: CGPoint(x: 107.57, y: 174.49))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 148.95), controlPoint1: CGPoint(x: 124.54, y: 154.64), controlPoint2: CGPoint(x: 136.89, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.78, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.82, y: 148.95))
        bezier3Path.addLine(to: CGPoint(x: 151.86, y: 148.95))
        bezier3Path.addCurve(to: CGPoint(x: 177.57, y: 126.24), controlPoint1: CGPoint(x: 166.04, y: 148.77), controlPoint2: CGPoint(x: 177.57, y: 138.59))
        bezier3Path.addLine(to: CGPoint(x: 177.57, y: 25.03))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 2.33), controlPoint1: CGPoint(x: 177.57, y: 12.51), controlPoint2: CGPoint(x: 166.01, y: 2.33))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 7.79))
        bezier3Path.addCurve(to: CGPoint(x: 172.11, y: 25.03), controlPoint1: CGPoint(x: 163.01, y: 7.79), controlPoint2: CGPoint(x: 172.11, y: 15.51))
        bezier3Path.addLine(to: CGPoint(x: 172.11, y: 126.24))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 143.49), controlPoint1: CGPoint(x: 172.11, y: 135.77), controlPoint2: CGPoint(x: 162.65, y: 143.35))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 143.49), controlPoint1: CGPoint(x: 151.75, y: 143.49), controlPoint2: CGPoint(x: 151.71, y: 143.49))
        bezier3Path.addCurve(to: CGPoint(x: 99.39, y: 181.75), controlPoint1: CGPoint(x: 111.67, y: 143.48), controlPoint2: CGPoint(x: 99.39, y: 181.75))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 143.49), controlPoint1: CGPoint(x: 99.39, y: 181.75), controlPoint2: CGPoint(x: 83.79, y: 143.62))
        bezier3Path.addCurve(to: CGPoint(x: 27.89, y: 126.24), controlPoint1: CGPoint(x: 37.14, y: 142.78), controlPoint2: CGPoint(x: 27.89, y: 135.77))
        bezier3Path.addLine(to: CGPoint(x: 27.89, y: 25.03))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 7.79), controlPoint1: CGPoint(x: 27.89, y: 15.51), controlPoint2: CGPoint(x: 36.99, y: 7.79))
        bezier3Path.addLine(to: CGPoint(x: 151.79, y: 7.79))
        bezier3Path.close()
        fillColor35.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 90.31, y: 100.79))
        bezier4Path.addLine(to: CGPoint(x: 143.62, y: 47.49))
        bezier4Path.addLine(to: CGPoint(x: 104.85, y: 129.87))
        bezier4Path.addLine(to: CGPoint(x: 90.31, y: 100.79))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 56.38, y: 82.62))
        bezier4Path.addLine(to: CGPoint(x: 138.77, y: 45.06))
        bezier4Path.addLine(to: CGPoint(x: 86.67, y: 97.16))
        bezier4Path.addLine(to: CGPoint(x: 56.38, y: 82.62))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 45.48, y: 82.62))
        bezier4Path.addLine(to: CGPoint(x: 85.46, y: 100.79))
        bezier4Path.addLine(to: CGPoint(x: 104.85, y: 139.56))
        bezier4Path.addLine(to: CGPoint(x: 154.52, y: 32.95))
        bezier4Path.addLine(to: CGPoint(x: 45.48, y: 82.62))
        bezier4Path.close()
        fillColor35.setFill()
        bezier4Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawUserLocationMapButton(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol 2 Drawing
        let symbol2Rect = CGRect(x: 10, y: 10, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbol2Rect)
        context.translateBy(x: symbol2Rect.minX, y: symbol2Rect.minY)

        ButtonsForFJ092018.drawWhiteUserLocation_directionCanvas(frame: CGRect(origin: .zero, size: symbol2Rect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawCorrectemsmapbutton(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 10, y: 10, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawMapMarkerEMSCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func draw_9b9b9bworldiconCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor20 = UIColor(red: 0.534, green: 0.533, blue: 0.533, alpha: 1.000)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 70.15, y: 167.51))
        bezierPath.addCurve(to: CGPoint(x: 42.15, y: 145.6), controlPoint1: CGPoint(x: 59.12, y: 162.56), controlPoint2: CGPoint(x: 49.54, y: 155))
        bezierPath.addLine(to: CGPoint(x: 55.91, y: 145.6))
        bezierPath.addCurve(to: CGPoint(x: 70.15, y: 167.51), controlPoint1: CGPoint(x: 60.1, y: 154.79), controlPoint2: CGPoint(x: 65.2, y: 161.98))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 92.89, y: 169.24))
        bezierPath.addCurve(to: CGPoint(x: 71.31, y: 145.6), controlPoint1: CGPoint(x: 88.76, y: 166.64), controlPoint2: CGPoint(x: 79.04, y: 159.44))
        bezierPath.addLine(to: CGPoint(x: 92.89, y: 145.6))
        bezierPath.addLine(to: CGPoint(x: 92.89, y: 169.24))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 107.39, y: 169.24))
        bezierPath.addLine(to: CGPoint(x: 107.39, y: 145.6))
        bezierPath.addLine(to: CGPoint(x: 128.98, y: 145.6))
        bezierPath.addCurve(to: CGPoint(x: 107.39, y: 169.24), controlPoint1: CGPoint(x: 121.23, y: 159.46), controlPoint2: CGPoint(x: 111.5, y: 166.66))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 129.92, y: 167.76))
        bezierPath.addCurve(to: CGPoint(x: 144.38, y: 145.6), controlPoint1: CGPoint(x: 134.93, y: 162.2), controlPoint2: CGPoint(x: 140.13, y: 154.93))
        bezierPath.addLine(to: CGPoint(x: 158.44, y: 145.6))
        bezierPath.addCurve(to: CGPoint(x: 129.92, y: 167.76), controlPoint1: CGPoint(x: 150.94, y: 155.15), controlPoint2: CGPoint(x: 141.17, y: 162.82))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 33.26, y: 131.1))
        bezierPath.addCurve(to: CGPoint(x: 26.7, y: 107.44), controlPoint1: CGPoint(x: 29.85, y: 123.77), controlPoint2: CGPoint(x: 27.54, y: 115.83))
        bezierPath.addLine(to: CGPoint(x: 47.02, y: 107.44))
        bezierPath.addCurve(to: CGPoint(x: 50.69, y: 131.1), controlPoint1: CGPoint(x: 47.51, y: 116.19), controlPoint2: CGPoint(x: 48.78, y: 124.09))
        bezierPath.addLine(to: CGPoint(x: 33.26, y: 131.1))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 65.08, y: 131.1))
        bezierPath.addCurve(to: CGPoint(x: 60.75, y: 107.44), controlPoint1: CGPoint(x: 62.88, y: 124.29), controlPoint2: CGPoint(x: 61.31, y: 116.44))
        bezierPath.addLine(to: CGPoint(x: 92.89, y: 107.44))
        bezierPath.addLine(to: CGPoint(x: 92.89, y: 131.1))
        bezierPath.addLine(to: CGPoint(x: 65.08, y: 131.1))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 107.39, y: 131.1))
        bezierPath.addLine(to: CGPoint(x: 107.39, y: 107.44))
        bezierPath.addLine(to: CGPoint(x: 139.53, y: 107.44))
        bezierPath.addCurve(to: CGPoint(x: 135.21, y: 131.1), controlPoint1: CGPoint(x: 138.97, y: 116.44), controlPoint2: CGPoint(x: 137.41, y: 124.29))
        bezierPath.addLine(to: CGPoint(x: 107.39, y: 131.1))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 149.59, y: 131.1))
        bezierPath.addCurve(to: CGPoint(x: 153.27, y: 107.44), controlPoint1: CGPoint(x: 151.51, y: 124.09), controlPoint2: CGPoint(x: 152.78, y: 116.19))
        bezierPath.addLine(to: CGPoint(x: 173.89, y: 107.44))
        bezierPath.addCurve(to: CGPoint(x: 167.33, y: 131.1), controlPoint1: CGPoint(x: 173.05, y: 115.83), controlPoint2: CGPoint(x: 170.74, y: 123.77))
        bezierPath.addLine(to: CGPoint(x: 149.59, y: 131.1))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 26.69, y: 92.94))
        bezierPath.addCurve(to: CGPoint(x: 33.11, y: 69.29), controlPoint1: CGPoint(x: 27.49, y: 84.56), controlPoint2: CGPoint(x: 29.74, y: 76.62))
        bezierPath.addLine(to: CGPoint(x: 50.69, y: 69.29))
        bezierPath.addCurve(to: CGPoint(x: 47.02, y: 92.94), controlPoint1: CGPoint(x: 48.78, y: 76.29), controlPoint2: CGPoint(x: 47.51, y: 84.2))
        bezierPath.addLine(to: CGPoint(x: 26.69, y: 92.94))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 60.75, y: 92.94))
        bezierPath.addCurve(to: CGPoint(x: 65.08, y: 69.29), controlPoint1: CGPoint(x: 61.31, y: 83.95), controlPoint2: CGPoint(x: 62.88, y: 76.1))
        bezierPath.addLine(to: CGPoint(x: 92.89, y: 69.29))
        bezierPath.addLine(to: CGPoint(x: 92.89, y: 92.94))
        bezierPath.addLine(to: CGPoint(x: 60.75, y: 92.94))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 107.39, y: 92.94))
        bezierPath.addLine(to: CGPoint(x: 107.39, y: 69.29))
        bezierPath.addLine(to: CGPoint(x: 135.21, y: 69.29))
        bezierPath.addCurve(to: CGPoint(x: 139.53, y: 92.94), controlPoint1: CGPoint(x: 137.41, y: 76.1), controlPoint2: CGPoint(x: 138.97, y: 83.95))
        bezierPath.addLine(to: CGPoint(x: 107.39, y: 92.94))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 153.27, y: 92.94))
        bezierPath.addCurve(to: CGPoint(x: 149.59, y: 69.29), controlPoint1: CGPoint(x: 152.78, y: 84.2), controlPoint2: CGPoint(x: 151.51, y: 76.29))
        bezierPath.addLine(to: CGPoint(x: 167.48, y: 69.29))
        bezierPath.addCurve(to: CGPoint(x: 173.9, y: 92.94), controlPoint1: CGPoint(x: 170.85, y: 76.62), controlPoint2: CGPoint(x: 173.1, y: 84.56))
        bezierPath.addLine(to: CGPoint(x: 153.27, y: 92.94))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 41.92, y: 54.78))
        bezierPath.addCurve(to: CGPoint(x: 70.6, y: 32.34), controlPoint1: CGPoint(x: 49.43, y: 45.12), controlPoint2: CGPoint(x: 59.26, y: 37.34))
        bezierPath.addCurve(to: CGPoint(x: 55.91, y: 54.78), controlPoint1: CGPoint(x: 65.52, y: 37.93), controlPoint2: CGPoint(x: 60.23, y: 45.31))
        bezierPath.addLine(to: CGPoint(x: 41.92, y: 54.78))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 144.38, y: 54.78))
        bezierPath.addCurve(to: CGPoint(x: 129.47, y: 32.09), controlPoint1: CGPoint(x: 139.99, y: 45.18), controlPoint2: CGPoint(x: 134.61, y: 37.71))
        bezierPath.addCurve(to: CGPoint(x: 158.67, y: 54.78), controlPoint1: CGPoint(x: 141.04, y: 37.07), controlPoint2: CGPoint(x: 151.04, y: 44.96))
        bezierPath.addLine(to: CGPoint(x: 144.38, y: 54.78))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 71.31, y: 54.78))
        bezierPath.addCurve(to: CGPoint(x: 92.89, y: 31.15), controlPoint1: CGPoint(x: 79.04, y: 40.94), controlPoint2: CGPoint(x: 88.76, y: 33.74))
        bezierPath.addLine(to: CGPoint(x: 92.89, y: 54.78))
        bezierPath.addLine(to: CGPoint(x: 71.31, y: 54.78))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 107.39, y: 54.78))
        bezierPath.addLine(to: CGPoint(x: 107.39, y: 31.15))
        bezierPath.addCurve(to: CGPoint(x: 128.98, y: 54.78), controlPoint1: CGPoint(x: 111.52, y: 33.74), controlPoint2: CGPoint(x: 121.24, y: 40.94))
        bezierPath.addLine(to: CGPoint(x: 107.39, y: 54.78))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 100.14, y: 8.56))
        bezierPath.addCurve(to: CGPoint(x: 8.56, y: 100.14), controlPoint1: CGPoint(x: 49.56, y: 8.56), controlPoint2: CGPoint(x: 8.56, y: 49.57))
        bezierPath.addCurve(to: CGPoint(x: 100.14, y: 191.72), controlPoint1: CGPoint(x: 8.56, y: 150.72), controlPoint2: CGPoint(x: 49.56, y: 191.72))
        bezierPath.addCurve(to: CGPoint(x: 191.72, y: 100.14), controlPoint1: CGPoint(x: 150.72, y: 191.72), controlPoint2: CGPoint(x: 191.72, y: 150.72))
        bezierPath.addCurve(to: CGPoint(x: 100.14, y: 8.56), controlPoint1: CGPoint(x: 191.72, y: 49.57), controlPoint2: CGPoint(x: 150.72, y: 8.56))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 70.14, y: 170.51))
        bezierPath.addCurve(to: CGPoint(x: 72.57, y: 169.28), controlPoint1: CGPoint(x: 71.08, y: 170.51), controlPoint2: CGPoint(x: 71.99, y: 170.07))
        bezierPath.addCurve(to: CGPoint(x: 72.38, y: 165.51), controlPoint1: CGPoint(x: 73.4, y: 168.13), controlPoint2: CGPoint(x: 73.33, y: 166.56))
        bezierPath.addCurve(to: CGPoint(x: 58.64, y: 144.36), controlPoint1: CGPoint(x: 66.83, y: 159.31), controlPoint2: CGPoint(x: 62.21, y: 152.19))
        bezierPath.addCurve(to: CGPoint(x: 55.91, y: 142.6), controlPoint1: CGPoint(x: 58.15, y: 143.29), controlPoint2: CGPoint(x: 57.09, y: 142.6))
        bezierPath.addLine(to: CGPoint(x: 42.15, y: 142.6))
        bezierPath.addCurve(to: CGPoint(x: 39.45, y: 144.29), controlPoint1: CGPoint(x: 41, y: 142.6), controlPoint2: CGPoint(x: 39.96, y: 143.26))
        bezierPath.addCurve(to: CGPoint(x: 39.79, y: 147.46), controlPoint1: CGPoint(x: 38.95, y: 145.32), controlPoint2: CGPoint(x: 39.08, y: 146.55))
        bezierPath.addCurve(to: CGPoint(x: 68.92, y: 170.24), controlPoint1: CGPoint(x: 47.51, y: 157.28), controlPoint2: CGPoint(x: 57.58, y: 165.16))
        bezierPath.addCurve(to: CGPoint(x: 70.14, y: 170.51), controlPoint1: CGPoint(x: 69.31, y: 170.42), controlPoint2: CGPoint(x: 69.73, y: 170.51))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 92.89, y: 172.24))
        bezierPath.addCurve(to: CGPoint(x: 94.34, y: 171.86), controlPoint1: CGPoint(x: 93.39, y: 172.24), controlPoint2: CGPoint(x: 93.89, y: 172.11))
        bezierPath.addCurve(to: CGPoint(x: 95.89, y: 169.24), controlPoint1: CGPoint(x: 95.3, y: 171.33), controlPoint2: CGPoint(x: 95.89, y: 170.33))
        bezierPath.addLine(to: CGPoint(x: 95.89, y: 145.6))
        bezierPath.addCurve(to: CGPoint(x: 92.89, y: 142.6), controlPoint1: CGPoint(x: 95.89, y: 143.95), controlPoint2: CGPoint(x: 94.55, y: 142.6))
        bezierPath.addLine(to: CGPoint(x: 71.31, y: 142.6))
        bezierPath.addCurve(to: CGPoint(x: 68.72, y: 144.08), controlPoint1: CGPoint(x: 70.24, y: 142.6), controlPoint2: CGPoint(x: 69.26, y: 143.17))
        bezierPath.addCurve(to: CGPoint(x: 68.69, y: 147.07), controlPoint1: CGPoint(x: 68.18, y: 145), controlPoint2: CGPoint(x: 68.17, y: 146.14))
        bezierPath.addCurve(to: CGPoint(x: 91.3, y: 171.78), controlPoint1: CGPoint(x: 76.86, y: 161.68), controlPoint2: CGPoint(x: 87.22, y: 169.22))
        bezierPath.addCurve(to: CGPoint(x: 92.89, y: 172.24), controlPoint1: CGPoint(x: 91.78, y: 172.08), controlPoint2: CGPoint(x: 92.34, y: 172.24))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 107.39, y: 172.24))
        bezierPath.addCurve(to: CGPoint(x: 108.99, y: 171.78), controlPoint1: CGPoint(x: 107.95, y: 172.24), controlPoint2: CGPoint(x: 108.51, y: 172.09))
        bezierPath.addCurve(to: CGPoint(x: 131.6, y: 147.07), controlPoint1: CGPoint(x: 113.07, y: 169.21), controlPoint2: CGPoint(x: 123.44, y: 161.66))
        bezierPath.addCurve(to: CGPoint(x: 131.57, y: 144.08), controlPoint1: CGPoint(x: 132.12, y: 146.14), controlPoint2: CGPoint(x: 132.1, y: 145))
        bezierPath.addCurve(to: CGPoint(x: 128.98, y: 142.6), controlPoint1: CGPoint(x: 131.03, y: 143.17), controlPoint2: CGPoint(x: 130.04, y: 142.6))
        bezierPath.addLine(to: CGPoint(x: 107.39, y: 142.6))
        bezierPath.addCurve(to: CGPoint(x: 104.39, y: 145.6), controlPoint1: CGPoint(x: 105.74, y: 142.6), controlPoint2: CGPoint(x: 104.39, y: 143.95))
        bezierPath.addLine(to: CGPoint(x: 104.39, y: 169.24))
        bezierPath.addCurve(to: CGPoint(x: 105.94, y: 171.87), controlPoint1: CGPoint(x: 104.39, y: 170.34), controlPoint2: CGPoint(x: 104.99, y: 171.34))
        bezierPath.addCurve(to: CGPoint(x: 107.39, y: 172.24), controlPoint1: CGPoint(x: 106.4, y: 172.12), controlPoint2: CGPoint(x: 106.9, y: 172.24))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 129.93, y: 170.76))
        bezierPath.addCurve(to: CGPoint(x: 131.13, y: 170.51), controlPoint1: CGPoint(x: 130.33, y: 170.76), controlPoint2: CGPoint(x: 130.74, y: 170.68))
        bezierPath.addCurve(to: CGPoint(x: 160.8, y: 147.46), controlPoint1: CGPoint(x: 142.68, y: 165.43), controlPoint2: CGPoint(x: 152.94, y: 157.46))
        bezierPath.addCurve(to: CGPoint(x: 161.14, y: 144.29), controlPoint1: CGPoint(x: 161.51, y: 146.55), controlPoint2: CGPoint(x: 161.64, y: 145.32))
        bezierPath.addCurve(to: CGPoint(x: 158.44, y: 142.6), controlPoint1: CGPoint(x: 160.63, y: 143.26), controlPoint2: CGPoint(x: 159.59, y: 142.6))
        bezierPath.addLine(to: CGPoint(x: 144.38, y: 142.6))
        bezierPath.addCurve(to: CGPoint(x: 141.65, y: 144.36), controlPoint1: CGPoint(x: 143.2, y: 142.6), controlPoint2: CGPoint(x: 142.13, y: 143.29))
        bezierPath.addCurve(to: CGPoint(x: 127.7, y: 165.75), controlPoint1: CGPoint(x: 138.03, y: 152.29), controlPoint2: CGPoint(x: 133.34, y: 159.49))
        bezierPath.addCurve(to: CGPoint(x: 127.49, y: 169.52), controlPoint1: CGPoint(x: 126.75, y: 166.8), controlPoint2: CGPoint(x: 126.67, y: 168.37))
        bezierPath.addCurve(to: CGPoint(x: 129.93, y: 170.76), controlPoint1: CGPoint(x: 128.07, y: 170.32), controlPoint2: CGPoint(x: 128.99, y: 170.76))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 33.26, y: 134.1))
        bezierPath.addLine(to: CGPoint(x: 50.69, y: 134.1))
        bezierPath.addCurve(to: CGPoint(x: 53.08, y: 132.92), controlPoint1: CGPoint(x: 51.63, y: 134.1), controlPoint2: CGPoint(x: 52.51, y: 133.66))
        bezierPath.addCurve(to: CGPoint(x: 53.59, y: 130.31), controlPoint1: CGPoint(x: 53.65, y: 132.18), controlPoint2: CGPoint(x: 53.83, y: 131.21))
        bezierPath.addCurve(to: CGPoint(x: 50.01, y: 107.28), controlPoint1: CGPoint(x: 51.68, y: 123.35), controlPoint2: CGPoint(x: 50.48, y: 115.6))
        bezierPath.addCurve(to: CGPoint(x: 47.02, y: 104.44), controlPoint1: CGPoint(x: 49.92, y: 105.69), controlPoint2: CGPoint(x: 48.61, y: 104.44))
        bezierPath.addLine(to: CGPoint(x: 26.7, y: 104.44))
        bezierPath.addCurve(to: CGPoint(x: 24.48, y: 105.43), controlPoint1: CGPoint(x: 25.85, y: 104.44), controlPoint2: CGPoint(x: 25.05, y: 104.8))
        bezierPath.addCurve(to: CGPoint(x: 23.72, y: 107.74), controlPoint1: CGPoint(x: 23.91, y: 106.06), controlPoint2: CGPoint(x: 23.63, y: 106.9))
        bezierPath.addCurve(to: CGPoint(x: 30.54, y: 132.37), controlPoint1: CGPoint(x: 24.57, y: 116.18), controlPoint2: CGPoint(x: 26.86, y: 124.47))
        bezierPath.addCurve(to: CGPoint(x: 33.26, y: 134.1), controlPoint1: CGPoint(x: 31.03, y: 133.42), controlPoint2: CGPoint(x: 32.1, y: 134.1))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 65.08, y: 134.1))
        bezierPath.addLine(to: CGPoint(x: 92.89, y: 134.1))
        bezierPath.addCurve(to: CGPoint(x: 95.89, y: 131.1), controlPoint1: CGPoint(x: 94.55, y: 134.1), controlPoint2: CGPoint(x: 95.89, y: 132.76))
        bezierPath.addLine(to: CGPoint(x: 95.89, y: 107.44))
        bezierPath.addCurve(to: CGPoint(x: 92.89, y: 104.44), controlPoint1: CGPoint(x: 95.89, y: 105.79), controlPoint2: CGPoint(x: 94.55, y: 104.44))
        bezierPath.addLine(to: CGPoint(x: 60.75, y: 104.44))
        bezierPath.addCurve(to: CGPoint(x: 58.57, y: 105.39), controlPoint1: CGPoint(x: 59.93, y: 104.44), controlPoint2: CGPoint(x: 59.14, y: 104.79))
        bezierPath.addCurve(to: CGPoint(x: 57.76, y: 107.63), controlPoint1: CGPoint(x: 58, y: 105.99), controlPoint2: CGPoint(x: 57.71, y: 106.8))
        bezierPath.addCurve(to: CGPoint(x: 62.22, y: 132.02), controlPoint1: CGPoint(x: 58.3, y: 116.31), controlPoint2: CGPoint(x: 59.8, y: 124.52))
        bezierPath.addCurve(to: CGPoint(x: 65.08, y: 134.1), controlPoint1: CGPoint(x: 62.62, y: 133.26), controlPoint2: CGPoint(x: 63.78, y: 134.1))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 107.39, y: 134.1))
        bezierPath.addLine(to: CGPoint(x: 135.21, y: 134.1))
        bezierPath.addCurve(to: CGPoint(x: 138.06, y: 132.02), controlPoint1: CGPoint(x: 136.51, y: 134.1), controlPoint2: CGPoint(x: 137.66, y: 133.26))
        bezierPath.addCurve(to: CGPoint(x: 142.53, y: 107.63), controlPoint1: CGPoint(x: 140.48, y: 124.52), controlPoint2: CGPoint(x: 141.99, y: 116.31))
        bezierPath.addCurve(to: CGPoint(x: 141.72, y: 105.39), controlPoint1: CGPoint(x: 142.58, y: 106.8), controlPoint2: CGPoint(x: 142.28, y: 105.99))
        bezierPath.addCurve(to: CGPoint(x: 139.53, y: 104.44), controlPoint1: CGPoint(x: 141.15, y: 104.79), controlPoint2: CGPoint(x: 140.36, y: 104.44))
        bezierPath.addLine(to: CGPoint(x: 107.39, y: 104.44))
        bezierPath.addCurve(to: CGPoint(x: 104.39, y: 107.44), controlPoint1: CGPoint(x: 105.74, y: 104.44), controlPoint2: CGPoint(x: 104.39, y: 105.79))
        bezierPath.addLine(to: CGPoint(x: 104.39, y: 131.1))
        bezierPath.addCurve(to: CGPoint(x: 107.39, y: 134.1), controlPoint1: CGPoint(x: 104.39, y: 132.76), controlPoint2: CGPoint(x: 105.74, y: 134.1))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 149.59, y: 134.1))
        bezierPath.addLine(to: CGPoint(x: 167.33, y: 134.1))
        bezierPath.addCurve(to: CGPoint(x: 170.05, y: 132.37), controlPoint1: CGPoint(x: 168.5, y: 134.1), controlPoint2: CGPoint(x: 169.56, y: 133.42))
        bezierPath.addCurve(to: CGPoint(x: 176.87, y: 107.74), controlPoint1: CGPoint(x: 173.73, y: 124.47), controlPoint2: CGPoint(x: 176.03, y: 116.18))
        bezierPath.addCurve(to: CGPoint(x: 176.11, y: 105.43), controlPoint1: CGPoint(x: 176.96, y: 106.9), controlPoint2: CGPoint(x: 176.68, y: 106.06))
        bezierPath.addCurve(to: CGPoint(x: 173.89, y: 104.44), controlPoint1: CGPoint(x: 175.55, y: 104.8), controlPoint2: CGPoint(x: 174.74, y: 104.44))
        bezierPath.addLine(to: CGPoint(x: 153.27, y: 104.44))
        bezierPath.addCurve(to: CGPoint(x: 150.27, y: 107.28), controlPoint1: CGPoint(x: 151.68, y: 104.44), controlPoint2: CGPoint(x: 150.36, y: 105.69))
        bezierPath.addCurve(to: CGPoint(x: 146.7, y: 130.31), controlPoint1: CGPoint(x: 149.8, y: 115.6), controlPoint2: CGPoint(x: 148.6, y: 123.35))
        bezierPath.addCurve(to: CGPoint(x: 147.21, y: 132.92), controlPoint1: CGPoint(x: 146.45, y: 131.21), controlPoint2: CGPoint(x: 146.64, y: 132.18))
        bezierPath.addCurve(to: CGPoint(x: 149.59, y: 134.1), controlPoint1: CGPoint(x: 147.78, y: 133.66), controlPoint2: CGPoint(x: 148.66, y: 134.1))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 26.69, y: 95.94))
        bezierPath.addLine(to: CGPoint(x: 47.02, y: 95.94))
        bezierPath.addCurve(to: CGPoint(x: 50.01, y: 93.11), controlPoint1: CGPoint(x: 48.61, y: 95.94), controlPoint2: CGPoint(x: 49.92, y: 94.7))
        bezierPath.addCurve(to: CGPoint(x: 53.59, y: 70.08), controlPoint1: CGPoint(x: 50.48, y: 84.78), controlPoint2: CGPoint(x: 51.68, y: 77.04))
        bezierPath.addCurve(to: CGPoint(x: 53.08, y: 67.47), controlPoint1: CGPoint(x: 53.83, y: 69.17), controlPoint2: CGPoint(x: 53.65, y: 68.21))
        bezierPath.addCurve(to: CGPoint(x: 50.69, y: 66.29), controlPoint1: CGPoint(x: 52.51, y: 66.72), controlPoint2: CGPoint(x: 51.63, y: 66.29))
        bezierPath.addLine(to: CGPoint(x: 33.11, y: 66.29))
        bezierPath.addCurve(to: CGPoint(x: 30.39, y: 68.03), controlPoint1: CGPoint(x: 31.94, y: 66.29), controlPoint2: CGPoint(x: 30.88, y: 66.97))
        bezierPath.addCurve(to: CGPoint(x: 23.7, y: 92.65), controlPoint1: CGPoint(x: 26.76, y: 75.92), controlPoint2: CGPoint(x: 24.51, y: 84.21))
        bezierPath.addCurve(to: CGPoint(x: 24.47, y: 94.96), controlPoint1: CGPoint(x: 23.62, y: 93.5), controlPoint2: CGPoint(x: 23.9, y: 94.33))
        bezierPath.addCurve(to: CGPoint(x: 26.69, y: 95.94), controlPoint1: CGPoint(x: 25.04, y: 95.58), controlPoint2: CGPoint(x: 25.84, y: 95.94))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 60.75, y: 95.94))
        bezierPath.addLine(to: CGPoint(x: 92.89, y: 95.94))
        bezierPath.addCurve(to: CGPoint(x: 95.89, y: 92.94), controlPoint1: CGPoint(x: 94.55, y: 95.94), controlPoint2: CGPoint(x: 95.89, y: 94.6))
        bezierPath.addLine(to: CGPoint(x: 95.89, y: 69.29))
        bezierPath.addCurve(to: CGPoint(x: 92.89, y: 66.29), controlPoint1: CGPoint(x: 95.89, y: 67.63), controlPoint2: CGPoint(x: 94.55, y: 66.29))
        bezierPath.addLine(to: CGPoint(x: 65.08, y: 66.29))
        bezierPath.addCurve(to: CGPoint(x: 62.22, y: 68.36), controlPoint1: CGPoint(x: 63.78, y: 66.29), controlPoint2: CGPoint(x: 62.62, y: 67.13))
        bezierPath.addCurve(to: CGPoint(x: 57.76, y: 92.75), controlPoint1: CGPoint(x: 59.8, y: 75.87), controlPoint2: CGPoint(x: 58.3, y: 84.07))
        bezierPath.addCurve(to: CGPoint(x: 58.57, y: 95), controlPoint1: CGPoint(x: 57.71, y: 93.58), controlPoint2: CGPoint(x: 58, y: 94.39))
        bezierPath.addCurve(to: CGPoint(x: 60.75, y: 95.94), controlPoint1: CGPoint(x: 59.14, y: 95.6), controlPoint2: CGPoint(x: 59.93, y: 95.94))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 107.39, y: 95.94))
        bezierPath.addLine(to: CGPoint(x: 139.53, y: 95.94))
        bezierPath.addCurve(to: CGPoint(x: 141.72, y: 95), controlPoint1: CGPoint(x: 140.36, y: 95.94), controlPoint2: CGPoint(x: 141.15, y: 95.6))
        bezierPath.addCurve(to: CGPoint(x: 142.53, y: 92.75), controlPoint1: CGPoint(x: 142.28, y: 94.39), controlPoint2: CGPoint(x: 142.58, y: 93.58))
        bezierPath.addCurve(to: CGPoint(x: 138.06, y: 68.36), controlPoint1: CGPoint(x: 141.99, y: 84.07), controlPoint2: CGPoint(x: 140.48, y: 75.87))
        bezierPath.addCurve(to: CGPoint(x: 135.21, y: 66.29), controlPoint1: CGPoint(x: 137.66, y: 67.13), controlPoint2: CGPoint(x: 136.51, y: 66.29))
        bezierPath.addLine(to: CGPoint(x: 107.39, y: 66.29))
        bezierPath.addCurve(to: CGPoint(x: 104.39, y: 69.29), controlPoint1: CGPoint(x: 105.74, y: 66.29), controlPoint2: CGPoint(x: 104.39, y: 67.63))
        bezierPath.addLine(to: CGPoint(x: 104.39, y: 92.94))
        bezierPath.addCurve(to: CGPoint(x: 107.39, y: 95.94), controlPoint1: CGPoint(x: 104.39, y: 94.6), controlPoint2: CGPoint(x: 105.74, y: 95.94))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 153.27, y: 95.94))
        bezierPath.addLine(to: CGPoint(x: 173.9, y: 95.94))
        bezierPath.addCurve(to: CGPoint(x: 176.12, y: 94.96), controlPoint1: CGPoint(x: 174.75, y: 95.94), controlPoint2: CGPoint(x: 175.56, y: 95.58))
        bezierPath.addCurve(to: CGPoint(x: 176.89, y: 92.65), controlPoint1: CGPoint(x: 176.69, y: 94.33), controlPoint2: CGPoint(x: 176.97, y: 93.5))
        bezierPath.addCurve(to: CGPoint(x: 170.21, y: 68.03), controlPoint1: CGPoint(x: 176.08, y: 84.2), controlPoint2: CGPoint(x: 173.83, y: 75.92))
        bezierPath.addCurve(to: CGPoint(x: 167.48, y: 66.29), controlPoint1: CGPoint(x: 169.72, y: 66.97), controlPoint2: CGPoint(x: 168.65, y: 66.29))
        bezierPath.addLine(to: CGPoint(x: 149.59, y: 66.29))
        bezierPath.addCurve(to: CGPoint(x: 147.21, y: 67.47), controlPoint1: CGPoint(x: 148.66, y: 66.29), controlPoint2: CGPoint(x: 147.78, y: 66.72))
        bezierPath.addCurve(to: CGPoint(x: 146.7, y: 70.08), controlPoint1: CGPoint(x: 146.64, y: 68.21), controlPoint2: CGPoint(x: 146.45, y: 69.17))
        bezierPath.addCurve(to: CGPoint(x: 150.27, y: 93.11), controlPoint1: CGPoint(x: 148.6, y: 77.04), controlPoint2: CGPoint(x: 149.8, y: 84.78))
        bezierPath.addCurve(to: CGPoint(x: 153.27, y: 95.94), controlPoint1: CGPoint(x: 150.36, y: 94.7), controlPoint2: CGPoint(x: 151.68, y: 95.94))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 41.92, y: 57.78))
        bezierPath.addLine(to: CGPoint(x: 55.91, y: 57.78))
        bezierPath.addCurve(to: CGPoint(x: 58.64, y: 56.03), controlPoint1: CGPoint(x: 57.09, y: 57.78), controlPoint2: CGPoint(x: 58.15, y: 57.1))
        bezierPath.addCurve(to: CGPoint(x: 72.82, y: 34.36), controlPoint1: CGPoint(x: 62.31, y: 47.97), controlPoint2: CGPoint(x: 67.08, y: 40.68))
        bezierPath.addCurve(to: CGPoint(x: 73.03, y: 30.59), controlPoint1: CGPoint(x: 73.77, y: 33.31), controlPoint2: CGPoint(x: 73.86, y: 31.74))
        bezierPath.addCurve(to: CGPoint(x: 70.6, y: 29.34), controlPoint1: CGPoint(x: 72.46, y: 29.79), controlPoint2: CGPoint(x: 71.54, y: 29.34))
        bezierPath.addCurve(to: CGPoint(x: 69.39, y: 29.6), controlPoint1: CGPoint(x: 70.19, y: 29.34), controlPoint2: CGPoint(x: 69.78, y: 29.42))
        bezierPath.addCurve(to: CGPoint(x: 39.55, y: 52.94), controlPoint1: CGPoint(x: 57.75, y: 34.73), controlPoint2: CGPoint(x: 47.43, y: 42.8))
        bezierPath.addCurve(to: CGPoint(x: 39.23, y: 56.1), controlPoint1: CGPoint(x: 38.85, y: 53.85), controlPoint2: CGPoint(x: 38.72, y: 55.07))
        bezierPath.addCurve(to: CGPoint(x: 41.92, y: 57.78), controlPoint1: CGPoint(x: 39.73, y: 57.13), controlPoint2: CGPoint(x: 40.78, y: 57.78))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 144.38, y: 57.78))
        bezierPath.addLine(to: CGPoint(x: 158.67, y: 57.78))
        bezierPath.addCurve(to: CGPoint(x: 161.36, y: 56.1), controlPoint1: CGPoint(x: 159.82, y: 57.78), controlPoint2: CGPoint(x: 160.86, y: 57.13))
        bezierPath.addCurve(to: CGPoint(x: 161.04, y: 52.94), controlPoint1: CGPoint(x: 161.87, y: 55.07), controlPoint2: CGPoint(x: 161.74, y: 53.85))
        bezierPath.addCurve(to: CGPoint(x: 130.66, y: 29.33), controlPoint1: CGPoint(x: 153.01, y: 42.6), controlPoint2: CGPoint(x: 142.5, y: 34.44))
        bezierPath.addCurve(to: CGPoint(x: 129.47, y: 29.09), controlPoint1: CGPoint(x: 130.27, y: 29.17), controlPoint2: CGPoint(x: 129.87, y: 29.09))
        bezierPath.addCurve(to: CGPoint(x: 127.03, y: 30.35), controlPoint1: CGPoint(x: 128.52, y: 29.09), controlPoint2: CGPoint(x: 127.6, y: 29.54))
        bezierPath.addCurve(to: CGPoint(x: 127.26, y: 34.11), controlPoint1: CGPoint(x: 126.21, y: 31.5), controlPoint2: CGPoint(x: 126.3, y: 33.07))
        bezierPath.addCurve(to: CGPoint(x: 141.65, y: 56.03), controlPoint1: CGPoint(x: 133.07, y: 40.47), controlPoint2: CGPoint(x: 137.91, y: 47.84))
        bezierPath.addCurve(to: CGPoint(x: 144.38, y: 57.78), controlPoint1: CGPoint(x: 142.13, y: 57.1), controlPoint2: CGPoint(x: 143.2, y: 57.78))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 71.31, y: 57.78))
        bezierPath.addLine(to: CGPoint(x: 92.89, y: 57.78))
        bezierPath.addCurve(to: CGPoint(x: 95.89, y: 54.78), controlPoint1: CGPoint(x: 94.55, y: 57.78), controlPoint2: CGPoint(x: 95.89, y: 56.44))
        bezierPath.addLine(to: CGPoint(x: 95.89, y: 31.15))
        bezierPath.addCurve(to: CGPoint(x: 94.34, y: 28.52), controlPoint1: CGPoint(x: 95.89, y: 30.06), controlPoint2: CGPoint(x: 95.3, y: 29.05))
        bezierPath.addCurve(to: CGPoint(x: 92.89, y: 28.15), controlPoint1: CGPoint(x: 93.89, y: 28.27), controlPoint2: CGPoint(x: 93.39, y: 28.15))
        bezierPath.addCurve(to: CGPoint(x: 91.3, y: 28.61), controlPoint1: CGPoint(x: 92.34, y: 28.15), controlPoint2: CGPoint(x: 91.78, y: 28.3))
        bezierPath.addCurve(to: CGPoint(x: 68.69, y: 53.32), controlPoint1: CGPoint(x: 87.22, y: 31.17), controlPoint2: CGPoint(x: 76.86, y: 38.7))
        bezierPath.addCurve(to: CGPoint(x: 68.72, y: 56.3), controlPoint1: CGPoint(x: 68.17, y: 54.25), controlPoint2: CGPoint(x: 68.18, y: 55.38))
        bezierPath.addCurve(to: CGPoint(x: 71.31, y: 57.78), controlPoint1: CGPoint(x: 69.26, y: 57.22), controlPoint2: CGPoint(x: 70.24, y: 57.78))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 107.39, y: 57.78))
        bezierPath.addLine(to: CGPoint(x: 128.98, y: 57.78))
        bezierPath.addCurve(to: CGPoint(x: 131.57, y: 56.3), controlPoint1: CGPoint(x: 130.04, y: 57.78), controlPoint2: CGPoint(x: 131.03, y: 57.22))
        bezierPath.addCurve(to: CGPoint(x: 131.6, y: 53.32), controlPoint1: CGPoint(x: 132.1, y: 55.38), controlPoint2: CGPoint(x: 132.12, y: 54.25))
        bezierPath.addCurve(to: CGPoint(x: 108.99, y: 28.61), controlPoint1: CGPoint(x: 123.43, y: 38.7), controlPoint2: CGPoint(x: 113.07, y: 31.17))
        bezierPath.addCurve(to: CGPoint(x: 107.39, y: 28.15), controlPoint1: CGPoint(x: 108.5, y: 28.3), controlPoint2: CGPoint(x: 107.95, y: 28.15))
        bezierPath.addCurve(to: CGPoint(x: 105.94, y: 28.52), controlPoint1: CGPoint(x: 106.9, y: 28.15), controlPoint2: CGPoint(x: 106.4, y: 28.27))
        bezierPath.addCurve(to: CGPoint(x: 104.39, y: 31.15), controlPoint1: CGPoint(x: 104.99, y: 29.05), controlPoint2: CGPoint(x: 104.39, y: 30.06))
        bezierPath.addLine(to: CGPoint(x: 104.39, y: 54.78))
        bezierPath.addCurve(to: CGPoint(x: 107.39, y: 57.78), controlPoint1: CGPoint(x: 104.39, y: 56.44), controlPoint2: CGPoint(x: 105.74, y: 57.78))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 100.14, y: 11.56))
        bezierPath.addCurve(to: CGPoint(x: 188.72, y: 100.14), controlPoint1: CGPoint(x: 148.99, y: 11.56), controlPoint2: CGPoint(x: 188.72, y: 51.3))
        bezierPath.addCurve(to: CGPoint(x: 100.14, y: 188.72), controlPoint1: CGPoint(x: 188.72, y: 148.98), controlPoint2: CGPoint(x: 148.99, y: 188.72))
        bezierPath.addCurve(to: CGPoint(x: 11.56, y: 100.14), controlPoint1: CGPoint(x: 51.3, y: 188.72), controlPoint2: CGPoint(x: 11.56, y: 148.98))
        bezierPath.addCurve(to: CGPoint(x: 100.14, y: 11.56), controlPoint1: CGPoint(x: 11.56, y: 51.3), controlPoint2: CGPoint(x: 51.3, y: 11.56))
        bezierPath.close()
        fillColor20.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawWorldicongray(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.draw_9b9b9bworldiconCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawWhitelock103120162Canvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let _75percentWhite = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.750)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 100.07, y: 2.69))
        bezierPath.addLine(to: CGPoint(x: 100.07, y: 2.69))
        bezierPath.addCurve(to: CGPoint(x: 53.7, y: 26.11), controlPoint1: CGPoint(x: 74.07, y: 2.69), controlPoint2: CGPoint(x: 60.5, y: 15.43))
        bezierPath.addCurve(to: CGPoint(x: 42.46, y: 77.03), controlPoint1: CGPoint(x: 46.03, y: 38.14), controlPoint2: CGPoint(x: 42.46, y: 54.32))
        bezierPath.addCurve(to: CGPoint(x: 63.68, y: 100.7), controlPoint1: CGPoint(x: 42.46, y: 87.33), controlPoint2: CGPoint(x: 49.75, y: 98.77))
        bezierPath.addCurve(to: CGPoint(x: 68.2, y: 101.08), controlPoint1: CGPoint(x: 64.96, y: 100.87), controlPoint2: CGPoint(x: 66.39, y: 100.99))
        bezierPath.addCurve(to: CGPoint(x: 77.7, y: 101.24), controlPoint1: CGPoint(x: 70.52, y: 101.18), controlPoint2: CGPoint(x: 73.63, y: 101.24))
        bezierPath.addCurve(to: CGPoint(x: 134.73, y: 99.97), controlPoint1: CGPoint(x: 97.26, y: 101.24), controlPoint2: CGPoint(x: 133.21, y: 100.02))
        bezierPath.addCurve(to: CGPoint(x: 157.54, y: 76.37), controlPoint1: CGPoint(x: 147.45, y: 99.54), controlPoint2: CGPoint(x: 157.54, y: 89.1))
        bezierPath.addCurve(to: CGPoint(x: 144.98, y: 25.11), controlPoint1: CGPoint(x: 157.54, y: 54.24), controlPoint2: CGPoint(x: 153.43, y: 37.48))
        bezierPath.addCurve(to: CGPoint(x: 101.35, y: 2.7), controlPoint1: CGPoint(x: 138.13, y: 15.09), controlPoint2: CGPoint(x: 125, y: 3.07))
        bezierPath.addCurve(to: CGPoint(x: 100.07, y: 2.69), controlPoint1: CGPoint(x: 100.92, y: 2.7), controlPoint2: CGPoint(x: 100.49, y: 2.69))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 100.07, y: 26.3))
        bezierPath.addCurve(to: CGPoint(x: 100.99, y: 26.31), controlPoint1: CGPoint(x: 100.37, y: 26.3), controlPoint2: CGPoint(x: 100.68, y: 26.3))
        bezierPath.addCurve(to: CGPoint(x: 133.93, y: 76.37), controlPoint1: CGPoint(x: 122.4, y: 26.64), controlPoint2: CGPoint(x: 133.93, y: 41.63))
        bezierPath.addCurve(to: CGPoint(x: 77.7, y: 77.63), controlPoint1: CGPoint(x: 133.93, y: 76.37), controlPoint2: CGPoint(x: 97.09, y: 77.63))
        bezierPath.addCurve(to: CGPoint(x: 66.07, y: 77.03), controlPoint1: CGPoint(x: 70.77, y: 77.63), controlPoint2: CGPoint(x: 66.07, y: 77.47))
        bezierPath.addCurve(to: CGPoint(x: 100.07, y: 26.3), controlPoint1: CGPoint(x: 66.07, y: 42.7), controlPoint2: CGPoint(x: 74.84, y: 26.3))
        bezierPath.close()
        _75percentWhite.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 115.63, y: 163.61))
        bezier2Path.addLine(to: CGPoint(x: 86.71, y: 163.93))
        bezier2Path.addLine(to: CGPoint(x: 93.11, y: 140.05))
        bezier2Path.addCurve(to: CGPoint(x: 82.63, y: 123.99), controlPoint1: CGPoint(x: 86.94, y: 137.33), controlPoint2: CGPoint(x: 82.63, y: 131.17))
        bezier2Path.addCurve(to: CGPoint(x: 100.2, y: 106.42), controlPoint1: CGPoint(x: 82.63, y: 114.29), controlPoint2: CGPoint(x: 90.5, y: 106.42))
        bezier2Path.addCurve(to: CGPoint(x: 117.77, y: 123.99), controlPoint1: CGPoint(x: 109.9, y: 106.42), controlPoint2: CGPoint(x: 117.77, y: 114.29))
        bezier2Path.addCurve(to: CGPoint(x: 109.09, y: 139.12), controlPoint1: CGPoint(x: 117.77, y: 130.44), controlPoint2: CGPoint(x: 114.28, y: 136.07))
        bezier2Path.addLine(to: CGPoint(x: 115.63, y: 163.61))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 163.05, y: 67.04))
        bezier2Path.addLine(to: CGPoint(x: 36.95, y: 67.04))
        bezier2Path.addCurve(to: CGPoint(x: 24.11, y: 79.87), controlPoint1: CGPoint(x: 29.89, y: 67.04), controlPoint2: CGPoint(x: 24.11, y: 72.81))
        bezier2Path.addLine(to: CGPoint(x: 24.11, y: 184.95))
        bezier2Path.addCurve(to: CGPoint(x: 36.95, y: 197.79), controlPoint1: CGPoint(x: 24.11, y: 192.01), controlPoint2: CGPoint(x: 29.89, y: 197.79))
        bezier2Path.addLine(to: CGPoint(x: 163.05, y: 197.79))
        bezier2Path.addCurve(to: CGPoint(x: 175.89, y: 184.95), controlPoint1: CGPoint(x: 170.11, y: 197.79), controlPoint2: CGPoint(x: 175.89, y: 192.01))
        bezier2Path.addLine(to: CGPoint(x: 175.89, y: 79.87))
        bezier2Path.addCurve(to: CGPoint(x: 163.05, y: 67.04), controlPoint1: CGPoint(x: 175.89, y: 72.81), controlPoint2: CGPoint(x: 170.11, y: 67.04))
        bezier2Path.close()
        _75percentWhite.setFill()
        bezier2Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawWhiteLockforMenu(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawWhitelock103120162Canvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawWhitePersonalLockForMasterMernuCopyCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let _75percentWhite = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.750)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 155.06, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 143.88, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 143.88, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 144.86, y: 26.46))
        bezierPath.addCurve(to: CGPoint(x: 166.74, y: 48.24), controlPoint1: CGPoint(x: 156.95, y: 26.46), controlPoint2: CGPoint(x: 166.74, y: 36.21))
        bezierPath.addLine(to: CGPoint(x: 166.74, y: 164.19))
        bezierPath.addCurve(to: CGPoint(x: 144.86, y: 185.97), controlPoint1: CGPoint(x: 166.74, y: 176.22), controlPoint2: CGPoint(x: 156.95, y: 185.97))
        bezierPath.addLine(to: CGPoint(x: 55.14, y: 185.97))
        bezierPath.addCurve(to: CGPoint(x: 33.26, y: 164.19), controlPoint1: CGPoint(x: 43.05, y: 185.97), controlPoint2: CGPoint(x: 33.26, y: 176.22))
        bezierPath.addLine(to: CGPoint(x: 33.26, y: 48.24))
        bezierPath.addCurve(to: CGPoint(x: 55.14, y: 26.46), controlPoint1: CGPoint(x: 33.26, y: 36.21), controlPoint2: CGPoint(x: 43.05, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 57.27, y: 26.46))
        bezierPath.addLine(to: CGPoint(x: 57.27, y: 13.22))
        bezierPath.addLine(to: CGPoint(x: 44.94, y: 13.22))
        bezierPath.addCurve(to: CGPoint(x: 23.16, y: 35), controlPoint1: CGPoint(x: 32.91, y: 13.22), controlPoint2: CGPoint(x: 23.16, y: 22.97))
        bezierPath.addLine(to: CGPoint(x: 23.16, y: 175.86))
        bezierPath.addCurve(to: CGPoint(x: 44.94, y: 197.64), controlPoint1: CGPoint(x: 23.16, y: 187.88), controlPoint2: CGPoint(x: 32.91, y: 197.64))
        bezierPath.addLine(to: CGPoint(x: 155.06, y: 197.64))
        bezierPath.addCurve(to: CGPoint(x: 176.84, y: 175.86), controlPoint1: CGPoint(x: 167.09, y: 197.64), controlPoint2: CGPoint(x: 176.84, y: 187.88))
        bezierPath.addLine(to: CGPoint(x: 176.84, y: 35))
        bezierPath.addCurve(to: CGPoint(x: 155.06, y: 13.22), controlPoint1: CGPoint(x: 176.84, y: 22.97), controlPoint2: CGPoint(x: 167.09, y: 13.22))
        bezierPath.close()
        _75percentWhite.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 125.15, y: 30.67))
        bezier2Path.addCurve(to: CGPoint(x: 120.43, y: 37.18), controlPoint1: CGPoint(x: 125.15, y: 34.27), controlPoint2: CGPoint(x: 123.04, y: 37.18))
        bezier2Path.addLine(to: CGPoint(x: 82.54, y: 37.18))
        bezier2Path.addCurve(to: CGPoint(x: 77.82, y: 30.67), controlPoint1: CGPoint(x: 79.93, y: 37.18), controlPoint2: CGPoint(x: 77.82, y: 34.27))
        bezier2Path.addLine(to: CGPoint(x: 77.82, y: 16.25))
        bezier2Path.addCurve(to: CGPoint(x: 82.54, y: 9.75), controlPoint1: CGPoint(x: 77.82, y: 12.66), controlPoint2: CGPoint(x: 79.93, y: 9.75))
        bezier2Path.addLine(to: CGPoint(x: 120.43, y: 9.75))
        bezier2Path.addCurve(to: CGPoint(x: 125.15, y: 16.25), controlPoint1: CGPoint(x: 123.04, y: 9.75), controlPoint2: CGPoint(x: 125.15, y: 12.66))
        bezier2Path.addLine(to: CGPoint(x: 125.15, y: 30.67))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 130.63, y: 2.36))
        bezier2Path.addLine(to: CGPoint(x: 72.34, y: 2.36))
        bezier2Path.addCurve(to: CGPoint(x: 65.08, y: 12.37), controlPoint1: CGPoint(x: 68.33, y: 2.36), controlPoint2: CGPoint(x: 65.08, y: 6.84))
        bezier2Path.addLine(to: CGPoint(x: 65.08, y: 34.56))
        bezier2Path.addCurve(to: CGPoint(x: 72.34, y: 44.56), controlPoint1: CGPoint(x: 65.08, y: 40.08), controlPoint2: CGPoint(x: 68.33, y: 44.56))
        bezier2Path.addLine(to: CGPoint(x: 130.63, y: 44.56))
        bezier2Path.addCurve(to: CGPoint(x: 137.89, y: 34.56), controlPoint1: CGPoint(x: 134.64, y: 44.56), controlPoint2: CGPoint(x: 137.89, y: 40.08))
        bezier2Path.addLine(to: CGPoint(x: 137.89, y: 12.37))
        bezier2Path.addCurve(to: CGPoint(x: 130.63, y: 2.36), controlPoint1: CGPoint(x: 137.89, y: 6.84), controlPoint2: CGPoint(x: 134.64, y: 2.36))
        bezier2Path.close()
        _75percentWhite.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 100.03, y: 65.09))
        bezier3Path.addLine(to: CGPoint(x: 100.03, y: 65.09))
        bezier3Path.addCurve(to: CGPoint(x: 79.47, y: 75.48), controlPoint1: CGPoint(x: 88.5, y: 65.09), controlPoint2: CGPoint(x: 82.49, y: 70.74))
        bezier3Path.addCurve(to: CGPoint(x: 74.49, y: 98.06), controlPoint1: CGPoint(x: 76.07, y: 80.81), controlPoint2: CGPoint(x: 74.49, y: 87.99))
        bezier3Path.addCurve(to: CGPoint(x: 83.89, y: 108.55), controlPoint1: CGPoint(x: 74.49, y: 102.63), controlPoint2: CGPoint(x: 77.72, y: 107.7))
        bezier3Path.addCurve(to: CGPoint(x: 85.9, y: 108.72), controlPoint1: CGPoint(x: 84.46, y: 108.63), controlPoint2: CGPoint(x: 85.1, y: 108.69))
        bezier3Path.addCurve(to: CGPoint(x: 90.11, y: 108.79), controlPoint1: CGPoint(x: 86.93, y: 108.77), controlPoint2: CGPoint(x: 88.31, y: 108.79))
        bezier3Path.addCurve(to: CGPoint(x: 115.4, y: 108.23), controlPoint1: CGPoint(x: 98.79, y: 108.79), controlPoint2: CGPoint(x: 114.73, y: 108.26))
        bezier3Path.addCurve(to: CGPoint(x: 125.51, y: 97.77), controlPoint1: CGPoint(x: 121.04, y: 108.04), controlPoint2: CGPoint(x: 125.51, y: 103.41))
        bezier3Path.addCurve(to: CGPoint(x: 119.95, y: 75.04), controlPoint1: CGPoint(x: 125.51, y: 87.96), controlPoint2: CGPoint(x: 123.69, y: 80.52))
        bezier3Path.addCurve(to: CGPoint(x: 100.6, y: 65.1), controlPoint1: CGPoint(x: 116.91, y: 70.59), controlPoint2: CGPoint(x: 111.09, y: 65.26))
        bezier3Path.addCurve(to: CGPoint(x: 100.03, y: 65.09), controlPoint1: CGPoint(x: 100.41, y: 65.1), controlPoint2: CGPoint(x: 100.22, y: 65.09))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 100.03, y: 75.56))
        bezier3Path.addCurve(to: CGPoint(x: 100.44, y: 75.57), controlPoint1: CGPoint(x: 100.17, y: 75.56), controlPoint2: CGPoint(x: 100.3, y: 75.57))
        bezier3Path.addCurve(to: CGPoint(x: 115.04, y: 97.77), controlPoint1: CGPoint(x: 109.93, y: 75.71), controlPoint2: CGPoint(x: 115.04, y: 82.36))
        bezier3Path.addCurve(to: CGPoint(x: 90.11, y: 98.32), controlPoint1: CGPoint(x: 115.04, y: 97.77), controlPoint2: CGPoint(x: 98.71, y: 98.32))
        bezier3Path.addCurve(to: CGPoint(x: 84.96, y: 98.06), controlPoint1: CGPoint(x: 87.04, y: 98.32), controlPoint2: CGPoint(x: 84.96, y: 98.25))
        bezier3Path.addCurve(to: CGPoint(x: 100.03, y: 75.56), controlPoint1: CGPoint(x: 84.96, y: 82.84), controlPoint2: CGPoint(x: 88.84, y: 75.56))
        bezier3Path.close()
        _75percentWhite.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 106.93, y: 136.45))
        bezier4Path.addLine(to: CGPoint(x: 94.11, y: 136.6))
        bezier4Path.addLine(to: CGPoint(x: 96.95, y: 126.01))
        bezier4Path.addCurve(to: CGPoint(x: 92.3, y: 118.88), controlPoint1: CGPoint(x: 94.21, y: 124.8), controlPoint2: CGPoint(x: 92.3, y: 122.07))
        bezier4Path.addCurve(to: CGPoint(x: 100.09, y: 111.09), controlPoint1: CGPoint(x: 92.3, y: 114.58), controlPoint2: CGPoint(x: 95.79, y: 111.09))
        bezier4Path.addCurve(to: CGPoint(x: 107.88, y: 118.88), controlPoint1: CGPoint(x: 104.39, y: 111.09), controlPoint2: CGPoint(x: 107.88, y: 114.58))
        bezier4Path.addCurve(to: CGPoint(x: 104.03, y: 125.59), controlPoint1: CGPoint(x: 107.88, y: 121.75), controlPoint2: CGPoint(x: 106.33, y: 124.24))
        bezier4Path.addLine(to: CGPoint(x: 106.93, y: 136.45))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 127.96, y: 93.63))
        bezier4Path.addLine(to: CGPoint(x: 72.04, y: 93.63))
        bezier4Path.addCurve(to: CGPoint(x: 66.35, y: 99.32), controlPoint1: CGPoint(x: 68.91, y: 93.63), controlPoint2: CGPoint(x: 66.35, y: 96.19))
        bezier4Path.addLine(to: CGPoint(x: 66.35, y: 145.92))
        bezier4Path.addCurve(to: CGPoint(x: 72.04, y: 151.61), controlPoint1: CGPoint(x: 66.35, y: 149.05), controlPoint2: CGPoint(x: 68.91, y: 151.61))
        bezier4Path.addLine(to: CGPoint(x: 127.96, y: 151.61))
        bezier4Path.addCurve(to: CGPoint(x: 133.65, y: 145.92), controlPoint1: CGPoint(x: 131.09, y: 151.61), controlPoint2: CGPoint(x: 133.65, y: 149.05))
        bezier4Path.addLine(to: CGPoint(x: 133.65, y: 99.32))
        bezier4Path.addCurve(to: CGPoint(x: 127.96, y: 93.63), controlPoint1: CGPoint(x: 133.65, y: 96.19), controlPoint2: CGPoint(x: 131.09, y: 93.63))
        bezier4Path.close()
        _75percentWhite.setFill()
        bezier4Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawMainMenuPersonnal(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawWhitePersonalLockForMasterMernuCopyCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawNfirsIcon(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor35 = UIColor(red: 1.000, green: 0.998, blue: 0.995, alpha: 1.000)
        let fillColor36 = UIColor(red: 0.195, green: 0.275, blue: 0.461, alpha: 1.000)
        let fillColor37 = UIColor(red: 0.927, green: 0.610, blue: 0.258, alpha: 1.000)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 133, y: 26))
        bezierPath.addLine(to: CGPoint(x: 133, y: 41))
        bezierPath.addLine(to: CGPoint(x: 69, y: 41))
        bezierPath.addLine(to: CGPoint(x: 69, y: 26))
        bezierPath.addLine(to: CGPoint(x: 28, y: 26))
        bezierPath.addLine(to: CGPoint(x: 28, y: 191))
        bezierPath.addLine(to: CGPoint(x: 170, y: 191))
        bezierPath.addLine(to: CGPoint(x: 170, y: 26))
        bezierPath.addLine(to: CGPoint(x: 133, y: 26))
        bezierPath.close()
        fillColor35.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 154.2, y: 13))
        bezier2Path.addLine(to: CGPoint(x: 142.99, y: 13))
        bezier2Path.addLine(to: CGPoint(x: 142.99, y: 26.27))
        bezier2Path.addLine(to: CGPoint(x: 143.98, y: 26.27))
        bezier2Path.addCurve(to: CGPoint(x: 165.91, y: 48.1), controlPoint1: CGPoint(x: 156.09, y: 26.27), controlPoint2: CGPoint(x: 165.91, y: 36.05))
        bezier2Path.addLine(to: CGPoint(x: 165.91, y: 164.36))
        bezier2Path.addCurve(to: CGPoint(x: 143.98, y: 186.19), controlPoint1: CGPoint(x: 165.91, y: 176.42), controlPoint2: CGPoint(x: 156.09, y: 186.19))
        bezier2Path.addLine(to: CGPoint(x: 54.02, y: 186.19))
        bezier2Path.addCurve(to: CGPoint(x: 32.09, y: 164.36), controlPoint1: CGPoint(x: 41.91, y: 186.19), controlPoint2: CGPoint(x: 32.09, y: 176.42))
        bezier2Path.addLine(to: CGPoint(x: 32.09, y: 48.1))
        bezier2Path.addCurve(to: CGPoint(x: 54.02, y: 26.27), controlPoint1: CGPoint(x: 32.09, y: 36.05), controlPoint2: CGPoint(x: 41.91, y: 26.27))
        bezier2Path.addLine(to: CGPoint(x: 56.16, y: 26.27))
        bezier2Path.addLine(to: CGPoint(x: 56.16, y: 13))
        bezier2Path.addLine(to: CGPoint(x: 43.8, y: 13))
        bezier2Path.addCurve(to: CGPoint(x: 21.96, y: 34.83), controlPoint1: CGPoint(x: 31.74, y: 13), controlPoint2: CGPoint(x: 21.96, y: 22.77))
        bezier2Path.addLine(to: CGPoint(x: 21.96, y: 176.05))
        bezier2Path.addCurve(to: CGPoint(x: 43.8, y: 197.89), controlPoint1: CGPoint(x: 21.96, y: 188.11), controlPoint2: CGPoint(x: 31.74, y: 197.89))
        bezier2Path.addLine(to: CGPoint(x: 154.2, y: 197.89))
        bezier2Path.addCurve(to: CGPoint(x: 176.04, y: 176.05), controlPoint1: CGPoint(x: 166.26, y: 197.89), controlPoint2: CGPoint(x: 176.04, y: 188.11))
        bezier2Path.addLine(to: CGPoint(x: 176.04, y: 34.83))
        bezier2Path.addCurve(to: CGPoint(x: 154.2, y: 13), controlPoint1: CGPoint(x: 176.04, y: 22.77), controlPoint2: CGPoint(x: 166.26, y: 13))
        bezier2Path.close()
        fillColor36.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 124.22, y: 30.5))
        bezier3Path.addCurve(to: CGPoint(x: 119.48, y: 37.02), controlPoint1: CGPoint(x: 124.22, y: 34.1), controlPoint2: CGPoint(x: 122.1, y: 37.02))
        bezier3Path.addLine(to: CGPoint(x: 81.49, y: 37.02))
        bezier3Path.addCurve(to: CGPoint(x: 76.76, y: 30.5), controlPoint1: CGPoint(x: 78.88, y: 37.02), controlPoint2: CGPoint(x: 76.76, y: 34.1))
        bezier3Path.addLine(to: CGPoint(x: 76.76, y: 16.04))
        bezier3Path.addCurve(to: CGPoint(x: 81.49, y: 9.52), controlPoint1: CGPoint(x: 76.76, y: 12.44), controlPoint2: CGPoint(x: 78.88, y: 9.52))
        bezier3Path.addLine(to: CGPoint(x: 119.48, y: 9.52))
        bezier3Path.addCurve(to: CGPoint(x: 124.22, y: 16.04), controlPoint1: CGPoint(x: 122.1, y: 9.52), controlPoint2: CGPoint(x: 124.22, y: 12.44))
        bezier3Path.addLine(to: CGPoint(x: 124.22, y: 30.5))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 129.71, y: 2.11))
        bezier3Path.addLine(to: CGPoint(x: 71.27, y: 2.11))
        bezier3Path.addCurve(to: CGPoint(x: 63.99, y: 12.15), controlPoint1: CGPoint(x: 67.25, y: 2.11), controlPoint2: CGPoint(x: 63.99, y: 6.6))
        bezier3Path.addLine(to: CGPoint(x: 63.99, y: 34.39))
        bezier3Path.addCurve(to: CGPoint(x: 71.27, y: 44.42), controlPoint1: CGPoint(x: 63.99, y: 39.93), controlPoint2: CGPoint(x: 67.25, y: 44.42))
        bezier3Path.addLine(to: CGPoint(x: 129.71, y: 44.42))
        bezier3Path.addCurve(to: CGPoint(x: 136.99, y: 34.39), controlPoint1: CGPoint(x: 133.73, y: 44.42), controlPoint2: CGPoint(x: 136.99, y: 39.93))
        bezier3Path.addLine(to: CGPoint(x: 136.99, y: 12.15))
        bezier3Path.addCurve(to: CGPoint(x: 129.71, y: 2.11), controlPoint1: CGPoint(x: 136.99, y: 6.6), controlPoint2: CGPoint(x: 133.73, y: 2.11))
        bezier3Path.close()
        fillColor37.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 90.28, y: 107.97))
        bezier4Path.addCurve(to: CGPoint(x: 80.25, y: 97.94), controlPoint1: CGPoint(x: 84.74, y: 107.97), controlPoint2: CGPoint(x: 80.25, y: 103.48))
        bezier4Path.addCurve(to: CGPoint(x: 90.28, y: 87.91), controlPoint1: CGPoint(x: 80.25, y: 92.4), controlPoint2: CGPoint(x: 84.74, y: 87.91))
        bezier4Path.addCurve(to: CGPoint(x: 100.31, y: 97.94), controlPoint1: CGPoint(x: 95.82, y: 87.91), controlPoint2: CGPoint(x: 100.31, y: 92.4))
        bezier4Path.addCurve(to: CGPoint(x: 90.28, y: 107.97), controlPoint1: CGPoint(x: 100.31, y: 103.48), controlPoint2: CGPoint(x: 95.82, y: 107.97))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 90.28, y: 56.14))
        bezier4Path.addCurve(to: CGPoint(x: 48.49, y: 97.94), controlPoint1: CGPoint(x: 67.2, y: 56.14), controlPoint2: CGPoint(x: 48.49, y: 74.85))
        bezier4Path.addCurve(to: CGPoint(x: 90.28, y: 139.73), controlPoint1: CGPoint(x: 48.49, y: 121.02), controlPoint2: CGPoint(x: 67.2, y: 139.73))
        bezier4Path.addCurve(to: CGPoint(x: 132.07, y: 97.94), controlPoint1: CGPoint(x: 113.36, y: 139.73), controlPoint2: CGPoint(x: 132.07, y: 121.02))
        bezier4Path.addCurve(to: CGPoint(x: 90.28, y: 56.14), controlPoint1: CGPoint(x: 132.07, y: 74.85), controlPoint2: CGPoint(x: 113.36, y: 56.14))
        bezier4Path.close()
        ButtonsForFJ092018.fillColor38.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 152.44, y: 109.17))
        bezier5Path.addCurve(to: CGPoint(x: 144.98, y: 100.47), controlPoint1: CGPoint(x: 152.44, y: 104.71), controlPoint2: CGPoint(x: 149.97, y: 100.78))
        bezier5Path.addCurve(to: CGPoint(x: 136.39, y: 108.16), controlPoint1: CGPoint(x: 139.98, y: 100.15), controlPoint2: CGPoint(x: 136.83, y: 104.77))
        bezier5Path.addCurve(to: CGPoint(x: 141.74, y: 116.19), controlPoint1: CGPoint(x: 135.81, y: 112.57), controlPoint2: CGPoint(x: 137.52, y: 115.85))
        bezier5Path.addCurve(to: CGPoint(x: 108.25, y: 151.67), controlPoint1: CGPoint(x: 139.71, y: 142.72), controlPoint2: CGPoint(x: 119.68, y: 150.57))
        bezier5Path.addLine(to: CGPoint(x: 108.25, y: 146.75))
        bezier5Path.addLine(to: CGPoint(x: 70.85, y: 146.75))
        bezier5Path.addLine(to: CGPoint(x: 70.85, y: 163.54))
        bezier5Path.addLine(to: CGPoint(x: 108.25, y: 163.54))
        bezier5Path.addLine(to: CGPoint(x: 108.25, y: 158.2))
        bezier5Path.addCurve(to: CGPoint(x: 147.78, y: 115.93), controlPoint1: CGPoint(x: 121.17, y: 158), controlPoint2: CGPoint(x: 147.78, y: 149.53))
        bezier5Path.addCurve(to: CGPoint(x: 152.44, y: 109.17), controlPoint1: CGPoint(x: 150.71, y: 114.88), controlPoint2: CGPoint(x: 152.44, y: 112.46))
        bezier5Path.close()
        ButtonsForFJ092018.fillColor38.setFill()
        bezier5Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawNFIRSFormIcon(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawNfirsIcon(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawComplete(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor6 = UIColor(red: 0.201, green: 0.302, blue: 0.538, alpha: 1.000)
        let fillColor39 = UIColor(red: 0.086, green: 0.439, blue: 0.185, alpha: 1.000)
        let gradient7Color = UIColor(red: 0.187, green: 0.746, blue: 0.344, alpha: 1.000)
        let gradient8Color = UIColor(red: 0.330, green: 0.468, blue: 0.787, alpha: 1.000)

        //// Gradient Declarations
        let gradient7 = CGGradient(colorsSpace: nil, colors: [gradient7Color.cgColor, fillColor39.cgColor] as CFArray, locations: [0, 1])!
        let gradient8 = CGGradient(colorsSpace: nil, colors: [gradient8Color.cgColor, fillColor6.cgColor] as CFArray, locations: [0, 1])!

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 100, y: 158.51))
        bezierPath.addCurve(to: CGPoint(x: 41.49, y: 100), controlPoint1: CGPoint(x: 67.69, y: 158.51), controlPoint2: CGPoint(x: 41.49, y: 132.31))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 41.49), controlPoint1: CGPoint(x: 41.49, y: 67.69), controlPoint2: CGPoint(x: 67.69, y: 41.49))
        bezierPath.addCurve(to: CGPoint(x: 158.51, y: 100), controlPoint1: CGPoint(x: 132.31, y: 41.49), controlPoint2: CGPoint(x: 158.51, y: 67.69))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 158.51), controlPoint1: CGPoint(x: 158.51, y: 132.31), controlPoint2: CGPoint(x: 132.31, y: 158.51))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 100, y: 26.86))
        bezierPath.addCurve(to: CGPoint(x: 26.86, y: 100), controlPoint1: CGPoint(x: 59.61, y: 26.86), controlPoint2: CGPoint(x: 26.86, y: 59.61))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 173.14), controlPoint1: CGPoint(x: 26.86, y: 140.39), controlPoint2: CGPoint(x: 59.61, y: 173.14))
        bezierPath.addCurve(to: CGPoint(x: 173.14, y: 100), controlPoint1: CGPoint(x: 140.39, y: 173.14), controlPoint2: CGPoint(x: 173.14, y: 140.39))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 26.86), controlPoint1: CGPoint(x: 173.14, y: 59.61), controlPoint2: CGPoint(x: 140.39, y: 26.86))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(gradient8, start: CGPoint(x: 100, y: 26.86), end: CGPoint(x: 100, y: 173.14), options: [])
        context.restoreGState()


        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: 49.6, y: 49.6, width: 100.8, height: 100.8))
        context.saveGState()
        ovalPath.addClip()
        context.drawLinearGradient(gradient7, start: CGPoint(x: 100, y: 49.6), end: CGPoint(x: 100, y: 150.4), options: [])
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawInComplete(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor6 = UIColor(red: 0.201, green: 0.302, blue: 0.538, alpha: 1.000)
        let gradient8Color = UIColor(red: 0.330, green: 0.468, blue: 0.787, alpha: 1.000)

        //// Gradient Declarations
        let gradient8 = CGGradient(colorsSpace: nil, colors: [gradient8Color.cgColor, fillColor6.cgColor] as CFArray, locations: [0, 1])!

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 100, y: 158.51))
        bezierPath.addCurve(to: CGPoint(x: 41.49, y: 100), controlPoint1: CGPoint(x: 67.69, y: 158.51), controlPoint2: CGPoint(x: 41.49, y: 132.31))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 41.49), controlPoint1: CGPoint(x: 41.49, y: 67.69), controlPoint2: CGPoint(x: 67.69, y: 41.49))
        bezierPath.addCurve(to: CGPoint(x: 158.51, y: 100), controlPoint1: CGPoint(x: 132.31, y: 41.49), controlPoint2: CGPoint(x: 158.51, y: 67.69))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 158.51), controlPoint1: CGPoint(x: 158.51, y: 132.31), controlPoint2: CGPoint(x: 132.31, y: 158.51))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 100, y: 26.86))
        bezierPath.addCurve(to: CGPoint(x: 26.86, y: 100), controlPoint1: CGPoint(x: 59.61, y: 26.86), controlPoint2: CGPoint(x: 26.86, y: 59.61))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 173.14), controlPoint1: CGPoint(x: 26.86, y: 140.39), controlPoint2: CGPoint(x: 59.61, y: 173.14))
        bezierPath.addCurve(to: CGPoint(x: 173.14, y: 100), controlPoint1: CGPoint(x: 140.39, y: 173.14), controlPoint2: CGPoint(x: 173.14, y: 140.39))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 26.86), controlPoint1: CGPoint(x: 173.14, y: 59.61), controlPoint2: CGPoint(x: 140.39, y: 26.86))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(gradient8, start: CGPoint(x: 100, y: 26.86), end: CGPoint(x: 100, y: 173.14), options: [])
        context.restoreGState()


        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: 49.6, y: 49.6, width: 100.8, height: 100.8))
        context.saveGState()
        ovalPath.addClip()
        context.drawLinearGradient(ButtonsForFJ092018.gradient9, start: CGPoint(x: 100, y: 49.6), end: CGPoint(x: 100, y: 150.4), options: [])
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawCompleteform(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawComplete(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawIncompleteform(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawInComplete(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawBoxChecked(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor6 = UIColor(red: 0.201, green: 0.302, blue: 0.538, alpha: 1.000)
        let fillColor39 = UIColor(red: 0.086, green: 0.439, blue: 0.185, alpha: 1.000)
        let gradient7Color = UIColor(red: 0.187, green: 0.746, blue: 0.344, alpha: 1.000)
        let gradient8Color = UIColor(red: 0.330, green: 0.468, blue: 0.787, alpha: 1.000)

        //// Gradient Declarations
        let gradient7 = CGGradient(colorsSpace: nil, colors: [gradient7Color.cgColor, fillColor39.cgColor] as CFArray, locations: [0, 1])!
        let gradient8 = CGGradient(colorsSpace: nil, colors: [gradient8Color.cgColor, fillColor6.cgColor] as CFArray, locations: [0, 1])!

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 42, y: 42))
        bezierPath.addLine(to: CGPoint(x: 158, y: 42))
        bezierPath.addLine(to: CGPoint(x: 158, y: 159))
        bezierPath.addLine(to: CGPoint(x: 42, y: 159))
        bezierPath.addLine(to: CGPoint(x: 42, y: 42))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 27, y: 173))
        bezierPath.addLine(to: CGPoint(x: 173, y: 173))
        bezierPath.addLine(to: CGPoint(x: 173, y: 27))
        bezierPath.addLine(to: CGPoint(x: 27, y: 27))
        bezierPath.addLine(to: CGPoint(x: 27, y: 173))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(gradient8, start: CGPoint(x: 100, y: 27), end: CGPoint(x: 100, y: 173), options: [])
        context.restoreGState()


        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 53.27, y: 53.62, width: 93.45, height: 93.45))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(gradient7, start: CGPoint(x: 100, y: 53.62), end: CGPoint(x: 100, y: 147.07), options: [])
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawBoxUnChecked(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor6 = UIColor(red: 0.201, green: 0.302, blue: 0.538, alpha: 1.000)
        let gradient8Color = UIColor(red: 0.330, green: 0.468, blue: 0.787, alpha: 1.000)

        //// Gradient Declarations
        let gradient8 = CGGradient(colorsSpace: nil, colors: [gradient8Color.cgColor, fillColor6.cgColor] as CFArray, locations: [0, 1])!

        //// Box-UnChecked Drawing
        let boxUnCheckedPath = UIBezierPath()
        boxUnCheckedPath.move(to: CGPoint(x: 42, y: 49))
        boxUnCheckedPath.addLine(to: CGPoint(x: 158, y: 49))
        boxUnCheckedPath.addLine(to: CGPoint(x: 158, y: 166))
        boxUnCheckedPath.addLine(to: CGPoint(x: 42, y: 166))
        boxUnCheckedPath.addLine(to: CGPoint(x: 42, y: 49))
        boxUnCheckedPath.close()
        boxUnCheckedPath.move(to: CGPoint(x: 27, y: 180))
        boxUnCheckedPath.addLine(to: CGPoint(x: 173, y: 180))
        boxUnCheckedPath.addLine(to: CGPoint(x: 173, y: 34))
        boxUnCheckedPath.addLine(to: CGPoint(x: 27, y: 34))
        boxUnCheckedPath.addLine(to: CGPoint(x: 27, y: 180))
        boxUnCheckedPath.close()
        context.saveGState()
        boxUnCheckedPath.addClip()
        context.drawLinearGradient(gradient8, start: CGPoint(x: 100, y: 34), end: CGPoint(x: 100, y: 180), options: [])
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawBoxcheckedicon(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawBoxChecked(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawBoxiconunchecked(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: -2, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawBoxUnChecked(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawListBackground() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 10, height: 150))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(ButtonsForFJ092018.gradientForList, start: CGPoint(x: 5, y: -0), end: CGPoint(x: 5, y: 150), options: [])
        context.restoreGState()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 10, height: 150))
        context.saveGState()
        rectangle2Path.addClip()
        context.drawLinearGradient(ButtonsForFJ092018.gradientForList, start: CGPoint(x: 5, y: -0), end: CGPoint(x: 5, y: 150), options: [])
        context.restoreGState()
    }

    @objc dynamic public class func drawListBackground2() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Color Declarations
        let gradient3Bluie = UIColor(red: 0.212, green: 0.294, blue: 0.427, alpha: 0.900)
        let gradient4blue = UIColor(red: 0.114, green: 0.153, blue: 0.224, alpha: 0.750)

        //// Gradient Declarations
        let gradientForList2 = CGGradient(colorsSpace: nil, colors: [gradient3Bluie.cgColor, gradient3Bluie.blended(withFraction: 0.5, of: gradient4blue).cgColor, gradient4blue.cgColor] as CFArray, locations: [0, 0.2, 1])!

        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 10, height: 150))
        context.saveGState()
        rectangle2Path.addClip()
        context.drawLinearGradient(gradientForList2, start: CGPoint(x: 5, y: -0), end: CGPoint(x: 5, y: 150), options: [])
        context.restoreGState()
    }

    @objc dynamic public class func drawDashboardWhite(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let whiteTrans75 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.750)

        //// Group 2
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 156.2, y: 15))
        bezierPath.addLine(to: CGPoint(x: 144.99, y: 15))
        bezierPath.addLine(to: CGPoint(x: 144.99, y: 28.27))
        bezierPath.addLine(to: CGPoint(x: 145.98, y: 28.27))
        bezierPath.addCurve(to: CGPoint(x: 167.91, y: 50.1), controlPoint1: CGPoint(x: 158.09, y: 28.27), controlPoint2: CGPoint(x: 167.91, y: 38.05))
        bezierPath.addLine(to: CGPoint(x: 167.91, y: 166.36))
        bezierPath.addCurve(to: CGPoint(x: 145.98, y: 188.19), controlPoint1: CGPoint(x: 167.91, y: 178.42), controlPoint2: CGPoint(x: 158.09, y: 188.19))
        bezierPath.addLine(to: CGPoint(x: 56.02, y: 188.19))
        bezierPath.addCurve(to: CGPoint(x: 34.09, y: 166.36), controlPoint1: CGPoint(x: 43.91, y: 188.19), controlPoint2: CGPoint(x: 34.09, y: 178.42))
        bezierPath.addLine(to: CGPoint(x: 34.09, y: 50.1))
        bezierPath.addCurve(to: CGPoint(x: 56.02, y: 28.27), controlPoint1: CGPoint(x: 34.09, y: 38.05), controlPoint2: CGPoint(x: 43.91, y: 28.27))
        bezierPath.addLine(to: CGPoint(x: 58.16, y: 28.27))
        bezierPath.addLine(to: CGPoint(x: 58.16, y: 15))
        bezierPath.addLine(to: CGPoint(x: 45.8, y: 15))
        bezierPath.addCurve(to: CGPoint(x: 23.96, y: 36.83), controlPoint1: CGPoint(x: 33.74, y: 15), controlPoint2: CGPoint(x: 23.96, y: 24.77))
        bezierPath.addLine(to: CGPoint(x: 23.96, y: 178.05))
        bezierPath.addCurve(to: CGPoint(x: 45.8, y: 199.89), controlPoint1: CGPoint(x: 23.96, y: 190.11), controlPoint2: CGPoint(x: 33.74, y: 199.89))
        bezierPath.addLine(to: CGPoint(x: 156.2, y: 199.89))
        bezierPath.addCurve(to: CGPoint(x: 178.04, y: 178.05), controlPoint1: CGPoint(x: 168.26, y: 199.89), controlPoint2: CGPoint(x: 178.04, y: 190.11))
        bezierPath.addLine(to: CGPoint(x: 178.04, y: 36.83))
        bezierPath.addCurve(to: CGPoint(x: 156.2, y: 15), controlPoint1: CGPoint(x: 178.04, y: 24.77), controlPoint2: CGPoint(x: 168.26, y: 15))
        bezierPath.close()
        whiteTrans75.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 126.22, y: 32.5))
        bezier2Path.addCurve(to: CGPoint(x: 121.48, y: 39.02), controlPoint1: CGPoint(x: 126.22, y: 36.1), controlPoint2: CGPoint(x: 124.1, y: 39.02))
        bezier2Path.addLine(to: CGPoint(x: 83.49, y: 39.02))
        bezier2Path.addCurve(to: CGPoint(x: 78.76, y: 32.5), controlPoint1: CGPoint(x: 80.88, y: 39.02), controlPoint2: CGPoint(x: 78.76, y: 36.1))
        bezier2Path.addLine(to: CGPoint(x: 78.76, y: 18.04))
        bezier2Path.addCurve(to: CGPoint(x: 83.49, y: 11.52), controlPoint1: CGPoint(x: 78.76, y: 14.44), controlPoint2: CGPoint(x: 80.88, y: 11.52))
        bezier2Path.addLine(to: CGPoint(x: 121.48, y: 11.52))
        bezier2Path.addCurve(to: CGPoint(x: 126.22, y: 18.04), controlPoint1: CGPoint(x: 124.1, y: 11.52), controlPoint2: CGPoint(x: 126.22, y: 14.44))
        bezier2Path.addLine(to: CGPoint(x: 126.22, y: 32.5))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 131.71, y: 4.11))
        bezier2Path.addLine(to: CGPoint(x: 73.27, y: 4.11))
        bezier2Path.addCurve(to: CGPoint(x: 65.99, y: 14.15), controlPoint1: CGPoint(x: 69.25, y: 4.11), controlPoint2: CGPoint(x: 65.99, y: 8.6))
        bezier2Path.addLine(to: CGPoint(x: 65.99, y: 36.39))
        bezier2Path.addCurve(to: CGPoint(x: 73.27, y: 46.42), controlPoint1: CGPoint(x: 65.99, y: 41.93), controlPoint2: CGPoint(x: 69.25, y: 46.42))
        bezier2Path.addLine(to: CGPoint(x: 131.71, y: 46.42))
        bezier2Path.addCurve(to: CGPoint(x: 138.99, y: 36.39), controlPoint1: CGPoint(x: 135.73, y: 46.42), controlPoint2: CGPoint(x: 138.99, y: 41.93))
        bezier2Path.addLine(to: CGPoint(x: 138.99, y: 14.15))
        bezier2Path.addCurve(to: CGPoint(x: 131.71, y: 4.11), controlPoint1: CGPoint(x: 138.99, y: 8.6), controlPoint2: CGPoint(x: 135.73, y: 4.11))
        bezier2Path.close()
        whiteTrans75.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 141.61, y: 123.02))
        bezier3Path.addLine(to: CGPoint(x: 156.54, y: 121.56))
        bezier3Path.addLine(to: CGPoint(x: 157.22, y: 128.53))
        bezier3Path.addLine(to: CGPoint(x: 142.29, y: 129.99))
        bezier3Path.addLine(to: CGPoint(x: 141.61, y: 123.02))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 133.99, y: 107.57))
        bezier3Path.addLine(to: CGPoint(x: 146.47, y: 99.25))
        bezier3Path.addLine(to: CGPoint(x: 150.35, y: 105.07))
        bezier3Path.addLine(to: CGPoint(x: 137.88, y: 113.4))
        bezier3Path.addLine(to: CGPoint(x: 133.99, y: 107.57))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 124.75, y: 98.2))
        bezier3Path.addLine(to: CGPoint(x: 118.57, y: 94.9))
        bezier3Path.addLine(to: CGPoint(x: 125.65, y: 81.68))
        bezier3Path.addLine(to: CGPoint(x: 131.82, y: 84.98))
        bezier3Path.addLine(to: CGPoint(x: 124.75, y: 98.2))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 107.1, y: 122.19))
        bezier3Path.addLine(to: CGPoint(x: 100.36, y: 120.3))
        bezier3Path.addLine(to: CGPoint(x: 108.69, y: 91.86))
        bezier3Path.addLine(to: CGPoint(x: 114.48, y: 84.13))
        bezier3Path.addLine(to: CGPoint(x: 115.43, y: 93.75))
        bezier3Path.addLine(to: CGPoint(x: 107.1, y: 122.19))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 99, y: 76))
        bezier3Path.addLine(to: CGPoint(x: 106, y: 76))
        bezier3Path.addLine(to: CGPoint(x: 106, y: 91))
        bezier3Path.addLine(to: CGPoint(x: 99, y: 91))
        bezier3Path.addLine(to: CGPoint(x: 99, y: 76))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 80.59, y: 96.38))
        bezier3Path.addLine(to: CGPoint(x: 73.78, y: 83.02))
        bezier3Path.addLine(to: CGPoint(x: 80.01, y: 79.84))
        bezier3Path.addLine(to: CGPoint(x: 86.83, y: 93.2))
        bezier3Path.addLine(to: CGPoint(x: 80.59, y: 96.38))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 66.64, y: 109.55))
        bezier3Path.addLine(to: CGPoint(x: 54.5, y: 100.74))
        bezier3Path.addLine(to: CGPoint(x: 58.61, y: 95.07))
        bezier3Path.addLine(to: CGPoint(x: 70.75, y: 103.88))
        bezier3Path.addLine(to: CGPoint(x: 66.64, y: 109.55))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 60.19, y: 127.61))
        bezier3Path.addLine(to: CGPoint(x: 45.37, y: 125.28))
        bezier3Path.addLine(to: CGPoint(x: 46.46, y: 118.36))
        bezier3Path.addLine(to: CGPoint(x: 61.27, y: 120.69))
        bezier3Path.addLine(to: CGPoint(x: 60.19, y: 127.61))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 102, y: 72))
        bezier3Path.addCurve(to: CGPoint(x: 42, y: 132), controlPoint1: CGPoint(x: 68.86, y: 72), controlPoint2: CGPoint(x: 42, y: 98.86))
        bezier3Path.addLine(to: CGPoint(x: 90, y: 132))
        bezier3Path.addCurve(to: CGPoint(x: 100, y: 122), controlPoint1: CGPoint(x: 90, y: 126.48), controlPoint2: CGPoint(x: 94.48, y: 122))
        bezier3Path.addCurve(to: CGPoint(x: 110, y: 132), controlPoint1: CGPoint(x: 105.52, y: 122), controlPoint2: CGPoint(x: 110, y: 126.48))
        bezier3Path.addLine(to: CGPoint(x: 162, y: 132))
        bezier3Path.addCurve(to: CGPoint(x: 102, y: 72), controlPoint1: CGPoint(x: 162, y: 98.86), controlPoint2: CGPoint(x: 135.14, y: 72))
        bezier3Path.close()
        whiteTrans75.setFill()
        bezier3Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawCartWhite(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let whiteTrans75 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.750)

        //// Group 2
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 158.2, y: 13))
        bezierPath.addLine(to: CGPoint(x: 146.99, y: 13))
        bezierPath.addLine(to: CGPoint(x: 146.99, y: 26.27))
        bezierPath.addLine(to: CGPoint(x: 147.98, y: 26.27))
        bezierPath.addCurve(to: CGPoint(x: 169.91, y: 48.1), controlPoint1: CGPoint(x: 160.09, y: 26.27), controlPoint2: CGPoint(x: 169.91, y: 36.05))
        bezierPath.addLine(to: CGPoint(x: 169.91, y: 164.36))
        bezierPath.addCurve(to: CGPoint(x: 147.98, y: 186.19), controlPoint1: CGPoint(x: 169.91, y: 176.42), controlPoint2: CGPoint(x: 160.09, y: 186.19))
        bezierPath.addLine(to: CGPoint(x: 58.02, y: 186.19))
        bezierPath.addCurve(to: CGPoint(x: 36.09, y: 164.36), controlPoint1: CGPoint(x: 45.91, y: 186.19), controlPoint2: CGPoint(x: 36.09, y: 176.42))
        bezierPath.addLine(to: CGPoint(x: 36.09, y: 48.1))
        bezierPath.addCurve(to: CGPoint(x: 58.02, y: 26.27), controlPoint1: CGPoint(x: 36.09, y: 36.05), controlPoint2: CGPoint(x: 45.91, y: 26.27))
        bezierPath.addLine(to: CGPoint(x: 60.16, y: 26.27))
        bezierPath.addLine(to: CGPoint(x: 60.16, y: 13))
        bezierPath.addLine(to: CGPoint(x: 47.8, y: 13))
        bezierPath.addCurve(to: CGPoint(x: 25.96, y: 34.83), controlPoint1: CGPoint(x: 35.74, y: 13), controlPoint2: CGPoint(x: 25.96, y: 22.77))
        bezierPath.addLine(to: CGPoint(x: 25.96, y: 176.05))
        bezierPath.addCurve(to: CGPoint(x: 47.8, y: 197.89), controlPoint1: CGPoint(x: 25.96, y: 188.11), controlPoint2: CGPoint(x: 35.74, y: 197.89))
        bezierPath.addLine(to: CGPoint(x: 158.2, y: 197.89))
        bezierPath.addCurve(to: CGPoint(x: 180.04, y: 176.05), controlPoint1: CGPoint(x: 170.26, y: 197.89), controlPoint2: CGPoint(x: 180.04, y: 188.11))
        bezierPath.addLine(to: CGPoint(x: 180.04, y: 34.83))
        bezierPath.addCurve(to: CGPoint(x: 158.2, y: 13), controlPoint1: CGPoint(x: 180.04, y: 22.77), controlPoint2: CGPoint(x: 170.26, y: 13))
        bezierPath.close()
        whiteTrans75.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 128.22, y: 30.5))
        bezier2Path.addCurve(to: CGPoint(x: 123.48, y: 37.02), controlPoint1: CGPoint(x: 128.22, y: 34.1), controlPoint2: CGPoint(x: 126.1, y: 37.02))
        bezier2Path.addLine(to: CGPoint(x: 85.49, y: 37.02))
        bezier2Path.addCurve(to: CGPoint(x: 80.76, y: 30.5), controlPoint1: CGPoint(x: 82.88, y: 37.02), controlPoint2: CGPoint(x: 80.76, y: 34.1))
        bezier2Path.addLine(to: CGPoint(x: 80.76, y: 16.04))
        bezier2Path.addCurve(to: CGPoint(x: 85.49, y: 9.52), controlPoint1: CGPoint(x: 80.76, y: 12.44), controlPoint2: CGPoint(x: 82.88, y: 9.52))
        bezier2Path.addLine(to: CGPoint(x: 123.48, y: 9.52))
        bezier2Path.addCurve(to: CGPoint(x: 128.22, y: 16.04), controlPoint1: CGPoint(x: 126.1, y: 9.52), controlPoint2: CGPoint(x: 128.22, y: 12.44))
        bezier2Path.addLine(to: CGPoint(x: 128.22, y: 30.5))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 133.71, y: 2.11))
        bezier2Path.addLine(to: CGPoint(x: 75.27, y: 2.11))
        bezier2Path.addCurve(to: CGPoint(x: 67.99, y: 12.15), controlPoint1: CGPoint(x: 71.25, y: 2.11), controlPoint2: CGPoint(x: 67.99, y: 6.6))
        bezier2Path.addLine(to: CGPoint(x: 67.99, y: 34.39))
        bezier2Path.addCurve(to: CGPoint(x: 75.27, y: 44.42), controlPoint1: CGPoint(x: 67.99, y: 39.93), controlPoint2: CGPoint(x: 71.25, y: 44.42))
        bezier2Path.addLine(to: CGPoint(x: 133.71, y: 44.42))
        bezier2Path.addCurve(to: CGPoint(x: 140.99, y: 34.39), controlPoint1: CGPoint(x: 137.73, y: 44.42), controlPoint2: CGPoint(x: 140.99, y: 39.93))
        bezier2Path.addLine(to: CGPoint(x: 140.99, y: 12.15))
        bezier2Path.addCurve(to: CGPoint(x: 133.71, y: 2.11), controlPoint1: CGPoint(x: 140.99, y: 6.6), controlPoint2: CGPoint(x: 137.73, y: 2.11))
        bezier2Path.close()
        whiteTrans75.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 152.42, y: 83.34))
        bezier3Path.addLine(to: CGPoint(x: 69.05, y: 83.34))
        bezier3Path.addCurve(to: CGPoint(x: 63.47, y: 88.76), controlPoint1: CGPoint(x: 65.88, y: 83.34), controlPoint2: CGPoint(x: 63.35, y: 85.8))
        bezier3Path.addLine(to: CGPoint(x: 72.75, y: 136.73))
        bezier3Path.addCurve(to: CGPoint(x: 83.64, y: 146.49), controlPoint1: CGPoint(x: 72.98, y: 142.18), controlPoint2: CGPoint(x: 77.79, y: 146.49))
        bezier3Path.addLine(to: CGPoint(x: 144.13, y: 146.49))
        bezier3Path.addCurve(to: CGPoint(x: 149.65, y: 142.04), controlPoint1: CGPoint(x: 146.9, y: 146.49), controlPoint2: CGPoint(x: 149.25, y: 144.6))
        bezier3Path.addLine(to: CGPoint(x: 157.94, y: 89.3))
        bezier3Path.addCurve(to: CGPoint(x: 152.42, y: 83.34), controlPoint1: CGPoint(x: 158.43, y: 86.16), controlPoint2: CGPoint(x: 155.82, y: 83.34))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 152.42, y: 88.57))
        bezier3Path.addCurve(to: CGPoint(x: 152.75, y: 88.65), controlPoint1: CGPoint(x: 152.58, y: 88.57), controlPoint2: CGPoint(x: 152.69, y: 88.61))
        bezier3Path.addLine(to: CGPoint(x: 144.5, y: 141.15))
        bezier3Path.addCurve(to: CGPoint(x: 144.13, y: 141.26), controlPoint1: CGPoint(x: 144.45, y: 141.19), controlPoint2: CGPoint(x: 144.33, y: 141.26))
        bezier3Path.addLine(to: CGPoint(x: 83.64, y: 141.26))
        bezier3Path.addCurve(to: CGPoint(x: 77.97, y: 136.5), controlPoint1: CGPoint(x: 80.57, y: 141.26), controlPoint2: CGPoint(x: 78.09, y: 139.17))
        bezier3Path.addCurve(to: CGPoint(x: 77.88, y: 135.74), controlPoint1: CGPoint(x: 77.96, y: 136.25), controlPoint2: CGPoint(x: 77.93, y: 135.99))
        bezier3Path.addLine(to: CGPoint(x: 68.77, y: 88.62))
        bezier3Path.addCurve(to: CGPoint(x: 69.05, y: 88.57), controlPoint1: CGPoint(x: 68.84, y: 88.59), controlPoint2: CGPoint(x: 68.93, y: 88.57))
        bezier3Path.addLine(to: CGPoint(x: 152.42, y: 88.57))
        bezier3Path.close()
        whiteTrans75.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 91.21, y: 147.4))
        bezier4Path.addCurve(to: CGPoint(x: 83.09, y: 155.52), controlPoint1: CGPoint(x: 86.73, y: 147.4), controlPoint2: CGPoint(x: 83.09, y: 151.03))
        bezier4Path.addCurve(to: CGPoint(x: 91.21, y: 163.64), controlPoint1: CGPoint(x: 83.09, y: 160), controlPoint2: CGPoint(x: 86.73, y: 163.64))
        bezier4Path.addCurve(to: CGPoint(x: 99.33, y: 155.52), controlPoint1: CGPoint(x: 95.69, y: 163.64), controlPoint2: CGPoint(x: 99.33, y: 160))
        bezier4Path.addCurve(to: CGPoint(x: 91.21, y: 147.4), controlPoint1: CGPoint(x: 99.33, y: 151.03), controlPoint2: CGPoint(x: 95.69, y: 147.4))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 91.21, y: 150.65))
        bezier4Path.addCurve(to: CGPoint(x: 96.08, y: 155.52), controlPoint1: CGPoint(x: 93.9, y: 150.65), controlPoint2: CGPoint(x: 96.08, y: 152.83))
        bezier4Path.addCurve(to: CGPoint(x: 91.21, y: 160.39), controlPoint1: CGPoint(x: 96.08, y: 158.2), controlPoint2: CGPoint(x: 93.9, y: 160.39))
        bezier4Path.addCurve(to: CGPoint(x: 86.34, y: 155.52), controlPoint1: CGPoint(x: 88.52, y: 160.39), controlPoint2: CGPoint(x: 86.34, y: 158.2))
        bezier4Path.addCurve(to: CGPoint(x: 91.21, y: 150.65), controlPoint1: CGPoint(x: 86.34, y: 152.83), controlPoint2: CGPoint(x: 88.52, y: 150.65))
        bezier4Path.close()
        whiteTrans75.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 131.81, y: 147.4))
        bezier5Path.addCurve(to: CGPoint(x: 123.69, y: 155.52), controlPoint1: CGPoint(x: 127.33, y: 147.4), controlPoint2: CGPoint(x: 123.69, y: 151.03))
        bezier5Path.addCurve(to: CGPoint(x: 131.81, y: 163.64), controlPoint1: CGPoint(x: 123.69, y: 160), controlPoint2: CGPoint(x: 127.33, y: 163.64))
        bezier5Path.addCurve(to: CGPoint(x: 139.93, y: 155.52), controlPoint1: CGPoint(x: 136.3, y: 163.64), controlPoint2: CGPoint(x: 139.93, y: 160))
        bezier5Path.addCurve(to: CGPoint(x: 131.81, y: 147.4), controlPoint1: CGPoint(x: 139.93, y: 151.03), controlPoint2: CGPoint(x: 136.3, y: 147.4))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 131.81, y: 150.65))
        bezier5Path.addCurve(to: CGPoint(x: 136.68, y: 155.52), controlPoint1: CGPoint(x: 134.5, y: 150.65), controlPoint2: CGPoint(x: 136.68, y: 152.83))
        bezier5Path.addCurve(to: CGPoint(x: 131.81, y: 160.39), controlPoint1: CGPoint(x: 136.68, y: 158.2), controlPoint2: CGPoint(x: 134.5, y: 160.39))
        bezier5Path.addCurve(to: CGPoint(x: 126.94, y: 155.52), controlPoint1: CGPoint(x: 129.12, y: 160.39), controlPoint2: CGPoint(x: 126.94, y: 158.2))
        bezier5Path.addCurve(to: CGPoint(x: 131.81, y: 150.65), controlPoint1: CGPoint(x: 126.94, y: 152.83), controlPoint2: CGPoint(x: 129.12, y: 150.65))
        bezier5Path.close()
        whiteTrans75.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 74.83, y: 120.72))
        bezier6Path.addLine(to: CGPoint(x: 64.9, y: 71.1))
        bezier6Path.addCurve(to: CGPoint(x: 62.94, y: 69.06), controlPoint1: CGPoint(x: 64.7, y: 70.09), controlPoint2: CGPoint(x: 63.94, y: 69.3))
        bezier6Path.addLine(to: CGPoint(x: 47.6, y: 65.45))
        bezier6Path.addCurve(to: CGPoint(x: 44.45, y: 67.4), controlPoint1: CGPoint(x: 46.19, y: 65.12), controlPoint2: CGPoint(x: 44.78, y: 65.99))
        bezier6Path.addCurve(to: CGPoint(x: 46.4, y: 70.55), controlPoint1: CGPoint(x: 44.12, y: 68.81), controlPoint2: CGPoint(x: 44.99, y: 70.21))
        bezier6Path.addLine(to: CGPoint(x: 60.1, y: 73.77))
        bezier6Path.addLine(to: CGPoint(x: 69.7, y: 121.75))
        bezier6Path.addCurve(to: CGPoint(x: 72.78, y: 123.8), controlPoint1: CGPoint(x: 69.98, y: 123.16), controlPoint2: CGPoint(x: 71.36, y: 124.08))
        bezier6Path.addCurve(to: CGPoint(x: 74.83, y: 120.72), controlPoint1: CGPoint(x: 74.19, y: 123.51), controlPoint2: CGPoint(x: 75.11, y: 122.14))
        whiteTrans75.setFill()
        bezier6Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawCloudWhite(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let whiteTrans75 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.750)

        //// Group 2
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 157.2, y: 15))
        bezierPath.addLine(to: CGPoint(x: 145.99, y: 15))
        bezierPath.addLine(to: CGPoint(x: 145.99, y: 28.27))
        bezierPath.addLine(to: CGPoint(x: 146.98, y: 28.27))
        bezierPath.addCurve(to: CGPoint(x: 168.91, y: 50.1), controlPoint1: CGPoint(x: 159.09, y: 28.27), controlPoint2: CGPoint(x: 168.91, y: 38.05))
        bezierPath.addLine(to: CGPoint(x: 168.91, y: 166.36))
        bezierPath.addCurve(to: CGPoint(x: 146.98, y: 188.19), controlPoint1: CGPoint(x: 168.91, y: 178.42), controlPoint2: CGPoint(x: 159.09, y: 188.19))
        bezierPath.addLine(to: CGPoint(x: 57.02, y: 188.19))
        bezierPath.addCurve(to: CGPoint(x: 35.09, y: 166.36), controlPoint1: CGPoint(x: 44.91, y: 188.19), controlPoint2: CGPoint(x: 35.09, y: 178.42))
        bezierPath.addLine(to: CGPoint(x: 35.09, y: 50.1))
        bezierPath.addCurve(to: CGPoint(x: 57.02, y: 28.27), controlPoint1: CGPoint(x: 35.09, y: 38.05), controlPoint2: CGPoint(x: 44.91, y: 28.27))
        bezierPath.addLine(to: CGPoint(x: 59.16, y: 28.27))
        bezierPath.addLine(to: CGPoint(x: 59.16, y: 15))
        bezierPath.addLine(to: CGPoint(x: 46.8, y: 15))
        bezierPath.addCurve(to: CGPoint(x: 24.96, y: 36.83), controlPoint1: CGPoint(x: 34.74, y: 15), controlPoint2: CGPoint(x: 24.96, y: 24.77))
        bezierPath.addLine(to: CGPoint(x: 24.96, y: 178.05))
        bezierPath.addCurve(to: CGPoint(x: 46.8, y: 199.89), controlPoint1: CGPoint(x: 24.96, y: 190.11), controlPoint2: CGPoint(x: 34.74, y: 199.89))
        bezierPath.addLine(to: CGPoint(x: 157.2, y: 199.89))
        bezierPath.addCurve(to: CGPoint(x: 179.04, y: 178.05), controlPoint1: CGPoint(x: 169.26, y: 199.89), controlPoint2: CGPoint(x: 179.04, y: 190.11))
        bezierPath.addLine(to: CGPoint(x: 179.04, y: 36.83))
        bezierPath.addCurve(to: CGPoint(x: 157.2, y: 15), controlPoint1: CGPoint(x: 179.04, y: 24.77), controlPoint2: CGPoint(x: 169.26, y: 15))
        bezierPath.close()
        whiteTrans75.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 127.22, y: 32.5))
        bezier2Path.addCurve(to: CGPoint(x: 122.48, y: 39.02), controlPoint1: CGPoint(x: 127.22, y: 36.1), controlPoint2: CGPoint(x: 125.1, y: 39.02))
        bezier2Path.addLine(to: CGPoint(x: 84.49, y: 39.02))
        bezier2Path.addCurve(to: CGPoint(x: 79.76, y: 32.5), controlPoint1: CGPoint(x: 81.88, y: 39.02), controlPoint2: CGPoint(x: 79.76, y: 36.1))
        bezier2Path.addLine(to: CGPoint(x: 79.76, y: 18.04))
        bezier2Path.addCurve(to: CGPoint(x: 84.49, y: 11.52), controlPoint1: CGPoint(x: 79.76, y: 14.44), controlPoint2: CGPoint(x: 81.88, y: 11.52))
        bezier2Path.addLine(to: CGPoint(x: 122.48, y: 11.52))
        bezier2Path.addCurve(to: CGPoint(x: 127.22, y: 18.04), controlPoint1: CGPoint(x: 125.1, y: 11.52), controlPoint2: CGPoint(x: 127.22, y: 14.44))
        bezier2Path.addLine(to: CGPoint(x: 127.22, y: 32.5))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 132.71, y: 4.11))
        bezier2Path.addLine(to: CGPoint(x: 74.27, y: 4.11))
        bezier2Path.addCurve(to: CGPoint(x: 66.99, y: 14.15), controlPoint1: CGPoint(x: 70.25, y: 4.11), controlPoint2: CGPoint(x: 66.99, y: 8.6))
        bezier2Path.addLine(to: CGPoint(x: 66.99, y: 36.39))
        bezier2Path.addCurve(to: CGPoint(x: 74.27, y: 46.42), controlPoint1: CGPoint(x: 66.99, y: 41.93), controlPoint2: CGPoint(x: 70.25, y: 46.42))
        bezier2Path.addLine(to: CGPoint(x: 132.71, y: 46.42))
        bezier2Path.addCurve(to: CGPoint(x: 139.99, y: 36.39), controlPoint1: CGPoint(x: 136.73, y: 46.42), controlPoint2: CGPoint(x: 139.99, y: 41.93))
        bezier2Path.addLine(to: CGPoint(x: 139.99, y: 14.15))
        bezier2Path.addCurve(to: CGPoint(x: 132.71, y: 4.11), controlPoint1: CGPoint(x: 139.99, y: 8.6), controlPoint2: CGPoint(x: 136.73, y: 4.11))
        bezier2Path.close()
        whiteTrans75.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 139.97, y: 82.39))
        bezier3Path.addLine(to: CGPoint(x: 140.97, y: 82.45))
        bezier3Path.addLine(to: CGPoint(x: 140.98, y: 82.33))
        bezier3Path.addLine(to: CGPoint(x: 140.98, y: 82.29))
        bezier3Path.addLine(to: CGPoint(x: 140.98, y: 82.26))
        bezier3Path.addCurve(to: CGPoint(x: 132.15, y: 60.39), controlPoint1: CGPoint(x: 140.98, y: 73.73), controlPoint2: CGPoint(x: 137.61, y: 65.99))
        bezier3Path.addCurve(to: CGPoint(x: 110.78, y: 51.32), controlPoint1: CGPoint(x: 126.69, y: 54.79), controlPoint2: CGPoint(x: 119.12, y: 51.32))
        bezier3Path.addCurve(to: CGPoint(x: 81.99, y: 72.91), controlPoint1: CGPoint(x: 97.28, y: 51.33), controlPoint2: CGPoint(x: 85.86, y: 60.4))
        bezier3Path.addLine(to: CGPoint(x: 82.95, y: 73.2))
        bezier3Path.addLine(to: CGPoint(x: 83.16, y: 72.22))
        bezier3Path.addCurve(to: CGPoint(x: 78.48, y: 71.73), controlPoint1: CGPoint(x: 81.65, y: 71.9), controlPoint2: CGPoint(x: 80.09, y: 71.73))
        bezier3Path.addCurve(to: CGPoint(x: 62.3, y: 79.23), controlPoint1: CGPoint(x: 72.13, y: 71.73), controlPoint2: CGPoint(x: 66.41, y: 74.69))
        bezier3Path.addCurve(to: CGPoint(x: 55.65, y: 96.36), controlPoint1: CGPoint(x: 58.19, y: 83.78), controlPoint2: CGPoint(x: 55.65, y: 89.91))
        bezier3Path.addCurve(to: CGPoint(x: 55.66, y: 96.79), controlPoint1: CGPoint(x: 55.65, y: 96.56), controlPoint2: CGPoint(x: 55.64, y: 96.62))
        bezier3Path.addLine(to: CGPoint(x: 55.68, y: 96.85))
        bezier3Path.addLine(to: CGPoint(x: 55.68, y: 96.86))
        bezier3Path.addLine(to: CGPoint(x: 56.05, y: 96.78))
        bezier3Path.addLine(to: CGPoint(x: 55.67, y: 96.83))
        bezier3Path.addLine(to: CGPoint(x: 55.68, y: 96.86))
        bezier3Path.addLine(to: CGPoint(x: 56.05, y: 96.78))
        bezier3Path.addLine(to: CGPoint(x: 55.67, y: 96.83))
        bezier3Path.addLine(to: CGPoint(x: 55.68, y: 96.85))
        bezier3Path.addCurve(to: CGPoint(x: 55.76, y: 99.93), controlPoint1: CGPoint(x: 55.69, y: 97), controlPoint2: CGPoint(x: 55.72, y: 97.67))
        bezier3Path.addLine(to: CGPoint(x: 56.76, y: 99.91))
        bezier3Path.addLine(to: CGPoint(x: 56.76, y: 98.91))
        bezier3Path.addLine(to: CGPoint(x: 56.67, y: 98.91))
        bezier3Path.addCurve(to: CGPoint(x: 46.83, y: 103.04), controlPoint1: CGPoint(x: 52.83, y: 98.91), controlPoint2: CGPoint(x: 49.34, y: 100.49))
        bezier3Path.addCurve(to: CGPoint(x: 42.77, y: 113.06), controlPoint1: CGPoint(x: 44.32, y: 105.6), controlPoint2: CGPoint(x: 42.77, y: 109.14))
        bezier3Path.addCurve(to: CGPoint(x: 45.84, y: 122.56), controlPoint1: CGPoint(x: 42.77, y: 116.52), controlPoint2: CGPoint(x: 43.86, y: 119.94))
        bezier3Path.addCurve(to: CGPoint(x: 54.34, y: 126.98), controlPoint1: CGPoint(x: 47.82, y: 125.18), controlPoint2: CGPoint(x: 50.77, y: 126.99))
        bezier3Path.addCurve(to: CGPoint(x: 147.52, y: 126.98), controlPoint1: CGPoint(x: 60.77, y: 126.98), controlPoint2: CGPoint(x: 147.52, y: 126.98))
        bezier3Path.addLine(to: CGPoint(x: 147.79, y: 126.98))
        bezier3Path.addLine(to: CGPoint(x: 148.02, y: 126.85))
        bezier3Path.addCurve(to: CGPoint(x: 157.53, y: 117.74), controlPoint1: CGPoint(x: 151.89, y: 124.6), controlPoint2: CGPoint(x: 155.19, y: 121.47))
        bezier3Path.addCurve(to: CGPoint(x: 161.23, y: 105.04), controlPoint1: CGPoint(x: 159.86, y: 114.01), controlPoint2: CGPoint(x: 161.23, y: 109.68))
        bezier3Path.addCurve(to: CGPoint(x: 155.07, y: 88.85), controlPoint1: CGPoint(x: 161.23, y: 98.97), controlPoint2: CGPoint(x: 158.89, y: 93.19))
        bezier3Path.addCurve(to: CGPoint(x: 140.01, y: 81.39), controlPoint1: CGPoint(x: 151.26, y: 84.51), controlPoint2: CGPoint(x: 145.94, y: 81.6))
        bezier3Path.addLine(to: CGPoint(x: 139.97, y: 82.39))
        bezier3Path.addLine(to: CGPoint(x: 140.97, y: 82.45))
        bezier3Path.addLine(to: CGPoint(x: 139.97, y: 82.39))
        bezier3Path.addLine(to: CGPoint(x: 139.94, y: 83.39))
        bezier3Path.addCurve(to: CGPoint(x: 153.57, y: 90.17), controlPoint1: CGPoint(x: 145.25, y: 83.58), controlPoint2: CGPoint(x: 150.06, y: 86.18))
        bezier3Path.addCurve(to: CGPoint(x: 159.23, y: 105.04), controlPoint1: CGPoint(x: 157.07, y: 94.15), controlPoint2: CGPoint(x: 159.23, y: 99.49))
        bezier3Path.addCurve(to: CGPoint(x: 155.83, y: 116.68), controlPoint1: CGPoint(x: 159.23, y: 109.28), controlPoint2: CGPoint(x: 157.98, y: 113.24))
        bezier3Path.addCurve(to: CGPoint(x: 147.02, y: 125.12), controlPoint1: CGPoint(x: 153.68, y: 120.12), controlPoint2: CGPoint(x: 150.62, y: 123.03))
        bezier3Path.addLine(to: CGPoint(x: 147.52, y: 125.98))
        bezier3Path.addLine(to: CGPoint(x: 147.52, y: 124.98))
        bezier3Path.addCurve(to: CGPoint(x: 103.34, y: 124.98), controlPoint1: CGPoint(x: 147.52, y: 124.98), controlPoint2: CGPoint(x: 125.83, y: 124.98))
        bezier3Path.addCurve(to: CGPoint(x: 54.34, y: 124.98), controlPoint1: CGPoint(x: 80.85, y: 124.98), controlPoint2: CGPoint(x: 57.56, y: 124.98))
        bezier3Path.addCurve(to: CGPoint(x: 47.43, y: 121.35), controlPoint1: CGPoint(x: 51.46, y: 124.98), controlPoint2: CGPoint(x: 49.13, y: 123.58))
        bezier3Path.addCurve(to: CGPoint(x: 44.77, y: 113.06), controlPoint1: CGPoint(x: 45.74, y: 119.13), controlPoint2: CGPoint(x: 44.77, y: 116.09))
        bezier3Path.addCurve(to: CGPoint(x: 48.26, y: 104.45), controlPoint1: CGPoint(x: 44.77, y: 109.67), controlPoint2: CGPoint(x: 46.1, y: 106.64))
        bezier3Path.addCurve(to: CGPoint(x: 56.67, y: 100.91), controlPoint1: CGPoint(x: 50.41, y: 102.25), controlPoint2: CGPoint(x: 53.38, y: 100.91))
        bezier3Path.addLine(to: CGPoint(x: 57.78, y: 100.91))
        bezier3Path.addLine(to: CGPoint(x: 57.76, y: 99.89))
        bezier3Path.addCurve(to: CGPoint(x: 57.67, y: 96.72), controlPoint1: CGPoint(x: 57.72, y: 97.71), controlPoint2: CGPoint(x: 57.69, y: 97.02))
        bezier3Path.addLine(to: CGPoint(x: 57.65, y: 96.52))
        bezier3Path.addLine(to: CGPoint(x: 57.64, y: 96.46))
        bezier3Path.addLine(to: CGPoint(x: 57.63, y: 96.44))
        bezier3Path.addLine(to: CGPoint(x: 56.94, y: 96.58))
        bezier3Path.addLine(to: CGPoint(x: 57.64, y: 96.51))
        bezier3Path.addLine(to: CGPoint(x: 57.63, y: 96.44))
        bezier3Path.addLine(to: CGPoint(x: 56.94, y: 96.58))
        bezier3Path.addLine(to: CGPoint(x: 57.64, y: 96.51))
        bezier3Path.addLine(to: CGPoint(x: 57.16, y: 96.56))
        bezier3Path.addLine(to: CGPoint(x: 57.65, y: 96.53))
        bezier3Path.addLine(to: CGPoint(x: 57.64, y: 96.51))
        bezier3Path.addLine(to: CGPoint(x: 57.16, y: 96.56))
        bezier3Path.addLine(to: CGPoint(x: 57.65, y: 96.53))
        bezier3Path.addCurve(to: CGPoint(x: 57.65, y: 96.36), controlPoint1: CGPoint(x: 57.65, y: 96.53), controlPoint2: CGPoint(x: 57.64, y: 96.48))
        bezier3Path.addCurve(to: CGPoint(x: 63.78, y: 80.58), controlPoint1: CGPoint(x: 57.64, y: 90.44), controlPoint2: CGPoint(x: 59.99, y: 84.76))
        bezier3Path.addCurve(to: CGPoint(x: 78.48, y: 73.73), controlPoint1: CGPoint(x: 67.58, y: 76.39), controlPoint2: CGPoint(x: 72.77, y: 73.72))
        bezier3Path.addCurve(to: CGPoint(x: 82.74, y: 74.18), controlPoint1: CGPoint(x: 79.94, y: 73.73), controlPoint2: CGPoint(x: 81.36, y: 73.88))
        bezier3Path.addLine(to: CGPoint(x: 83.64, y: 74.37))
        bezier3Path.addLine(to: CGPoint(x: 83.91, y: 73.5))
        bezier3Path.addCurve(to: CGPoint(x: 110.78, y: 53.32), controlPoint1: CGPoint(x: 87.53, y: 61.79), controlPoint2: CGPoint(x: 98.2, y: 53.32))
        bezier3Path.addCurve(to: CGPoint(x: 130.71, y: 61.79), controlPoint1: CGPoint(x: 118.56, y: 53.32), controlPoint2: CGPoint(x: 125.6, y: 56.55))
        bezier3Path.addCurve(to: CGPoint(x: 138.98, y: 82.26), controlPoint1: CGPoint(x: 135.82, y: 67.03), controlPoint2: CGPoint(x: 138.98, y: 74.26))
        bezier3Path.addLine(to: CGPoint(x: 139.98, y: 82.26))
        bezier3Path.addLine(to: CGPoint(x: 138.99, y: 82.2))
        bezier3Path.addLine(to: CGPoint(x: 138.98, y: 82.32))
        bezier3Path.addLine(to: CGPoint(x: 138.91, y: 83.35))
        bezier3Path.addLine(to: CGPoint(x: 139.94, y: 83.39))
        bezier3Path.addLine(to: CGPoint(x: 139.97, y: 82.39))
        bezier3Path.close()
        whiteTrans75.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 89.53, y: 156))
        bezier4Path.addLine(to: CGPoint(x: 113.5, y: 156))
        bezier4Path.addLine(to: CGPoint(x: 113.56, y: 127))
        bezier4Path.addLine(to: CGPoint(x: 125.11, y: 127))
        bezier4Path.addLine(to: CGPoint(x: 100.94, y: 103.14))
        bezier4Path.addCurve(to: CGPoint(x: 77.94, y: 127), controlPoint1: CGPoint(x: 100.8, y: 102.93), controlPoint2: CGPoint(x: 77.94, y: 127))
        bezier4Path.addLine(to: CGPoint(x: 89.61, y: 127))
        bezier4Path.addLine(to: CGPoint(x: 89.53, y: 156))
        bezier4Path.close()
        whiteTrans75.setFill()
        bezier4Path.fill()


        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 89.5, y: 164, width: 24, height: 3))
        whiteTrans75.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        context.saveGState()
        context.translateBy(x: 101.5, y: 159.5)
        context.rotate(by: 0.15 * CGFloat.pi/180)

        let rectangle2Path = UIBezierPath(rect: CGRect(x: -12, y: -1.5, width: 24, height: 3))
        whiteTrans75.setFill()
        rectangle2Path.fill()

        context.restoreGState()


        //// Rectangle 3 Drawing
        context.saveGState()
        context.translateBy(x: 101.5, y: 171)
        context.rotate(by: 0.15 * CGFloat.pi/180)

        let rectangle3Path = UIBezierPath(rect: CGRect(x: -12, y: -2, width: 24, height: 4))
        whiteTrans75.setFill()
        rectangle3Path.fill()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawJournalEntryWhiteBlueCircle() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Oval 2 Drawing
        let oval2Path = UIBezierPath(ovalIn: CGRect(x: 4, y: 4, width: 85, height: 85))
        UIColor.white.setFill()
        oval2Path.fill()


        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: 5.5, y: 5.5, width: 82, height: 82))
        context.saveGState()
        ovalPath.addClip()
        context.drawLinearGradient(ButtonsForFJ092018.blueGradient, start: CGPoint(x: 46.5, y: 5.5), end: CGPoint(x: 46.5, y: 87.5), options: [])
        context.restoreGState()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 49, y: 24))
        bezierPath.addCurve(to: CGPoint(x: 49, y: 44), controlPoint1: CGPoint(x: 49, y: 24), controlPoint2: CGPoint(x: 49, y: 33.64))
        bezierPath.addLine(to: CGPoint(x: 69, y: 44))
        bezierPath.addLine(to: CGPoint(x: 69, y: 49))
        bezierPath.addLine(to: CGPoint(x: 49, y: 49))
        bezierPath.addCurve(to: CGPoint(x: 49, y: 69), controlPoint1: CGPoint(x: 49, y: 59.36), controlPoint2: CGPoint(x: 49, y: 69))
        bezierPath.addLine(to: CGPoint(x: 44, y: 69))
        bezierPath.addCurve(to: CGPoint(x: 44, y: 49), controlPoint1: CGPoint(x: 44, y: 69), controlPoint2: CGPoint(x: 44, y: 59.36))
        bezierPath.addLine(to: CGPoint(x: 24, y: 49))
        bezierPath.addLine(to: CGPoint(x: 24, y: 44))
        bezierPath.addLine(to: CGPoint(x: 44, y: 44))
        bezierPath.addCurve(to: CGPoint(x: 44, y: 24), controlPoint1: CGPoint(x: 44, y: 33.64), controlPoint2: CGPoint(x: 44, y: 24))
        bezierPath.addLine(to: CGPoint(x: 49, y: 24))
        bezierPath.addLine(to: CGPoint(x: 49, y: 24))
        bezierPath.close()
        context.saveGState()
        context.setShadow(offset: ButtonsForFJ092018.shadow.shadowOffset, blur: ButtonsForFJ092018.shadow.shadowBlurRadius, color: (ButtonsForFJ092018.shadow.shadowColor as! UIColor).cgColor)
        UIColor.white.setFill()
        bezierPath.fill()
        context.restoreGState()
    }

    @objc dynamic public class func drawIncidentEntryWhiteRedCircle(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 93, height: 93), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 93, height: 93), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 93, y: resizedFrame.height / 93)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 93, resizedFrame.height / 93)


        //// Oval 2 Drawing
        let oval2Path = UIBezierPath(ovalIn: CGRect(x: 4, y: 4, width: 85, height: 85))
        UIColor.white.setFill()
        oval2Path.fill()


        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: 5.5, y: 5.5, width: 82, height: 82))
        context.saveGState()
        ovalPath.addClip()
        context.drawLinearGradient(ButtonsForFJ092018.redButton55, start: CGPoint(x: 46.5, y: 5.5), end: CGPoint(x: 46.5, y: 87.5), options: [])
        context.restoreGState()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 49, y: 25))
        bezierPath.addCurve(to: CGPoint(x: 49, y: 45), controlPoint1: CGPoint(x: 49, y: 25), controlPoint2: CGPoint(x: 49, y: 34.64))
        bezierPath.addLine(to: CGPoint(x: 69, y: 45))
        bezierPath.addLine(to: CGPoint(x: 69, y: 50))
        bezierPath.addLine(to: CGPoint(x: 49, y: 50))
        bezierPath.addCurve(to: CGPoint(x: 49, y: 70), controlPoint1: CGPoint(x: 49, y: 60.36), controlPoint2: CGPoint(x: 49, y: 70))
        bezierPath.addLine(to: CGPoint(x: 44, y: 70))
        bezierPath.addCurve(to: CGPoint(x: 44, y: 50), controlPoint1: CGPoint(x: 44, y: 70), controlPoint2: CGPoint(x: 44, y: 60.36))
        bezierPath.addLine(to: CGPoint(x: 24, y: 50))
        bezierPath.addLine(to: CGPoint(x: 24, y: 45))
        bezierPath.addLine(to: CGPoint(x: 44, y: 45))
        bezierPath.addCurve(to: CGPoint(x: 44, y: 25), controlPoint1: CGPoint(x: 44, y: 34.64), controlPoint2: CGPoint(x: 44, y: 25))
        bezierPath.addLine(to: CGPoint(x: 49, y: 25))
        bezierPath.addLine(to: CGPoint(x: 49, y: 25))
        bezierPath.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: ButtonsForFJ092018.shadow.shadowOffset.width * resizedShadowScale, height: ButtonsForFJ092018.shadow.shadowOffset.height * resizedShadowScale), blur: ButtonsForFJ092018.shadow.shadowBlurRadius * resizedShadowScale, color: (ButtonsForFJ092018.shadow.shadowColor as! UIColor).cgColor)
        UIColor.white.setFill()
        bezierPath.fill()
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawFormEntryWhiteDarkBlueCircle(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 93, height: 93), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 93, height: 93), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 93, y: resizedFrame.height / 93)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 93, resizedFrame.height / 93)


        //// Oval 2 Drawing
        let oval2Path = UIBezierPath(ovalIn: CGRect(x: 4, y: 4, width: 85, height: 85))
        UIColor.white.setFill()
        oval2Path.fill()


        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: 6, y: 5, width: 82, height: 82))
        context.saveGState()
        ovalPath.addClip()
        context.drawLinearGradient(ButtonsForFJ092018.gradientForFormButton, start: CGPoint(x: 47, y: 5), end: CGPoint(x: 47, y: 87), options: [])
        context.restoreGState()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 49, y: 25))
        bezierPath.addCurve(to: CGPoint(x: 49, y: 45), controlPoint1: CGPoint(x: 49, y: 25), controlPoint2: CGPoint(x: 49, y: 34.64))
        bezierPath.addLine(to: CGPoint(x: 69, y: 45))
        bezierPath.addLine(to: CGPoint(x: 69, y: 50))
        bezierPath.addLine(to: CGPoint(x: 49, y: 50))
        bezierPath.addCurve(to: CGPoint(x: 49, y: 70), controlPoint1: CGPoint(x: 49, y: 60.36), controlPoint2: CGPoint(x: 49, y: 70))
        bezierPath.addLine(to: CGPoint(x: 44, y: 70))
        bezierPath.addCurve(to: CGPoint(x: 44, y: 50), controlPoint1: CGPoint(x: 44, y: 70), controlPoint2: CGPoint(x: 44, y: 60.36))
        bezierPath.addLine(to: CGPoint(x: 24, y: 50))
        bezierPath.addLine(to: CGPoint(x: 24, y: 45))
        bezierPath.addLine(to: CGPoint(x: 44, y: 45))
        bezierPath.addCurve(to: CGPoint(x: 44, y: 25), controlPoint1: CGPoint(x: 44, y: 34.64), controlPoint2: CGPoint(x: 44, y: 25))
        bezierPath.addLine(to: CGPoint(x: 49, y: 25))
        bezierPath.addLine(to: CGPoint(x: 49, y: 25))
        bezierPath.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: ButtonsForFJ092018.shadow.shadowOffset.width * resizedShadowScale, height: ButtonsForFJ092018.shadow.shadowOffset.height * resizedShadowScale), blur: ButtonsForFJ092018.shadow.shadowBlurRadius * resizedShadowScale, color: (ButtonsForFJ092018.shadow.shadowColor as! UIColor).cgColor)
        UIColor.white.setFill()
        bezierPath.fill()
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawBackgroundDashboard(frame: CGRect = CGRect(x: 0, y: -3, width: 10, height: 1027)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!


        //// Gradient Declarations
        let gradientForDashboardBackground2 = CGGradient(colorsSpace: nil, colors: [ButtonsForFJ092018.gradientForBoxColor2.cgColor, ButtonsForFJ092018.dashboardBackgroundColor.cgColor] as CFArray, locations: [0, 1])!

        //// Rectangle Drawing
        let rectangleRect = CGRect(x: frame.minX, y: frame.minY, width: frame.width, height: frame.height - 3)
        let rectanglePath = UIBezierPath(rect: rectangleRect)
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(gradientForDashboardBackground2,
            start: CGPoint(x: rectangleRect.midX, y: rectangleRect.minY),
            end: CGPoint(x: rectangleRect.midX, y: rectangleRect.maxY),
            options: [])
        context.restoreGState()
    }

    @objc dynamic public class func drawDashboardGraidentButton() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 10, height: 300))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(ButtonsForFJ092018.gradientForDashBoardButton, start: CGPoint(x: 5, y: -0), end: CGPoint(x: 5, y: 300), options: [])
        context.restoreGState()
    }

    @objc dynamic public class func drawGradientBackViewDashboard(frame: CGRect = CGRect(x: 0, y: -1, width: 681, height: 635)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Rectangle Drawing
        let rectangleRect = CGRect(x: frame.minX, y: frame.minY, width: frame.width, height: frame.height - 1)
        let rectanglePath = UIBezierPath(rect: rectangleRect)
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(ButtonsForFJ092018.gradientForBox,
            start: CGPoint(x: rectangleRect.midX, y: rectangleRect.minY),
            end: CGPoint(x: rectangleRect.midX, y: rectangleRect.maxY),
            options: [])
        context.restoreGState()
    }

    @objc dynamic public class func drawDashboardIconWhite100() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: 100, height: 100)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawDashboardWhite(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawSmallRedPlusButt() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: 40, height: 40)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawIncidentEntryWhiteRedCircle(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawBlueButtonBackground() {

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 10, height: 10))
        ButtonsForFJ092018.gradient11Color3.setFill()
        rectanglePath.fill()
    }

    @objc dynamic public class func drawInfoButton(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let whiteTrans75 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.750)

        //// Group 2
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 158.2, y: 13))
        bezierPath.addLine(to: CGPoint(x: 146.99, y: 13))
        bezierPath.addLine(to: CGPoint(x: 146.99, y: 26.27))
        bezierPath.addLine(to: CGPoint(x: 147.98, y: 26.27))
        bezierPath.addCurve(to: CGPoint(x: 169.91, y: 48.1), controlPoint1: CGPoint(x: 160.09, y: 26.27), controlPoint2: CGPoint(x: 169.91, y: 36.05))
        bezierPath.addLine(to: CGPoint(x: 169.91, y: 164.36))
        bezierPath.addCurve(to: CGPoint(x: 147.98, y: 186.19), controlPoint1: CGPoint(x: 169.91, y: 176.42), controlPoint2: CGPoint(x: 160.09, y: 186.19))
        bezierPath.addLine(to: CGPoint(x: 58.02, y: 186.19))
        bezierPath.addCurve(to: CGPoint(x: 36.09, y: 164.36), controlPoint1: CGPoint(x: 45.91, y: 186.19), controlPoint2: CGPoint(x: 36.09, y: 176.42))
        bezierPath.addLine(to: CGPoint(x: 36.09, y: 48.1))
        bezierPath.addCurve(to: CGPoint(x: 58.02, y: 26.27), controlPoint1: CGPoint(x: 36.09, y: 36.05), controlPoint2: CGPoint(x: 45.91, y: 26.27))
        bezierPath.addLine(to: CGPoint(x: 60.16, y: 26.27))
        bezierPath.addLine(to: CGPoint(x: 60.16, y: 13))
        bezierPath.addLine(to: CGPoint(x: 47.8, y: 13))
        bezierPath.addCurve(to: CGPoint(x: 25.96, y: 34.83), controlPoint1: CGPoint(x: 35.74, y: 13), controlPoint2: CGPoint(x: 25.96, y: 22.77))
        bezierPath.addLine(to: CGPoint(x: 25.96, y: 176.05))
        bezierPath.addCurve(to: CGPoint(x: 47.8, y: 197.89), controlPoint1: CGPoint(x: 25.96, y: 188.11), controlPoint2: CGPoint(x: 35.74, y: 197.89))
        bezierPath.addLine(to: CGPoint(x: 158.2, y: 197.89))
        bezierPath.addCurve(to: CGPoint(x: 180.04, y: 176.05), controlPoint1: CGPoint(x: 170.26, y: 197.89), controlPoint2: CGPoint(x: 180.04, y: 188.11))
        bezierPath.addLine(to: CGPoint(x: 180.04, y: 34.83))
        bezierPath.addCurve(to: CGPoint(x: 158.2, y: 13), controlPoint1: CGPoint(x: 180.04, y: 22.77), controlPoint2: CGPoint(x: 170.26, y: 13))
        bezierPath.close()
        whiteTrans75.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 128.22, y: 30.5))
        bezier2Path.addCurve(to: CGPoint(x: 123.48, y: 37.02), controlPoint1: CGPoint(x: 128.22, y: 34.1), controlPoint2: CGPoint(x: 126.1, y: 37.02))
        bezier2Path.addLine(to: CGPoint(x: 85.49, y: 37.02))
        bezier2Path.addCurve(to: CGPoint(x: 80.76, y: 30.5), controlPoint1: CGPoint(x: 82.88, y: 37.02), controlPoint2: CGPoint(x: 80.76, y: 34.1))
        bezier2Path.addLine(to: CGPoint(x: 80.76, y: 16.04))
        bezier2Path.addCurve(to: CGPoint(x: 85.49, y: 9.52), controlPoint1: CGPoint(x: 80.76, y: 12.44), controlPoint2: CGPoint(x: 82.88, y: 9.52))
        bezier2Path.addLine(to: CGPoint(x: 123.48, y: 9.52))
        bezier2Path.addCurve(to: CGPoint(x: 128.22, y: 16.04), controlPoint1: CGPoint(x: 126.1, y: 9.52), controlPoint2: CGPoint(x: 128.22, y: 12.44))
        bezier2Path.addLine(to: CGPoint(x: 128.22, y: 30.5))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 133.71, y: 2.11))
        bezier2Path.addLine(to: CGPoint(x: 75.27, y: 2.11))
        bezier2Path.addCurve(to: CGPoint(x: 67.99, y: 12.15), controlPoint1: CGPoint(x: 71.25, y: 2.11), controlPoint2: CGPoint(x: 67.99, y: 6.6))
        bezier2Path.addLine(to: CGPoint(x: 67.99, y: 34.39))
        bezier2Path.addCurve(to: CGPoint(x: 75.27, y: 44.42), controlPoint1: CGPoint(x: 67.99, y: 39.93), controlPoint2: CGPoint(x: 71.25, y: 44.42))
        bezier2Path.addLine(to: CGPoint(x: 133.71, y: 44.42))
        bezier2Path.addCurve(to: CGPoint(x: 140.99, y: 34.39), controlPoint1: CGPoint(x: 137.73, y: 44.42), controlPoint2: CGPoint(x: 140.99, y: 39.93))
        bezier2Path.addLine(to: CGPoint(x: 140.99, y: 12.15))
        bezier2Path.addCurve(to: CGPoint(x: 133.71, y: 2.11), controlPoint1: CGPoint(x: 140.99, y: 6.6), controlPoint2: CGPoint(x: 137.73, y: 2.11))
        bezier2Path.close()
        whiteTrans75.setFill()
        bezier2Path.fill()


        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: 48, y: 64, width: 110, height: 110))
        whiteTrans75.setStroke()
        ovalPath.lineWidth = 6.5
        ovalPath.stroke()


        //// Text Drawing
        let textPath = UIBezierPath()
        textPath.move(to: CGPoint(x: 88.8, y: 145.9))
        textPath.addCurve(to: CGPoint(x: 89.87, y: 141.7), controlPoint1: CGPoint(x: 89.04, y: 144.84), controlPoint2: CGPoint(x: 89.4, y: 143.44))
        textPath.addLine(to: CGPoint(x: 96.18, y: 118.11))
        textPath.addCurve(to: CGPoint(x: 96.36, y: 117.29), controlPoint1: CGPoint(x: 96.25, y: 117.84), controlPoint2: CGPoint(x: 96.31, y: 117.56))
        textPath.addCurve(to: CGPoint(x: 96.44, y: 116.52), controlPoint1: CGPoint(x: 96.41, y: 117.02), controlPoint2: CGPoint(x: 96.44, y: 116.76))
        textPath.addCurve(to: CGPoint(x: 95.1, y: 113.91), controlPoint1: CGPoint(x: 96.44, y: 115.12), controlPoint2: CGPoint(x: 95.99, y: 114.25))
        textPath.addCurve(to: CGPoint(x: 90.23, y: 113.24), controlPoint1: CGPoint(x: 94.22, y: 113.57), controlPoint2: CGPoint(x: 92.59, y: 113.34))
        textPath.addLine(to: CGPoint(x: 90.23, y: 110.47))
        textPath.addCurve(to: CGPoint(x: 98.87, y: 109.63), controlPoint1: CGPoint(x: 92.22, y: 110.34), controlPoint2: CGPoint(x: 95.1, y: 110.05))
        textPath.addCurve(to: CGPoint(x: 106.9, y: 108.52), controlPoint1: CGPoint(x: 102.65, y: 109.2), controlPoint2: CGPoint(x: 105.32, y: 108.83))
        textPath.addLine(to: CGPoint(x: 111.41, y: 107.65))
        textPath.addLine(to: CGPoint(x: 103.26, y: 137.54))
        textPath.addCurve(to: CGPoint(x: 101.87, y: 142.88), controlPoint1: CGPoint(x: 102.57, y: 140.11), controlPoint2: CGPoint(x: 102.11, y: 141.88))
        textPath.addCurve(to: CGPoint(x: 100.95, y: 147.8), controlPoint1: CGPoint(x: 101.26, y: 145.4), controlPoint2: CGPoint(x: 100.95, y: 147.04))
        textPath.addCurve(to: CGPoint(x: 101.46, y: 149.26), controlPoint1: CGPoint(x: 100.95, y: 148.55), controlPoint2: CGPoint(x: 101.12, y: 149.04))
        textPath.addCurve(to: CGPoint(x: 102.59, y: 149.59), controlPoint1: CGPoint(x: 101.8, y: 149.48), controlPoint2: CGPoint(x: 102.18, y: 149.59))
        textPath.addCurve(to: CGPoint(x: 106.54, y: 146.87), controlPoint1: CGPoint(x: 103.65, y: 149.59), controlPoint2: CGPoint(x: 104.96, y: 148.69))
        textPath.addCurve(to: CGPoint(x: 110.69, y: 141.18), controlPoint1: CGPoint(x: 108.11, y: 145.06), controlPoint2: CGPoint(x: 109.49, y: 143.17))
        textPath.addLine(to: CGPoint(x: 113, y: 142.67))
        textPath.addCurve(to: CGPoint(x: 105.15, y: 152.82), controlPoint1: CGPoint(x: 109.58, y: 147.69), controlPoint2: CGPoint(x: 106.96, y: 151.08))
        textPath.addCurve(to: CGPoint(x: 95.62, y: 157.13), controlPoint1: CGPoint(x: 102.18, y: 155.69), controlPoint2: CGPoint(x: 99, y: 157.13))
        textPath.addCurve(to: CGPoint(x: 90.46, y: 155.36), controlPoint1: CGPoint(x: 93.7, y: 157.13), controlPoint2: CGPoint(x: 91.98, y: 156.54))
        textPath.addCurve(to: CGPoint(x: 88.18, y: 149.95), controlPoint1: CGPoint(x: 88.94, y: 154.18), controlPoint2: CGPoint(x: 88.18, y: 152.38))
        textPath.addCurve(to: CGPoint(x: 88.8, y: 145.9), controlPoint1: CGPoint(x: 88.18, y: 149.1), controlPoint2: CGPoint(x: 88.39, y: 147.75))
        textPath.close()
        textPath.move(to: CGPoint(x: 113.46, y: 86.27))
        textPath.addCurve(to: CGPoint(x: 115.51, y: 91.25), controlPoint1: CGPoint(x: 114.83, y: 87.64), controlPoint2: CGPoint(x: 115.51, y: 89.3))
        textPath.addCurve(to: CGPoint(x: 113.46, y: 96.25), controlPoint1: CGPoint(x: 115.51, y: 93.19), controlPoint2: CGPoint(x: 114.83, y: 94.86))
        textPath.addCurve(to: CGPoint(x: 108.49, y: 98.32), controlPoint1: CGPoint(x: 112.09, y: 97.63), controlPoint2: CGPoint(x: 110.43, y: 98.32))
        textPath.addCurve(to: CGPoint(x: 103.49, y: 96.25), controlPoint1: CGPoint(x: 106.54, y: 98.32), controlPoint2: CGPoint(x: 104.87, y: 97.63))
        textPath.addCurve(to: CGPoint(x: 101.41, y: 91.25), controlPoint1: CGPoint(x: 102.1, y: 94.86), controlPoint2: CGPoint(x: 101.41, y: 93.19))
        textPath.addCurve(to: CGPoint(x: 103.49, y: 86.27), controlPoint1: CGPoint(x: 101.41, y: 89.3), controlPoint2: CGPoint(x: 102.1, y: 87.64))
        textPath.addCurve(to: CGPoint(x: 108.49, y: 84.22), controlPoint1: CGPoint(x: 104.87, y: 84.91), controlPoint2: CGPoint(x: 106.54, y: 84.22))
        textPath.addCurve(to: CGPoint(x: 113.46, y: 86.27), controlPoint1: CGPoint(x: 110.43, y: 84.22), controlPoint2: CGPoint(x: 112.09, y: 84.91))
        textPath.close()
        whiteTrans75.setFill()
        textPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawInfoButtonWhite120() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 5, y: 5, width: 70, height: 70)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawInfoButton(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawConnectButtonWhite120() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 5, y: 5, width: 70, height: 70)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawCloudWhite(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawCartButtonWhite120() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 5, y: 5, width: 70, height: 70)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawCartWhite(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawSettingsButtonWhite120() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 5, y: 5, width: 70, height: 70)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.draw_100515IconSet_092016_SettingswhiteCanvas(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawSmallBluePlusButt() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: 40, height: 40)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawFormEntryWhiteDarkBlueCircle(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawHighlightBlueButtonBackground() {

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 10, height: 10))
        ButtonsForFJ092018.gradient11Color.setFill()
        rectanglePath.fill()
    }

    @objc dynamic public class func drawHighlightBlue() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!


        //// Gradient Declarations
        let gradient11 = CGGradient(colorsSpace: nil, colors: [ButtonsForFJ092018.blueGradientColor2.cgColor, ButtonsForFJ092018.gradientForBoxColor2.cgColor] as CFArray, locations: [0, 1])!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 80, height: 30))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(gradient11, start: CGPoint(x: 40, y: -0), end: CGPoint(x: 40, y: 30), options: [])
        context.restoreGState()


        //// Text Drawing
        let textPath = UIBezierPath()
        textPath.move(to: CGPoint(x: 28.96, y: 11.41))
        textPath.addLine(to: CGPoint(x: 30.49, y: 11.41))
        textPath.addCurve(to: CGPoint(x: 30.11, y: 9.69), controlPoint1: CGPoint(x: 30.47, y: 10.74), controlPoint2: CGPoint(x: 30.34, y: 10.17))
        textPath.addCurve(to: CGPoint(x: 29.15, y: 8.49), controlPoint1: CGPoint(x: 29.87, y: 9.2), controlPoint2: CGPoint(x: 29.56, y: 8.81))
        textPath.addCurve(to: CGPoint(x: 27.75, y: 7.79), controlPoint1: CGPoint(x: 28.75, y: 8.17), controlPoint2: CGPoint(x: 28.28, y: 7.94))
        textPath.addCurve(to: CGPoint(x: 26.02, y: 7.57), controlPoint1: CGPoint(x: 27.22, y: 7.64), controlPoint2: CGPoint(x: 26.64, y: 7.57))
        textPath.addCurve(to: CGPoint(x: 24.39, y: 7.78), controlPoint1: CGPoint(x: 25.46, y: 7.57), controlPoint2: CGPoint(x: 24.92, y: 7.64))
        textPath.addCurve(to: CGPoint(x: 22.98, y: 8.43), controlPoint1: CGPoint(x: 23.87, y: 7.92), controlPoint2: CGPoint(x: 23.4, y: 8.14))
        textPath.addCurve(to: CGPoint(x: 21.99, y: 9.53), controlPoint1: CGPoint(x: 22.57, y: 8.72), controlPoint2: CGPoint(x: 22.24, y: 9.09))
        textPath.addCurve(to: CGPoint(x: 21.61, y: 11.12), controlPoint1: CGPoint(x: 21.74, y: 9.98), controlPoint2: CGPoint(x: 21.61, y: 10.51))
        textPath.addCurve(to: CGPoint(x: 21.95, y: 12.51), controlPoint1: CGPoint(x: 21.61, y: 11.68), controlPoint2: CGPoint(x: 21.72, y: 12.14))
        textPath.addCurve(to: CGPoint(x: 22.83, y: 13.41), controlPoint1: CGPoint(x: 22.17, y: 12.88), controlPoint2: CGPoint(x: 22.46, y: 13.18))
        textPath.addCurve(to: CGPoint(x: 24.08, y: 13.97), controlPoint1: CGPoint(x: 23.2, y: 13.64), controlPoint2: CGPoint(x: 23.61, y: 13.83))
        textPath.addCurve(to: CGPoint(x: 25.5, y: 14.34), controlPoint1: CGPoint(x: 24.54, y: 14.11), controlPoint2: CGPoint(x: 25.02, y: 14.24))
        textPath.addCurve(to: CGPoint(x: 26.92, y: 14.66), controlPoint1: CGPoint(x: 25.98, y: 14.45), controlPoint2: CGPoint(x: 26.45, y: 14.56))
        textPath.addCurve(to: CGPoint(x: 28.17, y: 15.06), controlPoint1: CGPoint(x: 27.38, y: 14.76), controlPoint2: CGPoint(x: 27.8, y: 14.89))
        textPath.addCurve(to: CGPoint(x: 29.05, y: 15.7), controlPoint1: CGPoint(x: 28.54, y: 15.22), controlPoint2: CGPoint(x: 28.83, y: 15.44))
        textPath.addCurve(to: CGPoint(x: 29.38, y: 16.72), controlPoint1: CGPoint(x: 29.27, y: 15.96), controlPoint2: CGPoint(x: 29.38, y: 16.3))
        textPath.addCurve(to: CGPoint(x: 29.11, y: 17.8), controlPoint1: CGPoint(x: 29.38, y: 17.16), controlPoint2: CGPoint(x: 29.29, y: 17.52))
        textPath.addCurve(to: CGPoint(x: 28.4, y: 18.48), controlPoint1: CGPoint(x: 28.93, y: 18.09), controlPoint2: CGPoint(x: 28.69, y: 18.31))
        textPath.addCurve(to: CGPoint(x: 27.4, y: 18.82), controlPoint1: CGPoint(x: 28.1, y: 18.64), controlPoint2: CGPoint(x: 27.77, y: 18.76))
        textPath.addCurve(to: CGPoint(x: 26.31, y: 18.93), controlPoint1: CGPoint(x: 27.03, y: 18.89), controlPoint2: CGPoint(x: 26.67, y: 18.93))
        textPath.addCurve(to: CGPoint(x: 24.98, y: 18.76), controlPoint1: CGPoint(x: 25.85, y: 18.93), controlPoint2: CGPoint(x: 25.41, y: 18.87))
        textPath.addCurve(to: CGPoint(x: 23.85, y: 18.23), controlPoint1: CGPoint(x: 24.55, y: 18.64), controlPoint2: CGPoint(x: 24.17, y: 18.47))
        textPath.addCurve(to: CGPoint(x: 23.07, y: 17.32), controlPoint1: CGPoint(x: 23.53, y: 17.99), controlPoint2: CGPoint(x: 23.27, y: 17.69))
        textPath.addCurve(to: CGPoint(x: 22.77, y: 16), controlPoint1: CGPoint(x: 22.87, y: 16.95), controlPoint2: CGPoint(x: 22.77, y: 16.51))
        textPath.addLine(to: CGPoint(x: 21.24, y: 16))
        textPath.addCurve(to: CGPoint(x: 21.64, y: 17.91), controlPoint1: CGPoint(x: 21.24, y: 16.74), controlPoint2: CGPoint(x: 21.37, y: 17.38))
        textPath.addCurve(to: CGPoint(x: 22.73, y: 19.24), controlPoint1: CGPoint(x: 21.91, y: 18.45), controlPoint2: CGPoint(x: 22.27, y: 18.89))
        textPath.addCurve(to: CGPoint(x: 24.33, y: 20.01), controlPoint1: CGPoint(x: 23.19, y: 19.59), controlPoint2: CGPoint(x: 23.72, y: 19.84))
        textPath.addCurve(to: CGPoint(x: 26.25, y: 20.27), controlPoint1: CGPoint(x: 24.93, y: 20.18), controlPoint2: CGPoint(x: 25.57, y: 20.27))
        textPath.addCurve(to: CGPoint(x: 27.93, y: 20.07), controlPoint1: CGPoint(x: 26.81, y: 20.27), controlPoint2: CGPoint(x: 27.37, y: 20.2))
        textPath.addCurve(to: CGPoint(x: 29.45, y: 19.44), controlPoint1: CGPoint(x: 28.49, y: 19.94), controlPoint2: CGPoint(x: 29, y: 19.73))
        textPath.addCurve(to: CGPoint(x: 30.56, y: 18.32), controlPoint1: CGPoint(x: 29.9, y: 19.16), controlPoint2: CGPoint(x: 30.28, y: 18.78))
        textPath.addCurve(to: CGPoint(x: 31, y: 16.67), controlPoint1: CGPoint(x: 30.85, y: 17.86), controlPoint2: CGPoint(x: 31, y: 17.31))
        textPath.addCurve(to: CGPoint(x: 30.67, y: 15.17), controlPoint1: CGPoint(x: 31, y: 16.06), controlPoint2: CGPoint(x: 30.89, y: 15.57))
        textPath.addCurve(to: CGPoint(x: 29.78, y: 14.18), controlPoint1: CGPoint(x: 30.45, y: 14.77), controlPoint2: CGPoint(x: 30.15, y: 14.44))
        textPath.addCurve(to: CGPoint(x: 28.53, y: 13.56), controlPoint1: CGPoint(x: 29.41, y: 13.92), controlPoint2: CGPoint(x: 29, y: 13.72))
        textPath.addCurve(to: CGPoint(x: 27.11, y: 13.16), controlPoint1: CGPoint(x: 28.07, y: 13.41), controlPoint2: CGPoint(x: 27.6, y: 13.28))
        textPath.addCurve(to: CGPoint(x: 25.69, y: 12.85), controlPoint1: CGPoint(x: 26.63, y: 13.05), controlPoint2: CGPoint(x: 26.16, y: 12.94))
        textPath.addCurve(to: CGPoint(x: 24.44, y: 12.48), controlPoint1: CGPoint(x: 25.23, y: 12.75), controlPoint2: CGPoint(x: 24.81, y: 12.63))
        textPath.addCurve(to: CGPoint(x: 23.56, y: 11.91), controlPoint1: CGPoint(x: 24.08, y: 12.34), controlPoint2: CGPoint(x: 23.78, y: 12.15))
        textPath.addCurve(to: CGPoint(x: 23.23, y: 11), controlPoint1: CGPoint(x: 23.34, y: 11.68), controlPoint2: CGPoint(x: 23.23, y: 11.38))
        textPath.addCurve(to: CGPoint(x: 23.46, y: 10.01), controlPoint1: CGPoint(x: 23.23, y: 10.61), controlPoint2: CGPoint(x: 23.31, y: 10.28))
        textPath.addCurve(to: CGPoint(x: 24.07, y: 9.37), controlPoint1: CGPoint(x: 23.61, y: 9.74), controlPoint2: CGPoint(x: 23.82, y: 9.53))
        textPath.addCurve(to: CGPoint(x: 24.95, y: 9.03), controlPoint1: CGPoint(x: 24.33, y: 9.21), controlPoint2: CGPoint(x: 24.62, y: 9.1))
        textPath.addCurve(to: CGPoint(x: 25.95, y: 8.93), controlPoint1: CGPoint(x: 25.27, y: 8.96), controlPoint2: CGPoint(x: 25.61, y: 8.93))
        textPath.addCurve(to: CGPoint(x: 28.01, y: 9.52), controlPoint1: CGPoint(x: 26.79, y: 8.93), controlPoint2: CGPoint(x: 27.48, y: 9.13))
        textPath.addCurve(to: CGPoint(x: 28.96, y: 11.41), controlPoint1: CGPoint(x: 28.55, y: 9.91), controlPoint2: CGPoint(x: 28.87, y: 10.54))
        textPath.close()
        textPath.move(to: CGPoint(x: 40.5, y: 19.96))
        textPath.addCurve(to: CGPoint(x: 39.46, y: 20.18), controlPoint1: CGPoint(x: 40.25, y: 20.11), controlPoint2: CGPoint(x: 39.91, y: 20.18))
        textPath.addCurve(to: CGPoint(x: 38.57, y: 19.87), controlPoint1: CGPoint(x: 39.09, y: 20.18), controlPoint2: CGPoint(x: 38.79, y: 20.08))
        textPath.addCurve(to: CGPoint(x: 38.24, y: 18.84), controlPoint1: CGPoint(x: 38.35, y: 19.66), controlPoint2: CGPoint(x: 38.24, y: 19.32))
        textPath.addCurve(to: CGPoint(x: 36.85, y: 19.87), controlPoint1: CGPoint(x: 37.84, y: 19.32), controlPoint2: CGPoint(x: 37.38, y: 19.66))
        textPath.addCurve(to: CGPoint(x: 35.15, y: 20.18), controlPoint1: CGPoint(x: 36.33, y: 20.08), controlPoint2: CGPoint(x: 35.76, y: 20.18))
        textPath.addCurve(to: CGPoint(x: 34.02, y: 20.05), controlPoint1: CGPoint(x: 34.75, y: 20.18), controlPoint2: CGPoint(x: 34.37, y: 20.14))
        textPath.addCurve(to: CGPoint(x: 33.09, y: 19.62), controlPoint1: CGPoint(x: 33.66, y: 19.96), controlPoint2: CGPoint(x: 33.35, y: 19.82))
        textPath.addCurve(to: CGPoint(x: 32.47, y: 18.87), controlPoint1: CGPoint(x: 32.83, y: 19.43), controlPoint2: CGPoint(x: 32.62, y: 19.18))
        textPath.addCurve(to: CGPoint(x: 32.24, y: 17.74), controlPoint1: CGPoint(x: 32.32, y: 18.55), controlPoint2: CGPoint(x: 32.24, y: 18.18))
        textPath.addCurve(to: CGPoint(x: 32.49, y: 16.51), controlPoint1: CGPoint(x: 32.24, y: 17.24), controlPoint2: CGPoint(x: 32.32, y: 16.83))
        textPath.addCurve(to: CGPoint(x: 33.17, y: 15.74), controlPoint1: CGPoint(x: 32.66, y: 16.19), controlPoint2: CGPoint(x: 32.89, y: 15.94))
        textPath.addCurve(to: CGPoint(x: 34.12, y: 15.29), controlPoint1: CGPoint(x: 33.44, y: 15.54), controlPoint2: CGPoint(x: 33.76, y: 15.39))
        textPath.addCurve(to: CGPoint(x: 35.21, y: 15.03), controlPoint1: CGPoint(x: 34.47, y: 15.19), controlPoint2: CGPoint(x: 34.84, y: 15.1))
        textPath.addCurve(to: CGPoint(x: 36.34, y: 14.85), controlPoint1: CGPoint(x: 35.61, y: 14.95), controlPoint2: CGPoint(x: 35.99, y: 14.89))
        textPath.addCurve(to: CGPoint(x: 37.29, y: 14.68), controlPoint1: CGPoint(x: 36.7, y: 14.81), controlPoint2: CGPoint(x: 37.02, y: 14.76))
        textPath.addCurve(to: CGPoint(x: 37.93, y: 14.36), controlPoint1: CGPoint(x: 37.56, y: 14.61), controlPoint2: CGPoint(x: 37.78, y: 14.5))
        textPath.addCurve(to: CGPoint(x: 38.17, y: 13.74), controlPoint1: CGPoint(x: 38.09, y: 14.22), controlPoint2: CGPoint(x: 38.17, y: 14.01))
        textPath.addCurve(to: CGPoint(x: 37.99, y: 12.98), controlPoint1: CGPoint(x: 38.17, y: 13.42), controlPoint2: CGPoint(x: 38.11, y: 13.17))
        textPath.addCurve(to: CGPoint(x: 37.53, y: 12.53), controlPoint1: CGPoint(x: 37.87, y: 12.78), controlPoint2: CGPoint(x: 37.72, y: 12.64))
        textPath.addCurve(to: CGPoint(x: 36.91, y: 12.33), controlPoint1: CGPoint(x: 37.35, y: 12.43), controlPoint2: CGPoint(x: 37.14, y: 12.36))
        textPath.addCurve(to: CGPoint(x: 36.22, y: 12.28), controlPoint1: CGPoint(x: 36.67, y: 12.3), controlPoint2: CGPoint(x: 36.44, y: 12.28))
        textPath.addCurve(to: CGPoint(x: 34.69, y: 12.63), controlPoint1: CGPoint(x: 35.6, y: 12.28), controlPoint2: CGPoint(x: 35.1, y: 12.4))
        textPath.addCurve(to: CGPoint(x: 34.02, y: 13.95), controlPoint1: CGPoint(x: 34.28, y: 12.86), controlPoint2: CGPoint(x: 34.06, y: 13.3))
        textPath.addLine(to: CGPoint(x: 32.58, y: 13.95))
        textPath.addCurve(to: CGPoint(x: 32.92, y: 12.57), controlPoint1: CGPoint(x: 32.6, y: 13.4), controlPoint2: CGPoint(x: 32.71, y: 12.94))
        textPath.addCurve(to: CGPoint(x: 33.73, y: 11.66), controlPoint1: CGPoint(x: 33.12, y: 12.19), controlPoint2: CGPoint(x: 33.39, y: 11.89))
        textPath.addCurve(to: CGPoint(x: 34.9, y: 11.16), controlPoint1: CGPoint(x: 34.08, y: 11.43), controlPoint2: CGPoint(x: 34.46, y: 11.26))
        textPath.addCurve(to: CGPoint(x: 36.3, y: 11), controlPoint1: CGPoint(x: 35.34, y: 11.05), controlPoint2: CGPoint(x: 35.8, y: 11))
        textPath.addCurve(to: CGPoint(x: 37.48, y: 11.09), controlPoint1: CGPoint(x: 36.7, y: 11), controlPoint2: CGPoint(x: 37.09, y: 11.03))
        textPath.addCurve(to: CGPoint(x: 38.55, y: 11.44), controlPoint1: CGPoint(x: 37.87, y: 11.15), controlPoint2: CGPoint(x: 38.23, y: 11.26))
        textPath.addCurve(to: CGPoint(x: 39.31, y: 12.18), controlPoint1: CGPoint(x: 38.86, y: 11.61), controlPoint2: CGPoint(x: 39.12, y: 11.86))
        textPath.addCurve(to: CGPoint(x: 39.6, y: 13.42), controlPoint1: CGPoint(x: 39.5, y: 12.49), controlPoint2: CGPoint(x: 39.6, y: 12.91))
        textPath.addLine(to: CGPoint(x: 39.6, y: 17.94))
        textPath.addCurve(to: CGPoint(x: 39.66, y: 18.69), controlPoint1: CGPoint(x: 39.6, y: 18.28), controlPoint2: CGPoint(x: 39.62, y: 18.53))
        textPath.addCurve(to: CGPoint(x: 40.06, y: 18.93), controlPoint1: CGPoint(x: 39.7, y: 18.85), controlPoint2: CGPoint(x: 39.83, y: 18.93))
        textPath.addCurve(to: CGPoint(x: 40.5, y: 18.84), controlPoint1: CGPoint(x: 40.18, y: 18.93), controlPoint2: CGPoint(x: 40.33, y: 18.9))
        textPath.addLine(to: CGPoint(x: 40.5, y: 19.96))
        textPath.close()
        textPath.move(to: CGPoint(x: 38.15, y: 15.46))
        textPath.addCurve(to: CGPoint(x: 37.44, y: 15.76), controlPoint1: CGPoint(x: 37.97, y: 15.59), controlPoint2: CGPoint(x: 37.74, y: 15.69))
        textPath.addCurve(to: CGPoint(x: 36.51, y: 15.91), controlPoint1: CGPoint(x: 37.15, y: 15.82), controlPoint2: CGPoint(x: 36.84, y: 15.87))
        textPath.addCurve(to: CGPoint(x: 35.54, y: 16.04), controlPoint1: CGPoint(x: 36.19, y: 15.95), controlPoint2: CGPoint(x: 35.87, y: 15.99))
        textPath.addCurve(to: CGPoint(x: 34.65, y: 16.29), controlPoint1: CGPoint(x: 35.21, y: 16.1), controlPoint2: CGPoint(x: 34.91, y: 16.18))
        textPath.addCurve(to: CGPoint(x: 34.02, y: 16.78), controlPoint1: CGPoint(x: 34.39, y: 16.4), controlPoint2: CGPoint(x: 34.18, y: 16.57))
        textPath.addCurve(to: CGPoint(x: 33.77, y: 17.63), controlPoint1: CGPoint(x: 33.85, y: 16.99), controlPoint2: CGPoint(x: 33.77, y: 17.27))
        textPath.addCurve(to: CGPoint(x: 33.91, y: 18.24), controlPoint1: CGPoint(x: 33.77, y: 17.87), controlPoint2: CGPoint(x: 33.82, y: 18.07))
        textPath.addCurve(to: CGPoint(x: 34.29, y: 18.64), controlPoint1: CGPoint(x: 34.01, y: 18.4), controlPoint2: CGPoint(x: 34.13, y: 18.53))
        textPath.addCurve(to: CGPoint(x: 34.82, y: 18.86), controlPoint1: CGPoint(x: 34.44, y: 18.74), controlPoint2: CGPoint(x: 34.62, y: 18.81))
        textPath.addCurve(to: CGPoint(x: 35.47, y: 18.93), controlPoint1: CGPoint(x: 35.03, y: 18.9), controlPoint2: CGPoint(x: 35.24, y: 18.93))
        textPath.addCurve(to: CGPoint(x: 36.69, y: 18.73), controlPoint1: CGPoint(x: 35.95, y: 18.93), controlPoint2: CGPoint(x: 36.35, y: 18.86))
        textPath.addCurve(to: CGPoint(x: 37.53, y: 18.24), controlPoint1: CGPoint(x: 37.03, y: 18.6), controlPoint2: CGPoint(x: 37.31, y: 18.44))
        textPath.addCurve(to: CGPoint(x: 38, y: 17.59), controlPoint1: CGPoint(x: 37.74, y: 18.04), controlPoint2: CGPoint(x: 37.9, y: 17.82))
        textPath.addCurve(to: CGPoint(x: 38.15, y: 16.94), controlPoint1: CGPoint(x: 38.1, y: 17.36), controlPoint2: CGPoint(x: 38.15, y: 17.14))
        textPath.addLine(to: CGPoint(x: 38.15, y: 15.46))
        textPath.close()
        textPath.move(to: CGPoint(x: 45.8, y: 20))
        textPath.addLine(to: CGPoint(x: 49.02, y: 11.21))
        textPath.addLine(to: CGPoint(x: 47.5, y: 11.21))
        textPath.addLine(to: CGPoint(x: 45.11, y: 18.54))
        textPath.addLine(to: CGPoint(x: 45.07, y: 18.54))
        textPath.addLine(to: CGPoint(x: 42.61, y: 11.21))
        textPath.addLine(to: CGPoint(x: 40.99, y: 11.21))
        textPath.addLine(to: CGPoint(x: 44.26, y: 20))
        textPath.addLine(to: CGPoint(x: 45.8, y: 20))
        textPath.close()
        textPath.move(to: CGPoint(x: 56.45, y: 14.76))
        textPath.addLine(to: CGPoint(x: 51.4, y: 14.76))
        textPath.addCurve(to: CGPoint(x: 51.62, y: 13.8), controlPoint1: CGPoint(x: 51.42, y: 14.42), controlPoint2: CGPoint(x: 51.49, y: 14.1))
        textPath.addCurve(to: CGPoint(x: 52.13, y: 13.01), controlPoint1: CGPoint(x: 51.74, y: 13.5), controlPoint2: CGPoint(x: 51.91, y: 13.24))
        textPath.addCurve(to: CGPoint(x: 52.9, y: 12.47), controlPoint1: CGPoint(x: 52.34, y: 12.78), controlPoint2: CGPoint(x: 52.6, y: 12.6))
        textPath.addCurve(to: CGPoint(x: 53.91, y: 12.28), controlPoint1: CGPoint(x: 53.2, y: 12.34), controlPoint2: CGPoint(x: 53.54, y: 12.28))
        textPath.addCurve(to: CGPoint(x: 54.91, y: 12.47), controlPoint1: CGPoint(x: 54.28, y: 12.28), controlPoint2: CGPoint(x: 54.61, y: 12.34))
        textPath.addCurve(to: CGPoint(x: 55.69, y: 13), controlPoint1: CGPoint(x: 55.21, y: 12.6), controlPoint2: CGPoint(x: 55.47, y: 12.78))
        textPath.addCurve(to: CGPoint(x: 56.22, y: 13.79), controlPoint1: CGPoint(x: 55.91, y: 13.22), controlPoint2: CGPoint(x: 56.09, y: 13.49))
        textPath.addCurve(to: CGPoint(x: 56.45, y: 14.76), controlPoint1: CGPoint(x: 56.35, y: 14.1), controlPoint2: CGPoint(x: 56.42, y: 14.42))
        textPath.close()
        textPath.move(to: CGPoint(x: 57.84, y: 17.21))
        textPath.addLine(to: CGPoint(x: 56.41, y: 17.21))
        textPath.addCurve(to: CGPoint(x: 55.64, y: 18.5), controlPoint1: CGPoint(x: 56.29, y: 17.79), controlPoint2: CGPoint(x: 56.03, y: 18.22))
        textPath.addCurve(to: CGPoint(x: 54.13, y: 18.93), controlPoint1: CGPoint(x: 55.25, y: 18.78), controlPoint2: CGPoint(x: 54.75, y: 18.93))
        textPath.addCurve(to: CGPoint(x: 52.89, y: 18.69), controlPoint1: CGPoint(x: 53.66, y: 18.93), controlPoint2: CGPoint(x: 53.25, y: 18.85))
        textPath.addCurve(to: CGPoint(x: 52.03, y: 18.05), controlPoint1: CGPoint(x: 52.54, y: 18.53), controlPoint2: CGPoint(x: 52.25, y: 18.32))
        textPath.addCurve(to: CGPoint(x: 51.53, y: 17.13), controlPoint1: CGPoint(x: 51.8, y: 17.78), controlPoint2: CGPoint(x: 51.64, y: 17.48))
        textPath.addCurve(to: CGPoint(x: 51.4, y: 16.04), controlPoint1: CGPoint(x: 51.43, y: 16.79), controlPoint2: CGPoint(x: 51.39, y: 16.42))
        textPath.addLine(to: CGPoint(x: 57.98, y: 16.04))
        textPath.addCurve(to: CGPoint(x: 57.83, y: 14.35), controlPoint1: CGPoint(x: 58, y: 15.5), controlPoint2: CGPoint(x: 57.95, y: 14.94))
        textPath.addCurve(to: CGPoint(x: 57.19, y: 12.72), controlPoint1: CGPoint(x: 57.71, y: 13.76), controlPoint2: CGPoint(x: 57.5, y: 13.22))
        textPath.addCurve(to: CGPoint(x: 55.95, y: 11.49), controlPoint1: CGPoint(x: 56.87, y: 12.22), controlPoint2: CGPoint(x: 56.46, y: 11.81))
        textPath.addCurve(to: CGPoint(x: 54, y: 11), controlPoint1: CGPoint(x: 55.43, y: 11.17), controlPoint2: CGPoint(x: 54.78, y: 11))
        textPath.addCurve(to: CGPoint(x: 52.34, y: 11.34), controlPoint1: CGPoint(x: 53.4, y: 11), controlPoint2: CGPoint(x: 52.85, y: 11.12))
        textPath.addCurve(to: CGPoint(x: 51.03, y: 12.3), controlPoint1: CGPoint(x: 51.84, y: 11.57), controlPoint2: CGPoint(x: 51.4, y: 11.89))
        textPath.addCurve(to: CGPoint(x: 50.17, y: 13.74), controlPoint1: CGPoint(x: 50.66, y: 12.7), controlPoint2: CGPoint(x: 50.38, y: 13.19))
        textPath.addCurve(to: CGPoint(x: 49.87, y: 15.58), controlPoint1: CGPoint(x: 49.97, y: 14.3), controlPoint2: CGPoint(x: 49.87, y: 14.91))
        textPath.addCurve(to: CGPoint(x: 50.17, y: 17.43), controlPoint1: CGPoint(x: 49.89, y: 16.25), controlPoint2: CGPoint(x: 49.99, y: 16.86))
        textPath.addCurve(to: CGPoint(x: 50.96, y: 18.89), controlPoint1: CGPoint(x: 50.34, y: 18), controlPoint2: CGPoint(x: 50.6, y: 18.48))
        textPath.addCurve(to: CGPoint(x: 52.26, y: 19.84), controlPoint1: CGPoint(x: 51.31, y: 19.3), controlPoint2: CGPoint(x: 51.74, y: 19.62))
        textPath.addCurve(to: CGPoint(x: 54.08, y: 20.18), controlPoint1: CGPoint(x: 52.77, y: 20.07), controlPoint2: CGPoint(x: 53.38, y: 20.18))
        textPath.addCurve(to: CGPoint(x: 56.57, y: 19.44), controlPoint1: CGPoint(x: 55.08, y: 20.18), controlPoint2: CGPoint(x: 55.91, y: 19.93))
        textPath.addCurve(to: CGPoint(x: 57.84, y: 17.21), controlPoint1: CGPoint(x: 57.22, y: 18.94), controlPoint2: CGPoint(x: 57.65, y: 18.2))
        textPath.close()
        UIColor.white.setFill()
        textPath.fill()
    }

    @objc dynamic public class func drawNormalBlue() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 80, height: 30))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(ButtonsForFJ092018.gradientForBox, start: CGPoint(x: 40, y: -0), end: CGPoint(x: 40, y: 30), options: [])
        context.restoreGState()


        //// Text Drawing
        let textPath = UIBezierPath()
        textPath.move(to: CGPoint(x: 28.96, y: 11.41))
        textPath.addLine(to: CGPoint(x: 30.49, y: 11.41))
        textPath.addCurve(to: CGPoint(x: 30.11, y: 9.69), controlPoint1: CGPoint(x: 30.47, y: 10.75), controlPoint2: CGPoint(x: 30.34, y: 10.17))
        textPath.addCurve(to: CGPoint(x: 29.16, y: 8.49), controlPoint1: CGPoint(x: 29.88, y: 9.21), controlPoint2: CGPoint(x: 29.56, y: 8.81))
        textPath.addCurve(to: CGPoint(x: 27.75, y: 7.79), controlPoint1: CGPoint(x: 28.75, y: 8.17), controlPoint2: CGPoint(x: 28.29, y: 7.94))
        textPath.addCurve(to: CGPoint(x: 26.02, y: 7.57), controlPoint1: CGPoint(x: 27.22, y: 7.65), controlPoint2: CGPoint(x: 26.64, y: 7.57))
        textPath.addCurve(to: CGPoint(x: 24.4, y: 7.79), controlPoint1: CGPoint(x: 25.46, y: 7.57), controlPoint2: CGPoint(x: 24.92, y: 7.64))
        textPath.addCurve(to: CGPoint(x: 22.98, y: 8.43), controlPoint1: CGPoint(x: 23.87, y: 7.93), controlPoint2: CGPoint(x: 23.4, y: 8.14))
        textPath.addCurve(to: CGPoint(x: 21.99, y: 9.54), controlPoint1: CGPoint(x: 22.57, y: 8.72), controlPoint2: CGPoint(x: 22.24, y: 9.09))
        textPath.addCurve(to: CGPoint(x: 21.62, y: 11.13), controlPoint1: CGPoint(x: 21.74, y: 9.98), controlPoint2: CGPoint(x: 21.62, y: 10.51))
        textPath.addCurve(to: CGPoint(x: 21.95, y: 12.51), controlPoint1: CGPoint(x: 21.62, y: 11.68), controlPoint2: CGPoint(x: 21.73, y: 12.14))
        textPath.addCurve(to: CGPoint(x: 22.83, y: 13.41), controlPoint1: CGPoint(x: 22.17, y: 12.88), controlPoint2: CGPoint(x: 22.46, y: 13.18))
        textPath.addCurve(to: CGPoint(x: 24.08, y: 13.97), controlPoint1: CGPoint(x: 23.2, y: 13.64), controlPoint2: CGPoint(x: 23.62, y: 13.83))
        textPath.addCurve(to: CGPoint(x: 25.5, y: 14.35), controlPoint1: CGPoint(x: 24.55, y: 14.12), controlPoint2: CGPoint(x: 25.02, y: 14.24))
        textPath.addCurve(to: CGPoint(x: 26.92, y: 14.66), controlPoint1: CGPoint(x: 25.98, y: 14.46), controlPoint2: CGPoint(x: 26.46, y: 14.56))
        textPath.addCurve(to: CGPoint(x: 28.17, y: 15.06), controlPoint1: CGPoint(x: 27.38, y: 14.76), controlPoint2: CGPoint(x: 27.8, y: 14.9))
        textPath.addCurve(to: CGPoint(x: 29.05, y: 15.7), controlPoint1: CGPoint(x: 28.54, y: 15.23), controlPoint2: CGPoint(x: 28.83, y: 15.44))
        textPath.addCurve(to: CGPoint(x: 29.38, y: 16.72), controlPoint1: CGPoint(x: 29.27, y: 15.96), controlPoint2: CGPoint(x: 29.38, y: 16.3))
        textPath.addCurve(to: CGPoint(x: 29.11, y: 17.81), controlPoint1: CGPoint(x: 29.38, y: 17.16), controlPoint2: CGPoint(x: 29.29, y: 17.52))
        textPath.addCurve(to: CGPoint(x: 28.4, y: 18.48), controlPoint1: CGPoint(x: 28.93, y: 18.09), controlPoint2: CGPoint(x: 28.69, y: 18.31))
        textPath.addCurve(to: CGPoint(x: 27.4, y: 18.83), controlPoint1: CGPoint(x: 28.1, y: 18.64), controlPoint2: CGPoint(x: 27.77, y: 18.76))
        textPath.addCurve(to: CGPoint(x: 26.31, y: 18.93), controlPoint1: CGPoint(x: 27.04, y: 18.9), controlPoint2: CGPoint(x: 26.67, y: 18.93))
        textPath.addCurve(to: CGPoint(x: 24.98, y: 18.76), controlPoint1: CGPoint(x: 25.85, y: 18.93), controlPoint2: CGPoint(x: 25.41, y: 18.87))
        textPath.addCurve(to: CGPoint(x: 23.85, y: 18.23), controlPoint1: CGPoint(x: 24.55, y: 18.65), controlPoint2: CGPoint(x: 24.17, y: 18.47))
        textPath.addCurve(to: CGPoint(x: 23.07, y: 17.32), controlPoint1: CGPoint(x: 23.53, y: 17.99), controlPoint2: CGPoint(x: 23.27, y: 17.69))
        textPath.addCurve(to: CGPoint(x: 22.77, y: 16), controlPoint1: CGPoint(x: 22.87, y: 16.95), controlPoint2: CGPoint(x: 22.77, y: 16.52))
        textPath.addLine(to: CGPoint(x: 21.24, y: 16))
        textPath.addCurve(to: CGPoint(x: 21.64, y: 17.92), controlPoint1: CGPoint(x: 21.24, y: 16.74), controlPoint2: CGPoint(x: 21.38, y: 17.38))
        textPath.addCurve(to: CGPoint(x: 22.73, y: 19.24), controlPoint1: CGPoint(x: 21.91, y: 18.46), controlPoint2: CGPoint(x: 22.27, y: 18.9))
        textPath.addCurve(to: CGPoint(x: 24.33, y: 20.02), controlPoint1: CGPoint(x: 23.19, y: 19.59), controlPoint2: CGPoint(x: 23.72, y: 19.85))
        textPath.addCurve(to: CGPoint(x: 26.26, y: 20.27), controlPoint1: CGPoint(x: 24.93, y: 20.19), controlPoint2: CGPoint(x: 25.58, y: 20.27))
        textPath.addCurve(to: CGPoint(x: 27.93, y: 20.08), controlPoint1: CGPoint(x: 26.81, y: 20.27), controlPoint2: CGPoint(x: 27.37, y: 20.21))
        textPath.addCurve(to: CGPoint(x: 29.45, y: 19.45), controlPoint1: CGPoint(x: 28.49, y: 19.95), controlPoint2: CGPoint(x: 29, y: 19.74))
        textPath.addCurve(to: CGPoint(x: 30.57, y: 18.33), controlPoint1: CGPoint(x: 29.91, y: 19.16), controlPoint2: CGPoint(x: 30.28, y: 18.78))
        textPath.addCurve(to: CGPoint(x: 31, y: 16.67), controlPoint1: CGPoint(x: 30.86, y: 17.87), controlPoint2: CGPoint(x: 31, y: 17.31))
        textPath.addCurve(to: CGPoint(x: 30.67, y: 15.17), controlPoint1: CGPoint(x: 31, y: 16.07), controlPoint2: CGPoint(x: 30.89, y: 15.57))
        textPath.addCurve(to: CGPoint(x: 29.78, y: 14.19), controlPoint1: CGPoint(x: 30.45, y: 14.78), controlPoint2: CGPoint(x: 30.15, y: 14.45))
        textPath.addCurve(to: CGPoint(x: 28.54, y: 13.57), controlPoint1: CGPoint(x: 29.42, y: 13.93), controlPoint2: CGPoint(x: 29, y: 13.72))
        textPath.addCurve(to: CGPoint(x: 27.12, y: 13.17), controlPoint1: CGPoint(x: 28.07, y: 13.41), controlPoint2: CGPoint(x: 27.6, y: 13.28))
        textPath.addCurve(to: CGPoint(x: 25.7, y: 12.85), controlPoint1: CGPoint(x: 26.63, y: 13.05), controlPoint2: CGPoint(x: 26.16, y: 12.95))
        textPath.addCurve(to: CGPoint(x: 24.45, y: 12.49), controlPoint1: CGPoint(x: 25.23, y: 12.76), controlPoint2: CGPoint(x: 24.81, y: 12.63))
        textPath.addCurve(to: CGPoint(x: 23.56, y: 11.92), controlPoint1: CGPoint(x: 24.08, y: 12.34), controlPoint2: CGPoint(x: 23.78, y: 12.15))
        textPath.addCurve(to: CGPoint(x: 23.23, y: 11.01), controlPoint1: CGPoint(x: 23.34, y: 11.68), controlPoint2: CGPoint(x: 23.23, y: 11.38))
        textPath.addCurve(to: CGPoint(x: 23.46, y: 10.01), controlPoint1: CGPoint(x: 23.23, y: 10.61), controlPoint2: CGPoint(x: 23.31, y: 10.28))
        textPath.addCurve(to: CGPoint(x: 24.07, y: 9.38), controlPoint1: CGPoint(x: 23.61, y: 9.75), controlPoint2: CGPoint(x: 23.82, y: 9.53))
        textPath.addCurve(to: CGPoint(x: 24.95, y: 9.03), controlPoint1: CGPoint(x: 24.33, y: 9.22), controlPoint2: CGPoint(x: 24.62, y: 9.1))
        textPath.addCurve(to: CGPoint(x: 25.95, y: 8.93), controlPoint1: CGPoint(x: 25.28, y: 8.97), controlPoint2: CGPoint(x: 25.61, y: 8.93))
        textPath.addCurve(to: CGPoint(x: 28.02, y: 9.52), controlPoint1: CGPoint(x: 26.79, y: 8.93), controlPoint2: CGPoint(x: 27.48, y: 9.13))
        textPath.addCurve(to: CGPoint(x: 28.96, y: 11.41), controlPoint1: CGPoint(x: 28.55, y: 9.91), controlPoint2: CGPoint(x: 28.87, y: 10.54))
        textPath.close()
        textPath.move(to: CGPoint(x: 40.5, y: 19.97))
        textPath.addCurve(to: CGPoint(x: 39.47, y: 20.19), controlPoint1: CGPoint(x: 40.25, y: 20.11), controlPoint2: CGPoint(x: 39.91, y: 20.19))
        textPath.addCurve(to: CGPoint(x: 38.57, y: 19.87), controlPoint1: CGPoint(x: 39.09, y: 20.19), controlPoint2: CGPoint(x: 38.79, y: 20.08))
        textPath.addCurve(to: CGPoint(x: 38.24, y: 18.84), controlPoint1: CGPoint(x: 38.35, y: 19.66), controlPoint2: CGPoint(x: 38.24, y: 19.32))
        textPath.addCurve(to: CGPoint(x: 36.86, y: 19.87), controlPoint1: CGPoint(x: 37.85, y: 19.32), controlPoint2: CGPoint(x: 37.38, y: 19.66))
        textPath.addCurve(to: CGPoint(x: 35.15, y: 20.19), controlPoint1: CGPoint(x: 36.33, y: 20.08), controlPoint2: CGPoint(x: 35.76, y: 20.19))
        textPath.addCurve(to: CGPoint(x: 34.02, y: 20.05), controlPoint1: CGPoint(x: 34.75, y: 20.19), controlPoint2: CGPoint(x: 34.37, y: 20.14))
        textPath.addCurve(to: CGPoint(x: 33.09, y: 19.63), controlPoint1: CGPoint(x: 33.66, y: 19.96), controlPoint2: CGPoint(x: 33.35, y: 19.82))
        textPath.addCurve(to: CGPoint(x: 32.47, y: 18.87), controlPoint1: CGPoint(x: 32.83, y: 19.43), controlPoint2: CGPoint(x: 32.62, y: 19.18))
        textPath.addCurve(to: CGPoint(x: 32.24, y: 17.74), controlPoint1: CGPoint(x: 32.32, y: 18.56), controlPoint2: CGPoint(x: 32.24, y: 18.18))
        textPath.addCurve(to: CGPoint(x: 32.5, y: 16.52), controlPoint1: CGPoint(x: 32.24, y: 17.24), controlPoint2: CGPoint(x: 32.33, y: 16.83))
        textPath.addCurve(to: CGPoint(x: 33.17, y: 15.74), controlPoint1: CGPoint(x: 32.67, y: 16.2), controlPoint2: CGPoint(x: 32.89, y: 15.94))
        textPath.addCurve(to: CGPoint(x: 34.12, y: 15.29), controlPoint1: CGPoint(x: 33.45, y: 15.54), controlPoint2: CGPoint(x: 33.76, y: 15.39))
        textPath.addCurve(to: CGPoint(x: 35.22, y: 15.04), controlPoint1: CGPoint(x: 34.48, y: 15.19), controlPoint2: CGPoint(x: 34.84, y: 15.1))
        textPath.addCurve(to: CGPoint(x: 36.35, y: 14.86), controlPoint1: CGPoint(x: 35.61, y: 14.96), controlPoint2: CGPoint(x: 35.99, y: 14.9))
        textPath.addCurve(to: CGPoint(x: 37.29, y: 14.69), controlPoint1: CGPoint(x: 36.7, y: 14.82), controlPoint2: CGPoint(x: 37.02, y: 14.76))
        textPath.addCurve(to: CGPoint(x: 37.94, y: 14.36), controlPoint1: CGPoint(x: 37.56, y: 14.61), controlPoint2: CGPoint(x: 37.78, y: 14.51))
        textPath.addCurve(to: CGPoint(x: 38.17, y: 13.74), controlPoint1: CGPoint(x: 38.09, y: 14.22), controlPoint2: CGPoint(x: 38.17, y: 14.02))
        textPath.addCurve(to: CGPoint(x: 38, y: 12.98), controlPoint1: CGPoint(x: 38.17, y: 13.43), controlPoint2: CGPoint(x: 38.11, y: 13.17))
        textPath.addCurve(to: CGPoint(x: 37.54, y: 12.54), controlPoint1: CGPoint(x: 37.88, y: 12.79), controlPoint2: CGPoint(x: 37.72, y: 12.64))
        textPath.addCurve(to: CGPoint(x: 36.91, y: 12.33), controlPoint1: CGPoint(x: 37.35, y: 12.43), controlPoint2: CGPoint(x: 37.14, y: 12.37))
        textPath.addCurve(to: CGPoint(x: 36.22, y: 12.28), controlPoint1: CGPoint(x: 36.68, y: 12.3), controlPoint2: CGPoint(x: 36.45, y: 12.28))
        textPath.addCurve(to: CGPoint(x: 34.69, y: 12.63), controlPoint1: CGPoint(x: 35.61, y: 12.28), controlPoint2: CGPoint(x: 35.1, y: 12.4))
        textPath.addCurve(to: CGPoint(x: 34.03, y: 13.95), controlPoint1: CGPoint(x: 34.28, y: 12.86), controlPoint2: CGPoint(x: 34.06, y: 13.3))
        textPath.addLine(to: CGPoint(x: 32.58, y: 13.95))
        textPath.addCurve(to: CGPoint(x: 32.92, y: 12.57), controlPoint1: CGPoint(x: 32.6, y: 13.4), controlPoint2: CGPoint(x: 32.72, y: 12.95))
        textPath.addCurve(to: CGPoint(x: 33.74, y: 11.66), controlPoint1: CGPoint(x: 33.13, y: 12.2), controlPoint2: CGPoint(x: 33.4, y: 11.89))
        textPath.addCurve(to: CGPoint(x: 34.9, y: 11.16), controlPoint1: CGPoint(x: 34.08, y: 11.43), controlPoint2: CGPoint(x: 34.47, y: 11.26))
        textPath.addCurve(to: CGPoint(x: 36.3, y: 11.01), controlPoint1: CGPoint(x: 35.34, y: 11.06), controlPoint2: CGPoint(x: 35.81, y: 11.01))
        textPath.addCurve(to: CGPoint(x: 37.49, y: 11.09), controlPoint1: CGPoint(x: 36.7, y: 11.01), controlPoint2: CGPoint(x: 37.09, y: 11.04))
        textPath.addCurve(to: CGPoint(x: 38.55, y: 11.44), controlPoint1: CGPoint(x: 37.88, y: 11.15), controlPoint2: CGPoint(x: 38.23, y: 11.26))
        textPath.addCurve(to: CGPoint(x: 39.31, y: 12.18), controlPoint1: CGPoint(x: 38.87, y: 11.62), controlPoint2: CGPoint(x: 39.12, y: 11.86))
        textPath.addCurve(to: CGPoint(x: 39.6, y: 13.42), controlPoint1: CGPoint(x: 39.51, y: 12.5), controlPoint2: CGPoint(x: 39.6, y: 12.91))
        textPath.addLine(to: CGPoint(x: 39.6, y: 17.94))
        textPath.addCurve(to: CGPoint(x: 39.66, y: 18.69), controlPoint1: CGPoint(x: 39.6, y: 18.28), controlPoint2: CGPoint(x: 39.62, y: 18.53))
        textPath.addCurve(to: CGPoint(x: 40.06, y: 18.93), controlPoint1: CGPoint(x: 39.7, y: 18.85), controlPoint2: CGPoint(x: 39.83, y: 18.93))
        textPath.addCurve(to: CGPoint(x: 40.5, y: 18.84), controlPoint1: CGPoint(x: 40.19, y: 18.93), controlPoint2: CGPoint(x: 40.33, y: 18.9))
        textPath.addLine(to: CGPoint(x: 40.5, y: 19.97))
        textPath.close()
        textPath.move(to: CGPoint(x: 38.16, y: 15.46))
        textPath.addCurve(to: CGPoint(x: 37.44, y: 15.76), controlPoint1: CGPoint(x: 37.98, y: 15.6), controlPoint2: CGPoint(x: 37.74, y: 15.7))
        textPath.addCurve(to: CGPoint(x: 36.52, y: 15.91), controlPoint1: CGPoint(x: 37.15, y: 15.82), controlPoint2: CGPoint(x: 36.84, y: 15.87))
        textPath.addCurve(to: CGPoint(x: 35.54, y: 16.05), controlPoint1: CGPoint(x: 36.19, y: 15.95), controlPoint2: CGPoint(x: 35.87, y: 16))
        textPath.addCurve(to: CGPoint(x: 34.66, y: 16.29), controlPoint1: CGPoint(x: 35.21, y: 16.1), controlPoint2: CGPoint(x: 34.92, y: 16.18))
        textPath.addCurve(to: CGPoint(x: 34.02, y: 16.78), controlPoint1: CGPoint(x: 34.39, y: 16.41), controlPoint2: CGPoint(x: 34.18, y: 16.57))
        textPath.addCurve(to: CGPoint(x: 33.77, y: 17.64), controlPoint1: CGPoint(x: 33.85, y: 16.99), controlPoint2: CGPoint(x: 33.77, y: 17.27))
        textPath.addCurve(to: CGPoint(x: 33.92, y: 18.24), controlPoint1: CGPoint(x: 33.77, y: 17.88), controlPoint2: CGPoint(x: 33.82, y: 18.08))
        textPath.addCurve(to: CGPoint(x: 34.29, y: 18.64), controlPoint1: CGPoint(x: 34.01, y: 18.4), controlPoint2: CGPoint(x: 34.14, y: 18.54))
        textPath.addCurve(to: CGPoint(x: 34.82, y: 18.86), controlPoint1: CGPoint(x: 34.44, y: 18.74), controlPoint2: CGPoint(x: 34.62, y: 18.82))
        textPath.addCurve(to: CGPoint(x: 35.47, y: 18.93), controlPoint1: CGPoint(x: 35.03, y: 18.91), controlPoint2: CGPoint(x: 35.24, y: 18.93))
        textPath.addCurve(to: CGPoint(x: 36.7, y: 18.73), controlPoint1: CGPoint(x: 35.95, y: 18.93), controlPoint2: CGPoint(x: 36.35, y: 18.86))
        textPath.addCurve(to: CGPoint(x: 37.53, y: 18.24), controlPoint1: CGPoint(x: 37.04, y: 18.6), controlPoint2: CGPoint(x: 37.31, y: 18.44))
        textPath.addCurve(to: CGPoint(x: 38, y: 17.59), controlPoint1: CGPoint(x: 37.74, y: 18.04), controlPoint2: CGPoint(x: 37.9, y: 17.83))
        textPath.addCurve(to: CGPoint(x: 38.16, y: 16.94), controlPoint1: CGPoint(x: 38.11, y: 17.36), controlPoint2: CGPoint(x: 38.16, y: 17.14))
        textPath.addLine(to: CGPoint(x: 38.16, y: 15.46))
        textPath.close()
        textPath.move(to: CGPoint(x: 45.81, y: 20))
        textPath.addLine(to: CGPoint(x: 49.02, y: 11.21))
        textPath.addLine(to: CGPoint(x: 47.51, y: 11.21))
        textPath.addLine(to: CGPoint(x: 45.11, y: 18.54))
        textPath.addLine(to: CGPoint(x: 45.08, y: 18.54))
        textPath.addLine(to: CGPoint(x: 42.61, y: 11.21))
        textPath.addLine(to: CGPoint(x: 41, y: 11.21))
        textPath.addLine(to: CGPoint(x: 44.26, y: 20))
        textPath.addLine(to: CGPoint(x: 45.81, y: 20))
        textPath.close()
        textPath.move(to: CGPoint(x: 56.45, y: 14.76))
        textPath.addLine(to: CGPoint(x: 51.4, y: 14.76))
        textPath.addCurve(to: CGPoint(x: 51.62, y: 13.8), controlPoint1: CGPoint(x: 51.42, y: 14.42), controlPoint2: CGPoint(x: 51.5, y: 14.1))
        textPath.addCurve(to: CGPoint(x: 52.13, y: 13.01), controlPoint1: CGPoint(x: 51.75, y: 13.5), controlPoint2: CGPoint(x: 51.92, y: 13.24))
        textPath.addCurve(to: CGPoint(x: 52.9, y: 12.48), controlPoint1: CGPoint(x: 52.35, y: 12.79), controlPoint2: CGPoint(x: 52.6, y: 12.61))
        textPath.addCurve(to: CGPoint(x: 53.92, y: 12.28), controlPoint1: CGPoint(x: 53.2, y: 12.35), controlPoint2: CGPoint(x: 53.54, y: 12.28))
        textPath.addCurve(to: CGPoint(x: 54.91, y: 12.48), controlPoint1: CGPoint(x: 54.28, y: 12.28), controlPoint2: CGPoint(x: 54.61, y: 12.35))
        textPath.addCurve(to: CGPoint(x: 55.69, y: 13), controlPoint1: CGPoint(x: 55.21, y: 12.61), controlPoint2: CGPoint(x: 55.47, y: 12.78))
        textPath.addCurve(to: CGPoint(x: 56.22, y: 13.8), controlPoint1: CGPoint(x: 55.91, y: 13.23), controlPoint2: CGPoint(x: 56.09, y: 13.49))
        textPath.addCurve(to: CGPoint(x: 56.45, y: 14.76), controlPoint1: CGPoint(x: 56.35, y: 14.1), controlPoint2: CGPoint(x: 56.43, y: 14.42))
        textPath.close()
        textPath.move(to: CGPoint(x: 57.84, y: 17.21))
        textPath.addLine(to: CGPoint(x: 56.42, y: 17.21))
        textPath.addCurve(to: CGPoint(x: 55.64, y: 18.5), controlPoint1: CGPoint(x: 56.29, y: 17.79), controlPoint2: CGPoint(x: 56.03, y: 18.22))
        textPath.addCurve(to: CGPoint(x: 54.14, y: 18.93), controlPoint1: CGPoint(x: 55.25, y: 18.79), controlPoint2: CGPoint(x: 54.75, y: 18.93))
        textPath.addCurve(to: CGPoint(x: 52.9, y: 18.69), controlPoint1: CGPoint(x: 53.66, y: 18.93), controlPoint2: CGPoint(x: 53.25, y: 18.85))
        textPath.addCurve(to: CGPoint(x: 52.03, y: 18.05), controlPoint1: CGPoint(x: 52.54, y: 18.53), controlPoint2: CGPoint(x: 52.26, y: 18.32))
        textPath.addCurve(to: CGPoint(x: 51.54, y: 17.14), controlPoint1: CGPoint(x: 51.8, y: 17.79), controlPoint2: CGPoint(x: 51.64, y: 17.48))
        textPath.addCurve(to: CGPoint(x: 51.4, y: 16.04), controlPoint1: CGPoint(x: 51.43, y: 16.79), controlPoint2: CGPoint(x: 51.39, y: 16.42))
        textPath.addLine(to: CGPoint(x: 57.98, y: 16.04))
        textPath.addCurve(to: CGPoint(x: 57.83, y: 14.36), controlPoint1: CGPoint(x: 58, y: 15.51), controlPoint2: CGPoint(x: 57.95, y: 14.95))
        textPath.addCurve(to: CGPoint(x: 57.19, y: 12.72), controlPoint1: CGPoint(x: 57.72, y: 13.77), controlPoint2: CGPoint(x: 57.5, y: 13.22))
        textPath.addCurve(to: CGPoint(x: 55.95, y: 11.49), controlPoint1: CGPoint(x: 56.88, y: 12.23), controlPoint2: CGPoint(x: 56.46, y: 11.81))
        textPath.addCurve(to: CGPoint(x: 54, y: 11.01), controlPoint1: CGPoint(x: 55.43, y: 11.17), controlPoint2: CGPoint(x: 54.78, y: 11.01))
        textPath.addCurve(to: CGPoint(x: 52.34, y: 11.35), controlPoint1: CGPoint(x: 53.4, y: 11.01), controlPoint2: CGPoint(x: 52.85, y: 11.12))
        textPath.addCurve(to: CGPoint(x: 51.03, y: 12.3), controlPoint1: CGPoint(x: 51.84, y: 11.57), controlPoint2: CGPoint(x: 51.4, y: 11.89))
        textPath.addCurve(to: CGPoint(x: 50.18, y: 13.74), controlPoint1: CGPoint(x: 50.67, y: 12.71), controlPoint2: CGPoint(x: 50.38, y: 13.19))
        textPath.addCurve(to: CGPoint(x: 49.87, y: 15.58), controlPoint1: CGPoint(x: 49.97, y: 14.3), controlPoint2: CGPoint(x: 49.87, y: 14.91))
        textPath.addCurve(to: CGPoint(x: 50.17, y: 17.43), controlPoint1: CGPoint(x: 49.89, y: 16.25), controlPoint2: CGPoint(x: 49.99, y: 16.87))
        textPath.addCurve(to: CGPoint(x: 50.96, y: 18.89), controlPoint1: CGPoint(x: 50.34, y: 18), controlPoint2: CGPoint(x: 50.61, y: 18.49))
        textPath.addCurve(to: CGPoint(x: 52.26, y: 19.85), controlPoint1: CGPoint(x: 51.31, y: 19.3), controlPoint2: CGPoint(x: 51.74, y: 19.62))
        textPath.addCurve(to: CGPoint(x: 54.09, y: 20.19), controlPoint1: CGPoint(x: 52.77, y: 20.07), controlPoint2: CGPoint(x: 53.38, y: 20.19))
        textPath.addCurve(to: CGPoint(x: 56.57, y: 19.44), controlPoint1: CGPoint(x: 55.08, y: 20.19), controlPoint2: CGPoint(x: 55.91, y: 19.94))
        textPath.addCurve(to: CGPoint(x: 57.84, y: 17.21), controlPoint1: CGPoint(x: 57.23, y: 18.94), controlPoint2: CGPoint(x: 57.65, y: 18.2))
        textPath.close()
        UIColor.white.setFill()
        textPath.fill()
    }

    @objc dynamic public class func drawOvertimeCircle(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor6 = UIColor(red: 0.201, green: 0.302, blue: 0.538, alpha: 1.000)
        let gradient8Color = UIColor(red: 0.330, green: 0.468, blue: 0.787, alpha: 1.000)

        //// Gradient Declarations
        let gradient8 = CGGradient(colorsSpace: nil, colors: [gradient8Color.cgColor, fillColor6.cgColor] as CFArray, locations: [0, 1])!

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 100, y: 158.51))
        bezierPath.addCurve(to: CGPoint(x: 41.49, y: 100), controlPoint1: CGPoint(x: 67.69, y: 158.51), controlPoint2: CGPoint(x: 41.49, y: 132.31))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 41.49), controlPoint1: CGPoint(x: 41.49, y: 67.69), controlPoint2: CGPoint(x: 67.69, y: 41.49))
        bezierPath.addCurve(to: CGPoint(x: 158.51, y: 100), controlPoint1: CGPoint(x: 132.31, y: 41.49), controlPoint2: CGPoint(x: 158.51, y: 67.69))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 158.51), controlPoint1: CGPoint(x: 158.51, y: 132.31), controlPoint2: CGPoint(x: 132.31, y: 158.51))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 100, y: 26.86))
        bezierPath.addCurve(to: CGPoint(x: 26.86, y: 100), controlPoint1: CGPoint(x: 59.61, y: 26.86), controlPoint2: CGPoint(x: 26.86, y: 59.61))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 173.14), controlPoint1: CGPoint(x: 26.86, y: 140.39), controlPoint2: CGPoint(x: 59.61, y: 173.14))
        bezierPath.addCurve(to: CGPoint(x: 173.14, y: 100), controlPoint1: CGPoint(x: 140.39, y: 173.14), controlPoint2: CGPoint(x: 173.14, y: 140.39))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 26.86), controlPoint1: CGPoint(x: 173.14, y: 59.61), controlPoint2: CGPoint(x: 140.39, y: 26.86))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(gradient8, start: CGPoint(x: 100, y: 26.86), end: CGPoint(x: 100, y: 173.14), options: [])
        context.restoreGState()


        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: 49.6, y: 49.6, width: 100.8, height: 100.8))
        context.saveGState()
        ovalPath.addClip()
        context.drawLinearGradient(ButtonsForFJ092018.gradientForBox, start: CGPoint(x: 100, y: 49.6), end: CGPoint(x: 100, y: 150.4), options: [])
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawInComplete2(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 100, y: 158.51))
        bezierPath.addCurve(to: CGPoint(x: 41.49, y: 100), controlPoint1: CGPoint(x: 67.69, y: 158.51), controlPoint2: CGPoint(x: 41.49, y: 132.31))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 41.49), controlPoint1: CGPoint(x: 41.49, y: 67.69), controlPoint2: CGPoint(x: 67.69, y: 41.49))
        bezierPath.addCurve(to: CGPoint(x: 158.51, y: 100), controlPoint1: CGPoint(x: 132.31, y: 41.49), controlPoint2: CGPoint(x: 158.51, y: 67.69))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 158.51), controlPoint1: CGPoint(x: 158.51, y: 132.31), controlPoint2: CGPoint(x: 132.31, y: 158.51))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 100, y: 26.86))
        bezierPath.addCurve(to: CGPoint(x: 26.86, y: 100), controlPoint1: CGPoint(x: 59.61, y: 26.86), controlPoint2: CGPoint(x: 26.86, y: 59.61))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 173.14), controlPoint1: CGPoint(x: 26.86, y: 140.39), controlPoint2: CGPoint(x: 59.61, y: 173.14))
        bezierPath.addCurve(to: CGPoint(x: 173.14, y: 100), controlPoint1: CGPoint(x: 140.39, y: 173.14), controlPoint2: CGPoint(x: 173.14, y: 140.39))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 26.86), controlPoint1: CGPoint(x: 173.14, y: 59.61), controlPoint2: CGPoint(x: 140.39, y: 26.86))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(ButtonsForFJ092018.gradient9, start: CGPoint(x: 100, y: 26.86), end: CGPoint(x: 100, y: 173.14), options: [])
        context.restoreGState()


        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: 49.6, y: 49.6, width: 100.8, height: 100.8))
        context.saveGState()
        ovalPath.addClip()
        context.drawLinearGradient(ButtonsForFJ092018.gradient9, start: CGPoint(x: 100, y: 49.6), end: CGPoint(x: 100, y: 150.4), options: [])
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawOvertimeCircleSmall() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: 30, height: 30)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawOvertimeCircle(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawDefaultCircleSmall() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: 30, height: 30)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawInComplete2(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawHighlightEdit() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!


        //// Gradient Declarations
        let gradient11 = CGGradient(colorsSpace: nil, colors: [ButtonsForFJ092018.blueGradientColor2.cgColor, ButtonsForFJ092018.gradientForBoxColor2.cgColor] as CFArray, locations: [0, 1])!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 80, height: 30))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(gradient11, start: CGPoint(x: 40, y: -0), end: CGPoint(x: 40, y: 30), options: [])
        context.restoreGState()


        //// Text 3 Drawing
        let text3Path = UIBezierPath()
        text3Path.move(to: CGPoint(x: 29.54, y: 15.28))
        text3Path.addLine(to: CGPoint(x: 31.48, y: 9.95))
        text3Path.addLine(to: CGPoint(x: 31.51, y: 9.95))
        text3Path.addLine(to: CGPoint(x: 33.42, y: 15.28))
        text3Path.addLine(to: CGPoint(x: 29.54, y: 15.28))
        text3Path.close()
        text3Path.move(to: CGPoint(x: 30.68, y: 8.58))
        text3Path.addLine(to: CGPoint(x: 26.23, y: 20))
        text3Path.addLine(to: CGPoint(x: 27.78, y: 20))
        text3Path.addLine(to: CGPoint(x: 29.06, y: 16.56))
        text3Path.addLine(to: CGPoint(x: 33.9, y: 16.56))
        text3Path.addLine(to: CGPoint(x: 35.14, y: 20))
        text3Path.addLine(to: CGPoint(x: 36.82, y: 20))
        text3Path.addLine(to: CGPoint(x: 32.36, y: 8.58))
        text3Path.addLine(to: CGPoint(x: 30.68, y: 8.58))
        text3Path.close()
        text3Path.move(to: CGPoint(x: 38.71, y: 15.94))
        text3Path.addCurve(to: CGPoint(x: 38.84, y: 14.75), controlPoint1: CGPoint(x: 38.71, y: 15.53), controlPoint2: CGPoint(x: 38.75, y: 15.14))
        text3Path.addCurve(to: CGPoint(x: 39.26, y: 13.73), controlPoint1: CGPoint(x: 38.93, y: 14.37), controlPoint2: CGPoint(x: 39.06, y: 14.03))
        text3Path.addCurve(to: CGPoint(x: 40.02, y: 13.01), controlPoint1: CGPoint(x: 39.45, y: 13.43), controlPoint2: CGPoint(x: 39.7, y: 13.19))
        text3Path.addCurve(to: CGPoint(x: 41.19, y: 12.74), controlPoint1: CGPoint(x: 40.34, y: 12.83), controlPoint2: CGPoint(x: 40.73, y: 12.74))
        text3Path.addCurve(to: CGPoint(x: 42.39, y: 13), controlPoint1: CGPoint(x: 41.66, y: 12.74), controlPoint2: CGPoint(x: 42.06, y: 12.82))
        text3Path.addCurve(to: CGPoint(x: 43.2, y: 13.7), controlPoint1: CGPoint(x: 42.72, y: 13.18), controlPoint2: CGPoint(x: 42.99, y: 13.41))
        text3Path.addCurve(to: CGPoint(x: 43.66, y: 14.7), controlPoint1: CGPoint(x: 43.41, y: 13.98), controlPoint2: CGPoint(x: 43.56, y: 14.32))
        text3Path.addCurve(to: CGPoint(x: 43.8, y: 15.87), controlPoint1: CGPoint(x: 43.75, y: 15.07), controlPoint2: CGPoint(x: 43.8, y: 15.47))
        text3Path.addCurve(to: CGPoint(x: 43.66, y: 17.01), controlPoint1: CGPoint(x: 43.8, y: 16.26), controlPoint2: CGPoint(x: 43.75, y: 16.63))
        text3Path.addCurve(to: CGPoint(x: 43.22, y: 18.01), controlPoint1: CGPoint(x: 43.57, y: 17.38), controlPoint2: CGPoint(x: 43.43, y: 17.71))
        text3Path.addCurve(to: CGPoint(x: 42.44, y: 18.72), controlPoint1: CGPoint(x: 43.02, y: 18.3), controlPoint2: CGPoint(x: 42.76, y: 18.54))
        text3Path.addCurve(to: CGPoint(x: 41.27, y: 18.99), controlPoint1: CGPoint(x: 42.12, y: 18.9), controlPoint2: CGPoint(x: 41.73, y: 18.99))
        text3Path.addCurve(to: CGPoint(x: 40.13, y: 18.74), controlPoint1: CGPoint(x: 40.83, y: 18.99), controlPoint2: CGPoint(x: 40.45, y: 18.91))
        text3Path.addCurve(to: CGPoint(x: 39.33, y: 18.05), controlPoint1: CGPoint(x: 39.8, y: 18.57), controlPoint2: CGPoint(x: 39.54, y: 18.34))
        text3Path.addCurve(to: CGPoint(x: 38.86, y: 17.06), controlPoint1: CGPoint(x: 39.12, y: 17.76), controlPoint2: CGPoint(x: 38.97, y: 17.43))
        text3Path.addCurve(to: CGPoint(x: 38.71, y: 15.94), controlPoint1: CGPoint(x: 38.76, y: 16.7), controlPoint2: CGPoint(x: 38.71, y: 16.32))
        text3Path.close()
        text3Path.move(to: CGPoint(x: 45.11, y: 20))
        text3Path.addLine(to: CGPoint(x: 45.11, y: 8.58))
        text3Path.addLine(to: CGPoint(x: 43.75, y: 8.58))
        text3Path.addLine(to: CGPoint(x: 43.75, y: 12.83))
        text3Path.addLine(to: CGPoint(x: 43.72, y: 12.83))
        text3Path.addCurve(to: CGPoint(x: 43.17, y: 12.22), controlPoint1: CGPoint(x: 43.57, y: 12.59), controlPoint2: CGPoint(x: 43.39, y: 12.38))
        text3Path.addCurve(to: CGPoint(x: 42.47, y: 11.82), controlPoint1: CGPoint(x: 42.95, y: 12.05), controlPoint2: CGPoint(x: 42.72, y: 11.92))
        text3Path.addCurve(to: CGPoint(x: 41.74, y: 11.6), controlPoint1: CGPoint(x: 42.23, y: 11.71), controlPoint2: CGPoint(x: 41.98, y: 11.64))
        text3Path.addCurve(to: CGPoint(x: 41.05, y: 11.54), controlPoint1: CGPoint(x: 41.49, y: 11.56), controlPoint2: CGPoint(x: 41.26, y: 11.54))
        text3Path.addCurve(to: CGPoint(x: 39.39, y: 11.88), controlPoint1: CGPoint(x: 40.42, y: 11.54), controlPoint2: CGPoint(x: 39.87, y: 11.65))
        text3Path.addCurve(to: CGPoint(x: 38.21, y: 12.81), controlPoint1: CGPoint(x: 38.92, y: 12.11), controlPoint2: CGPoint(x: 38.52, y: 12.42))
        text3Path.addCurve(to: CGPoint(x: 37.5, y: 14.18), controlPoint1: CGPoint(x: 37.89, y: 13.2), controlPoint2: CGPoint(x: 37.66, y: 13.65))
        text3Path.addCurve(to: CGPoint(x: 37.27, y: 15.84), controlPoint1: CGPoint(x: 37.35, y: 14.7), controlPoint2: CGPoint(x: 37.27, y: 15.25))
        text3Path.addCurve(to: CGPoint(x: 37.51, y: 17.5), controlPoint1: CGPoint(x: 37.27, y: 16.43), controlPoint2: CGPoint(x: 37.35, y: 16.98))
        text3Path.addCurve(to: CGPoint(x: 38.22, y: 18.88), controlPoint1: CGPoint(x: 37.67, y: 18.03), controlPoint2: CGPoint(x: 37.91, y: 18.49))
        text3Path.addCurve(to: CGPoint(x: 39.41, y: 19.82), controlPoint1: CGPoint(x: 38.54, y: 19.27), controlPoint2: CGPoint(x: 38.93, y: 19.59))
        text3Path.addCurve(to: CGPoint(x: 41.08, y: 20.18), controlPoint1: CGPoint(x: 39.88, y: 20.06), controlPoint2: CGPoint(x: 40.44, y: 20.18))
        text3Path.addCurve(to: CGPoint(x: 42.66, y: 19.87), controlPoint1: CGPoint(x: 41.66, y: 20.18), controlPoint2: CGPoint(x: 42.18, y: 20.07))
        text3Path.addCurve(to: CGPoint(x: 43.72, y: 18.88), controlPoint1: CGPoint(x: 43.14, y: 19.67), controlPoint2: CGPoint(x: 43.5, y: 19.34))
        text3Path.addLine(to: CGPoint(x: 43.75, y: 18.88))
        text3Path.addLine(to: CGPoint(x: 43.75, y: 20))
        text3Path.addLine(to: CGPoint(x: 45.11, y: 20))
        text3Path.close()
        text3Path.move(to: CGPoint(x: 48.2, y: 15.94))
        text3Path.addCurve(to: CGPoint(x: 48.33, y: 14.75), controlPoint1: CGPoint(x: 48.2, y: 15.53), controlPoint2: CGPoint(x: 48.24, y: 15.14))
        text3Path.addCurve(to: CGPoint(x: 48.74, y: 13.73), controlPoint1: CGPoint(x: 48.41, y: 14.37), controlPoint2: CGPoint(x: 48.55, y: 14.03))
        text3Path.addCurve(to: CGPoint(x: 49.51, y: 13.01), controlPoint1: CGPoint(x: 48.94, y: 13.43), controlPoint2: CGPoint(x: 49.19, y: 13.19))
        text3Path.addCurve(to: CGPoint(x: 50.68, y: 12.74), controlPoint1: CGPoint(x: 49.83, y: 12.83), controlPoint2: CGPoint(x: 50.22, y: 12.74))
        text3Path.addCurve(to: CGPoint(x: 51.88, y: 13), controlPoint1: CGPoint(x: 51.15, y: 12.74), controlPoint2: CGPoint(x: 51.55, y: 12.82))
        text3Path.addCurve(to: CGPoint(x: 52.69, y: 13.7), controlPoint1: CGPoint(x: 52.21, y: 13.18), controlPoint2: CGPoint(x: 52.48, y: 13.41))
        text3Path.addCurve(to: CGPoint(x: 53.14, y: 14.7), controlPoint1: CGPoint(x: 52.9, y: 13.98), controlPoint2: CGPoint(x: 53.05, y: 14.32))
        text3Path.addCurve(to: CGPoint(x: 53.29, y: 15.87), controlPoint1: CGPoint(x: 53.24, y: 15.07), controlPoint2: CGPoint(x: 53.29, y: 15.47))
        text3Path.addCurve(to: CGPoint(x: 53.15, y: 17.01), controlPoint1: CGPoint(x: 53.29, y: 16.26), controlPoint2: CGPoint(x: 53.24, y: 16.63))
        text3Path.addCurve(to: CGPoint(x: 52.71, y: 18.01), controlPoint1: CGPoint(x: 53.06, y: 17.38), controlPoint2: CGPoint(x: 52.91, y: 17.71))
        text3Path.addCurve(to: CGPoint(x: 51.93, y: 18.72), controlPoint1: CGPoint(x: 52.51, y: 18.3), controlPoint2: CGPoint(x: 52.25, y: 18.54))
        text3Path.addCurve(to: CGPoint(x: 50.76, y: 18.99), controlPoint1: CGPoint(x: 51.61, y: 18.9), controlPoint2: CGPoint(x: 51.22, y: 18.99))
        text3Path.addCurve(to: CGPoint(x: 49.62, y: 18.74), controlPoint1: CGPoint(x: 50.32, y: 18.99), controlPoint2: CGPoint(x: 49.94, y: 18.91))
        text3Path.addCurve(to: CGPoint(x: 48.82, y: 18.05), controlPoint1: CGPoint(x: 49.29, y: 18.57), controlPoint2: CGPoint(x: 49.02, y: 18.34))
        text3Path.addCurve(to: CGPoint(x: 48.35, y: 17.06), controlPoint1: CGPoint(x: 48.61, y: 17.76), controlPoint2: CGPoint(x: 48.45, y: 17.43))
        text3Path.addCurve(to: CGPoint(x: 48.2, y: 15.94), controlPoint1: CGPoint(x: 48.25, y: 16.7), controlPoint2: CGPoint(x: 48.2, y: 16.32))
        text3Path.close()
        text3Path.move(to: CGPoint(x: 54.6, y: 20))
        text3Path.addLine(to: CGPoint(x: 54.6, y: 8.58))
        text3Path.addLine(to: CGPoint(x: 53.24, y: 8.58))
        text3Path.addLine(to: CGPoint(x: 53.24, y: 12.83))
        text3Path.addLine(to: CGPoint(x: 53.21, y: 12.83))
        text3Path.addCurve(to: CGPoint(x: 52.66, y: 12.22), controlPoint1: CGPoint(x: 53.06, y: 12.59), controlPoint2: CGPoint(x: 52.87, y: 12.38))
        text3Path.addCurve(to: CGPoint(x: 51.96, y: 11.82), controlPoint1: CGPoint(x: 52.44, y: 12.05), controlPoint2: CGPoint(x: 52.21, y: 11.92))
        text3Path.addCurve(to: CGPoint(x: 51.22, y: 11.6), controlPoint1: CGPoint(x: 51.71, y: 11.71), controlPoint2: CGPoint(x: 51.47, y: 11.64))
        text3Path.addCurve(to: CGPoint(x: 50.54, y: 11.54), controlPoint1: CGPoint(x: 50.98, y: 11.56), controlPoint2: CGPoint(x: 50.75, y: 11.54))
        text3Path.addCurve(to: CGPoint(x: 48.88, y: 11.88), controlPoint1: CGPoint(x: 49.91, y: 11.54), controlPoint2: CGPoint(x: 49.35, y: 11.65))
        text3Path.addCurve(to: CGPoint(x: 47.7, y: 12.81), controlPoint1: CGPoint(x: 48.41, y: 12.11), controlPoint2: CGPoint(x: 48.01, y: 12.42))
        text3Path.addCurve(to: CGPoint(x: 46.99, y: 14.18), controlPoint1: CGPoint(x: 47.38, y: 13.2), controlPoint2: CGPoint(x: 47.15, y: 13.65))
        text3Path.addCurve(to: CGPoint(x: 46.76, y: 15.84), controlPoint1: CGPoint(x: 46.84, y: 14.7), controlPoint2: CGPoint(x: 46.76, y: 15.25))
        text3Path.addCurve(to: CGPoint(x: 47, y: 17.5), controlPoint1: CGPoint(x: 46.76, y: 16.43), controlPoint2: CGPoint(x: 46.84, y: 16.98))
        text3Path.addCurve(to: CGPoint(x: 47.71, y: 18.88), controlPoint1: CGPoint(x: 47.16, y: 18.03), controlPoint2: CGPoint(x: 47.4, y: 18.49))
        text3Path.addCurve(to: CGPoint(x: 48.9, y: 19.82), controlPoint1: CGPoint(x: 48.03, y: 19.27), controlPoint2: CGPoint(x: 48.42, y: 19.59))
        text3Path.addCurve(to: CGPoint(x: 50.57, y: 20.18), controlPoint1: CGPoint(x: 49.37, y: 20.06), controlPoint2: CGPoint(x: 49.93, y: 20.18))
        text3Path.addCurve(to: CGPoint(x: 52.15, y: 19.87), controlPoint1: CGPoint(x: 51.14, y: 20.18), controlPoint2: CGPoint(x: 51.67, y: 20.07))
        text3Path.addCurve(to: CGPoint(x: 53.21, y: 18.88), controlPoint1: CGPoint(x: 52.63, y: 19.67), controlPoint2: CGPoint(x: 52.98, y: 19.34))
        text3Path.addLine(to: CGPoint(x: 53.24, y: 18.88))
        text3Path.addLine(to: CGPoint(x: 53.24, y: 20))
        text3Path.addLine(to: CGPoint(x: 54.6, y: 20))
        text3Path.close()
        UIColor.white.setFill()
        text3Path.fill()
    }

    @objc dynamic public class func drawNormalEdit() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 80, height: 30))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(ButtonsForFJ092018.gradientForBox, start: CGPoint(x: 40, y: -0), end: CGPoint(x: 40, y: 30), options: [])
        context.restoreGState()


        //// Text 3 Drawing
        let text3Path = UIBezierPath()
        text3Path.move(to: CGPoint(x: 29.54, y: 15.28))
        text3Path.addLine(to: CGPoint(x: 31.48, y: 9.95))
        text3Path.addLine(to: CGPoint(x: 31.51, y: 9.95))
        text3Path.addLine(to: CGPoint(x: 33.42, y: 15.28))
        text3Path.addLine(to: CGPoint(x: 29.54, y: 15.28))
        text3Path.close()
        text3Path.move(to: CGPoint(x: 30.68, y: 8.58))
        text3Path.addLine(to: CGPoint(x: 26.23, y: 20))
        text3Path.addLine(to: CGPoint(x: 27.78, y: 20))
        text3Path.addLine(to: CGPoint(x: 29.06, y: 16.56))
        text3Path.addLine(to: CGPoint(x: 33.9, y: 16.56))
        text3Path.addLine(to: CGPoint(x: 35.14, y: 20))
        text3Path.addLine(to: CGPoint(x: 36.82, y: 20))
        text3Path.addLine(to: CGPoint(x: 32.36, y: 8.58))
        text3Path.addLine(to: CGPoint(x: 30.68, y: 8.58))
        text3Path.close()
        text3Path.move(to: CGPoint(x: 38.71, y: 15.94))
        text3Path.addCurve(to: CGPoint(x: 38.84, y: 14.75), controlPoint1: CGPoint(x: 38.71, y: 15.53), controlPoint2: CGPoint(x: 38.75, y: 15.14))
        text3Path.addCurve(to: CGPoint(x: 39.26, y: 13.73), controlPoint1: CGPoint(x: 38.93, y: 14.37), controlPoint2: CGPoint(x: 39.06, y: 14.03))
        text3Path.addCurve(to: CGPoint(x: 40.02, y: 13.01), controlPoint1: CGPoint(x: 39.45, y: 13.43), controlPoint2: CGPoint(x: 39.7, y: 13.19))
        text3Path.addCurve(to: CGPoint(x: 41.19, y: 12.74), controlPoint1: CGPoint(x: 40.34, y: 12.83), controlPoint2: CGPoint(x: 40.73, y: 12.74))
        text3Path.addCurve(to: CGPoint(x: 42.39, y: 13), controlPoint1: CGPoint(x: 41.66, y: 12.74), controlPoint2: CGPoint(x: 42.06, y: 12.82))
        text3Path.addCurve(to: CGPoint(x: 43.2, y: 13.7), controlPoint1: CGPoint(x: 42.72, y: 13.18), controlPoint2: CGPoint(x: 42.99, y: 13.41))
        text3Path.addCurve(to: CGPoint(x: 43.66, y: 14.7), controlPoint1: CGPoint(x: 43.41, y: 13.98), controlPoint2: CGPoint(x: 43.56, y: 14.32))
        text3Path.addCurve(to: CGPoint(x: 43.8, y: 15.87), controlPoint1: CGPoint(x: 43.75, y: 15.07), controlPoint2: CGPoint(x: 43.8, y: 15.47))
        text3Path.addCurve(to: CGPoint(x: 43.66, y: 17.01), controlPoint1: CGPoint(x: 43.8, y: 16.26), controlPoint2: CGPoint(x: 43.75, y: 16.63))
        text3Path.addCurve(to: CGPoint(x: 43.22, y: 18.01), controlPoint1: CGPoint(x: 43.57, y: 17.38), controlPoint2: CGPoint(x: 43.43, y: 17.71))
        text3Path.addCurve(to: CGPoint(x: 42.44, y: 18.72), controlPoint1: CGPoint(x: 43.02, y: 18.3), controlPoint2: CGPoint(x: 42.76, y: 18.54))
        text3Path.addCurve(to: CGPoint(x: 41.27, y: 18.99), controlPoint1: CGPoint(x: 42.12, y: 18.9), controlPoint2: CGPoint(x: 41.73, y: 18.99))
        text3Path.addCurve(to: CGPoint(x: 40.13, y: 18.74), controlPoint1: CGPoint(x: 40.83, y: 18.99), controlPoint2: CGPoint(x: 40.45, y: 18.91))
        text3Path.addCurve(to: CGPoint(x: 39.33, y: 18.05), controlPoint1: CGPoint(x: 39.8, y: 18.57), controlPoint2: CGPoint(x: 39.54, y: 18.34))
        text3Path.addCurve(to: CGPoint(x: 38.86, y: 17.06), controlPoint1: CGPoint(x: 39.12, y: 17.76), controlPoint2: CGPoint(x: 38.97, y: 17.43))
        text3Path.addCurve(to: CGPoint(x: 38.71, y: 15.94), controlPoint1: CGPoint(x: 38.76, y: 16.7), controlPoint2: CGPoint(x: 38.71, y: 16.32))
        text3Path.close()
        text3Path.move(to: CGPoint(x: 45.11, y: 20))
        text3Path.addLine(to: CGPoint(x: 45.11, y: 8.58))
        text3Path.addLine(to: CGPoint(x: 43.75, y: 8.58))
        text3Path.addLine(to: CGPoint(x: 43.75, y: 12.83))
        text3Path.addLine(to: CGPoint(x: 43.72, y: 12.83))
        text3Path.addCurve(to: CGPoint(x: 43.17, y: 12.22), controlPoint1: CGPoint(x: 43.57, y: 12.59), controlPoint2: CGPoint(x: 43.39, y: 12.38))
        text3Path.addCurve(to: CGPoint(x: 42.47, y: 11.82), controlPoint1: CGPoint(x: 42.95, y: 12.05), controlPoint2: CGPoint(x: 42.72, y: 11.92))
        text3Path.addCurve(to: CGPoint(x: 41.74, y: 11.6), controlPoint1: CGPoint(x: 42.23, y: 11.71), controlPoint2: CGPoint(x: 41.98, y: 11.64))
        text3Path.addCurve(to: CGPoint(x: 41.05, y: 11.54), controlPoint1: CGPoint(x: 41.49, y: 11.56), controlPoint2: CGPoint(x: 41.26, y: 11.54))
        text3Path.addCurve(to: CGPoint(x: 39.39, y: 11.88), controlPoint1: CGPoint(x: 40.42, y: 11.54), controlPoint2: CGPoint(x: 39.87, y: 11.65))
        text3Path.addCurve(to: CGPoint(x: 38.21, y: 12.81), controlPoint1: CGPoint(x: 38.92, y: 12.11), controlPoint2: CGPoint(x: 38.52, y: 12.42))
        text3Path.addCurve(to: CGPoint(x: 37.5, y: 14.18), controlPoint1: CGPoint(x: 37.89, y: 13.2), controlPoint2: CGPoint(x: 37.66, y: 13.65))
        text3Path.addCurve(to: CGPoint(x: 37.27, y: 15.84), controlPoint1: CGPoint(x: 37.35, y: 14.7), controlPoint2: CGPoint(x: 37.27, y: 15.25))
        text3Path.addCurve(to: CGPoint(x: 37.51, y: 17.5), controlPoint1: CGPoint(x: 37.27, y: 16.43), controlPoint2: CGPoint(x: 37.35, y: 16.98))
        text3Path.addCurve(to: CGPoint(x: 38.22, y: 18.88), controlPoint1: CGPoint(x: 37.67, y: 18.03), controlPoint2: CGPoint(x: 37.91, y: 18.49))
        text3Path.addCurve(to: CGPoint(x: 39.41, y: 19.82), controlPoint1: CGPoint(x: 38.54, y: 19.27), controlPoint2: CGPoint(x: 38.93, y: 19.59))
        text3Path.addCurve(to: CGPoint(x: 41.08, y: 20.18), controlPoint1: CGPoint(x: 39.88, y: 20.06), controlPoint2: CGPoint(x: 40.44, y: 20.18))
        text3Path.addCurve(to: CGPoint(x: 42.66, y: 19.87), controlPoint1: CGPoint(x: 41.66, y: 20.18), controlPoint2: CGPoint(x: 42.18, y: 20.07))
        text3Path.addCurve(to: CGPoint(x: 43.72, y: 18.88), controlPoint1: CGPoint(x: 43.14, y: 19.67), controlPoint2: CGPoint(x: 43.5, y: 19.34))
        text3Path.addLine(to: CGPoint(x: 43.75, y: 18.88))
        text3Path.addLine(to: CGPoint(x: 43.75, y: 20))
        text3Path.addLine(to: CGPoint(x: 45.11, y: 20))
        text3Path.close()
        text3Path.move(to: CGPoint(x: 48.2, y: 15.94))
        text3Path.addCurve(to: CGPoint(x: 48.33, y: 14.75), controlPoint1: CGPoint(x: 48.2, y: 15.53), controlPoint2: CGPoint(x: 48.24, y: 15.14))
        text3Path.addCurve(to: CGPoint(x: 48.74, y: 13.73), controlPoint1: CGPoint(x: 48.41, y: 14.37), controlPoint2: CGPoint(x: 48.55, y: 14.03))
        text3Path.addCurve(to: CGPoint(x: 49.51, y: 13.01), controlPoint1: CGPoint(x: 48.94, y: 13.43), controlPoint2: CGPoint(x: 49.19, y: 13.19))
        text3Path.addCurve(to: CGPoint(x: 50.68, y: 12.74), controlPoint1: CGPoint(x: 49.83, y: 12.83), controlPoint2: CGPoint(x: 50.22, y: 12.74))
        text3Path.addCurve(to: CGPoint(x: 51.88, y: 13), controlPoint1: CGPoint(x: 51.15, y: 12.74), controlPoint2: CGPoint(x: 51.55, y: 12.82))
        text3Path.addCurve(to: CGPoint(x: 52.69, y: 13.7), controlPoint1: CGPoint(x: 52.21, y: 13.18), controlPoint2: CGPoint(x: 52.48, y: 13.41))
        text3Path.addCurve(to: CGPoint(x: 53.14, y: 14.7), controlPoint1: CGPoint(x: 52.9, y: 13.98), controlPoint2: CGPoint(x: 53.05, y: 14.32))
        text3Path.addCurve(to: CGPoint(x: 53.29, y: 15.87), controlPoint1: CGPoint(x: 53.24, y: 15.07), controlPoint2: CGPoint(x: 53.29, y: 15.47))
        text3Path.addCurve(to: CGPoint(x: 53.15, y: 17.01), controlPoint1: CGPoint(x: 53.29, y: 16.26), controlPoint2: CGPoint(x: 53.24, y: 16.63))
        text3Path.addCurve(to: CGPoint(x: 52.71, y: 18.01), controlPoint1: CGPoint(x: 53.06, y: 17.38), controlPoint2: CGPoint(x: 52.91, y: 17.71))
        text3Path.addCurve(to: CGPoint(x: 51.93, y: 18.72), controlPoint1: CGPoint(x: 52.51, y: 18.3), controlPoint2: CGPoint(x: 52.25, y: 18.54))
        text3Path.addCurve(to: CGPoint(x: 50.76, y: 18.99), controlPoint1: CGPoint(x: 51.61, y: 18.9), controlPoint2: CGPoint(x: 51.22, y: 18.99))
        text3Path.addCurve(to: CGPoint(x: 49.62, y: 18.74), controlPoint1: CGPoint(x: 50.32, y: 18.99), controlPoint2: CGPoint(x: 49.94, y: 18.91))
        text3Path.addCurve(to: CGPoint(x: 48.82, y: 18.05), controlPoint1: CGPoint(x: 49.29, y: 18.57), controlPoint2: CGPoint(x: 49.02, y: 18.34))
        text3Path.addCurve(to: CGPoint(x: 48.35, y: 17.06), controlPoint1: CGPoint(x: 48.61, y: 17.76), controlPoint2: CGPoint(x: 48.45, y: 17.43))
        text3Path.addCurve(to: CGPoint(x: 48.2, y: 15.94), controlPoint1: CGPoint(x: 48.25, y: 16.7), controlPoint2: CGPoint(x: 48.2, y: 16.32))
        text3Path.close()
        text3Path.move(to: CGPoint(x: 54.6, y: 20))
        text3Path.addLine(to: CGPoint(x: 54.6, y: 8.58))
        text3Path.addLine(to: CGPoint(x: 53.24, y: 8.58))
        text3Path.addLine(to: CGPoint(x: 53.24, y: 12.83))
        text3Path.addLine(to: CGPoint(x: 53.21, y: 12.83))
        text3Path.addCurve(to: CGPoint(x: 52.66, y: 12.22), controlPoint1: CGPoint(x: 53.06, y: 12.59), controlPoint2: CGPoint(x: 52.87, y: 12.38))
        text3Path.addCurve(to: CGPoint(x: 51.96, y: 11.82), controlPoint1: CGPoint(x: 52.44, y: 12.05), controlPoint2: CGPoint(x: 52.21, y: 11.92))
        text3Path.addCurve(to: CGPoint(x: 51.22, y: 11.6), controlPoint1: CGPoint(x: 51.71, y: 11.71), controlPoint2: CGPoint(x: 51.47, y: 11.64))
        text3Path.addCurve(to: CGPoint(x: 50.54, y: 11.54), controlPoint1: CGPoint(x: 50.98, y: 11.56), controlPoint2: CGPoint(x: 50.75, y: 11.54))
        text3Path.addCurve(to: CGPoint(x: 48.88, y: 11.88), controlPoint1: CGPoint(x: 49.91, y: 11.54), controlPoint2: CGPoint(x: 49.35, y: 11.65))
        text3Path.addCurve(to: CGPoint(x: 47.7, y: 12.81), controlPoint1: CGPoint(x: 48.41, y: 12.11), controlPoint2: CGPoint(x: 48.01, y: 12.42))
        text3Path.addCurve(to: CGPoint(x: 46.99, y: 14.18), controlPoint1: CGPoint(x: 47.38, y: 13.2), controlPoint2: CGPoint(x: 47.15, y: 13.65))
        text3Path.addCurve(to: CGPoint(x: 46.76, y: 15.84), controlPoint1: CGPoint(x: 46.84, y: 14.7), controlPoint2: CGPoint(x: 46.76, y: 15.25))
        text3Path.addCurve(to: CGPoint(x: 47, y: 17.5), controlPoint1: CGPoint(x: 46.76, y: 16.43), controlPoint2: CGPoint(x: 46.84, y: 16.98))
        text3Path.addCurve(to: CGPoint(x: 47.71, y: 18.88), controlPoint1: CGPoint(x: 47.16, y: 18.03), controlPoint2: CGPoint(x: 47.4, y: 18.49))
        text3Path.addCurve(to: CGPoint(x: 48.9, y: 19.82), controlPoint1: CGPoint(x: 48.03, y: 19.27), controlPoint2: CGPoint(x: 48.42, y: 19.59))
        text3Path.addCurve(to: CGPoint(x: 50.57, y: 20.18), controlPoint1: CGPoint(x: 49.37, y: 20.06), controlPoint2: CGPoint(x: 49.93, y: 20.18))
        text3Path.addCurve(to: CGPoint(x: 52.15, y: 19.87), controlPoint1: CGPoint(x: 51.14, y: 20.18), controlPoint2: CGPoint(x: 51.67, y: 20.07))
        text3Path.addCurve(to: CGPoint(x: 53.21, y: 18.88), controlPoint1: CGPoint(x: 52.63, y: 19.67), controlPoint2: CGPoint(x: 52.98, y: 19.34))
        text3Path.addLine(to: CGPoint(x: 53.24, y: 18.88))
        text3Path.addLine(to: CGPoint(x: 53.24, y: 20))
        text3Path.addLine(to: CGPoint(x: 54.6, y: 20))
        text3Path.close()
        UIColor.white.setFill()
        text3Path.fill()
    }

    @objc dynamic public class func drawDashboardForMaster() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: 80, height: 80)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawDashboardWhite(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawDashbaordWhiteIcon50() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: 50, height: 50)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawDashboardWhite(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawGreenDefault(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor39 = UIColor(red: 0.086, green: 0.439, blue: 0.185, alpha: 1.000)
        let gradient7Color = UIColor(red: 0.187, green: 0.746, blue: 0.344, alpha: 1.000)

        //// Gradient Declarations
        let gradient7 = CGGradient(colorsSpace: nil, colors: [gradient7Color.cgColor, fillColor39.cgColor] as CFArray, locations: [0, 1])!

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 100, y: 158.51))
        bezierPath.addCurve(to: CGPoint(x: 41.49, y: 100), controlPoint1: CGPoint(x: 67.69, y: 158.51), controlPoint2: CGPoint(x: 41.49, y: 132.31))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 41.49), controlPoint1: CGPoint(x: 41.49, y: 67.69), controlPoint2: CGPoint(x: 67.69, y: 41.49))
        bezierPath.addCurve(to: CGPoint(x: 158.51, y: 100), controlPoint1: CGPoint(x: 132.31, y: 41.49), controlPoint2: CGPoint(x: 158.51, y: 67.69))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 158.51), controlPoint1: CGPoint(x: 158.51, y: 132.31), controlPoint2: CGPoint(x: 132.31, y: 158.51))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 100, y: 26.86))
        bezierPath.addCurve(to: CGPoint(x: 26.86, y: 100), controlPoint1: CGPoint(x: 59.61, y: 26.86), controlPoint2: CGPoint(x: 26.86, y: 59.61))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 173.14), controlPoint1: CGPoint(x: 26.86, y: 140.39), controlPoint2: CGPoint(x: 59.61, y: 173.14))
        bezierPath.addCurve(to: CGPoint(x: 173.14, y: 100), controlPoint1: CGPoint(x: 140.39, y: 173.14), controlPoint2: CGPoint(x: 173.14, y: 140.39))
        bezierPath.addCurve(to: CGPoint(x: 100, y: 26.86), controlPoint1: CGPoint(x: 173.14, y: 59.61), controlPoint2: CGPoint(x: 140.39, y: 26.86))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(gradient7, start: CGPoint(x: 100, y: 26.86), end: CGPoint(x: 100, y: 173.14), options: [])
        context.restoreGState()


        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: 49.6, y: 49.6, width: 100.8, height: 100.8))
        context.saveGState()
        ovalPath.addClip()
        context.drawLinearGradient(gradient7, start: CGPoint(x: 100, y: 49.6), end: CGPoint(x: 100, y: 150.4), options: [])
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawDefaultGreenCircle() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: 30, height: 30)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawGreenDefault(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawSelectButtonUp() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 80, height: 30))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(ButtonsForFJ092018.gradientForBox, start: CGPoint(x: 40, y: -0), end: CGPoint(x: 40, y: 30), options: [])
        context.restoreGState()


        //// Text Drawing
        let textPath = UIBezierPath()
        textPath.move(to: CGPoint(x: 24.58, y: 11.41))
        textPath.addLine(to: CGPoint(x: 26.11, y: 11.41))
        textPath.addCurve(to: CGPoint(x: 25.73, y: 9.69), controlPoint1: CGPoint(x: 26.09, y: 10.75), controlPoint2: CGPoint(x: 25.96, y: 10.17))
        textPath.addCurve(to: CGPoint(x: 24.78, y: 8.49), controlPoint1: CGPoint(x: 25.5, y: 9.21), controlPoint2: CGPoint(x: 25.18, y: 8.81))
        textPath.addCurve(to: CGPoint(x: 23.37, y: 7.79), controlPoint1: CGPoint(x: 24.37, y: 8.17), controlPoint2: CGPoint(x: 23.91, y: 7.94))
        textPath.addCurve(to: CGPoint(x: 21.64, y: 7.57), controlPoint1: CGPoint(x: 22.84, y: 7.65), controlPoint2: CGPoint(x: 22.26, y: 7.57))
        textPath.addCurve(to: CGPoint(x: 20.02, y: 7.79), controlPoint1: CGPoint(x: 21.08, y: 7.57), controlPoint2: CGPoint(x: 20.54, y: 7.64))
        textPath.addCurve(to: CGPoint(x: 18.61, y: 8.43), controlPoint1: CGPoint(x: 19.49, y: 7.93), controlPoint2: CGPoint(x: 19.02, y: 8.14))
        textPath.addCurve(to: CGPoint(x: 17.61, y: 9.54), controlPoint1: CGPoint(x: 18.19, y: 8.72), controlPoint2: CGPoint(x: 17.86, y: 9.09))
        textPath.addCurve(to: CGPoint(x: 17.24, y: 11.13), controlPoint1: CGPoint(x: 17.36, y: 9.98), controlPoint2: CGPoint(x: 17.24, y: 10.51))
        textPath.addCurve(to: CGPoint(x: 17.57, y: 12.51), controlPoint1: CGPoint(x: 17.24, y: 11.68), controlPoint2: CGPoint(x: 17.35, y: 12.14))
        textPath.addCurve(to: CGPoint(x: 18.45, y: 13.41), controlPoint1: CGPoint(x: 17.79, y: 12.88), controlPoint2: CGPoint(x: 18.08, y: 13.18))
        textPath.addCurve(to: CGPoint(x: 19.7, y: 13.97), controlPoint1: CGPoint(x: 18.82, y: 13.64), controlPoint2: CGPoint(x: 19.24, y: 13.83))
        textPath.addCurve(to: CGPoint(x: 21.12, y: 14.35), controlPoint1: CGPoint(x: 20.17, y: 14.12), controlPoint2: CGPoint(x: 20.64, y: 14.24))
        textPath.addCurve(to: CGPoint(x: 22.54, y: 14.66), controlPoint1: CGPoint(x: 21.6, y: 14.46), controlPoint2: CGPoint(x: 22.08, y: 14.56))
        textPath.addCurve(to: CGPoint(x: 23.79, y: 15.06), controlPoint1: CGPoint(x: 23.01, y: 14.76), controlPoint2: CGPoint(x: 23.42, y: 14.9))
        textPath.addCurve(to: CGPoint(x: 24.67, y: 15.7), controlPoint1: CGPoint(x: 24.16, y: 15.23), controlPoint2: CGPoint(x: 24.45, y: 15.44))
        textPath.addCurve(to: CGPoint(x: 25.01, y: 16.72), controlPoint1: CGPoint(x: 24.9, y: 15.96), controlPoint2: CGPoint(x: 25.01, y: 16.3))
        textPath.addCurve(to: CGPoint(x: 24.73, y: 17.81), controlPoint1: CGPoint(x: 25.01, y: 17.16), controlPoint2: CGPoint(x: 24.92, y: 17.52))
        textPath.addCurve(to: CGPoint(x: 24.02, y: 18.48), controlPoint1: CGPoint(x: 24.55, y: 18.09), controlPoint2: CGPoint(x: 24.31, y: 18.31))
        textPath.addCurve(to: CGPoint(x: 23.03, y: 18.83), controlPoint1: CGPoint(x: 23.73, y: 18.64), controlPoint2: CGPoint(x: 23.39, y: 18.76))
        textPath.addCurve(to: CGPoint(x: 21.93, y: 18.93), controlPoint1: CGPoint(x: 22.66, y: 18.9), controlPoint2: CGPoint(x: 22.29, y: 18.93))
        textPath.addCurve(to: CGPoint(x: 20.6, y: 18.76), controlPoint1: CGPoint(x: 21.48, y: 18.93), controlPoint2: CGPoint(x: 21.03, y: 18.87))
        textPath.addCurve(to: CGPoint(x: 19.47, y: 18.23), controlPoint1: CGPoint(x: 20.17, y: 18.65), controlPoint2: CGPoint(x: 19.8, y: 18.47))
        textPath.addCurve(to: CGPoint(x: 18.69, y: 17.32), controlPoint1: CGPoint(x: 19.15, y: 17.99), controlPoint2: CGPoint(x: 18.89, y: 17.69))
        textPath.addCurve(to: CGPoint(x: 18.39, y: 16), controlPoint1: CGPoint(x: 18.49, y: 16.95), controlPoint2: CGPoint(x: 18.39, y: 16.52))
        textPath.addLine(to: CGPoint(x: 16.86, y: 16))
        textPath.addCurve(to: CGPoint(x: 17.26, y: 17.92), controlPoint1: CGPoint(x: 16.86, y: 16.74), controlPoint2: CGPoint(x: 17, y: 17.38))
        textPath.addCurve(to: CGPoint(x: 18.35, y: 19.24), controlPoint1: CGPoint(x: 17.53, y: 18.46), controlPoint2: CGPoint(x: 17.89, y: 18.9))
        textPath.addCurve(to: CGPoint(x: 19.95, y: 20.02), controlPoint1: CGPoint(x: 18.81, y: 19.59), controlPoint2: CGPoint(x: 19.34, y: 19.85))
        textPath.addCurve(to: CGPoint(x: 21.88, y: 20.27), controlPoint1: CGPoint(x: 20.55, y: 20.19), controlPoint2: CGPoint(x: 21.2, y: 20.27))
        textPath.addCurve(to: CGPoint(x: 23.55, y: 20.08), controlPoint1: CGPoint(x: 22.43, y: 20.27), controlPoint2: CGPoint(x: 22.99, y: 20.21))
        textPath.addCurve(to: CGPoint(x: 25.07, y: 19.45), controlPoint1: CGPoint(x: 24.11, y: 19.95), controlPoint2: CGPoint(x: 24.62, y: 19.74))
        textPath.addCurve(to: CGPoint(x: 26.19, y: 18.33), controlPoint1: CGPoint(x: 25.53, y: 19.16), controlPoint2: CGPoint(x: 25.9, y: 18.78))
        textPath.addCurve(to: CGPoint(x: 26.62, y: 16.67), controlPoint1: CGPoint(x: 26.48, y: 17.87), controlPoint2: CGPoint(x: 26.62, y: 17.31))
        textPath.addCurve(to: CGPoint(x: 26.29, y: 15.17), controlPoint1: CGPoint(x: 26.62, y: 16.07), controlPoint2: CGPoint(x: 26.51, y: 15.57))
        textPath.addCurve(to: CGPoint(x: 25.41, y: 14.19), controlPoint1: CGPoint(x: 26.07, y: 14.78), controlPoint2: CGPoint(x: 25.77, y: 14.45))
        textPath.addCurve(to: CGPoint(x: 24.16, y: 13.57), controlPoint1: CGPoint(x: 25.04, y: 13.93), controlPoint2: CGPoint(x: 24.62, y: 13.72))
        textPath.addCurve(to: CGPoint(x: 22.74, y: 13.17), controlPoint1: CGPoint(x: 23.69, y: 13.41), controlPoint2: CGPoint(x: 23.22, y: 13.28))
        textPath.addCurve(to: CGPoint(x: 21.32, y: 12.85), controlPoint1: CGPoint(x: 22.25, y: 13.05), controlPoint2: CGPoint(x: 21.78, y: 12.95))
        textPath.addCurve(to: CGPoint(x: 20.07, y: 12.49), controlPoint1: CGPoint(x: 20.85, y: 12.76), controlPoint2: CGPoint(x: 20.44, y: 12.63))
        textPath.addCurve(to: CGPoint(x: 19.18, y: 11.92), controlPoint1: CGPoint(x: 19.7, y: 12.34), controlPoint2: CGPoint(x: 19.4, y: 12.15))
        textPath.addCurve(to: CGPoint(x: 18.85, y: 11.01), controlPoint1: CGPoint(x: 18.96, y: 11.68), controlPoint2: CGPoint(x: 18.85, y: 11.38))
        textPath.addCurve(to: CGPoint(x: 19.08, y: 10.01), controlPoint1: CGPoint(x: 18.85, y: 10.61), controlPoint2: CGPoint(x: 18.93, y: 10.28))
        textPath.addCurve(to: CGPoint(x: 19.69, y: 9.38), controlPoint1: CGPoint(x: 19.23, y: 9.75), controlPoint2: CGPoint(x: 19.44, y: 9.53))
        textPath.addCurve(to: CGPoint(x: 20.57, y: 9.03), controlPoint1: CGPoint(x: 19.95, y: 9.22), controlPoint2: CGPoint(x: 20.24, y: 9.1))
        textPath.addCurve(to: CGPoint(x: 21.57, y: 8.93), controlPoint1: CGPoint(x: 20.9, y: 8.97), controlPoint2: CGPoint(x: 21.23, y: 8.93))
        textPath.addCurve(to: CGPoint(x: 23.64, y: 9.52), controlPoint1: CGPoint(x: 22.41, y: 8.93), controlPoint2: CGPoint(x: 23.1, y: 9.13))
        textPath.addCurve(to: CGPoint(x: 24.58, y: 11.41), controlPoint1: CGPoint(x: 24.18, y: 9.91), controlPoint2: CGPoint(x: 24.49, y: 10.54))
        textPath.close()
        textPath.move(to: CGPoint(x: 34.44, y: 14.76))
        textPath.addLine(to: CGPoint(x: 29.39, y: 14.76))
        textPath.addCurve(to: CGPoint(x: 29.61, y: 13.8), controlPoint1: CGPoint(x: 29.41, y: 14.42), controlPoint2: CGPoint(x: 29.49, y: 14.1))
        textPath.addCurve(to: CGPoint(x: 30.12, y: 13.01), controlPoint1: CGPoint(x: 29.74, y: 13.5), controlPoint2: CGPoint(x: 29.91, y: 13.24))
        textPath.addCurve(to: CGPoint(x: 30.9, y: 12.48), controlPoint1: CGPoint(x: 30.34, y: 12.79), controlPoint2: CGPoint(x: 30.6, y: 12.61))
        textPath.addCurve(to: CGPoint(x: 31.91, y: 12.28), controlPoint1: CGPoint(x: 31.2, y: 12.35), controlPoint2: CGPoint(x: 31.53, y: 12.28))
        textPath.addCurve(to: CGPoint(x: 32.9, y: 12.48), controlPoint1: CGPoint(x: 32.27, y: 12.28), controlPoint2: CGPoint(x: 32.6, y: 12.35))
        textPath.addCurve(to: CGPoint(x: 33.68, y: 13), controlPoint1: CGPoint(x: 33.2, y: 12.61), controlPoint2: CGPoint(x: 33.46, y: 12.78))
        textPath.addCurve(to: CGPoint(x: 34.21, y: 13.8), controlPoint1: CGPoint(x: 33.91, y: 13.23), controlPoint2: CGPoint(x: 34.08, y: 13.49))
        textPath.addCurve(to: CGPoint(x: 34.44, y: 14.76), controlPoint1: CGPoint(x: 34.34, y: 14.1), controlPoint2: CGPoint(x: 34.42, y: 14.42))
        textPath.close()
        textPath.move(to: CGPoint(x: 35.83, y: 17.21))
        textPath.addLine(to: CGPoint(x: 34.41, y: 17.21))
        textPath.addCurve(to: CGPoint(x: 33.63, y: 18.5), controlPoint1: CGPoint(x: 34.28, y: 17.79), controlPoint2: CGPoint(x: 34.02, y: 18.22))
        textPath.addCurve(to: CGPoint(x: 32.13, y: 18.93), controlPoint1: CGPoint(x: 33.24, y: 18.79), controlPoint2: CGPoint(x: 32.74, y: 18.93))
        textPath.addCurve(to: CGPoint(x: 30.89, y: 18.69), controlPoint1: CGPoint(x: 31.65, y: 18.93), controlPoint2: CGPoint(x: 31.24, y: 18.85))
        textPath.addCurve(to: CGPoint(x: 30.02, y: 18.05), controlPoint1: CGPoint(x: 30.54, y: 18.53), controlPoint2: CGPoint(x: 30.25, y: 18.32))
        textPath.addCurve(to: CGPoint(x: 29.53, y: 17.14), controlPoint1: CGPoint(x: 29.79, y: 17.79), controlPoint2: CGPoint(x: 29.63, y: 17.48))
        textPath.addCurve(to: CGPoint(x: 29.39, y: 16.04), controlPoint1: CGPoint(x: 29.43, y: 16.79), controlPoint2: CGPoint(x: 29.38, y: 16.42))
        textPath.addLine(to: CGPoint(x: 35.97, y: 16.04))
        textPath.addCurve(to: CGPoint(x: 35.83, y: 14.36), controlPoint1: CGPoint(x: 35.99, y: 15.51), controlPoint2: CGPoint(x: 35.95, y: 14.95))
        textPath.addCurve(to: CGPoint(x: 35.18, y: 12.72), controlPoint1: CGPoint(x: 35.71, y: 13.77), controlPoint2: CGPoint(x: 35.49, y: 13.22))
        textPath.addCurve(to: CGPoint(x: 33.94, y: 11.49), controlPoint1: CGPoint(x: 34.87, y: 12.23), controlPoint2: CGPoint(x: 34.46, y: 11.81))
        textPath.addCurve(to: CGPoint(x: 31.99, y: 11.01), controlPoint1: CGPoint(x: 33.42, y: 11.17), controlPoint2: CGPoint(x: 32.78, y: 11.01))
        textPath.addCurve(to: CGPoint(x: 30.34, y: 11.35), controlPoint1: CGPoint(x: 31.39, y: 11.01), controlPoint2: CGPoint(x: 30.84, y: 11.12))
        textPath.addCurve(to: CGPoint(x: 29.03, y: 12.3), controlPoint1: CGPoint(x: 29.83, y: 11.57), controlPoint2: CGPoint(x: 29.39, y: 11.89))
        textPath.addCurve(to: CGPoint(x: 28.17, y: 13.74), controlPoint1: CGPoint(x: 28.66, y: 12.71), controlPoint2: CGPoint(x: 28.37, y: 13.19))
        textPath.addCurve(to: CGPoint(x: 27.86, y: 15.58), controlPoint1: CGPoint(x: 27.96, y: 14.3), controlPoint2: CGPoint(x: 27.86, y: 14.91))
        textPath.addCurve(to: CGPoint(x: 28.16, y: 17.43), controlPoint1: CGPoint(x: 27.88, y: 16.25), controlPoint2: CGPoint(x: 27.98, y: 16.87))
        textPath.addCurve(to: CGPoint(x: 28.95, y: 18.89), controlPoint1: CGPoint(x: 28.34, y: 18), controlPoint2: CGPoint(x: 28.6, y: 18.49))
        textPath.addCurve(to: CGPoint(x: 30.25, y: 19.85), controlPoint1: CGPoint(x: 29.3, y: 19.3), controlPoint2: CGPoint(x: 29.73, y: 19.62))
        textPath.addCurve(to: CGPoint(x: 32.08, y: 20.19), controlPoint1: CGPoint(x: 30.77, y: 20.07), controlPoint2: CGPoint(x: 31.38, y: 20.19))
        textPath.addCurve(to: CGPoint(x: 34.56, y: 19.44), controlPoint1: CGPoint(x: 33.08, y: 20.19), controlPoint2: CGPoint(x: 33.9, y: 19.94))
        textPath.addCurve(to: CGPoint(x: 35.83, y: 17.21), controlPoint1: CGPoint(x: 35.22, y: 18.94), controlPoint2: CGPoint(x: 35.64, y: 18.2))
        textPath.close()
        textPath.move(to: CGPoint(x: 37.55, y: 7.86))
        textPath.addLine(to: CGPoint(x: 37.55, y: 20))
        textPath.addLine(to: CGPoint(x: 39, y: 20))
        textPath.addLine(to: CGPoint(x: 39, y: 7.86))
        textPath.addLine(to: CGPoint(x: 37.55, y: 7.86))
        textPath.close()
        textPath.move(to: CGPoint(x: 47.34, y: 14.76))
        textPath.addLine(to: CGPoint(x: 42.29, y: 14.76))
        textPath.addCurve(to: CGPoint(x: 42.52, y: 13.8), controlPoint1: CGPoint(x: 42.32, y: 14.42), controlPoint2: CGPoint(x: 42.39, y: 14.1))
        textPath.addCurve(to: CGPoint(x: 43.03, y: 13.01), controlPoint1: CGPoint(x: 42.64, y: 13.5), controlPoint2: CGPoint(x: 42.81, y: 13.24))
        textPath.addCurve(to: CGPoint(x: 43.8, y: 12.48), controlPoint1: CGPoint(x: 43.24, y: 12.79), controlPoint2: CGPoint(x: 43.5, y: 12.61))
        textPath.addCurve(to: CGPoint(x: 44.81, y: 12.28), controlPoint1: CGPoint(x: 44.1, y: 12.35), controlPoint2: CGPoint(x: 44.44, y: 12.28))
        textPath.addCurve(to: CGPoint(x: 45.81, y: 12.48), controlPoint1: CGPoint(x: 45.17, y: 12.28), controlPoint2: CGPoint(x: 45.51, y: 12.35))
        textPath.addCurve(to: CGPoint(x: 46.59, y: 13), controlPoint1: CGPoint(x: 46.11, y: 12.61), controlPoint2: CGPoint(x: 46.37, y: 12.78))
        textPath.addCurve(to: CGPoint(x: 47.11, y: 13.8), controlPoint1: CGPoint(x: 46.81, y: 13.23), controlPoint2: CGPoint(x: 46.98, y: 13.49))
        textPath.addCurve(to: CGPoint(x: 47.34, y: 14.76), controlPoint1: CGPoint(x: 47.24, y: 14.1), controlPoint2: CGPoint(x: 47.32, y: 14.42))
        textPath.close()
        textPath.move(to: CGPoint(x: 48.74, y: 17.21))
        textPath.addLine(to: CGPoint(x: 47.31, y: 17.21))
        textPath.addCurve(to: CGPoint(x: 46.54, y: 18.5), controlPoint1: CGPoint(x: 47.19, y: 17.79), controlPoint2: CGPoint(x: 46.93, y: 18.22))
        textPath.addCurve(to: CGPoint(x: 45.03, y: 18.93), controlPoint1: CGPoint(x: 46.15, y: 18.79), controlPoint2: CGPoint(x: 45.64, y: 18.93))
        textPath.addCurve(to: CGPoint(x: 43.79, y: 18.69), controlPoint1: CGPoint(x: 44.56, y: 18.93), controlPoint2: CGPoint(x: 44.14, y: 18.85))
        textPath.addCurve(to: CGPoint(x: 42.92, y: 18.05), controlPoint1: CGPoint(x: 43.44, y: 18.53), controlPoint2: CGPoint(x: 43.15, y: 18.32))
        textPath.addCurve(to: CGPoint(x: 42.43, y: 17.14), controlPoint1: CGPoint(x: 42.7, y: 17.79), controlPoint2: CGPoint(x: 42.53, y: 17.48))
        textPath.addCurve(to: CGPoint(x: 42.29, y: 16.04), controlPoint1: CGPoint(x: 42.33, y: 16.79), controlPoint2: CGPoint(x: 42.28, y: 16.42))
        textPath.addLine(to: CGPoint(x: 48.87, y: 16.04))
        textPath.addCurve(to: CGPoint(x: 48.73, y: 14.36), controlPoint1: CGPoint(x: 48.9, y: 15.51), controlPoint2: CGPoint(x: 48.85, y: 14.95))
        textPath.addCurve(to: CGPoint(x: 48.08, y: 12.72), controlPoint1: CGPoint(x: 48.61, y: 13.77), controlPoint2: CGPoint(x: 48.4, y: 13.22))
        textPath.addCurve(to: CGPoint(x: 46.84, y: 11.49), controlPoint1: CGPoint(x: 47.77, y: 12.23), controlPoint2: CGPoint(x: 47.36, y: 11.81))
        textPath.addCurve(to: CGPoint(x: 44.9, y: 11.01), controlPoint1: CGPoint(x: 46.33, y: 11.17), controlPoint2: CGPoint(x: 45.68, y: 11.01))
        textPath.addCurve(to: CGPoint(x: 43.24, y: 11.35), controlPoint1: CGPoint(x: 44.3, y: 11.01), controlPoint2: CGPoint(x: 43.74, y: 11.12))
        textPath.addCurve(to: CGPoint(x: 41.93, y: 12.3), controlPoint1: CGPoint(x: 42.73, y: 11.57), controlPoint2: CGPoint(x: 42.3, y: 11.89))
        textPath.addCurve(to: CGPoint(x: 41.07, y: 13.74), controlPoint1: CGPoint(x: 41.56, y: 12.71), controlPoint2: CGPoint(x: 41.28, y: 13.19))
        textPath.addCurve(to: CGPoint(x: 40.76, y: 15.58), controlPoint1: CGPoint(x: 40.87, y: 14.3), controlPoint2: CGPoint(x: 40.76, y: 14.91))
        textPath.addCurve(to: CGPoint(x: 41.06, y: 17.43), controlPoint1: CGPoint(x: 40.79, y: 16.25), controlPoint2: CGPoint(x: 40.89, y: 16.87))
        textPath.addCurve(to: CGPoint(x: 41.85, y: 18.89), controlPoint1: CGPoint(x: 41.24, y: 18), controlPoint2: CGPoint(x: 41.5, y: 18.49))
        textPath.addCurve(to: CGPoint(x: 43.15, y: 19.85), controlPoint1: CGPoint(x: 42.2, y: 19.3), controlPoint2: CGPoint(x: 42.64, y: 19.62))
        textPath.addCurve(to: CGPoint(x: 44.98, y: 20.19), controlPoint1: CGPoint(x: 43.67, y: 20.07), controlPoint2: CGPoint(x: 44.28, y: 20.19))
        textPath.addCurve(to: CGPoint(x: 47.46, y: 19.44), controlPoint1: CGPoint(x: 45.98, y: 20.19), controlPoint2: CGPoint(x: 46.81, y: 19.94))
        textPath.addCurve(to: CGPoint(x: 48.74, y: 17.21), controlPoint1: CGPoint(x: 48.12, y: 18.94), controlPoint2: CGPoint(x: 48.55, y: 18.2))
        textPath.close()
        textPath.move(to: CGPoint(x: 56.34, y: 14.03))
        textPath.addLine(to: CGPoint(x: 57.83, y: 14.03))
        textPath.addCurve(to: CGPoint(x: 57.42, y: 12.68), controlPoint1: CGPoint(x: 57.78, y: 13.51), controlPoint2: CGPoint(x: 57.64, y: 13.06))
        textPath.addCurve(to: CGPoint(x: 56.6, y: 11.74), controlPoint1: CGPoint(x: 57.21, y: 12.3), controlPoint2: CGPoint(x: 56.93, y: 11.99))
        textPath.addCurve(to: CGPoint(x: 55.44, y: 11.19), controlPoint1: CGPoint(x: 56.27, y: 11.49), controlPoint2: CGPoint(x: 55.88, y: 11.3))
        textPath.addCurve(to: CGPoint(x: 54.04, y: 11.01), controlPoint1: CGPoint(x: 55.01, y: 11.07), controlPoint2: CGPoint(x: 54.54, y: 11.01))
        textPath.addCurve(to: CGPoint(x: 52.22, y: 11.37), controlPoint1: CGPoint(x: 53.35, y: 11.01), controlPoint2: CGPoint(x: 52.74, y: 11.13))
        textPath.addCurve(to: CGPoint(x: 50.92, y: 12.38), controlPoint1: CGPoint(x: 51.7, y: 11.62), controlPoint2: CGPoint(x: 51.27, y: 11.95))
        textPath.addCurve(to: CGPoint(x: 50.15, y: 13.87), controlPoint1: CGPoint(x: 50.58, y: 12.8), controlPoint2: CGPoint(x: 50.32, y: 13.3))
        textPath.addCurve(to: CGPoint(x: 49.89, y: 15.72), controlPoint1: CGPoint(x: 49.98, y: 14.44), controlPoint2: CGPoint(x: 49.89, y: 15.06))
        textPath.addCurve(to: CGPoint(x: 50.16, y: 17.53), controlPoint1: CGPoint(x: 49.89, y: 16.37), controlPoint2: CGPoint(x: 49.98, y: 16.98))
        textPath.addCurve(to: CGPoint(x: 50.94, y: 18.95), controlPoint1: CGPoint(x: 50.33, y: 18.08), controlPoint2: CGPoint(x: 50.59, y: 18.55))
        textPath.addCurve(to: CGPoint(x: 52.23, y: 19.86), controlPoint1: CGPoint(x: 51.29, y: 19.34), controlPoint2: CGPoint(x: 51.72, y: 19.65))
        textPath.addCurve(to: CGPoint(x: 54.01, y: 20.19), controlPoint1: CGPoint(x: 52.75, y: 20.08), controlPoint2: CGPoint(x: 53.34, y: 20.19))
        textPath.addCurve(to: CGPoint(x: 56.67, y: 19.3), controlPoint1: CGPoint(x: 55.13, y: 20.19), controlPoint2: CGPoint(x: 56.02, y: 19.89))
        textPath.addCurve(to: CGPoint(x: 57.88, y: 16.79), controlPoint1: CGPoint(x: 57.32, y: 18.71), controlPoint2: CGPoint(x: 57.73, y: 17.88))
        textPath.addLine(to: CGPoint(x: 56.41, y: 16.79))
        textPath.addCurve(to: CGPoint(x: 55.67, y: 18.37), controlPoint1: CGPoint(x: 56.31, y: 17.47), controlPoint2: CGPoint(x: 56.07, y: 17.99))
        textPath.addCurve(to: CGPoint(x: 53.99, y: 18.93), controlPoint1: CGPoint(x: 55.26, y: 18.74), controlPoint2: CGPoint(x: 54.71, y: 18.93))
        textPath.addCurve(to: CGPoint(x: 52.82, y: 18.66), controlPoint1: CGPoint(x: 53.54, y: 18.93), controlPoint2: CGPoint(x: 53.15, y: 18.84))
        textPath.addCurve(to: CGPoint(x: 52.02, y: 17.93), controlPoint1: CGPoint(x: 52.49, y: 18.48), controlPoint2: CGPoint(x: 52.22, y: 18.23))
        textPath.addCurve(to: CGPoint(x: 51.57, y: 16.91), controlPoint1: CGPoint(x: 51.81, y: 17.63), controlPoint2: CGPoint(x: 51.66, y: 17.29))
        textPath.addCurve(to: CGPoint(x: 51.42, y: 15.72), controlPoint1: CGPoint(x: 51.47, y: 16.52), controlPoint2: CGPoint(x: 51.42, y: 16.12))
        textPath.addCurve(to: CGPoint(x: 51.56, y: 14.43), controlPoint1: CGPoint(x: 51.42, y: 15.27), controlPoint2: CGPoint(x: 51.47, y: 14.85))
        textPath.addCurve(to: CGPoint(x: 52.01, y: 13.34), controlPoint1: CGPoint(x: 51.65, y: 14.02), controlPoint2: CGPoint(x: 51.8, y: 13.65))
        textPath.addCurve(to: CGPoint(x: 52.85, y: 12.57), controlPoint1: CGPoint(x: 52.22, y: 13.02), controlPoint2: CGPoint(x: 52.5, y: 12.76))
        textPath.addCurve(to: CGPoint(x: 54.16, y: 12.28), controlPoint1: CGPoint(x: 53.2, y: 12.38), controlPoint2: CGPoint(x: 53.64, y: 12.28))
        textPath.addCurve(to: CGPoint(x: 55.62, y: 12.74), controlPoint1: CGPoint(x: 54.77, y: 12.28), controlPoint2: CGPoint(x: 55.26, y: 12.43))
        textPath.addCurve(to: CGPoint(x: 56.34, y: 14.03), controlPoint1: CGPoint(x: 55.99, y: 13.05), controlPoint2: CGPoint(x: 56.22, y: 13.48))
        textPath.close()
        textPath.move(to: CGPoint(x: 61.51, y: 11.21))
        textPath.addLine(to: CGPoint(x: 61.51, y: 8.58))
        textPath.addLine(to: CGPoint(x: 60.06, y: 8.58))
        textPath.addLine(to: CGPoint(x: 60.06, y: 11.21))
        textPath.addLine(to: CGPoint(x: 58.56, y: 11.21))
        textPath.addLine(to: CGPoint(x: 58.56, y: 12.49))
        textPath.addLine(to: CGPoint(x: 60.06, y: 12.49))
        textPath.addLine(to: CGPoint(x: 60.06, y: 18.08))
        textPath.addCurve(to: CGPoint(x: 60.18, y: 19.06), controlPoint1: CGPoint(x: 60.06, y: 18.49), controlPoint2: CGPoint(x: 60.1, y: 18.82))
        textPath.addCurve(to: CGPoint(x: 60.54, y: 19.64), controlPoint1: CGPoint(x: 60.26, y: 19.31), controlPoint2: CGPoint(x: 60.38, y: 19.51))
        textPath.addCurve(to: CGPoint(x: 61.19, y: 19.92), controlPoint1: CGPoint(x: 60.71, y: 19.78), controlPoint2: CGPoint(x: 60.92, y: 19.87))
        textPath.addCurve(to: CGPoint(x: 62.15, y: 20), controlPoint1: CGPoint(x: 61.46, y: 19.97), controlPoint2: CGPoint(x: 61.78, y: 20))
        textPath.addLine(to: CGPoint(x: 63.26, y: 20))
        textPath.addLine(to: CGPoint(x: 63.26, y: 18.72))
        textPath.addLine(to: CGPoint(x: 62.59, y: 18.72))
        textPath.addCurve(to: CGPoint(x: 62.04, y: 18.7), controlPoint1: CGPoint(x: 62.37, y: 18.72), controlPoint2: CGPoint(x: 62.18, y: 18.72))
        textPath.addCurve(to: CGPoint(x: 61.71, y: 18.59), controlPoint1: CGPoint(x: 61.9, y: 18.68), controlPoint2: CGPoint(x: 61.79, y: 18.65))
        textPath.addCurve(to: CGPoint(x: 61.55, y: 18.35), controlPoint1: CGPoint(x: 61.63, y: 18.53), controlPoint2: CGPoint(x: 61.58, y: 18.45))
        textPath.addCurve(to: CGPoint(x: 61.51, y: 17.94), controlPoint1: CGPoint(x: 61.52, y: 18.25), controlPoint2: CGPoint(x: 61.51, y: 18.11))
        textPath.addLine(to: CGPoint(x: 61.51, y: 12.49))
        textPath.addLine(to: CGPoint(x: 63.26, y: 12.49))
        textPath.addLine(to: CGPoint(x: 63.26, y: 11.21))
        textPath.addLine(to: CGPoint(x: 61.51, y: 11.21))
        textPath.close()
        UIColor.white.setFill()
        textPath.fill()
    }

    @objc dynamic public class func drawSelectButtonDown() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!


        //// Gradient Declarations
        let gradient11 = CGGradient(colorsSpace: nil, colors: [ButtonsForFJ092018.blueGradientColor2.cgColor, ButtonsForFJ092018.gradientForBoxColor2.cgColor] as CFArray, locations: [0, 1])!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 80, height: 30))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(gradient11, start: CGPoint(x: 40, y: -0), end: CGPoint(x: 40, y: 30), options: [])
        context.restoreGState()


        //// Text Drawing
        let textPath = UIBezierPath()
        textPath.move(to: CGPoint(x: 24.58, y: 11.41))
        textPath.addLine(to: CGPoint(x: 26.11, y: 11.41))
        textPath.addCurve(to: CGPoint(x: 25.73, y: 9.69), controlPoint1: CGPoint(x: 26.09, y: 10.75), controlPoint2: CGPoint(x: 25.96, y: 10.17))
        textPath.addCurve(to: CGPoint(x: 24.78, y: 8.49), controlPoint1: CGPoint(x: 25.5, y: 9.21), controlPoint2: CGPoint(x: 25.18, y: 8.81))
        textPath.addCurve(to: CGPoint(x: 23.37, y: 7.79), controlPoint1: CGPoint(x: 24.37, y: 8.17), controlPoint2: CGPoint(x: 23.91, y: 7.94))
        textPath.addCurve(to: CGPoint(x: 21.64, y: 7.57), controlPoint1: CGPoint(x: 22.84, y: 7.65), controlPoint2: CGPoint(x: 22.26, y: 7.57))
        textPath.addCurve(to: CGPoint(x: 20.02, y: 7.79), controlPoint1: CGPoint(x: 21.08, y: 7.57), controlPoint2: CGPoint(x: 20.54, y: 7.64))
        textPath.addCurve(to: CGPoint(x: 18.61, y: 8.43), controlPoint1: CGPoint(x: 19.49, y: 7.93), controlPoint2: CGPoint(x: 19.02, y: 8.14))
        textPath.addCurve(to: CGPoint(x: 17.61, y: 9.54), controlPoint1: CGPoint(x: 18.19, y: 8.72), controlPoint2: CGPoint(x: 17.86, y: 9.09))
        textPath.addCurve(to: CGPoint(x: 17.24, y: 11.13), controlPoint1: CGPoint(x: 17.36, y: 9.98), controlPoint2: CGPoint(x: 17.24, y: 10.51))
        textPath.addCurve(to: CGPoint(x: 17.57, y: 12.51), controlPoint1: CGPoint(x: 17.24, y: 11.68), controlPoint2: CGPoint(x: 17.35, y: 12.14))
        textPath.addCurve(to: CGPoint(x: 18.45, y: 13.41), controlPoint1: CGPoint(x: 17.79, y: 12.88), controlPoint2: CGPoint(x: 18.08, y: 13.18))
        textPath.addCurve(to: CGPoint(x: 19.7, y: 13.97), controlPoint1: CGPoint(x: 18.82, y: 13.64), controlPoint2: CGPoint(x: 19.24, y: 13.83))
        textPath.addCurve(to: CGPoint(x: 21.12, y: 14.35), controlPoint1: CGPoint(x: 20.17, y: 14.12), controlPoint2: CGPoint(x: 20.64, y: 14.24))
        textPath.addCurve(to: CGPoint(x: 22.54, y: 14.66), controlPoint1: CGPoint(x: 21.6, y: 14.46), controlPoint2: CGPoint(x: 22.08, y: 14.56))
        textPath.addCurve(to: CGPoint(x: 23.79, y: 15.06), controlPoint1: CGPoint(x: 23.01, y: 14.76), controlPoint2: CGPoint(x: 23.42, y: 14.9))
        textPath.addCurve(to: CGPoint(x: 24.67, y: 15.7), controlPoint1: CGPoint(x: 24.16, y: 15.23), controlPoint2: CGPoint(x: 24.45, y: 15.44))
        textPath.addCurve(to: CGPoint(x: 25.01, y: 16.72), controlPoint1: CGPoint(x: 24.9, y: 15.96), controlPoint2: CGPoint(x: 25.01, y: 16.3))
        textPath.addCurve(to: CGPoint(x: 24.73, y: 17.81), controlPoint1: CGPoint(x: 25.01, y: 17.16), controlPoint2: CGPoint(x: 24.92, y: 17.52))
        textPath.addCurve(to: CGPoint(x: 24.02, y: 18.48), controlPoint1: CGPoint(x: 24.55, y: 18.09), controlPoint2: CGPoint(x: 24.31, y: 18.31))
        textPath.addCurve(to: CGPoint(x: 23.03, y: 18.83), controlPoint1: CGPoint(x: 23.73, y: 18.64), controlPoint2: CGPoint(x: 23.39, y: 18.76))
        textPath.addCurve(to: CGPoint(x: 21.93, y: 18.93), controlPoint1: CGPoint(x: 22.66, y: 18.9), controlPoint2: CGPoint(x: 22.29, y: 18.93))
        textPath.addCurve(to: CGPoint(x: 20.6, y: 18.76), controlPoint1: CGPoint(x: 21.48, y: 18.93), controlPoint2: CGPoint(x: 21.03, y: 18.87))
        textPath.addCurve(to: CGPoint(x: 19.47, y: 18.23), controlPoint1: CGPoint(x: 20.17, y: 18.65), controlPoint2: CGPoint(x: 19.8, y: 18.47))
        textPath.addCurve(to: CGPoint(x: 18.69, y: 17.32), controlPoint1: CGPoint(x: 19.15, y: 17.99), controlPoint2: CGPoint(x: 18.89, y: 17.69))
        textPath.addCurve(to: CGPoint(x: 18.39, y: 16), controlPoint1: CGPoint(x: 18.49, y: 16.95), controlPoint2: CGPoint(x: 18.39, y: 16.52))
        textPath.addLine(to: CGPoint(x: 16.86, y: 16))
        textPath.addCurve(to: CGPoint(x: 17.26, y: 17.92), controlPoint1: CGPoint(x: 16.86, y: 16.74), controlPoint2: CGPoint(x: 17, y: 17.38))
        textPath.addCurve(to: CGPoint(x: 18.35, y: 19.24), controlPoint1: CGPoint(x: 17.53, y: 18.46), controlPoint2: CGPoint(x: 17.89, y: 18.9))
        textPath.addCurve(to: CGPoint(x: 19.95, y: 20.02), controlPoint1: CGPoint(x: 18.81, y: 19.59), controlPoint2: CGPoint(x: 19.34, y: 19.85))
        textPath.addCurve(to: CGPoint(x: 21.88, y: 20.27), controlPoint1: CGPoint(x: 20.55, y: 20.19), controlPoint2: CGPoint(x: 21.2, y: 20.27))
        textPath.addCurve(to: CGPoint(x: 23.55, y: 20.08), controlPoint1: CGPoint(x: 22.43, y: 20.27), controlPoint2: CGPoint(x: 22.99, y: 20.21))
        textPath.addCurve(to: CGPoint(x: 25.07, y: 19.45), controlPoint1: CGPoint(x: 24.11, y: 19.95), controlPoint2: CGPoint(x: 24.62, y: 19.74))
        textPath.addCurve(to: CGPoint(x: 26.19, y: 18.33), controlPoint1: CGPoint(x: 25.53, y: 19.16), controlPoint2: CGPoint(x: 25.9, y: 18.78))
        textPath.addCurve(to: CGPoint(x: 26.62, y: 16.67), controlPoint1: CGPoint(x: 26.48, y: 17.87), controlPoint2: CGPoint(x: 26.62, y: 17.31))
        textPath.addCurve(to: CGPoint(x: 26.29, y: 15.17), controlPoint1: CGPoint(x: 26.62, y: 16.07), controlPoint2: CGPoint(x: 26.51, y: 15.57))
        textPath.addCurve(to: CGPoint(x: 25.41, y: 14.19), controlPoint1: CGPoint(x: 26.07, y: 14.78), controlPoint2: CGPoint(x: 25.77, y: 14.45))
        textPath.addCurve(to: CGPoint(x: 24.16, y: 13.57), controlPoint1: CGPoint(x: 25.04, y: 13.93), controlPoint2: CGPoint(x: 24.62, y: 13.72))
        textPath.addCurve(to: CGPoint(x: 22.74, y: 13.17), controlPoint1: CGPoint(x: 23.69, y: 13.41), controlPoint2: CGPoint(x: 23.22, y: 13.28))
        textPath.addCurve(to: CGPoint(x: 21.32, y: 12.85), controlPoint1: CGPoint(x: 22.25, y: 13.05), controlPoint2: CGPoint(x: 21.78, y: 12.95))
        textPath.addCurve(to: CGPoint(x: 20.07, y: 12.49), controlPoint1: CGPoint(x: 20.85, y: 12.76), controlPoint2: CGPoint(x: 20.44, y: 12.63))
        textPath.addCurve(to: CGPoint(x: 19.18, y: 11.92), controlPoint1: CGPoint(x: 19.7, y: 12.34), controlPoint2: CGPoint(x: 19.4, y: 12.15))
        textPath.addCurve(to: CGPoint(x: 18.85, y: 11.01), controlPoint1: CGPoint(x: 18.96, y: 11.68), controlPoint2: CGPoint(x: 18.85, y: 11.38))
        textPath.addCurve(to: CGPoint(x: 19.08, y: 10.01), controlPoint1: CGPoint(x: 18.85, y: 10.61), controlPoint2: CGPoint(x: 18.93, y: 10.28))
        textPath.addCurve(to: CGPoint(x: 19.69, y: 9.38), controlPoint1: CGPoint(x: 19.23, y: 9.75), controlPoint2: CGPoint(x: 19.44, y: 9.53))
        textPath.addCurve(to: CGPoint(x: 20.57, y: 9.03), controlPoint1: CGPoint(x: 19.95, y: 9.22), controlPoint2: CGPoint(x: 20.24, y: 9.1))
        textPath.addCurve(to: CGPoint(x: 21.57, y: 8.93), controlPoint1: CGPoint(x: 20.9, y: 8.97), controlPoint2: CGPoint(x: 21.23, y: 8.93))
        textPath.addCurve(to: CGPoint(x: 23.64, y: 9.52), controlPoint1: CGPoint(x: 22.41, y: 8.93), controlPoint2: CGPoint(x: 23.1, y: 9.13))
        textPath.addCurve(to: CGPoint(x: 24.58, y: 11.41), controlPoint1: CGPoint(x: 24.18, y: 9.91), controlPoint2: CGPoint(x: 24.49, y: 10.54))
        textPath.close()
        textPath.move(to: CGPoint(x: 34.44, y: 14.76))
        textPath.addLine(to: CGPoint(x: 29.39, y: 14.76))
        textPath.addCurve(to: CGPoint(x: 29.61, y: 13.8), controlPoint1: CGPoint(x: 29.41, y: 14.42), controlPoint2: CGPoint(x: 29.49, y: 14.1))
        textPath.addCurve(to: CGPoint(x: 30.12, y: 13.01), controlPoint1: CGPoint(x: 29.74, y: 13.5), controlPoint2: CGPoint(x: 29.91, y: 13.24))
        textPath.addCurve(to: CGPoint(x: 30.9, y: 12.48), controlPoint1: CGPoint(x: 30.34, y: 12.79), controlPoint2: CGPoint(x: 30.6, y: 12.61))
        textPath.addCurve(to: CGPoint(x: 31.91, y: 12.28), controlPoint1: CGPoint(x: 31.2, y: 12.35), controlPoint2: CGPoint(x: 31.53, y: 12.28))
        textPath.addCurve(to: CGPoint(x: 32.9, y: 12.48), controlPoint1: CGPoint(x: 32.27, y: 12.28), controlPoint2: CGPoint(x: 32.6, y: 12.35))
        textPath.addCurve(to: CGPoint(x: 33.68, y: 13), controlPoint1: CGPoint(x: 33.2, y: 12.61), controlPoint2: CGPoint(x: 33.46, y: 12.78))
        textPath.addCurve(to: CGPoint(x: 34.21, y: 13.8), controlPoint1: CGPoint(x: 33.91, y: 13.23), controlPoint2: CGPoint(x: 34.08, y: 13.49))
        textPath.addCurve(to: CGPoint(x: 34.44, y: 14.76), controlPoint1: CGPoint(x: 34.34, y: 14.1), controlPoint2: CGPoint(x: 34.42, y: 14.42))
        textPath.close()
        textPath.move(to: CGPoint(x: 35.83, y: 17.21))
        textPath.addLine(to: CGPoint(x: 34.41, y: 17.21))
        textPath.addCurve(to: CGPoint(x: 33.63, y: 18.5), controlPoint1: CGPoint(x: 34.28, y: 17.79), controlPoint2: CGPoint(x: 34.02, y: 18.22))
        textPath.addCurve(to: CGPoint(x: 32.13, y: 18.93), controlPoint1: CGPoint(x: 33.24, y: 18.79), controlPoint2: CGPoint(x: 32.74, y: 18.93))
        textPath.addCurve(to: CGPoint(x: 30.89, y: 18.69), controlPoint1: CGPoint(x: 31.65, y: 18.93), controlPoint2: CGPoint(x: 31.24, y: 18.85))
        textPath.addCurve(to: CGPoint(x: 30.02, y: 18.05), controlPoint1: CGPoint(x: 30.54, y: 18.53), controlPoint2: CGPoint(x: 30.25, y: 18.32))
        textPath.addCurve(to: CGPoint(x: 29.53, y: 17.14), controlPoint1: CGPoint(x: 29.79, y: 17.79), controlPoint2: CGPoint(x: 29.63, y: 17.48))
        textPath.addCurve(to: CGPoint(x: 29.39, y: 16.04), controlPoint1: CGPoint(x: 29.43, y: 16.79), controlPoint2: CGPoint(x: 29.38, y: 16.42))
        textPath.addLine(to: CGPoint(x: 35.97, y: 16.04))
        textPath.addCurve(to: CGPoint(x: 35.83, y: 14.36), controlPoint1: CGPoint(x: 35.99, y: 15.51), controlPoint2: CGPoint(x: 35.95, y: 14.95))
        textPath.addCurve(to: CGPoint(x: 35.18, y: 12.72), controlPoint1: CGPoint(x: 35.71, y: 13.77), controlPoint2: CGPoint(x: 35.49, y: 13.22))
        textPath.addCurve(to: CGPoint(x: 33.94, y: 11.49), controlPoint1: CGPoint(x: 34.87, y: 12.23), controlPoint2: CGPoint(x: 34.46, y: 11.81))
        textPath.addCurve(to: CGPoint(x: 31.99, y: 11.01), controlPoint1: CGPoint(x: 33.42, y: 11.17), controlPoint2: CGPoint(x: 32.78, y: 11.01))
        textPath.addCurve(to: CGPoint(x: 30.34, y: 11.35), controlPoint1: CGPoint(x: 31.39, y: 11.01), controlPoint2: CGPoint(x: 30.84, y: 11.12))
        textPath.addCurve(to: CGPoint(x: 29.03, y: 12.3), controlPoint1: CGPoint(x: 29.83, y: 11.57), controlPoint2: CGPoint(x: 29.39, y: 11.89))
        textPath.addCurve(to: CGPoint(x: 28.17, y: 13.74), controlPoint1: CGPoint(x: 28.66, y: 12.71), controlPoint2: CGPoint(x: 28.37, y: 13.19))
        textPath.addCurve(to: CGPoint(x: 27.86, y: 15.58), controlPoint1: CGPoint(x: 27.96, y: 14.3), controlPoint2: CGPoint(x: 27.86, y: 14.91))
        textPath.addCurve(to: CGPoint(x: 28.16, y: 17.43), controlPoint1: CGPoint(x: 27.88, y: 16.25), controlPoint2: CGPoint(x: 27.98, y: 16.87))
        textPath.addCurve(to: CGPoint(x: 28.95, y: 18.89), controlPoint1: CGPoint(x: 28.34, y: 18), controlPoint2: CGPoint(x: 28.6, y: 18.49))
        textPath.addCurve(to: CGPoint(x: 30.25, y: 19.85), controlPoint1: CGPoint(x: 29.3, y: 19.3), controlPoint2: CGPoint(x: 29.73, y: 19.62))
        textPath.addCurve(to: CGPoint(x: 32.08, y: 20.19), controlPoint1: CGPoint(x: 30.77, y: 20.07), controlPoint2: CGPoint(x: 31.38, y: 20.19))
        textPath.addCurve(to: CGPoint(x: 34.56, y: 19.44), controlPoint1: CGPoint(x: 33.08, y: 20.19), controlPoint2: CGPoint(x: 33.9, y: 19.94))
        textPath.addCurve(to: CGPoint(x: 35.83, y: 17.21), controlPoint1: CGPoint(x: 35.22, y: 18.94), controlPoint2: CGPoint(x: 35.64, y: 18.2))
        textPath.close()
        textPath.move(to: CGPoint(x: 37.55, y: 7.86))
        textPath.addLine(to: CGPoint(x: 37.55, y: 20))
        textPath.addLine(to: CGPoint(x: 39, y: 20))
        textPath.addLine(to: CGPoint(x: 39, y: 7.86))
        textPath.addLine(to: CGPoint(x: 37.55, y: 7.86))
        textPath.close()
        textPath.move(to: CGPoint(x: 47.34, y: 14.76))
        textPath.addLine(to: CGPoint(x: 42.29, y: 14.76))
        textPath.addCurve(to: CGPoint(x: 42.52, y: 13.8), controlPoint1: CGPoint(x: 42.32, y: 14.42), controlPoint2: CGPoint(x: 42.39, y: 14.1))
        textPath.addCurve(to: CGPoint(x: 43.03, y: 13.01), controlPoint1: CGPoint(x: 42.64, y: 13.5), controlPoint2: CGPoint(x: 42.81, y: 13.24))
        textPath.addCurve(to: CGPoint(x: 43.8, y: 12.48), controlPoint1: CGPoint(x: 43.24, y: 12.79), controlPoint2: CGPoint(x: 43.5, y: 12.61))
        textPath.addCurve(to: CGPoint(x: 44.81, y: 12.28), controlPoint1: CGPoint(x: 44.1, y: 12.35), controlPoint2: CGPoint(x: 44.44, y: 12.28))
        textPath.addCurve(to: CGPoint(x: 45.81, y: 12.48), controlPoint1: CGPoint(x: 45.17, y: 12.28), controlPoint2: CGPoint(x: 45.51, y: 12.35))
        textPath.addCurve(to: CGPoint(x: 46.59, y: 13), controlPoint1: CGPoint(x: 46.11, y: 12.61), controlPoint2: CGPoint(x: 46.37, y: 12.78))
        textPath.addCurve(to: CGPoint(x: 47.11, y: 13.8), controlPoint1: CGPoint(x: 46.81, y: 13.23), controlPoint2: CGPoint(x: 46.98, y: 13.49))
        textPath.addCurve(to: CGPoint(x: 47.34, y: 14.76), controlPoint1: CGPoint(x: 47.24, y: 14.1), controlPoint2: CGPoint(x: 47.32, y: 14.42))
        textPath.close()
        textPath.move(to: CGPoint(x: 48.74, y: 17.21))
        textPath.addLine(to: CGPoint(x: 47.31, y: 17.21))
        textPath.addCurve(to: CGPoint(x: 46.54, y: 18.5), controlPoint1: CGPoint(x: 47.19, y: 17.79), controlPoint2: CGPoint(x: 46.93, y: 18.22))
        textPath.addCurve(to: CGPoint(x: 45.03, y: 18.93), controlPoint1: CGPoint(x: 46.15, y: 18.79), controlPoint2: CGPoint(x: 45.64, y: 18.93))
        textPath.addCurve(to: CGPoint(x: 43.79, y: 18.69), controlPoint1: CGPoint(x: 44.56, y: 18.93), controlPoint2: CGPoint(x: 44.14, y: 18.85))
        textPath.addCurve(to: CGPoint(x: 42.92, y: 18.05), controlPoint1: CGPoint(x: 43.44, y: 18.53), controlPoint2: CGPoint(x: 43.15, y: 18.32))
        textPath.addCurve(to: CGPoint(x: 42.43, y: 17.14), controlPoint1: CGPoint(x: 42.7, y: 17.79), controlPoint2: CGPoint(x: 42.53, y: 17.48))
        textPath.addCurve(to: CGPoint(x: 42.29, y: 16.04), controlPoint1: CGPoint(x: 42.33, y: 16.79), controlPoint2: CGPoint(x: 42.28, y: 16.42))
        textPath.addLine(to: CGPoint(x: 48.87, y: 16.04))
        textPath.addCurve(to: CGPoint(x: 48.73, y: 14.36), controlPoint1: CGPoint(x: 48.9, y: 15.51), controlPoint2: CGPoint(x: 48.85, y: 14.95))
        textPath.addCurve(to: CGPoint(x: 48.08, y: 12.72), controlPoint1: CGPoint(x: 48.61, y: 13.77), controlPoint2: CGPoint(x: 48.4, y: 13.22))
        textPath.addCurve(to: CGPoint(x: 46.84, y: 11.49), controlPoint1: CGPoint(x: 47.77, y: 12.23), controlPoint2: CGPoint(x: 47.36, y: 11.81))
        textPath.addCurve(to: CGPoint(x: 44.9, y: 11.01), controlPoint1: CGPoint(x: 46.33, y: 11.17), controlPoint2: CGPoint(x: 45.68, y: 11.01))
        textPath.addCurve(to: CGPoint(x: 43.24, y: 11.35), controlPoint1: CGPoint(x: 44.3, y: 11.01), controlPoint2: CGPoint(x: 43.74, y: 11.12))
        textPath.addCurve(to: CGPoint(x: 41.93, y: 12.3), controlPoint1: CGPoint(x: 42.73, y: 11.57), controlPoint2: CGPoint(x: 42.3, y: 11.89))
        textPath.addCurve(to: CGPoint(x: 41.07, y: 13.74), controlPoint1: CGPoint(x: 41.56, y: 12.71), controlPoint2: CGPoint(x: 41.28, y: 13.19))
        textPath.addCurve(to: CGPoint(x: 40.76, y: 15.58), controlPoint1: CGPoint(x: 40.87, y: 14.3), controlPoint2: CGPoint(x: 40.76, y: 14.91))
        textPath.addCurve(to: CGPoint(x: 41.06, y: 17.43), controlPoint1: CGPoint(x: 40.79, y: 16.25), controlPoint2: CGPoint(x: 40.89, y: 16.87))
        textPath.addCurve(to: CGPoint(x: 41.85, y: 18.89), controlPoint1: CGPoint(x: 41.24, y: 18), controlPoint2: CGPoint(x: 41.5, y: 18.49))
        textPath.addCurve(to: CGPoint(x: 43.15, y: 19.85), controlPoint1: CGPoint(x: 42.2, y: 19.3), controlPoint2: CGPoint(x: 42.64, y: 19.62))
        textPath.addCurve(to: CGPoint(x: 44.98, y: 20.19), controlPoint1: CGPoint(x: 43.67, y: 20.07), controlPoint2: CGPoint(x: 44.28, y: 20.19))
        textPath.addCurve(to: CGPoint(x: 47.46, y: 19.44), controlPoint1: CGPoint(x: 45.98, y: 20.19), controlPoint2: CGPoint(x: 46.81, y: 19.94))
        textPath.addCurve(to: CGPoint(x: 48.74, y: 17.21), controlPoint1: CGPoint(x: 48.12, y: 18.94), controlPoint2: CGPoint(x: 48.55, y: 18.2))
        textPath.close()
        textPath.move(to: CGPoint(x: 56.34, y: 14.03))
        textPath.addLine(to: CGPoint(x: 57.83, y: 14.03))
        textPath.addCurve(to: CGPoint(x: 57.42, y: 12.68), controlPoint1: CGPoint(x: 57.78, y: 13.51), controlPoint2: CGPoint(x: 57.64, y: 13.06))
        textPath.addCurve(to: CGPoint(x: 56.6, y: 11.74), controlPoint1: CGPoint(x: 57.21, y: 12.3), controlPoint2: CGPoint(x: 56.93, y: 11.99))
        textPath.addCurve(to: CGPoint(x: 55.44, y: 11.19), controlPoint1: CGPoint(x: 56.27, y: 11.49), controlPoint2: CGPoint(x: 55.88, y: 11.3))
        textPath.addCurve(to: CGPoint(x: 54.04, y: 11.01), controlPoint1: CGPoint(x: 55.01, y: 11.07), controlPoint2: CGPoint(x: 54.54, y: 11.01))
        textPath.addCurve(to: CGPoint(x: 52.22, y: 11.37), controlPoint1: CGPoint(x: 53.35, y: 11.01), controlPoint2: CGPoint(x: 52.74, y: 11.13))
        textPath.addCurve(to: CGPoint(x: 50.92, y: 12.38), controlPoint1: CGPoint(x: 51.7, y: 11.62), controlPoint2: CGPoint(x: 51.27, y: 11.95))
        textPath.addCurve(to: CGPoint(x: 50.15, y: 13.87), controlPoint1: CGPoint(x: 50.58, y: 12.8), controlPoint2: CGPoint(x: 50.32, y: 13.3))
        textPath.addCurve(to: CGPoint(x: 49.89, y: 15.72), controlPoint1: CGPoint(x: 49.98, y: 14.44), controlPoint2: CGPoint(x: 49.89, y: 15.06))
        textPath.addCurve(to: CGPoint(x: 50.16, y: 17.53), controlPoint1: CGPoint(x: 49.89, y: 16.37), controlPoint2: CGPoint(x: 49.98, y: 16.98))
        textPath.addCurve(to: CGPoint(x: 50.94, y: 18.95), controlPoint1: CGPoint(x: 50.33, y: 18.08), controlPoint2: CGPoint(x: 50.59, y: 18.55))
        textPath.addCurve(to: CGPoint(x: 52.23, y: 19.86), controlPoint1: CGPoint(x: 51.29, y: 19.34), controlPoint2: CGPoint(x: 51.72, y: 19.65))
        textPath.addCurve(to: CGPoint(x: 54.01, y: 20.19), controlPoint1: CGPoint(x: 52.75, y: 20.08), controlPoint2: CGPoint(x: 53.34, y: 20.19))
        textPath.addCurve(to: CGPoint(x: 56.67, y: 19.3), controlPoint1: CGPoint(x: 55.13, y: 20.19), controlPoint2: CGPoint(x: 56.02, y: 19.89))
        textPath.addCurve(to: CGPoint(x: 57.88, y: 16.79), controlPoint1: CGPoint(x: 57.32, y: 18.71), controlPoint2: CGPoint(x: 57.73, y: 17.88))
        textPath.addLine(to: CGPoint(x: 56.41, y: 16.79))
        textPath.addCurve(to: CGPoint(x: 55.67, y: 18.37), controlPoint1: CGPoint(x: 56.31, y: 17.47), controlPoint2: CGPoint(x: 56.07, y: 17.99))
        textPath.addCurve(to: CGPoint(x: 53.99, y: 18.93), controlPoint1: CGPoint(x: 55.26, y: 18.74), controlPoint2: CGPoint(x: 54.71, y: 18.93))
        textPath.addCurve(to: CGPoint(x: 52.82, y: 18.66), controlPoint1: CGPoint(x: 53.54, y: 18.93), controlPoint2: CGPoint(x: 53.15, y: 18.84))
        textPath.addCurve(to: CGPoint(x: 52.02, y: 17.93), controlPoint1: CGPoint(x: 52.49, y: 18.48), controlPoint2: CGPoint(x: 52.22, y: 18.23))
        textPath.addCurve(to: CGPoint(x: 51.57, y: 16.91), controlPoint1: CGPoint(x: 51.81, y: 17.63), controlPoint2: CGPoint(x: 51.66, y: 17.29))
        textPath.addCurve(to: CGPoint(x: 51.42, y: 15.72), controlPoint1: CGPoint(x: 51.47, y: 16.52), controlPoint2: CGPoint(x: 51.42, y: 16.12))
        textPath.addCurve(to: CGPoint(x: 51.56, y: 14.43), controlPoint1: CGPoint(x: 51.42, y: 15.27), controlPoint2: CGPoint(x: 51.47, y: 14.85))
        textPath.addCurve(to: CGPoint(x: 52.01, y: 13.34), controlPoint1: CGPoint(x: 51.65, y: 14.02), controlPoint2: CGPoint(x: 51.8, y: 13.65))
        textPath.addCurve(to: CGPoint(x: 52.85, y: 12.57), controlPoint1: CGPoint(x: 52.22, y: 13.02), controlPoint2: CGPoint(x: 52.5, y: 12.76))
        textPath.addCurve(to: CGPoint(x: 54.16, y: 12.28), controlPoint1: CGPoint(x: 53.2, y: 12.38), controlPoint2: CGPoint(x: 53.64, y: 12.28))
        textPath.addCurve(to: CGPoint(x: 55.62, y: 12.74), controlPoint1: CGPoint(x: 54.77, y: 12.28), controlPoint2: CGPoint(x: 55.26, y: 12.43))
        textPath.addCurve(to: CGPoint(x: 56.34, y: 14.03), controlPoint1: CGPoint(x: 55.99, y: 13.05), controlPoint2: CGPoint(x: 56.22, y: 13.48))
        textPath.close()
        textPath.move(to: CGPoint(x: 61.51, y: 11.21))
        textPath.addLine(to: CGPoint(x: 61.51, y: 8.58))
        textPath.addLine(to: CGPoint(x: 60.06, y: 8.58))
        textPath.addLine(to: CGPoint(x: 60.06, y: 11.21))
        textPath.addLine(to: CGPoint(x: 58.56, y: 11.21))
        textPath.addLine(to: CGPoint(x: 58.56, y: 12.49))
        textPath.addLine(to: CGPoint(x: 60.06, y: 12.49))
        textPath.addLine(to: CGPoint(x: 60.06, y: 18.08))
        textPath.addCurve(to: CGPoint(x: 60.18, y: 19.06), controlPoint1: CGPoint(x: 60.06, y: 18.49), controlPoint2: CGPoint(x: 60.1, y: 18.82))
        textPath.addCurve(to: CGPoint(x: 60.54, y: 19.64), controlPoint1: CGPoint(x: 60.26, y: 19.31), controlPoint2: CGPoint(x: 60.38, y: 19.51))
        textPath.addCurve(to: CGPoint(x: 61.19, y: 19.92), controlPoint1: CGPoint(x: 60.71, y: 19.78), controlPoint2: CGPoint(x: 60.92, y: 19.87))
        textPath.addCurve(to: CGPoint(x: 62.15, y: 20), controlPoint1: CGPoint(x: 61.46, y: 19.97), controlPoint2: CGPoint(x: 61.78, y: 20))
        textPath.addLine(to: CGPoint(x: 63.26, y: 20))
        textPath.addLine(to: CGPoint(x: 63.26, y: 18.72))
        textPath.addLine(to: CGPoint(x: 62.59, y: 18.72))
        textPath.addCurve(to: CGPoint(x: 62.04, y: 18.7), controlPoint1: CGPoint(x: 62.37, y: 18.72), controlPoint2: CGPoint(x: 62.18, y: 18.72))
        textPath.addCurve(to: CGPoint(x: 61.71, y: 18.59), controlPoint1: CGPoint(x: 61.9, y: 18.68), controlPoint2: CGPoint(x: 61.79, y: 18.65))
        textPath.addCurve(to: CGPoint(x: 61.55, y: 18.35), controlPoint1: CGPoint(x: 61.63, y: 18.53), controlPoint2: CGPoint(x: 61.58, y: 18.45))
        textPath.addCurve(to: CGPoint(x: 61.51, y: 17.94), controlPoint1: CGPoint(x: 61.52, y: 18.25), controlPoint2: CGPoint(x: 61.51, y: 18.11))
        textPath.addLine(to: CGPoint(x: 61.51, y: 12.49))
        textPath.addLine(to: CGPoint(x: 63.26, y: 12.49))
        textPath.addLine(to: CGPoint(x: 63.26, y: 11.21))
        textPath.addLine(to: CGPoint(x: 61.51, y: 11.21))
        textPath.close()
        UIColor.white.setFill()
        textPath.fill()
    }

    @objc dynamic public class func drawFormEntryWhiteOrangeCircle() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Color Declarations
        let gradient13Color = UIColor(red: 1.000, green: 0.427, blue: 0.000, alpha: 1.000)
        let gradientOrangeColor = UIColor(red: 1.000, green: 0.427, blue: 0.000, alpha: 0.560)
        let gradientOrangeColor2 = UIColor(red: 0.934, green: 0.402, blue: 0.004, alpha: 1.000)

        //// Gradient Declarations
        let gradientOrange = CGGradient(colorsSpace: nil, colors: [gradientOrangeColor2.cgColor, gradient13Color.cgColor, gradientOrangeColor.cgColor] as CFArray, locations: [0.03, 0.27, 1])!

        //// Oval 2 Drawing
        let oval2Path = UIBezierPath(ovalIn: CGRect(x: 4, y: 4, width: 85, height: 85))
        UIColor.white.setFill()
        oval2Path.fill()


        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: 6, y: 5, width: 82, height: 82))
        context.saveGState()
        ovalPath.addClip()
        context.drawLinearGradient(gradientOrange, start: CGPoint(x: 47, y: 5), end: CGPoint(x: 47, y: 87), options: [])
        context.restoreGState()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 49, y: 25))
        bezierPath.addCurve(to: CGPoint(x: 49, y: 45), controlPoint1: CGPoint(x: 49, y: 25), controlPoint2: CGPoint(x: 49, y: 34.64))
        bezierPath.addLine(to: CGPoint(x: 69, y: 45))
        bezierPath.addLine(to: CGPoint(x: 69, y: 50))
        bezierPath.addLine(to: CGPoint(x: 49, y: 50))
        bezierPath.addCurve(to: CGPoint(x: 49, y: 70), controlPoint1: CGPoint(x: 49, y: 60.36), controlPoint2: CGPoint(x: 49, y: 70))
        bezierPath.addLine(to: CGPoint(x: 44, y: 70))
        bezierPath.addCurve(to: CGPoint(x: 44, y: 50), controlPoint1: CGPoint(x: 44, y: 70), controlPoint2: CGPoint(x: 44, y: 60.36))
        bezierPath.addLine(to: CGPoint(x: 24, y: 50))
        bezierPath.addLine(to: CGPoint(x: 24, y: 45))
        bezierPath.addLine(to: CGPoint(x: 44, y: 45))
        bezierPath.addCurve(to: CGPoint(x: 44, y: 25), controlPoint1: CGPoint(x: 44, y: 34.64), controlPoint2: CGPoint(x: 44, y: 25))
        bezierPath.addLine(to: CGPoint(x: 49, y: 25))
        bezierPath.addLine(to: CGPoint(x: 49, y: 25))
        bezierPath.close()
        context.saveGState()
        context.setShadow(offset: ButtonsForFJ092018.shadow.shadowOffset, blur: ButtonsForFJ092018.shadow.shadowBlurRadius, color: (ButtonsForFJ092018.shadow.shadowColor as! UIColor).cgColor)
        UIColor.white.setFill()
        bezierPath.fill()
        context.restoreGState()
    }

    @objc dynamic public class func drawResourceGroupNew() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 80, height: 30))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(ButtonsForFJ092018.gradientForBox, start: CGPoint(x: 40, y: -0), end: CGPoint(x: 40, y: 30), options: [])
        context.restoreGState()


        //// Text Drawing
        let textPath = UIBezierPath()
        textPath.move(to: CGPoint(x: 29.26, y: 15.58))
        textPath.addLine(to: CGPoint(x: 31.08, y: 10.58))
        textPath.addLine(to: CGPoint(x: 31.11, y: 10.58))
        textPath.addLine(to: CGPoint(x: 32.89, y: 15.58))
        textPath.addLine(to: CGPoint(x: 29.26, y: 15.58))
        textPath.close()
        textPath.move(to: CGPoint(x: 30.33, y: 9.29))
        textPath.addLine(to: CGPoint(x: 26.16, y: 20))
        textPath.addLine(to: CGPoint(x: 27.61, y: 20))
        textPath.addLine(to: CGPoint(x: 28.81, y: 16.78))
        textPath.addLine(to: CGPoint(x: 33.34, y: 16.78))
        textPath.addLine(to: CGPoint(x: 34.51, y: 20))
        textPath.addLine(to: CGPoint(x: 36.09, y: 20))
        textPath.addLine(to: CGPoint(x: 31.9, y: 9.29))
        textPath.addLine(to: CGPoint(x: 30.33, y: 9.29))
        textPath.close()
        textPath.move(to: CGPoint(x: 37.86, y: 16.19))
        textPath.addCurve(to: CGPoint(x: 37.98, y: 15.08), controlPoint1: CGPoint(x: 37.86, y: 15.81), controlPoint2: CGPoint(x: 37.89, y: 15.44))
        textPath.addCurve(to: CGPoint(x: 38.37, y: 14.12), controlPoint1: CGPoint(x: 38.06, y: 14.72), controlPoint2: CGPoint(x: 38.18, y: 14.4))
        textPath.addCurve(to: CGPoint(x: 39.09, y: 13.44), controlPoint1: CGPoint(x: 38.55, y: 13.84), controlPoint2: CGPoint(x: 38.78, y: 13.62))
        textPath.addCurve(to: CGPoint(x: 40.18, y: 13.19), controlPoint1: CGPoint(x: 39.39, y: 13.27), controlPoint2: CGPoint(x: 39.75, y: 13.19))
        textPath.addCurve(to: CGPoint(x: 41.31, y: 13.44), controlPoint1: CGPoint(x: 40.62, y: 13.19), controlPoint2: CGPoint(x: 40.99, y: 13.27))
        textPath.addCurve(to: CGPoint(x: 42.06, y: 14.09), controlPoint1: CGPoint(x: 41.62, y: 13.6), controlPoint2: CGPoint(x: 41.87, y: 13.82))
        textPath.addCurve(to: CGPoint(x: 42.49, y: 15.03), controlPoint1: CGPoint(x: 42.26, y: 14.36), controlPoint2: CGPoint(x: 42.4, y: 14.67))
        textPath.addCurve(to: CGPoint(x: 42.62, y: 16.13), controlPoint1: CGPoint(x: 42.58, y: 15.38), controlPoint2: CGPoint(x: 42.62, y: 15.75))
        textPath.addCurve(to: CGPoint(x: 42.5, y: 17.19), controlPoint1: CGPoint(x: 42.62, y: 16.49), controlPoint2: CGPoint(x: 42.58, y: 16.84))
        textPath.addCurve(to: CGPoint(x: 42.09, y: 18.13), controlPoint1: CGPoint(x: 42.41, y: 17.55), controlPoint2: CGPoint(x: 42.28, y: 17.86))
        textPath.addCurve(to: CGPoint(x: 41.35, y: 18.8), controlPoint1: CGPoint(x: 41.89, y: 18.41), controlPoint2: CGPoint(x: 41.65, y: 18.63))
        textPath.addCurve(to: CGPoint(x: 40.26, y: 19.06), controlPoint1: CGPoint(x: 41.05, y: 18.97), controlPoint2: CGPoint(x: 40.69, y: 19.06))
        textPath.addCurve(to: CGPoint(x: 39.18, y: 18.81), controlPoint1: CGPoint(x: 39.84, y: 19.06), controlPoint2: CGPoint(x: 39.49, y: 18.98))
        textPath.addCurve(to: CGPoint(x: 38.43, y: 18.17), controlPoint1: CGPoint(x: 38.88, y: 18.65), controlPoint2: CGPoint(x: 38.63, y: 18.44))
        textPath.addCurve(to: CGPoint(x: 38, y: 17.25), controlPoint1: CGPoint(x: 38.24, y: 17.9), controlPoint2: CGPoint(x: 38.09, y: 17.59))
        textPath.addCurve(to: CGPoint(x: 37.86, y: 16.19), controlPoint1: CGPoint(x: 37.9, y: 16.9), controlPoint2: CGPoint(x: 37.86, y: 16.55))
        textPath.close()
        textPath.move(to: CGPoint(x: 43.86, y: 20))
        textPath.addLine(to: CGPoint(x: 43.86, y: 9.29))
        textPath.addLine(to: CGPoint(x: 42.58, y: 9.29))
        textPath.addLine(to: CGPoint(x: 42.58, y: 13.28))
        textPath.addLine(to: CGPoint(x: 42.55, y: 13.28))
        textPath.addCurve(to: CGPoint(x: 42.03, y: 12.7), controlPoint1: CGPoint(x: 42.41, y: 13.05), controlPoint2: CGPoint(x: 42.24, y: 12.86))
        textPath.addCurve(to: CGPoint(x: 41.38, y: 12.33), controlPoint1: CGPoint(x: 41.83, y: 12.55), controlPoint2: CGPoint(x: 41.61, y: 12.42))
        textPath.addCurve(to: CGPoint(x: 40.69, y: 12.12), controlPoint1: CGPoint(x: 41.15, y: 12.23), controlPoint2: CGPoint(x: 40.92, y: 12.17))
        textPath.addCurve(to: CGPoint(x: 40.05, y: 12.06), controlPoint1: CGPoint(x: 40.46, y: 12.08), controlPoint2: CGPoint(x: 40.25, y: 12.06))
        textPath.addCurve(to: CGPoint(x: 38.49, y: 12.39), controlPoint1: CGPoint(x: 39.45, y: 12.06), controlPoint2: CGPoint(x: 38.94, y: 12.17))
        textPath.addCurve(to: CGPoint(x: 37.38, y: 13.26), controlPoint1: CGPoint(x: 38.05, y: 12.6), controlPoint2: CGPoint(x: 37.68, y: 12.89))
        textPath.addCurve(to: CGPoint(x: 36.72, y: 14.54), controlPoint1: CGPoint(x: 37.09, y: 13.62), controlPoint2: CGPoint(x: 36.87, y: 14.05))
        textPath.addCurve(to: CGPoint(x: 36.51, y: 16.1), controlPoint1: CGPoint(x: 36.58, y: 15.03), controlPoint2: CGPoint(x: 36.51, y: 15.55))
        textPath.addCurve(to: CGPoint(x: 36.73, y: 17.66), controlPoint1: CGPoint(x: 36.51, y: 16.65), controlPoint2: CGPoint(x: 36.58, y: 17.17))
        textPath.addCurve(to: CGPoint(x: 37.4, y: 18.95), controlPoint1: CGPoint(x: 36.88, y: 18.15), controlPoint2: CGPoint(x: 37.1, y: 18.58))
        textPath.addCurve(to: CGPoint(x: 38.51, y: 19.84), controlPoint1: CGPoint(x: 37.69, y: 19.32), controlPoint2: CGPoint(x: 38.06, y: 19.61))
        textPath.addCurve(to: CGPoint(x: 40.08, y: 20.16), controlPoint1: CGPoint(x: 38.95, y: 20.06), controlPoint2: CGPoint(x: 39.47, y: 20.16))
        textPath.addCurve(to: CGPoint(x: 41.56, y: 19.88), controlPoint1: CGPoint(x: 40.62, y: 20.16), controlPoint2: CGPoint(x: 41.11, y: 20.07))
        textPath.addCurve(to: CGPoint(x: 42.55, y: 18.95), controlPoint1: CGPoint(x: 42.01, y: 19.69), controlPoint2: CGPoint(x: 42.34, y: 19.38))
        textPath.addLine(to: CGPoint(x: 42.58, y: 18.95))
        textPath.addLine(to: CGPoint(x: 42.58, y: 20))
        textPath.addLine(to: CGPoint(x: 43.86, y: 20))
        textPath.close()
        textPath.move(to: CGPoint(x: 46.75, y: 16.19))
        textPath.addCurve(to: CGPoint(x: 46.87, y: 15.08), controlPoint1: CGPoint(x: 46.75, y: 15.81), controlPoint2: CGPoint(x: 46.79, y: 15.44))
        textPath.addCurve(to: CGPoint(x: 47.26, y: 14.12), controlPoint1: CGPoint(x: 46.95, y: 14.72), controlPoint2: CGPoint(x: 47.08, y: 14.4))
        textPath.addCurve(to: CGPoint(x: 47.98, y: 13.44), controlPoint1: CGPoint(x: 47.44, y: 13.84), controlPoint2: CGPoint(x: 47.68, y: 13.62))
        textPath.addCurve(to: CGPoint(x: 49.08, y: 13.19), controlPoint1: CGPoint(x: 48.28, y: 13.27), controlPoint2: CGPoint(x: 48.64, y: 13.19))
        textPath.addCurve(to: CGPoint(x: 50.2, y: 13.44), controlPoint1: CGPoint(x: 49.52, y: 13.19), controlPoint2: CGPoint(x: 49.89, y: 13.27))
        textPath.addCurve(to: CGPoint(x: 50.96, y: 14.09), controlPoint1: CGPoint(x: 50.51, y: 13.6), controlPoint2: CGPoint(x: 50.76, y: 13.82))
        textPath.addCurve(to: CGPoint(x: 51.39, y: 15.03), controlPoint1: CGPoint(x: 51.15, y: 14.36), controlPoint2: CGPoint(x: 51.29, y: 14.67))
        textPath.addCurve(to: CGPoint(x: 51.52, y: 16.13), controlPoint1: CGPoint(x: 51.48, y: 15.38), controlPoint2: CGPoint(x: 51.52, y: 15.75))
        textPath.addCurve(to: CGPoint(x: 51.39, y: 17.19), controlPoint1: CGPoint(x: 51.52, y: 16.49), controlPoint2: CGPoint(x: 51.48, y: 16.84))
        textPath.addCurve(to: CGPoint(x: 50.98, y: 18.13), controlPoint1: CGPoint(x: 51.31, y: 17.55), controlPoint2: CGPoint(x: 51.17, y: 17.86))
        textPath.addCurve(to: CGPoint(x: 50.25, y: 18.8), controlPoint1: CGPoint(x: 50.79, y: 18.41), controlPoint2: CGPoint(x: 50.55, y: 18.63))
        textPath.addCurve(to: CGPoint(x: 49.15, y: 19.06), controlPoint1: CGPoint(x: 49.94, y: 18.97), controlPoint2: CGPoint(x: 49.58, y: 19.06))
        textPath.addCurve(to: CGPoint(x: 48.08, y: 18.81), controlPoint1: CGPoint(x: 48.74, y: 19.06), controlPoint2: CGPoint(x: 48.38, y: 18.98))
        textPath.addCurve(to: CGPoint(x: 47.33, y: 18.17), controlPoint1: CGPoint(x: 47.77, y: 18.65), controlPoint2: CGPoint(x: 47.52, y: 18.44))
        textPath.addCurve(to: CGPoint(x: 46.89, y: 17.25), controlPoint1: CGPoint(x: 47.13, y: 17.9), controlPoint2: CGPoint(x: 46.99, y: 17.59))
        textPath.addCurve(to: CGPoint(x: 46.75, y: 16.19), controlPoint1: CGPoint(x: 46.8, y: 16.9), controlPoint2: CGPoint(x: 46.75, y: 16.55))
        textPath.close()
        textPath.move(to: CGPoint(x: 52.75, y: 20))
        textPath.addLine(to: CGPoint(x: 52.75, y: 9.29))
        textPath.addLine(to: CGPoint(x: 51.47, y: 9.29))
        textPath.addLine(to: CGPoint(x: 51.47, y: 13.28))
        textPath.addLine(to: CGPoint(x: 51.44, y: 13.28))
        textPath.addCurve(to: CGPoint(x: 50.93, y: 12.7), controlPoint1: CGPoint(x: 51.3, y: 13.05), controlPoint2: CGPoint(x: 51.13, y: 12.86))
        textPath.addCurve(to: CGPoint(x: 50.28, y: 12.33), controlPoint1: CGPoint(x: 50.72, y: 12.55), controlPoint2: CGPoint(x: 50.51, y: 12.42))
        textPath.addCurve(to: CGPoint(x: 49.59, y: 12.12), controlPoint1: CGPoint(x: 50.04, y: 12.23), controlPoint2: CGPoint(x: 49.82, y: 12.17))
        textPath.addCurve(to: CGPoint(x: 48.94, y: 12.06), controlPoint1: CGPoint(x: 49.35, y: 12.08), controlPoint2: CGPoint(x: 49.14, y: 12.06))
        textPath.addCurve(to: CGPoint(x: 47.39, y: 12.39), controlPoint1: CGPoint(x: 48.35, y: 12.06), controlPoint2: CGPoint(x: 47.83, y: 12.17))
        textPath.addCurve(to: CGPoint(x: 46.28, y: 13.26), controlPoint1: CGPoint(x: 46.94, y: 12.6), controlPoint2: CGPoint(x: 46.57, y: 12.89))
        textPath.addCurve(to: CGPoint(x: 45.62, y: 14.54), controlPoint1: CGPoint(x: 45.98, y: 13.62), controlPoint2: CGPoint(x: 45.76, y: 14.05))
        textPath.addCurve(to: CGPoint(x: 45.4, y: 16.1), controlPoint1: CGPoint(x: 45.47, y: 15.03), controlPoint2: CGPoint(x: 45.4, y: 15.55))
        textPath.addCurve(to: CGPoint(x: 45.62, y: 17.66), controlPoint1: CGPoint(x: 45.4, y: 16.65), controlPoint2: CGPoint(x: 45.47, y: 17.17))
        textPath.addCurve(to: CGPoint(x: 46.29, y: 18.95), controlPoint1: CGPoint(x: 45.78, y: 18.15), controlPoint2: CGPoint(x: 46, y: 18.58))
        textPath.addCurve(to: CGPoint(x: 47.4, y: 19.84), controlPoint1: CGPoint(x: 46.59, y: 19.32), controlPoint2: CGPoint(x: 46.96, y: 19.61))
        textPath.addCurve(to: CGPoint(x: 48.97, y: 20.16), controlPoint1: CGPoint(x: 47.85, y: 20.06), controlPoint2: CGPoint(x: 48.37, y: 20.16))
        textPath.addCurve(to: CGPoint(x: 50.45, y: 19.88), controlPoint1: CGPoint(x: 49.51, y: 20.16), controlPoint2: CGPoint(x: 50, y: 20.07))
        textPath.addCurve(to: CGPoint(x: 51.44, y: 18.95), controlPoint1: CGPoint(x: 50.91, y: 19.69), controlPoint2: CGPoint(x: 51.23, y: 19.38))
        textPath.addLine(to: CGPoint(x: 51.47, y: 18.95))
        textPath.addLine(to: CGPoint(x: 51.47, y: 20))
        textPath.addLine(to: CGPoint(x: 52.75, y: 20))
        textPath.close()
        UIColor.white.setFill()
        textPath.fill()
    }

    @objc dynamic public class func drawResourceGroupHighlight() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!


        //// Gradient Declarations
        let gradient11 = CGGradient(colorsSpace: nil, colors: [ButtonsForFJ092018.blueGradientColor2.cgColor, ButtonsForFJ092018.gradientForBoxColor2.cgColor] as CFArray, locations: [0, 1])!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 80, height: 30))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(gradient11, start: CGPoint(x: 40, y: -0), end: CGPoint(x: 40, y: 30), options: [])
        context.restoreGState()


        //// Text Drawing
        let textPath = UIBezierPath()
        textPath.move(to: CGPoint(x: 30.26, y: 15.58))
        textPath.addLine(to: CGPoint(x: 32.08, y: 10.58))
        textPath.addLine(to: CGPoint(x: 32.11, y: 10.58))
        textPath.addLine(to: CGPoint(x: 33.89, y: 15.58))
        textPath.addLine(to: CGPoint(x: 30.26, y: 15.58))
        textPath.close()
        textPath.move(to: CGPoint(x: 31.33, y: 9.29))
        textPath.addLine(to: CGPoint(x: 27.16, y: 20))
        textPath.addLine(to: CGPoint(x: 28.61, y: 20))
        textPath.addLine(to: CGPoint(x: 29.81, y: 16.78))
        textPath.addLine(to: CGPoint(x: 34.34, y: 16.78))
        textPath.addLine(to: CGPoint(x: 35.51, y: 20))
        textPath.addLine(to: CGPoint(x: 37.09, y: 20))
        textPath.addLine(to: CGPoint(x: 32.9, y: 9.29))
        textPath.addLine(to: CGPoint(x: 31.33, y: 9.29))
        textPath.close()
        textPath.move(to: CGPoint(x: 38.86, y: 16.19))
        textPath.addCurve(to: CGPoint(x: 38.98, y: 15.08), controlPoint1: CGPoint(x: 38.86, y: 15.81), controlPoint2: CGPoint(x: 38.89, y: 15.44))
        textPath.addCurve(to: CGPoint(x: 39.37, y: 14.12), controlPoint1: CGPoint(x: 39.06, y: 14.72), controlPoint2: CGPoint(x: 39.18, y: 14.4))
        textPath.addCurve(to: CGPoint(x: 40.09, y: 13.44), controlPoint1: CGPoint(x: 39.55, y: 13.84), controlPoint2: CGPoint(x: 39.78, y: 13.62))
        textPath.addCurve(to: CGPoint(x: 41.18, y: 13.19), controlPoint1: CGPoint(x: 40.39, y: 13.27), controlPoint2: CGPoint(x: 40.75, y: 13.19))
        textPath.addCurve(to: CGPoint(x: 42.31, y: 13.44), controlPoint1: CGPoint(x: 41.62, y: 13.19), controlPoint2: CGPoint(x: 41.99, y: 13.27))
        textPath.addCurve(to: CGPoint(x: 43.06, y: 14.09), controlPoint1: CGPoint(x: 42.62, y: 13.6), controlPoint2: CGPoint(x: 42.87, y: 13.82))
        textPath.addCurve(to: CGPoint(x: 43.49, y: 15.03), controlPoint1: CGPoint(x: 43.26, y: 14.36), controlPoint2: CGPoint(x: 43.4, y: 14.67))
        textPath.addCurve(to: CGPoint(x: 43.62, y: 16.13), controlPoint1: CGPoint(x: 43.58, y: 15.38), controlPoint2: CGPoint(x: 43.62, y: 15.75))
        textPath.addCurve(to: CGPoint(x: 43.5, y: 17.19), controlPoint1: CGPoint(x: 43.62, y: 16.49), controlPoint2: CGPoint(x: 43.58, y: 16.84))
        textPath.addCurve(to: CGPoint(x: 43.09, y: 18.13), controlPoint1: CGPoint(x: 43.41, y: 17.55), controlPoint2: CGPoint(x: 43.28, y: 17.86))
        textPath.addCurve(to: CGPoint(x: 42.35, y: 18.8), controlPoint1: CGPoint(x: 42.89, y: 18.41), controlPoint2: CGPoint(x: 42.65, y: 18.63))
        textPath.addCurve(to: CGPoint(x: 41.26, y: 19.06), controlPoint1: CGPoint(x: 42.05, y: 18.97), controlPoint2: CGPoint(x: 41.69, y: 19.06))
        textPath.addCurve(to: CGPoint(x: 40.18, y: 18.81), controlPoint1: CGPoint(x: 40.84, y: 19.06), controlPoint2: CGPoint(x: 40.49, y: 18.98))
        textPath.addCurve(to: CGPoint(x: 39.43, y: 18.17), controlPoint1: CGPoint(x: 39.88, y: 18.65), controlPoint2: CGPoint(x: 39.63, y: 18.44))
        textPath.addCurve(to: CGPoint(x: 39, y: 17.25), controlPoint1: CGPoint(x: 39.24, y: 17.9), controlPoint2: CGPoint(x: 39.09, y: 17.59))
        textPath.addCurve(to: CGPoint(x: 38.86, y: 16.19), controlPoint1: CGPoint(x: 38.9, y: 16.9), controlPoint2: CGPoint(x: 38.86, y: 16.55))
        textPath.close()
        textPath.move(to: CGPoint(x: 44.86, y: 20))
        textPath.addLine(to: CGPoint(x: 44.86, y: 9.29))
        textPath.addLine(to: CGPoint(x: 43.58, y: 9.29))
        textPath.addLine(to: CGPoint(x: 43.58, y: 13.28))
        textPath.addLine(to: CGPoint(x: 43.55, y: 13.28))
        textPath.addCurve(to: CGPoint(x: 43.03, y: 12.7), controlPoint1: CGPoint(x: 43.41, y: 13.05), controlPoint2: CGPoint(x: 43.24, y: 12.86))
        textPath.addCurve(to: CGPoint(x: 42.38, y: 12.33), controlPoint1: CGPoint(x: 42.83, y: 12.55), controlPoint2: CGPoint(x: 42.61, y: 12.42))
        textPath.addCurve(to: CGPoint(x: 41.69, y: 12.12), controlPoint1: CGPoint(x: 42.15, y: 12.23), controlPoint2: CGPoint(x: 41.92, y: 12.17))
        textPath.addCurve(to: CGPoint(x: 41.05, y: 12.06), controlPoint1: CGPoint(x: 41.46, y: 12.08), controlPoint2: CGPoint(x: 41.25, y: 12.06))
        textPath.addCurve(to: CGPoint(x: 39.49, y: 12.39), controlPoint1: CGPoint(x: 40.45, y: 12.06), controlPoint2: CGPoint(x: 39.94, y: 12.17))
        textPath.addCurve(to: CGPoint(x: 38.38, y: 13.26), controlPoint1: CGPoint(x: 39.05, y: 12.6), controlPoint2: CGPoint(x: 38.68, y: 12.89))
        textPath.addCurve(to: CGPoint(x: 37.72, y: 14.54), controlPoint1: CGPoint(x: 38.09, y: 13.62), controlPoint2: CGPoint(x: 37.87, y: 14.05))
        textPath.addCurve(to: CGPoint(x: 37.51, y: 16.1), controlPoint1: CGPoint(x: 37.58, y: 15.03), controlPoint2: CGPoint(x: 37.51, y: 15.55))
        textPath.addCurve(to: CGPoint(x: 37.73, y: 17.66), controlPoint1: CGPoint(x: 37.51, y: 16.65), controlPoint2: CGPoint(x: 37.58, y: 17.17))
        textPath.addCurve(to: CGPoint(x: 38.4, y: 18.95), controlPoint1: CGPoint(x: 37.88, y: 18.15), controlPoint2: CGPoint(x: 38.1, y: 18.58))
        textPath.addCurve(to: CGPoint(x: 39.51, y: 19.84), controlPoint1: CGPoint(x: 38.69, y: 19.32), controlPoint2: CGPoint(x: 39.06, y: 19.61))
        textPath.addCurve(to: CGPoint(x: 41.08, y: 20.16), controlPoint1: CGPoint(x: 39.95, y: 20.06), controlPoint2: CGPoint(x: 40.47, y: 20.16))
        textPath.addCurve(to: CGPoint(x: 42.56, y: 19.88), controlPoint1: CGPoint(x: 41.62, y: 20.16), controlPoint2: CGPoint(x: 42.11, y: 20.07))
        textPath.addCurve(to: CGPoint(x: 43.55, y: 18.95), controlPoint1: CGPoint(x: 43.01, y: 19.69), controlPoint2: CGPoint(x: 43.34, y: 19.38))
        textPath.addLine(to: CGPoint(x: 43.58, y: 18.95))
        textPath.addLine(to: CGPoint(x: 43.58, y: 20))
        textPath.addLine(to: CGPoint(x: 44.86, y: 20))
        textPath.close()
        textPath.move(to: CGPoint(x: 47.75, y: 16.19))
        textPath.addCurve(to: CGPoint(x: 47.87, y: 15.08), controlPoint1: CGPoint(x: 47.75, y: 15.81), controlPoint2: CGPoint(x: 47.79, y: 15.44))
        textPath.addCurve(to: CGPoint(x: 48.26, y: 14.12), controlPoint1: CGPoint(x: 47.95, y: 14.72), controlPoint2: CGPoint(x: 48.08, y: 14.4))
        textPath.addCurve(to: CGPoint(x: 48.98, y: 13.44), controlPoint1: CGPoint(x: 48.44, y: 13.84), controlPoint2: CGPoint(x: 48.68, y: 13.62))
        textPath.addCurve(to: CGPoint(x: 50.08, y: 13.19), controlPoint1: CGPoint(x: 49.28, y: 13.27), controlPoint2: CGPoint(x: 49.64, y: 13.19))
        textPath.addCurve(to: CGPoint(x: 51.2, y: 13.44), controlPoint1: CGPoint(x: 50.52, y: 13.19), controlPoint2: CGPoint(x: 50.89, y: 13.27))
        textPath.addCurve(to: CGPoint(x: 51.96, y: 14.09), controlPoint1: CGPoint(x: 51.51, y: 13.6), controlPoint2: CGPoint(x: 51.76, y: 13.82))
        textPath.addCurve(to: CGPoint(x: 52.39, y: 15.03), controlPoint1: CGPoint(x: 52.15, y: 14.36), controlPoint2: CGPoint(x: 52.29, y: 14.67))
        textPath.addCurve(to: CGPoint(x: 52.52, y: 16.13), controlPoint1: CGPoint(x: 52.48, y: 15.38), controlPoint2: CGPoint(x: 52.52, y: 15.75))
        textPath.addCurve(to: CGPoint(x: 52.39, y: 17.19), controlPoint1: CGPoint(x: 52.52, y: 16.49), controlPoint2: CGPoint(x: 52.48, y: 16.84))
        textPath.addCurve(to: CGPoint(x: 51.98, y: 18.13), controlPoint1: CGPoint(x: 52.31, y: 17.55), controlPoint2: CGPoint(x: 52.17, y: 17.86))
        textPath.addCurve(to: CGPoint(x: 51.25, y: 18.8), controlPoint1: CGPoint(x: 51.79, y: 18.41), controlPoint2: CGPoint(x: 51.55, y: 18.63))
        textPath.addCurve(to: CGPoint(x: 50.15, y: 19.06), controlPoint1: CGPoint(x: 50.94, y: 18.97), controlPoint2: CGPoint(x: 50.58, y: 19.06))
        textPath.addCurve(to: CGPoint(x: 49.08, y: 18.81), controlPoint1: CGPoint(x: 49.74, y: 19.06), controlPoint2: CGPoint(x: 49.38, y: 18.98))
        textPath.addCurve(to: CGPoint(x: 48.33, y: 18.17), controlPoint1: CGPoint(x: 48.77, y: 18.65), controlPoint2: CGPoint(x: 48.52, y: 18.44))
        textPath.addCurve(to: CGPoint(x: 47.89, y: 17.25), controlPoint1: CGPoint(x: 48.13, y: 17.9), controlPoint2: CGPoint(x: 47.99, y: 17.59))
        textPath.addCurve(to: CGPoint(x: 47.75, y: 16.19), controlPoint1: CGPoint(x: 47.8, y: 16.9), controlPoint2: CGPoint(x: 47.75, y: 16.55))
        textPath.close()
        textPath.move(to: CGPoint(x: 53.75, y: 20))
        textPath.addLine(to: CGPoint(x: 53.75, y: 9.29))
        textPath.addLine(to: CGPoint(x: 52.47, y: 9.29))
        textPath.addLine(to: CGPoint(x: 52.47, y: 13.28))
        textPath.addLine(to: CGPoint(x: 52.44, y: 13.28))
        textPath.addCurve(to: CGPoint(x: 51.93, y: 12.7), controlPoint1: CGPoint(x: 52.3, y: 13.05), controlPoint2: CGPoint(x: 52.13, y: 12.86))
        textPath.addCurve(to: CGPoint(x: 51.28, y: 12.33), controlPoint1: CGPoint(x: 51.72, y: 12.55), controlPoint2: CGPoint(x: 51.51, y: 12.42))
        textPath.addCurve(to: CGPoint(x: 50.59, y: 12.12), controlPoint1: CGPoint(x: 51.04, y: 12.23), controlPoint2: CGPoint(x: 50.82, y: 12.17))
        textPath.addCurve(to: CGPoint(x: 49.94, y: 12.06), controlPoint1: CGPoint(x: 50.35, y: 12.08), controlPoint2: CGPoint(x: 50.14, y: 12.06))
        textPath.addCurve(to: CGPoint(x: 48.39, y: 12.39), controlPoint1: CGPoint(x: 49.35, y: 12.06), controlPoint2: CGPoint(x: 48.83, y: 12.17))
        textPath.addCurve(to: CGPoint(x: 47.28, y: 13.26), controlPoint1: CGPoint(x: 47.94, y: 12.6), controlPoint2: CGPoint(x: 47.57, y: 12.89))
        textPath.addCurve(to: CGPoint(x: 46.62, y: 14.54), controlPoint1: CGPoint(x: 46.98, y: 13.62), controlPoint2: CGPoint(x: 46.76, y: 14.05))
        textPath.addCurve(to: CGPoint(x: 46.4, y: 16.1), controlPoint1: CGPoint(x: 46.47, y: 15.03), controlPoint2: CGPoint(x: 46.4, y: 15.55))
        textPath.addCurve(to: CGPoint(x: 46.62, y: 17.66), controlPoint1: CGPoint(x: 46.4, y: 16.65), controlPoint2: CGPoint(x: 46.47, y: 17.17))
        textPath.addCurve(to: CGPoint(x: 47.29, y: 18.95), controlPoint1: CGPoint(x: 46.78, y: 18.15), controlPoint2: CGPoint(x: 47, y: 18.58))
        textPath.addCurve(to: CGPoint(x: 48.4, y: 19.84), controlPoint1: CGPoint(x: 47.59, y: 19.32), controlPoint2: CGPoint(x: 47.96, y: 19.61))
        textPath.addCurve(to: CGPoint(x: 49.97, y: 20.16), controlPoint1: CGPoint(x: 48.85, y: 20.06), controlPoint2: CGPoint(x: 49.37, y: 20.16))
        textPath.addCurve(to: CGPoint(x: 51.45, y: 19.88), controlPoint1: CGPoint(x: 50.51, y: 20.16), controlPoint2: CGPoint(x: 51, y: 20.07))
        textPath.addCurve(to: CGPoint(x: 52.44, y: 18.95), controlPoint1: CGPoint(x: 51.91, y: 19.69), controlPoint2: CGPoint(x: 52.23, y: 19.38))
        textPath.addLine(to: CGPoint(x: 52.47, y: 18.95))
        textPath.addLine(to: CGPoint(x: 52.47, y: 20))
        textPath.addLine(to: CGPoint(x: 53.75, y: 20))
        textPath.close()
        UIColor.white.setFill()
        textPath.fill()
    }

    @objc dynamic public class func drawSubscribeone() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!


        //// Gradient Declarations
        let gradient11 = CGGradient(colorsSpace: nil, colors: [ButtonsForFJ092018.blueGradientColor2.cgColor, ButtonsForFJ092018.gradientForBoxColor2.cgColor] as CFArray, locations: [0, 1])!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 170, height: 47))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(gradient11, start: CGPoint(x: 85, y: -0), end: CGPoint(x: 85, y: 47), options: [])
        context.restoreGState()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 0, y: 123, width: 170, height: 47))
        context.saveGState()
        rectangle2Path.addClip()
        context.drawLinearGradient(gradient11, start: CGPoint(x: 85, y: 123), end: CGPoint(x: 85, y: 170), options: [])
        context.restoreGState()


        //// Text 4 Drawing
        let text4Path = UIBezierPath()
        text4Path.move(to: CGPoint(x: 52.38, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 52.38, y: 30))
        text4Path.addLine(to: CGPoint(x: 54.09, y: 30))
        text4Path.addLine(to: CGPoint(x: 54.09, y: 18.71))
        text4Path.addLine(to: CGPoint(x: 54.12, y: 18.71))
        text4Path.addLine(to: CGPoint(x: 58.36, y: 30))
        text4Path.addLine(to: CGPoint(x: 59.9, y: 30))
        text4Path.addLine(to: CGPoint(x: 64.14, y: 18.71))
        text4Path.addLine(to: CGPoint(x: 64.18, y: 18.71))
        text4Path.addLine(to: CGPoint(x: 64.18, y: 30))
        text4Path.addLine(to: CGPoint(x: 65.89, y: 30))
        text4Path.addLine(to: CGPoint(x: 65.89, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 63.42, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 59.12, y: 27.83))
        text4Path.addLine(to: CGPoint(x: 54.85, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 52.38, y: 16.43))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 69.8, y: 25.1))
        text4Path.addCurve(to: CGPoint(x: 70.04, y: 23.51), controlPoint1: CGPoint(x: 69.8, y: 24.5), controlPoint2: CGPoint(x: 69.88, y: 23.97))
        text4Path.addCurve(to: CGPoint(x: 70.69, y: 22.34), controlPoint1: CGPoint(x: 70.2, y: 23.05), controlPoint2: CGPoint(x: 70.41, y: 22.66))
        text4Path.addCurve(to: CGPoint(x: 71.67, y: 21.62), controlPoint1: CGPoint(x: 70.97, y: 22.03), controlPoint2: CGPoint(x: 71.3, y: 21.79))
        text4Path.addCurve(to: CGPoint(x: 72.86, y: 21.37), controlPoint1: CGPoint(x: 72.05, y: 21.46), controlPoint2: CGPoint(x: 72.44, y: 21.37))
        text4Path.addCurve(to: CGPoint(x: 74.05, y: 21.62), controlPoint1: CGPoint(x: 73.28, y: 21.37), controlPoint2: CGPoint(x: 73.67, y: 21.46))
        text4Path.addCurve(to: CGPoint(x: 75.03, y: 22.34), controlPoint1: CGPoint(x: 74.42, y: 21.79), controlPoint2: CGPoint(x: 74.75, y: 22.03))
        text4Path.addCurve(to: CGPoint(x: 75.68, y: 23.51), controlPoint1: CGPoint(x: 75.3, y: 22.66), controlPoint2: CGPoint(x: 75.52, y: 23.05))
        text4Path.addCurve(to: CGPoint(x: 75.92, y: 25.1), controlPoint1: CGPoint(x: 75.84, y: 23.97), controlPoint2: CGPoint(x: 75.92, y: 24.5))
        text4Path.addCurve(to: CGPoint(x: 75.68, y: 26.68), controlPoint1: CGPoint(x: 75.92, y: 25.69), controlPoint2: CGPoint(x: 75.84, y: 26.22))
        text4Path.addCurve(to: CGPoint(x: 75.03, y: 27.84), controlPoint1: CGPoint(x: 75.52, y: 27.15), controlPoint2: CGPoint(x: 75.3, y: 27.53))
        text4Path.addCurve(to: CGPoint(x: 74.05, y: 28.56), controlPoint1: CGPoint(x: 74.75, y: 28.15), controlPoint2: CGPoint(x: 74.42, y: 28.39))
        text4Path.addCurve(to: CGPoint(x: 72.86, y: 28.8), controlPoint1: CGPoint(x: 73.67, y: 28.72), controlPoint2: CGPoint(x: 73.28, y: 28.8))
        text4Path.addCurve(to: CGPoint(x: 71.67, y: 28.56), controlPoint1: CGPoint(x: 72.44, y: 28.8), controlPoint2: CGPoint(x: 72.05, y: 28.72))
        text4Path.addCurve(to: CGPoint(x: 70.69, y: 27.84), controlPoint1: CGPoint(x: 71.3, y: 28.39), controlPoint2: CGPoint(x: 70.97, y: 28.15))
        text4Path.addCurve(to: CGPoint(x: 70.04, y: 26.68), controlPoint1: CGPoint(x: 70.41, y: 27.53), controlPoint2: CGPoint(x: 70.2, y: 27.15))
        text4Path.addCurve(to: CGPoint(x: 69.8, y: 25.1), controlPoint1: CGPoint(x: 69.88, y: 26.22), controlPoint2: CGPoint(x: 69.8, y: 25.69))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 68.09, y: 25.1))
        text4Path.addCurve(to: CGPoint(x: 68.39, y: 27.11), controlPoint1: CGPoint(x: 68.09, y: 25.82), controlPoint2: CGPoint(x: 68.19, y: 26.49))
        text4Path.addCurve(to: CGPoint(x: 69.31, y: 28.74), controlPoint1: CGPoint(x: 68.6, y: 27.73), controlPoint2: CGPoint(x: 68.9, y: 28.27))
        text4Path.addCurve(to: CGPoint(x: 70.81, y: 29.82), controlPoint1: CGPoint(x: 69.71, y: 29.2), controlPoint2: CGPoint(x: 70.21, y: 29.56))
        text4Path.addCurve(to: CGPoint(x: 72.86, y: 30.21), controlPoint1: CGPoint(x: 71.4, y: 30.08), controlPoint2: CGPoint(x: 72.09, y: 30.21))
        text4Path.addCurve(to: CGPoint(x: 74.92, y: 29.82), controlPoint1: CGPoint(x: 73.64, y: 30.21), controlPoint2: CGPoint(x: 74.33, y: 30.08))
        text4Path.addCurve(to: CGPoint(x: 76.41, y: 28.74), controlPoint1: CGPoint(x: 75.51, y: 29.56), controlPoint2: CGPoint(x: 76.01, y: 29.2))
        text4Path.addCurve(to: CGPoint(x: 77.32, y: 27.11), controlPoint1: CGPoint(x: 76.82, y: 28.27), controlPoint2: CGPoint(x: 77.12, y: 27.73))
        text4Path.addCurve(to: CGPoint(x: 77.63, y: 25.1), controlPoint1: CGPoint(x: 77.53, y: 26.49), controlPoint2: CGPoint(x: 77.63, y: 25.82))
        text4Path.addCurve(to: CGPoint(x: 77.32, y: 23.07), controlPoint1: CGPoint(x: 77.63, y: 24.38), controlPoint2: CGPoint(x: 77.53, y: 23.7))
        text4Path.addCurve(to: CGPoint(x: 76.41, y: 21.44), controlPoint1: CGPoint(x: 77.12, y: 22.45), controlPoint2: CGPoint(x: 76.82, y: 21.9))
        text4Path.addCurve(to: CGPoint(x: 74.92, y: 20.35), controlPoint1: CGPoint(x: 76.01, y: 20.98), controlPoint2: CGPoint(x: 75.51, y: 20.61))
        text4Path.addCurve(to: CGPoint(x: 72.86, y: 19.95), controlPoint1: CGPoint(x: 74.33, y: 20.08), controlPoint2: CGPoint(x: 73.64, y: 19.95))
        text4Path.addCurve(to: CGPoint(x: 70.81, y: 20.35), controlPoint1: CGPoint(x: 72.09, y: 19.95), controlPoint2: CGPoint(x: 71.4, y: 20.08))
        text4Path.addCurve(to: CGPoint(x: 69.31, y: 21.44), controlPoint1: CGPoint(x: 70.21, y: 20.61), controlPoint2: CGPoint(x: 69.71, y: 20.98))
        text4Path.addCurve(to: CGPoint(x: 68.39, y: 23.07), controlPoint1: CGPoint(x: 68.9, y: 21.9), controlPoint2: CGPoint(x: 68.6, y: 22.45))
        text4Path.addCurve(to: CGPoint(x: 68.09, y: 25.1), controlPoint1: CGPoint(x: 68.19, y: 23.7), controlPoint2: CGPoint(x: 68.09, y: 24.38))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 79.53, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 79.53, y: 30))
        text4Path.addLine(to: CGPoint(x: 81.14, y: 30))
        text4Path.addLine(to: CGPoint(x: 81.14, y: 24.45))
        text4Path.addCurve(to: CGPoint(x: 81.32, y: 23.23), controlPoint1: CGPoint(x: 81.14, y: 24.01), controlPoint2: CGPoint(x: 81.2, y: 23.6))
        text4Path.addCurve(to: CGPoint(x: 81.86, y: 22.25), controlPoint1: CGPoint(x: 81.44, y: 22.85), controlPoint2: CGPoint(x: 81.62, y: 22.53))
        text4Path.addCurve(to: CGPoint(x: 82.77, y: 21.6), controlPoint1: CGPoint(x: 82.11, y: 21.97), controlPoint2: CGPoint(x: 82.41, y: 21.75))
        text4Path.addCurve(to: CGPoint(x: 84.05, y: 21.37), controlPoint1: CGPoint(x: 83.13, y: 21.45), controlPoint2: CGPoint(x: 83.56, y: 21.37))
        text4Path.addCurve(to: CGPoint(x: 85.51, y: 21.91), controlPoint1: CGPoint(x: 84.67, y: 21.37), controlPoint2: CGPoint(x: 85.16, y: 21.55))
        text4Path.addCurve(to: CGPoint(x: 86.04, y: 23.35), controlPoint1: CGPoint(x: 85.87, y: 22.26), controlPoint2: CGPoint(x: 86.05, y: 22.74))
        text4Path.addLine(to: CGPoint(x: 86.04, y: 30))
        text4Path.addLine(to: CGPoint(x: 87.66, y: 30))
        text4Path.addLine(to: CGPoint(x: 87.66, y: 23.54))
        text4Path.addCurve(to: CGPoint(x: 87.5, y: 22.09), controlPoint1: CGPoint(x: 87.66, y: 23.01), controlPoint2: CGPoint(x: 87.61, y: 22.52))
        text4Path.addCurve(to: CGPoint(x: 86.94, y: 20.96), controlPoint1: CGPoint(x: 87.39, y: 21.65), controlPoint2: CGPoint(x: 87.2, y: 21.27))
        text4Path.addCurve(to: CGPoint(x: 85.89, y: 20.22), controlPoint1: CGPoint(x: 86.67, y: 20.64), controlPoint2: CGPoint(x: 86.32, y: 20.39))
        text4Path.addCurve(to: CGPoint(x: 84.28, y: 19.95), controlPoint1: CGPoint(x: 85.46, y: 20.04), controlPoint2: CGPoint(x: 84.92, y: 19.95))
        text4Path.addCurve(to: CGPoint(x: 81.09, y: 21.74), controlPoint1: CGPoint(x: 82.82, y: 19.95), controlPoint2: CGPoint(x: 81.76, y: 20.54))
        text4Path.addLine(to: CGPoint(x: 81.05, y: 21.74))
        text4Path.addLine(to: CGPoint(x: 81.05, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 79.53, y: 20.18))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 92.33, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 92.33, y: 17.23))
        text4Path.addLine(to: CGPoint(x: 90.72, y: 17.23))
        text4Path.addLine(to: CGPoint(x: 90.72, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 89.05, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 89.05, y: 21.6))
        text4Path.addLine(to: CGPoint(x: 90.72, y: 21.6))
        text4Path.addLine(to: CGPoint(x: 90.72, y: 27.85))
        text4Path.addCurve(to: CGPoint(x: 90.85, y: 28.95), controlPoint1: CGPoint(x: 90.72, y: 28.31), controlPoint2: CGPoint(x: 90.76, y: 28.68))
        text4Path.addCurve(to: CGPoint(x: 91.26, y: 29.6), controlPoint1: CGPoint(x: 90.94, y: 29.23), controlPoint2: CGPoint(x: 91.08, y: 29.45))
        text4Path.addCurve(to: CGPoint(x: 91.98, y: 29.91), controlPoint1: CGPoint(x: 91.44, y: 29.75), controlPoint2: CGPoint(x: 91.68, y: 29.86))
        text4Path.addCurve(to: CGPoint(x: 93.06, y: 30), controlPoint1: CGPoint(x: 92.28, y: 29.97), controlPoint2: CGPoint(x: 92.64, y: 30))
        text4Path.addLine(to: CGPoint(x: 94.29, y: 30))
        text4Path.addLine(to: CGPoint(x: 94.29, y: 28.57))
        text4Path.addLine(to: CGPoint(x: 93.55, y: 28.57))
        text4Path.addCurve(to: CGPoint(x: 92.93, y: 28.55), controlPoint1: CGPoint(x: 93.3, y: 28.57), controlPoint2: CGPoint(x: 93.09, y: 28.57))
        text4Path.addCurve(to: CGPoint(x: 92.56, y: 28.42), controlPoint1: CGPoint(x: 92.77, y: 28.53), controlPoint2: CGPoint(x: 92.65, y: 28.49))
        text4Path.addCurve(to: CGPoint(x: 92.38, y: 28.16), controlPoint1: CGPoint(x: 92.47, y: 28.36), controlPoint2: CGPoint(x: 92.41, y: 28.27))
        text4Path.addCurve(to: CGPoint(x: 92.33, y: 27.7), controlPoint1: CGPoint(x: 92.35, y: 28.04), controlPoint2: CGPoint(x: 92.33, y: 27.89))
        text4Path.addLine(to: CGPoint(x: 92.33, y: 21.6))
        text4Path.addLine(to: CGPoint(x: 94.29, y: 21.6))
        text4Path.addLine(to: CGPoint(x: 94.29, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 92.33, y: 20.18))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 96.08, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 96.08, y: 30))
        text4Path.addLine(to: CGPoint(x: 97.69, y: 30))
        text4Path.addLine(to: CGPoint(x: 97.69, y: 24.45))
        text4Path.addCurve(to: CGPoint(x: 97.87, y: 23.23), controlPoint1: CGPoint(x: 97.69, y: 24.01), controlPoint2: CGPoint(x: 97.75, y: 23.6))
        text4Path.addCurve(to: CGPoint(x: 98.41, y: 22.25), controlPoint1: CGPoint(x: 97.99, y: 22.85), controlPoint2: CGPoint(x: 98.17, y: 22.53))
        text4Path.addCurve(to: CGPoint(x: 99.32, y: 21.6), controlPoint1: CGPoint(x: 98.65, y: 21.97), controlPoint2: CGPoint(x: 98.96, y: 21.75))
        text4Path.addCurve(to: CGPoint(x: 100.6, y: 21.37), controlPoint1: CGPoint(x: 99.68, y: 21.45), controlPoint2: CGPoint(x: 100.1, y: 21.37))
        text4Path.addCurve(to: CGPoint(x: 102.06, y: 21.91), controlPoint1: CGPoint(x: 101.22, y: 21.37), controlPoint2: CGPoint(x: 101.71, y: 21.55))
        text4Path.addCurve(to: CGPoint(x: 102.59, y: 23.35), controlPoint1: CGPoint(x: 102.42, y: 22.26), controlPoint2: CGPoint(x: 102.59, y: 22.74))
        text4Path.addLine(to: CGPoint(x: 102.59, y: 30))
        text4Path.addLine(to: CGPoint(x: 104.21, y: 30))
        text4Path.addLine(to: CGPoint(x: 104.21, y: 23.54))
        text4Path.addCurve(to: CGPoint(x: 104.05, y: 22.09), controlPoint1: CGPoint(x: 104.21, y: 23.01), controlPoint2: CGPoint(x: 104.16, y: 22.52))
        text4Path.addCurve(to: CGPoint(x: 103.49, y: 20.96), controlPoint1: CGPoint(x: 103.94, y: 21.65), controlPoint2: CGPoint(x: 103.75, y: 21.27))
        text4Path.addCurve(to: CGPoint(x: 102.44, y: 20.22), controlPoint1: CGPoint(x: 103.22, y: 20.64), controlPoint2: CGPoint(x: 102.87, y: 20.39))
        text4Path.addCurve(to: CGPoint(x: 100.83, y: 19.95), controlPoint1: CGPoint(x: 102.01, y: 20.04), controlPoint2: CGPoint(x: 101.47, y: 19.95))
        text4Path.addCurve(to: CGPoint(x: 99.92, y: 20.04), controlPoint1: CGPoint(x: 100.54, y: 19.95), controlPoint2: CGPoint(x: 100.23, y: 19.98))
        text4Path.addCurve(to: CGPoint(x: 99.03, y: 20.34), controlPoint1: CGPoint(x: 99.61, y: 20.11), controlPoint2: CGPoint(x: 99.32, y: 20.21))
        text4Path.addCurve(to: CGPoint(x: 98.26, y: 20.85), controlPoint1: CGPoint(x: 98.75, y: 20.47), controlPoint2: CGPoint(x: 98.49, y: 20.64))
        text4Path.addCurve(to: CGPoint(x: 97.73, y: 21.62), controlPoint1: CGPoint(x: 98.03, y: 21.06), controlPoint2: CGPoint(x: 97.86, y: 21.32))
        text4Path.addLine(to: CGPoint(x: 97.69, y: 21.62))
        text4Path.addLine(to: CGPoint(x: 97.69, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 96.08, y: 16.43))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 106.74, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 106.74, y: 30))
        text4Path.addLine(to: CGPoint(x: 108.35, y: 30))
        text4Path.addLine(to: CGPoint(x: 108.35, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 106.74, y: 16.43))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 114.72, y: 31.31))
        text4Path.addCurve(to: CGPoint(x: 114.16, y: 32.53), controlPoint1: CGPoint(x: 114.53, y: 31.79), controlPoint2: CGPoint(x: 114.34, y: 32.2))
        text4Path.addCurve(to: CGPoint(x: 113.55, y: 33.33), controlPoint1: CGPoint(x: 113.97, y: 32.86), controlPoint2: CGPoint(x: 113.77, y: 33.13))
        text4Path.addCurve(to: CGPoint(x: 112.81, y: 33.79), controlPoint1: CGPoint(x: 113.33, y: 33.54), controlPoint2: CGPoint(x: 113.08, y: 33.7))
        text4Path.addCurve(to: CGPoint(x: 111.87, y: 33.93), controlPoint1: CGPoint(x: 112.53, y: 33.89), controlPoint2: CGPoint(x: 112.22, y: 33.93))
        text4Path.addCurve(to: CGPoint(x: 111.3, y: 33.89), controlPoint1: CGPoint(x: 111.68, y: 33.93), controlPoint2: CGPoint(x: 111.49, y: 33.92))
        text4Path.addCurve(to: CGPoint(x: 110.75, y: 33.76), controlPoint1: CGPoint(x: 111.11, y: 33.87), controlPoint2: CGPoint(x: 110.92, y: 33.83))
        text4Path.addLine(to: CGPoint(x: 110.75, y: 32.28))
        text4Path.addCurve(to: CGPoint(x: 111.23, y: 32.44), controlPoint1: CGPoint(x: 110.88, y: 32.34), controlPoint2: CGPoint(x: 111.05, y: 32.4))
        text4Path.addCurve(to: CGPoint(x: 111.7, y: 32.51), controlPoint1: CGPoint(x: 111.41, y: 32.49), controlPoint2: CGPoint(x: 111.57, y: 32.51))
        text4Path.addCurve(to: CGPoint(x: 112.52, y: 32.27), controlPoint1: CGPoint(x: 112.02, y: 32.51), controlPoint2: CGPoint(x: 112.3, y: 32.43))
        text4Path.addCurve(to: CGPoint(x: 113.03, y: 31.6), controlPoint1: CGPoint(x: 112.74, y: 32.11), controlPoint2: CGPoint(x: 112.91, y: 31.89))
        text4Path.addLine(to: CGPoint(x: 113.69, y: 29.94))
        text4Path.addLine(to: CGPoint(x: 109.8, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 111.62, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 114.49, y: 28.21))
        text4Path.addLine(to: CGPoint(x: 114.53, y: 28.21))
        text4Path.addLine(to: CGPoint(x: 117.28, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 118.99, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 114.72, y: 31.31))
        text4Path.close()
        UIColor.white.setFill()
        text4Path.fill()


        //// Text Drawing
        let textPath = UIBezierPath()
        textPath.move(to: CGPoint(x: 29.24, y: 143.41))
        textPath.addLine(to: CGPoint(x: 30.95, y: 143.41))
        textPath.addCurve(to: CGPoint(x: 30.53, y: 141.48), controlPoint1: CGPoint(x: 30.93, y: 142.66), controlPoint2: CGPoint(x: 30.79, y: 142.01))
        textPath.addCurve(to: CGPoint(x: 29.46, y: 140.14), controlPoint1: CGPoint(x: 30.27, y: 140.94), controlPoint2: CGPoint(x: 29.91, y: 140.49))
        textPath.addCurve(to: CGPoint(x: 27.9, y: 139.36), controlPoint1: CGPoint(x: 29.01, y: 139.78), controlPoint2: CGPoint(x: 28.49, y: 139.52))
        textPath.addCurve(to: CGPoint(x: 25.96, y: 139.11), controlPoint1: CGPoint(x: 27.3, y: 139.19), controlPoint2: CGPoint(x: 26.65, y: 139.11))
        textPath.addCurve(to: CGPoint(x: 24.14, y: 139.35), controlPoint1: CGPoint(x: 25.34, y: 139.11), controlPoint2: CGPoint(x: 24.73, y: 139.19))
        textPath.addCurve(to: CGPoint(x: 22.57, y: 140.07), controlPoint1: CGPoint(x: 23.55, y: 139.51), controlPoint2: CGPoint(x: 23.03, y: 139.75))
        textPath.addCurve(to: CGPoint(x: 21.45, y: 141.31), controlPoint1: CGPoint(x: 22.1, y: 140.39), controlPoint2: CGPoint(x: 21.73, y: 140.81))
        textPath.addCurve(to: CGPoint(x: 21.04, y: 143.08), controlPoint1: CGPoint(x: 21.18, y: 141.81), controlPoint2: CGPoint(x: 21.04, y: 142.4))
        textPath.addCurve(to: CGPoint(x: 21.41, y: 144.63), controlPoint1: CGPoint(x: 21.04, y: 143.7), controlPoint2: CGPoint(x: 21.16, y: 144.22))
        textPath.addCurve(to: CGPoint(x: 22.39, y: 145.64), controlPoint1: CGPoint(x: 21.65, y: 145.04), controlPoint2: CGPoint(x: 21.98, y: 145.38))
        textPath.addCurve(to: CGPoint(x: 23.79, y: 146.26), controlPoint1: CGPoint(x: 22.81, y: 145.9), controlPoint2: CGPoint(x: 23.27, y: 146.11))
        textPath.addCurve(to: CGPoint(x: 25.38, y: 146.68), controlPoint1: CGPoint(x: 24.31, y: 146.42), controlPoint2: CGPoint(x: 24.84, y: 146.56))
        textPath.addCurve(to: CGPoint(x: 26.96, y: 147.03), controlPoint1: CGPoint(x: 25.92, y: 146.8), controlPoint2: CGPoint(x: 26.45, y: 146.92))
        textPath.addCurve(to: CGPoint(x: 28.36, y: 147.48), controlPoint1: CGPoint(x: 27.48, y: 147.15), controlPoint2: CGPoint(x: 27.95, y: 147.3))
        textPath.addCurve(to: CGPoint(x: 29.35, y: 148.19), controlPoint1: CGPoint(x: 28.77, y: 147.66), controlPoint2: CGPoint(x: 29.1, y: 147.9))
        textPath.addCurve(to: CGPoint(x: 29.72, y: 149.33), controlPoint1: CGPoint(x: 29.6, y: 148.48), controlPoint2: CGPoint(x: 29.72, y: 148.86))
        textPath.addCurve(to: CGPoint(x: 29.42, y: 150.55), controlPoint1: CGPoint(x: 29.72, y: 149.83), controlPoint2: CGPoint(x: 29.62, y: 150.23))
        textPath.addCurve(to: CGPoint(x: 28.62, y: 151.3), controlPoint1: CGPoint(x: 29.21, y: 150.87), controlPoint2: CGPoint(x: 28.95, y: 151.12))
        textPath.addCurve(to: CGPoint(x: 27.51, y: 151.69), controlPoint1: CGPoint(x: 28.29, y: 151.48), controlPoint2: CGPoint(x: 27.92, y: 151.61))
        textPath.addCurve(to: CGPoint(x: 26.28, y: 151.8), controlPoint1: CGPoint(x: 27.09, y: 151.77), controlPoint2: CGPoint(x: 26.69, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 24.8, y: 151.61), controlPoint1: CGPoint(x: 25.77, y: 151.8), controlPoint2: CGPoint(x: 25.28, y: 151.74))
        textPath.addCurve(to: CGPoint(x: 23.53, y: 151.02), controlPoint1: CGPoint(x: 24.32, y: 151.49), controlPoint2: CGPoint(x: 23.9, y: 151.29))
        textPath.addCurve(to: CGPoint(x: 22.66, y: 150.01), controlPoint1: CGPoint(x: 23.17, y: 150.76), controlPoint2: CGPoint(x: 22.88, y: 150.42))
        textPath.addCurve(to: CGPoint(x: 22.33, y: 148.53), controlPoint1: CGPoint(x: 22.44, y: 149.6), controlPoint2: CGPoint(x: 22.33, y: 149.11))
        textPath.addLine(to: CGPoint(x: 20.62, y: 148.53))
        textPath.addCurve(to: CGPoint(x: 21.06, y: 150.67), controlPoint1: CGPoint(x: 20.62, y: 149.36), controlPoint2: CGPoint(x: 20.77, y: 150.07))
        textPath.addCurve(to: CGPoint(x: 22.28, y: 152.15), controlPoint1: CGPoint(x: 21.36, y: 151.27), controlPoint2: CGPoint(x: 21.77, y: 151.77))
        textPath.addCurve(to: CGPoint(x: 24.07, y: 153.02), controlPoint1: CGPoint(x: 22.79, y: 152.54), controlPoint2: CGPoint(x: 23.39, y: 152.83))
        textPath.addCurve(to: CGPoint(x: 26.22, y: 153.3), controlPoint1: CGPoint(x: 24.74, y: 153.21), controlPoint2: CGPoint(x: 25.46, y: 153.3))
        textPath.addCurve(to: CGPoint(x: 28.09, y: 153.09), controlPoint1: CGPoint(x: 26.84, y: 153.3), controlPoint2: CGPoint(x: 27.47, y: 153.23))
        textPath.addCurve(to: CGPoint(x: 29.8, y: 152.38), controlPoint1: CGPoint(x: 28.72, y: 152.94), controlPoint2: CGPoint(x: 29.29, y: 152.71))
        textPath.addCurve(to: CGPoint(x: 31.04, y: 151.13), controlPoint1: CGPoint(x: 30.3, y: 152.06), controlPoint2: CGPoint(x: 30.72, y: 151.64))
        textPath.addCurve(to: CGPoint(x: 31.52, y: 149.28), controlPoint1: CGPoint(x: 31.36, y: 150.62), controlPoint2: CGPoint(x: 31.52, y: 150))
        textPath.addCurve(to: CGPoint(x: 31.15, y: 147.6), controlPoint1: CGPoint(x: 31.52, y: 148.6), controlPoint2: CGPoint(x: 31.4, y: 148.05))
        textPath.addCurve(to: CGPoint(x: 30.17, y: 146.5), controlPoint1: CGPoint(x: 30.91, y: 147.16), controlPoint2: CGPoint(x: 30.58, y: 146.79))
        textPath.addCurve(to: CGPoint(x: 28.77, y: 145.81), controlPoint1: CGPoint(x: 29.75, y: 146.21), controlPoint2: CGPoint(x: 29.29, y: 145.98))
        textPath.addCurve(to: CGPoint(x: 27.18, y: 145.36), controlPoint1: CGPoint(x: 28.25, y: 145.64), controlPoint2: CGPoint(x: 27.72, y: 145.49))
        textPath.addCurve(to: CGPoint(x: 25.6, y: 145.01), controlPoint1: CGPoint(x: 26.64, y: 145.24), controlPoint2: CGPoint(x: 26.12, y: 145.12))
        textPath.addCurve(to: CGPoint(x: 24.2, y: 144.6), controlPoint1: CGPoint(x: 25.08, y: 144.9), controlPoint2: CGPoint(x: 24.61, y: 144.77))
        textPath.addCurve(to: CGPoint(x: 23.21, y: 143.97), controlPoint1: CGPoint(x: 23.79, y: 144.44), controlPoint2: CGPoint(x: 23.46, y: 144.23))
        textPath.addCurve(to: CGPoint(x: 22.84, y: 142.95), controlPoint1: CGPoint(x: 22.96, y: 143.71), controlPoint2: CGPoint(x: 22.84, y: 143.37))
        textPath.addCurve(to: CGPoint(x: 23.1, y: 141.84), controlPoint1: CGPoint(x: 22.84, y: 142.51), controlPoint2: CGPoint(x: 22.93, y: 142.14))
        textPath.addCurve(to: CGPoint(x: 23.78, y: 141.12), controlPoint1: CGPoint(x: 23.27, y: 141.54), controlPoint2: CGPoint(x: 23.5, y: 141.3))
        textPath.addCurve(to: CGPoint(x: 24.76, y: 140.75), controlPoint1: CGPoint(x: 24.07, y: 140.95), controlPoint2: CGPoint(x: 24.39, y: 140.82))
        textPath.addCurve(to: CGPoint(x: 25.88, y: 140.63), controlPoint1: CGPoint(x: 25.13, y: 140.67), controlPoint2: CGPoint(x: 25.5, y: 140.63))
        textPath.addCurve(to: CGPoint(x: 28.19, y: 141.29), controlPoint1: CGPoint(x: 26.82, y: 140.63), controlPoint2: CGPoint(x: 27.59, y: 140.85))
        textPath.addCurve(to: CGPoint(x: 29.24, y: 143.41), controlPoint1: CGPoint(x: 28.79, y: 141.72), controlPoint2: CGPoint(x: 29.14, y: 142.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 41.58, y: 153))
        textPath.addLine(to: CGPoint(x: 41.58, y: 143.18))
        textPath.addLine(to: CGPoint(x: 39.96, y: 143.18))
        textPath.addLine(to: CGPoint(x: 39.96, y: 148.72))
        textPath.addCurve(to: CGPoint(x: 39.78, y: 149.95), controlPoint1: CGPoint(x: 39.96, y: 149.17), controlPoint2: CGPoint(x: 39.9, y: 149.58))
        textPath.addCurve(to: CGPoint(x: 39.24, y: 150.93), controlPoint1: CGPoint(x: 39.66, y: 150.32), controlPoint2: CGPoint(x: 39.48, y: 150.65))
        textPath.addCurve(to: CGPoint(x: 38.34, y: 151.57), controlPoint1: CGPoint(x: 39, y: 151.21), controlPoint2: CGPoint(x: 38.7, y: 151.42))
        textPath.addCurve(to: CGPoint(x: 37.05, y: 151.8), controlPoint1: CGPoint(x: 37.97, y: 151.73), controlPoint2: CGPoint(x: 37.55, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 35.59, y: 151.27), controlPoint1: CGPoint(x: 36.43, y: 151.8), controlPoint2: CGPoint(x: 35.95, y: 151.63))
        textPath.addCurve(to: CGPoint(x: 35.06, y: 149.83), controlPoint1: CGPoint(x: 35.24, y: 150.92), controlPoint2: CGPoint(x: 35.06, y: 150.44))
        textPath.addLine(to: CGPoint(x: 35.06, y: 143.18))
        textPath.addLine(to: CGPoint(x: 33.44, y: 143.18))
        textPath.addLine(to: CGPoint(x: 33.44, y: 149.64))
        textPath.addCurve(to: CGPoint(x: 33.6, y: 151.09), controlPoint1: CGPoint(x: 33.44, y: 150.17), controlPoint2: CGPoint(x: 33.5, y: 150.65))
        textPath.addCurve(to: CGPoint(x: 34.17, y: 152.22), controlPoint1: CGPoint(x: 33.71, y: 151.53), controlPoint2: CGPoint(x: 33.9, y: 151.9))
        textPath.addCurve(to: CGPoint(x: 35.21, y: 152.95), controlPoint1: CGPoint(x: 34.43, y: 152.54), controlPoint2: CGPoint(x: 34.78, y: 152.78))
        textPath.addCurve(to: CGPoint(x: 36.83, y: 153.21), controlPoint1: CGPoint(x: 35.64, y: 153.12), controlPoint2: CGPoint(x: 36.18, y: 153.21))
        textPath.addCurve(to: CGPoint(x: 38.71, y: 152.78), controlPoint1: CGPoint(x: 37.55, y: 153.21), controlPoint2: CGPoint(x: 38.17, y: 153.07))
        textPath.addCurve(to: CGPoint(x: 40.02, y: 151.44), controlPoint1: CGPoint(x: 39.24, y: 152.5), controlPoint2: CGPoint(x: 39.68, y: 152.05))
        textPath.addLine(to: CGPoint(x: 40.06, y: 151.44))
        textPath.addLine(to: CGPoint(x: 40.06, y: 153))
        textPath.addLine(to: CGPoint(x: 41.58, y: 153))
        textPath.close()
        textPath.move(to: CGPoint(x: 44.06, y: 139.43))
        textPath.addLine(to: CGPoint(x: 44.06, y: 153))
        textPath.addLine(to: CGPoint(x: 45.68, y: 153))
        textPath.addLine(to: CGPoint(x: 45.68, y: 151.69))
        textPath.addLine(to: CGPoint(x: 45.72, y: 151.69))
        textPath.addCurve(to: CGPoint(x: 46.37, y: 152.42), controlPoint1: CGPoint(x: 45.89, y: 151.98), controlPoint2: CGPoint(x: 46.11, y: 152.22))
        textPath.addCurve(to: CGPoint(x: 47.2, y: 152.89), controlPoint1: CGPoint(x: 46.63, y: 152.62), controlPoint2: CGPoint(x: 46.91, y: 152.77))
        textPath.addCurve(to: CGPoint(x: 48.08, y: 153.13), controlPoint1: CGPoint(x: 47.49, y: 153), controlPoint2: CGPoint(x: 47.79, y: 153.08))
        textPath.addCurve(to: CGPoint(x: 48.89, y: 153.21), controlPoint1: CGPoint(x: 48.38, y: 153.18), controlPoint2: CGPoint(x: 48.65, y: 153.21))
        textPath.addCurve(to: CGPoint(x: 50.86, y: 152.81), controlPoint1: CGPoint(x: 49.64, y: 153.21), controlPoint2: CGPoint(x: 50.29, y: 153.08))
        textPath.addCurve(to: CGPoint(x: 52.26, y: 151.72), controlPoint1: CGPoint(x: 51.42, y: 152.54), controlPoint2: CGPoint(x: 51.89, y: 152.18))
        textPath.addCurve(to: CGPoint(x: 53.1, y: 150.09), controlPoint1: CGPoint(x: 52.64, y: 151.26), controlPoint2: CGPoint(x: 52.92, y: 150.71))
        textPath.addCurve(to: CGPoint(x: 53.37, y: 148.12), controlPoint1: CGPoint(x: 53.28, y: 149.47), controlPoint2: CGPoint(x: 53.37, y: 148.81))
        textPath.addCurve(to: CGPoint(x: 53.09, y: 146.14), controlPoint1: CGPoint(x: 53.37, y: 147.42), controlPoint2: CGPoint(x: 53.28, y: 146.76))
        textPath.addCurve(to: CGPoint(x: 52.24, y: 144.5), controlPoint1: CGPoint(x: 52.9, y: 145.52), controlPoint2: CGPoint(x: 52.62, y: 144.97))
        textPath.addCurve(to: CGPoint(x: 50.84, y: 143.37), controlPoint1: CGPoint(x: 51.87, y: 144.02), controlPoint2: CGPoint(x: 51.4, y: 143.65))
        textPath.addCurve(to: CGPoint(x: 48.85, y: 142.95), controlPoint1: CGPoint(x: 50.27, y: 143.09), controlPoint2: CGPoint(x: 49.61, y: 142.95))
        textPath.addCurve(to: CGPoint(x: 46.97, y: 143.32), controlPoint1: CGPoint(x: 48.17, y: 142.95), controlPoint2: CGPoint(x: 47.54, y: 143.07))
        textPath.addCurve(to: CGPoint(x: 45.72, y: 144.51), controlPoint1: CGPoint(x: 46.4, y: 143.57), controlPoint2: CGPoint(x: 45.98, y: 143.96))
        textPath.addLine(to: CGPoint(x: 45.68, y: 144.51))
        textPath.addLine(to: CGPoint(x: 45.68, y: 139.43))
        textPath.addLine(to: CGPoint(x: 44.06, y: 139.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 51.66, y: 148))
        textPath.addCurve(to: CGPoint(x: 51.51, y: 149.41), controlPoint1: CGPoint(x: 51.66, y: 148.48), controlPoint2: CGPoint(x: 51.61, y: 148.95))
        textPath.addCurve(to: CGPoint(x: 51.02, y: 150.62), controlPoint1: CGPoint(x: 51.41, y: 149.87), controlPoint2: CGPoint(x: 51.25, y: 150.27))
        textPath.addCurve(to: CGPoint(x: 50.12, y: 151.48), controlPoint1: CGPoint(x: 50.79, y: 150.98), controlPoint2: CGPoint(x: 50.49, y: 151.26))
        textPath.addCurve(to: CGPoint(x: 48.72, y: 151.8), controlPoint1: CGPoint(x: 49.74, y: 151.7), controlPoint2: CGPoint(x: 49.28, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 47.29, y: 151.49), controlPoint1: CGPoint(x: 48.16, y: 151.8), controlPoint2: CGPoint(x: 47.69, y: 151.7))
        textPath.addCurve(to: CGPoint(x: 46.33, y: 150.66), controlPoint1: CGPoint(x: 46.9, y: 151.28), controlPoint2: CGPoint(x: 46.58, y: 151.01))
        textPath.addCurve(to: CGPoint(x: 45.79, y: 149.48), controlPoint1: CGPoint(x: 46.09, y: 150.32), controlPoint2: CGPoint(x: 45.91, y: 149.93))
        textPath.addCurve(to: CGPoint(x: 45.62, y: 148.08), controlPoint1: CGPoint(x: 45.68, y: 149.03), controlPoint2: CGPoint(x: 45.62, y: 148.56))
        textPath.addCurve(to: CGPoint(x: 45.78, y: 146.73), controlPoint1: CGPoint(x: 45.62, y: 147.62), controlPoint2: CGPoint(x: 45.68, y: 147.17))
        textPath.addCurve(to: CGPoint(x: 46.31, y: 145.54), controlPoint1: CGPoint(x: 45.89, y: 146.29), controlPoint2: CGPoint(x: 46.07, y: 145.89))
        textPath.addCurve(to: CGPoint(x: 47.24, y: 144.7), controlPoint1: CGPoint(x: 46.55, y: 145.19), controlPoint2: CGPoint(x: 46.86, y: 144.91))
        textPath.addCurve(to: CGPoint(x: 48.62, y: 144.37), controlPoint1: CGPoint(x: 47.62, y: 144.48), controlPoint2: CGPoint(x: 48.08, y: 144.37))
        textPath.addCurve(to: CGPoint(x: 49.98, y: 144.68), controlPoint1: CGPoint(x: 49.14, y: 144.37), controlPoint2: CGPoint(x: 49.6, y: 144.48))
        textPath.addCurve(to: CGPoint(x: 50.93, y: 145.5), controlPoint1: CGPoint(x: 50.37, y: 144.88), controlPoint2: CGPoint(x: 50.69, y: 145.15))
        textPath.addCurve(to: CGPoint(x: 51.48, y: 146.66), controlPoint1: CGPoint(x: 51.18, y: 145.84), controlPoint2: CGPoint(x: 51.36, y: 146.23))
        textPath.addCurve(to: CGPoint(x: 51.66, y: 148), controlPoint1: CGPoint(x: 51.6, y: 147.1), controlPoint2: CGPoint(x: 51.66, y: 147.55))
        textPath.close()
        textPath.move(to: CGPoint(x: 56.26, y: 149.9))
        textPath.addLine(to: CGPoint(x: 54.65, y: 149.9))
        textPath.addCurve(to: CGPoint(x: 55.03, y: 151.45), controlPoint1: CGPoint(x: 54.67, y: 150.51), controlPoint2: CGPoint(x: 54.8, y: 151.03))
        textPath.addCurve(to: CGPoint(x: 55.94, y: 152.48), controlPoint1: CGPoint(x: 55.26, y: 151.88), controlPoint2: CGPoint(x: 55.56, y: 152.22))
        textPath.addCurve(to: CGPoint(x: 57.25, y: 153.04), controlPoint1: CGPoint(x: 56.32, y: 152.74), controlPoint2: CGPoint(x: 56.76, y: 152.92))
        textPath.addCurve(to: CGPoint(x: 58.81, y: 153.21), controlPoint1: CGPoint(x: 57.74, y: 153.15), controlPoint2: CGPoint(x: 58.26, y: 153.21))
        textPath.addCurve(to: CGPoint(x: 60.3, y: 153.07), controlPoint1: CGPoint(x: 59.3, y: 153.21), controlPoint2: CGPoint(x: 59.8, y: 153.16))
        textPath.addCurve(to: CGPoint(x: 61.65, y: 152.56), controlPoint1: CGPoint(x: 60.8, y: 152.97), controlPoint2: CGPoint(x: 61.25, y: 152.8))
        textPath.addCurve(to: CGPoint(x: 62.62, y: 151.61), controlPoint1: CGPoint(x: 62.05, y: 152.32), controlPoint2: CGPoint(x: 62.37, y: 152.01))
        textPath.addCurve(to: CGPoint(x: 62.99, y: 150.13), controlPoint1: CGPoint(x: 62.87, y: 151.22), controlPoint2: CGPoint(x: 62.99, y: 150.73))
        textPath.addCurve(to: CGPoint(x: 62.71, y: 148.95), controlPoint1: CGPoint(x: 62.99, y: 149.66), controlPoint2: CGPoint(x: 62.9, y: 149.27))
        textPath.addCurve(to: CGPoint(x: 61.99, y: 148.16), controlPoint1: CGPoint(x: 62.53, y: 148.64), controlPoint2: CGPoint(x: 62.29, y: 148.37))
        textPath.addCurve(to: CGPoint(x: 60.97, y: 147.66), controlPoint1: CGPoint(x: 61.69, y: 147.96), controlPoint2: CGPoint(x: 61.35, y: 147.79))
        textPath.addCurve(to: CGPoint(x: 59.78, y: 147.34), controlPoint1: CGPoint(x: 60.58, y: 147.53), controlPoint2: CGPoint(x: 60.18, y: 147.43))
        textPath.addCurve(to: CGPoint(x: 58.64, y: 147.08), controlPoint1: CGPoint(x: 59.4, y: 147.25), controlPoint2: CGPoint(x: 59.02, y: 147.16))
        textPath.addCurve(to: CGPoint(x: 57.61, y: 146.78), controlPoint1: CGPoint(x: 58.26, y: 147), controlPoint2: CGPoint(x: 57.92, y: 146.9))
        textPath.addCurve(to: CGPoint(x: 56.86, y: 146.32), controlPoint1: CGPoint(x: 57.31, y: 146.66), controlPoint2: CGPoint(x: 57.06, y: 146.51))
        textPath.addCurve(to: CGPoint(x: 56.57, y: 145.63), controlPoint1: CGPoint(x: 56.66, y: 146.14), controlPoint2: CGPoint(x: 56.57, y: 145.91))
        textPath.addCurve(to: CGPoint(x: 56.76, y: 145.01), controlPoint1: CGPoint(x: 56.57, y: 145.37), controlPoint2: CGPoint(x: 56.63, y: 145.17))
        textPath.addCurve(to: CGPoint(x: 57.25, y: 144.63), controlPoint1: CGPoint(x: 56.88, y: 144.85), controlPoint2: CGPoint(x: 57.05, y: 144.73))
        textPath.addCurve(to: CGPoint(x: 57.92, y: 144.43), controlPoint1: CGPoint(x: 57.45, y: 144.54), controlPoint2: CGPoint(x: 57.68, y: 144.47))
        textPath.addCurve(to: CGPoint(x: 58.66, y: 144.37), controlPoint1: CGPoint(x: 58.17, y: 144.39), controlPoint2: CGPoint(x: 58.42, y: 144.37))
        textPath.addCurve(to: CGPoint(x: 59.44, y: 144.46), controlPoint1: CGPoint(x: 58.92, y: 144.37), controlPoint2: CGPoint(x: 59.19, y: 144.4))
        textPath.addCurve(to: CGPoint(x: 60.16, y: 144.74), controlPoint1: CGPoint(x: 59.7, y: 144.52), controlPoint2: CGPoint(x: 59.94, y: 144.61))
        textPath.addCurve(to: CGPoint(x: 60.69, y: 145.24), controlPoint1: CGPoint(x: 60.37, y: 144.86), controlPoint2: CGPoint(x: 60.55, y: 145.03))
        textPath.addCurve(to: CGPoint(x: 60.94, y: 146.03), controlPoint1: CGPoint(x: 60.83, y: 145.45), controlPoint2: CGPoint(x: 60.91, y: 145.71))
        textPath.addLine(to: CGPoint(x: 62.55, y: 146.03))
        textPath.addCurve(to: CGPoint(x: 62.17, y: 144.54), controlPoint1: CGPoint(x: 62.51, y: 145.43), controlPoint2: CGPoint(x: 62.39, y: 144.93))
        textPath.addCurve(to: CGPoint(x: 61.31, y: 143.59), controlPoint1: CGPoint(x: 61.96, y: 144.14), controlPoint2: CGPoint(x: 61.67, y: 143.82))
        textPath.addCurve(to: CGPoint(x: 60.06, y: 143.09), controlPoint1: CGPoint(x: 60.95, y: 143.35), controlPoint2: CGPoint(x: 60.53, y: 143.19))
        textPath.addCurve(to: CGPoint(x: 58.52, y: 142.95), controlPoint1: CGPoint(x: 59.59, y: 143), controlPoint2: CGPoint(x: 59.08, y: 142.95))
        textPath.addCurve(to: CGPoint(x: 57.22, y: 143.11), controlPoint1: CGPoint(x: 58.09, y: 142.95), controlPoint2: CGPoint(x: 57.66, y: 143))
        textPath.addCurve(to: CGPoint(x: 56.04, y: 143.6), controlPoint1: CGPoint(x: 56.78, y: 143.22), controlPoint2: CGPoint(x: 56.39, y: 143.38))
        textPath.addCurve(to: CGPoint(x: 55.19, y: 144.47), controlPoint1: CGPoint(x: 55.7, y: 143.83), controlPoint2: CGPoint(x: 55.41, y: 144.11))
        textPath.addCurve(to: CGPoint(x: 54.86, y: 145.74), controlPoint1: CGPoint(x: 54.97, y: 144.82), controlPoint2: CGPoint(x: 54.86, y: 145.25))
        textPath.addCurve(to: CGPoint(x: 55.33, y: 147.22), controlPoint1: CGPoint(x: 54.86, y: 146.38), controlPoint2: CGPoint(x: 55.01, y: 146.87))
        textPath.addCurve(to: CGPoint(x: 56.52, y: 148.05), controlPoint1: CGPoint(x: 55.65, y: 147.58), controlPoint2: CGPoint(x: 56.04, y: 147.85))
        textPath.addCurve(to: CGPoint(x: 58.07, y: 148.51), controlPoint1: CGPoint(x: 56.99, y: 148.25), controlPoint2: CGPoint(x: 57.51, y: 148.4))
        textPath.addCurve(to: CGPoint(x: 59.62, y: 148.87), controlPoint1: CGPoint(x: 58.62, y: 148.61), controlPoint2: CGPoint(x: 59.14, y: 148.73))
        textPath.addCurve(to: CGPoint(x: 60.8, y: 149.39), controlPoint1: CGPoint(x: 60.09, y: 149), controlPoint2: CGPoint(x: 60.49, y: 149.17))
        textPath.addCurve(to: CGPoint(x: 61.28, y: 150.34), controlPoint1: CGPoint(x: 61.12, y: 149.61), controlPoint2: CGPoint(x: 61.28, y: 149.92))
        textPath.addCurve(to: CGPoint(x: 61.05, y: 151.09), controlPoint1: CGPoint(x: 61.28, y: 150.64), controlPoint2: CGPoint(x: 61.2, y: 150.89))
        textPath.addCurve(to: CGPoint(x: 60.47, y: 151.54), controlPoint1: CGPoint(x: 60.9, y: 151.29), controlPoint2: CGPoint(x: 60.71, y: 151.44))
        textPath.addCurve(to: CGPoint(x: 59.7, y: 151.75), controlPoint1: CGPoint(x: 60.24, y: 151.64), controlPoint2: CGPoint(x: 59.98, y: 151.71))
        textPath.addCurve(to: CGPoint(x: 58.9, y: 151.8), controlPoint1: CGPoint(x: 59.42, y: 151.78), controlPoint2: CGPoint(x: 59.16, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 57.94, y: 151.71), controlPoint1: CGPoint(x: 58.57, y: 151.8), controlPoint2: CGPoint(x: 58.25, y: 151.77))
        textPath.addCurve(to: CGPoint(x: 57.11, y: 151.39), controlPoint1: CGPoint(x: 57.63, y: 151.64), controlPoint2: CGPoint(x: 57.36, y: 151.54))
        textPath.addCurve(to: CGPoint(x: 56.51, y: 150.81), controlPoint1: CGPoint(x: 56.86, y: 151.25), controlPoint2: CGPoint(x: 56.66, y: 151.05))
        textPath.addCurve(to: CGPoint(x: 56.26, y: 149.9), controlPoint1: CGPoint(x: 56.36, y: 150.56), controlPoint2: CGPoint(x: 56.28, y: 150.26))
        textPath.close()
        textPath.move(to: CGPoint(x: 71.44, y: 146.33))
        textPath.addLine(to: CGPoint(x: 73.12, y: 146.33))
        textPath.addCurve(to: CGPoint(x: 72.66, y: 144.82), controlPoint1: CGPoint(x: 73.05, y: 145.75), controlPoint2: CGPoint(x: 72.9, y: 145.24))
        textPath.addCurve(to: CGPoint(x: 71.74, y: 143.77), controlPoint1: CGPoint(x: 72.42, y: 144.4), controlPoint2: CGPoint(x: 72.11, y: 144.04))
        textPath.addCurve(to: CGPoint(x: 70.45, y: 143.15), controlPoint1: CGPoint(x: 71.36, y: 143.49), controlPoint2: CGPoint(x: 70.93, y: 143.28))
        textPath.addCurve(to: CGPoint(x: 68.88, y: 142.95), controlPoint1: CGPoint(x: 69.96, y: 143.02), controlPoint2: CGPoint(x: 69.44, y: 142.95))
        textPath.addCurve(to: CGPoint(x: 66.85, y: 143.36), controlPoint1: CGPoint(x: 68.11, y: 142.95), controlPoint2: CGPoint(x: 67.43, y: 143.09))
        textPath.addCurve(to: CGPoint(x: 65.39, y: 144.48), controlPoint1: CGPoint(x: 66.26, y: 143.63), controlPoint2: CGPoint(x: 65.78, y: 144))
        textPath.addCurve(to: CGPoint(x: 64.53, y: 146.15), controlPoint1: CGPoint(x: 65.01, y: 144.95), controlPoint2: CGPoint(x: 64.72, y: 145.51))
        textPath.addCurve(to: CGPoint(x: 64.24, y: 148.21), controlPoint1: CGPoint(x: 64.34, y: 146.79), controlPoint2: CGPoint(x: 64.24, y: 147.48))
        textPath.addCurve(to: CGPoint(x: 64.54, y: 150.24), controlPoint1: CGPoint(x: 64.24, y: 148.95), controlPoint2: CGPoint(x: 64.34, y: 149.62))
        textPath.addCurve(to: CGPoint(x: 65.41, y: 151.82), controlPoint1: CGPoint(x: 64.73, y: 150.85), controlPoint2: CGPoint(x: 65.02, y: 151.38))
        textPath.addCurve(to: CGPoint(x: 66.85, y: 152.85), controlPoint1: CGPoint(x: 65.8, y: 152.27), controlPoint2: CGPoint(x: 66.28, y: 152.61))
        textPath.addCurve(to: CGPoint(x: 68.84, y: 153.21), controlPoint1: CGPoint(x: 67.43, y: 153.09), controlPoint2: CGPoint(x: 68.09, y: 153.21))
        textPath.addCurve(to: CGPoint(x: 71.81, y: 152.22), controlPoint1: CGPoint(x: 70.09, y: 153.21), controlPoint2: CGPoint(x: 71.09, y: 152.88))
        textPath.addCurve(to: CGPoint(x: 73.17, y: 149.41), controlPoint1: CGPoint(x: 72.54, y: 151.56), controlPoint2: CGPoint(x: 73, y: 150.63))
        textPath.addLine(to: CGPoint(x: 71.52, y: 149.41))
        textPath.addCurve(to: CGPoint(x: 70.69, y: 151.18), controlPoint1: CGPoint(x: 71.42, y: 150.17), controlPoint2: CGPoint(x: 71.14, y: 150.76))
        textPath.addCurve(to: CGPoint(x: 68.82, y: 151.8), controlPoint1: CGPoint(x: 70.24, y: 151.59), controlPoint2: CGPoint(x: 69.62, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 67.51, y: 151.5), controlPoint1: CGPoint(x: 68.31, y: 151.8), controlPoint2: CGPoint(x: 67.88, y: 151.7))
        textPath.addCurve(to: CGPoint(x: 66.62, y: 150.69), controlPoint1: CGPoint(x: 67.14, y: 151.3), controlPoint2: CGPoint(x: 66.85, y: 151.03))
        textPath.addCurve(to: CGPoint(x: 66.11, y: 149.54), controlPoint1: CGPoint(x: 66.39, y: 150.36), controlPoint2: CGPoint(x: 66.22, y: 149.97))
        textPath.addCurve(to: CGPoint(x: 65.95, y: 148.21), controlPoint1: CGPoint(x: 66.01, y: 149.11), controlPoint2: CGPoint(x: 65.95, y: 148.67))
        textPath.addCurve(to: CGPoint(x: 66.1, y: 146.78), controlPoint1: CGPoint(x: 65.95, y: 147.72), controlPoint2: CGPoint(x: 66, y: 147.24))
        textPath.addCurve(to: CGPoint(x: 66.61, y: 145.55), controlPoint1: CGPoint(x: 66.21, y: 146.32), controlPoint2: CGPoint(x: 66.37, y: 145.91))
        textPath.addCurve(to: CGPoint(x: 67.55, y: 144.7), controlPoint1: CGPoint(x: 66.84, y: 145.2), controlPoint2: CGPoint(x: 67.16, y: 144.91))
        textPath.addCurve(to: CGPoint(x: 69.01, y: 144.37), controlPoint1: CGPoint(x: 67.94, y: 144.48), controlPoint2: CGPoint(x: 68.43, y: 144.37))
        textPath.addCurve(to: CGPoint(x: 70.65, y: 144.89), controlPoint1: CGPoint(x: 69.7, y: 144.37), controlPoint2: CGPoint(x: 70.24, y: 144.54))
        textPath.addCurve(to: CGPoint(x: 71.44, y: 146.33), controlPoint1: CGPoint(x: 71.05, y: 145.23), controlPoint2: CGPoint(x: 71.32, y: 145.71))
        textPath.close()
        textPath.move(to: CGPoint(x: 74.92, y: 143.18))
        textPath.addLine(to: CGPoint(x: 74.92, y: 153))
        textPath.addLine(to: CGPoint(x: 76.54, y: 153))
        textPath.addLine(to: CGPoint(x: 76.54, y: 148.63))
        textPath.addCurve(to: CGPoint(x: 76.73, y: 146.95), controlPoint1: CGPoint(x: 76.54, y: 148), controlPoint2: CGPoint(x: 76.6, y: 147.44))
        textPath.addCurve(to: CGPoint(x: 77.33, y: 145.7), controlPoint1: CGPoint(x: 76.85, y: 146.46), controlPoint2: CGPoint(x: 77.05, y: 146.05))
        textPath.addCurve(to: CGPoint(x: 78.44, y: 144.93), controlPoint1: CGPoint(x: 77.61, y: 145.36), controlPoint2: CGPoint(x: 77.98, y: 145.1))
        textPath.addCurve(to: CGPoint(x: 80.09, y: 144.66), controlPoint1: CGPoint(x: 78.89, y: 144.75), controlPoint2: CGPoint(x: 79.44, y: 144.66))
        textPath.addLine(to: CGPoint(x: 80.09, y: 142.95))
        textPath.addCurve(to: CGPoint(x: 77.92, y: 143.48), controlPoint1: CGPoint(x: 79.21, y: 142.92), controlPoint2: CGPoint(x: 78.49, y: 143.1))
        textPath.addCurve(to: CGPoint(x: 76.48, y: 145.25), controlPoint1: CGPoint(x: 77.35, y: 143.86), controlPoint2: CGPoint(x: 76.87, y: 144.45))
        textPath.addLine(to: CGPoint(x: 76.44, y: 145.25))
        textPath.addLine(to: CGPoint(x: 76.44, y: 143.18))
        textPath.addLine(to: CGPoint(x: 74.92, y: 143.18))
        textPath.close()
        textPath.move(to: CGPoint(x: 83.01, y: 141.41))
        textPath.addLine(to: CGPoint(x: 83.01, y: 139.43))
        textPath.addLine(to: CGPoint(x: 81.4, y: 139.43))
        textPath.addLine(to: CGPoint(x: 81.4, y: 141.41))
        textPath.addLine(to: CGPoint(x: 83.01, y: 141.41))
        textPath.close()
        textPath.move(to: CGPoint(x: 81.4, y: 143.18))
        textPath.addLine(to: CGPoint(x: 81.4, y: 153))
        textPath.addLine(to: CGPoint(x: 83.01, y: 153))
        textPath.addLine(to: CGPoint(x: 83.01, y: 143.18))
        textPath.addLine(to: CGPoint(x: 81.4, y: 143.18))
        textPath.close()
        textPath.move(to: CGPoint(x: 85.58, y: 139.43))
        textPath.addLine(to: CGPoint(x: 85.58, y: 153))
        textPath.addLine(to: CGPoint(x: 87.19, y: 153))
        textPath.addLine(to: CGPoint(x: 87.19, y: 151.69))
        textPath.addLine(to: CGPoint(x: 87.23, y: 151.69))
        textPath.addCurve(to: CGPoint(x: 87.89, y: 152.42), controlPoint1: CGPoint(x: 87.41, y: 151.98), controlPoint2: CGPoint(x: 87.63, y: 152.22))
        textPath.addCurve(to: CGPoint(x: 88.71, y: 152.89), controlPoint1: CGPoint(x: 88.15, y: 152.62), controlPoint2: CGPoint(x: 88.42, y: 152.77))
        textPath.addCurve(to: CGPoint(x: 89.6, y: 153.13), controlPoint1: CGPoint(x: 89.01, y: 153), controlPoint2: CGPoint(x: 89.3, y: 153.08))
        textPath.addCurve(to: CGPoint(x: 90.41, y: 153.21), controlPoint1: CGPoint(x: 89.9, y: 153.18), controlPoint2: CGPoint(x: 90.16, y: 153.21))
        textPath.addCurve(to: CGPoint(x: 92.37, y: 152.81), controlPoint1: CGPoint(x: 91.15, y: 153.21), controlPoint2: CGPoint(x: 91.81, y: 153.08))
        textPath.addCurve(to: CGPoint(x: 93.78, y: 151.72), controlPoint1: CGPoint(x: 92.94, y: 152.54), controlPoint2: CGPoint(x: 93.4, y: 152.18))
        textPath.addCurve(to: CGPoint(x: 94.61, y: 150.09), controlPoint1: CGPoint(x: 94.15, y: 151.26), controlPoint2: CGPoint(x: 94.43, y: 150.71))
        textPath.addCurve(to: CGPoint(x: 94.89, y: 148.12), controlPoint1: CGPoint(x: 94.8, y: 149.47), controlPoint2: CGPoint(x: 94.89, y: 148.81))
        textPath.addCurve(to: CGPoint(x: 94.6, y: 146.14), controlPoint1: CGPoint(x: 94.89, y: 147.42), controlPoint2: CGPoint(x: 94.79, y: 146.76))
        textPath.addCurve(to: CGPoint(x: 93.76, y: 144.5), controlPoint1: CGPoint(x: 94.41, y: 145.52), controlPoint2: CGPoint(x: 94.13, y: 144.97))
        textPath.addCurve(to: CGPoint(x: 92.35, y: 143.37), controlPoint1: CGPoint(x: 93.39, y: 144.02), controlPoint2: CGPoint(x: 92.92, y: 143.65))
        textPath.addCurve(to: CGPoint(x: 90.37, y: 142.95), controlPoint1: CGPoint(x: 91.79, y: 143.09), controlPoint2: CGPoint(x: 91.13, y: 142.95))
        textPath.addCurve(to: CGPoint(x: 88.49, y: 143.32), controlPoint1: CGPoint(x: 89.68, y: 142.95), controlPoint2: CGPoint(x: 89.06, y: 143.07))
        textPath.addCurve(to: CGPoint(x: 87.23, y: 144.51), controlPoint1: CGPoint(x: 87.92, y: 143.57), controlPoint2: CGPoint(x: 87.5, y: 143.96))
        textPath.addLine(to: CGPoint(x: 87.19, y: 144.51))
        textPath.addLine(to: CGPoint(x: 87.19, y: 139.43))
        textPath.addLine(to: CGPoint(x: 85.58, y: 139.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 93.18, y: 148))
        textPath.addCurve(to: CGPoint(x: 93.03, y: 149.41), controlPoint1: CGPoint(x: 93.18, y: 148.48), controlPoint2: CGPoint(x: 93.13, y: 148.95))
        textPath.addCurve(to: CGPoint(x: 92.53, y: 150.62), controlPoint1: CGPoint(x: 92.93, y: 149.87), controlPoint2: CGPoint(x: 92.76, y: 150.27))
        textPath.addCurve(to: CGPoint(x: 91.63, y: 151.48), controlPoint1: CGPoint(x: 92.31, y: 150.98), controlPoint2: CGPoint(x: 92, y: 151.26))
        textPath.addCurve(to: CGPoint(x: 90.23, y: 151.8), controlPoint1: CGPoint(x: 91.26, y: 151.7), controlPoint2: CGPoint(x: 90.79, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 88.81, y: 151.49), controlPoint1: CGPoint(x: 89.68, y: 151.8), controlPoint2: CGPoint(x: 89.2, y: 151.7))
        textPath.addCurve(to: CGPoint(x: 87.85, y: 150.66), controlPoint1: CGPoint(x: 88.42, y: 151.28), controlPoint2: CGPoint(x: 88.1, y: 151.01))
        textPath.addCurve(to: CGPoint(x: 87.31, y: 149.48), controlPoint1: CGPoint(x: 87.6, y: 150.32), controlPoint2: CGPoint(x: 87.42, y: 149.93))
        textPath.addCurve(to: CGPoint(x: 87.14, y: 148.08), controlPoint1: CGPoint(x: 87.19, y: 149.03), controlPoint2: CGPoint(x: 87.14, y: 148.56))
        textPath.addCurve(to: CGPoint(x: 87.3, y: 146.73), controlPoint1: CGPoint(x: 87.14, y: 147.62), controlPoint2: CGPoint(x: 87.19, y: 147.17))
        textPath.addCurve(to: CGPoint(x: 87.82, y: 145.54), controlPoint1: CGPoint(x: 87.41, y: 146.29), controlPoint2: CGPoint(x: 87.58, y: 145.89))
        textPath.addCurve(to: CGPoint(x: 88.75, y: 144.7), controlPoint1: CGPoint(x: 88.06, y: 145.19), controlPoint2: CGPoint(x: 88.37, y: 144.91))
        textPath.addCurve(to: CGPoint(x: 90.14, y: 144.37), controlPoint1: CGPoint(x: 89.13, y: 144.48), controlPoint2: CGPoint(x: 89.59, y: 144.37))
        textPath.addCurve(to: CGPoint(x: 91.5, y: 144.68), controlPoint1: CGPoint(x: 90.66, y: 144.37), controlPoint2: CGPoint(x: 91.11, y: 144.48))
        textPath.addCurve(to: CGPoint(x: 92.45, y: 145.5), controlPoint1: CGPoint(x: 91.88, y: 144.88), controlPoint2: CGPoint(x: 92.2, y: 145.15))
        textPath.addCurve(to: CGPoint(x: 93, y: 146.66), controlPoint1: CGPoint(x: 92.7, y: 145.84), controlPoint2: CGPoint(x: 92.88, y: 146.23))
        textPath.addCurve(to: CGPoint(x: 93.18, y: 148), controlPoint1: CGPoint(x: 93.12, y: 147.1), controlPoint2: CGPoint(x: 93.18, y: 147.55))
        textPath.close()
        textPath.move(to: CGPoint(x: 103.61, y: 147.15))
        textPath.addLine(to: CGPoint(x: 97.97, y: 147.15))
        textPath.addCurve(to: CGPoint(x: 98.21, y: 146.07), controlPoint1: CGPoint(x: 97.99, y: 146.77), controlPoint2: CGPoint(x: 98.08, y: 146.41))
        textPath.addCurve(to: CGPoint(x: 98.78, y: 145.19), controlPoint1: CGPoint(x: 98.35, y: 145.74), controlPoint2: CGPoint(x: 98.54, y: 145.44))
        textPath.addCurve(to: CGPoint(x: 99.65, y: 144.59), controlPoint1: CGPoint(x: 99.03, y: 144.94), controlPoint2: CGPoint(x: 99.31, y: 144.74))
        textPath.addCurve(to: CGPoint(x: 100.78, y: 144.37), controlPoint1: CGPoint(x: 99.98, y: 144.45), controlPoint2: CGPoint(x: 100.36, y: 144.37))
        textPath.addCurve(to: CGPoint(x: 101.89, y: 144.59), controlPoint1: CGPoint(x: 101.18, y: 144.37), controlPoint2: CGPoint(x: 101.56, y: 144.45))
        textPath.addCurve(to: CGPoint(x: 102.77, y: 145.18), controlPoint1: CGPoint(x: 102.23, y: 144.74), controlPoint2: CGPoint(x: 102.52, y: 144.93))
        textPath.addCurve(to: CGPoint(x: 103.35, y: 146.06), controlPoint1: CGPoint(x: 103.01, y: 145.43), controlPoint2: CGPoint(x: 103.21, y: 145.72))
        textPath.addCurve(to: CGPoint(x: 103.61, y: 147.15), controlPoint1: CGPoint(x: 103.5, y: 146.41), controlPoint2: CGPoint(x: 103.59, y: 146.77))
        textPath.close()
        textPath.move(to: CGPoint(x: 105.17, y: 149.88))
        textPath.addLine(to: CGPoint(x: 103.57, y: 149.88))
        textPath.addCurve(to: CGPoint(x: 102.71, y: 151.33), controlPoint1: CGPoint(x: 103.43, y: 150.53), controlPoint2: CGPoint(x: 103.15, y: 151.01))
        textPath.addCurve(to: CGPoint(x: 101.03, y: 151.8), controlPoint1: CGPoint(x: 102.27, y: 151.64), controlPoint2: CGPoint(x: 101.71, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 99.64, y: 151.54), controlPoint1: CGPoint(x: 100.49, y: 151.8), controlPoint2: CGPoint(x: 100.03, y: 151.71))
        textPath.addCurve(to: CGPoint(x: 98.67, y: 150.82), controlPoint1: CGPoint(x: 99.25, y: 151.36), controlPoint2: CGPoint(x: 98.92, y: 151.12))
        textPath.addCurve(to: CGPoint(x: 98.12, y: 149.8), controlPoint1: CGPoint(x: 98.42, y: 150.53), controlPoint2: CGPoint(x: 98.23, y: 150.18))
        textPath.addCurve(to: CGPoint(x: 97.97, y: 148.57), controlPoint1: CGPoint(x: 98.01, y: 149.41), controlPoint2: CGPoint(x: 97.95, y: 149))
        textPath.addLine(to: CGPoint(x: 105.32, y: 148.57))
        textPath.addCurve(to: CGPoint(x: 105.16, y: 146.69), controlPoint1: CGPoint(x: 105.35, y: 147.98), controlPoint2: CGPoint(x: 105.29, y: 147.35))
        textPath.addCurve(to: CGPoint(x: 104.44, y: 144.87), controlPoint1: CGPoint(x: 105.03, y: 146.03), controlPoint2: CGPoint(x: 104.79, y: 145.43))
        textPath.addCurve(to: CGPoint(x: 103.05, y: 143.49), controlPoint1: CGPoint(x: 104.09, y: 144.31), controlPoint2: CGPoint(x: 103.63, y: 143.85))
        textPath.addCurve(to: CGPoint(x: 100.87, y: 142.95), controlPoint1: CGPoint(x: 102.47, y: 143.13), controlPoint2: CGPoint(x: 101.75, y: 142.95))
        textPath.addCurve(to: CGPoint(x: 99.02, y: 143.33), controlPoint1: CGPoint(x: 100.2, y: 142.95), controlPoint2: CGPoint(x: 99.59, y: 143.08))
        textPath.addCurve(to: CGPoint(x: 97.56, y: 144.39), controlPoint1: CGPoint(x: 98.46, y: 143.58), controlPoint2: CGPoint(x: 97.97, y: 143.94))
        textPath.addCurve(to: CGPoint(x: 96.6, y: 146.01), controlPoint1: CGPoint(x: 97.15, y: 144.85), controlPoint2: CGPoint(x: 96.83, y: 145.39))
        textPath.addCurve(to: CGPoint(x: 96.26, y: 148.06), controlPoint1: CGPoint(x: 96.37, y: 146.63), controlPoint2: CGPoint(x: 96.26, y: 147.31))
        textPath.addCurve(to: CGPoint(x: 96.59, y: 150.13), controlPoint1: CGPoint(x: 96.28, y: 148.81), controlPoint2: CGPoint(x: 96.39, y: 149.5))
        textPath.addCurve(to: CGPoint(x: 97.47, y: 151.76), controlPoint1: CGPoint(x: 96.79, y: 150.76), controlPoint2: CGPoint(x: 97.08, y: 151.31))
        textPath.addCurve(to: CGPoint(x: 98.93, y: 152.83), controlPoint1: CGPoint(x: 97.87, y: 152.22), controlPoint2: CGPoint(x: 98.35, y: 152.58))
        textPath.addCurve(to: CGPoint(x: 100.97, y: 153.21), controlPoint1: CGPoint(x: 99.5, y: 153.08), controlPoint2: CGPoint(x: 100.18, y: 153.21))
        textPath.addCurve(to: CGPoint(x: 103.74, y: 152.37), controlPoint1: CGPoint(x: 102.08, y: 153.21), controlPoint2: CGPoint(x: 103.01, y: 152.93))
        textPath.addCurve(to: CGPoint(x: 105.17, y: 149.88), controlPoint1: CGPoint(x: 104.48, y: 151.82), controlPoint2: CGPoint(x: 104.95, y: 150.99))
        textPath.close()
        textPath.move(to: CGPoint(x: 112.52, y: 139.43))
        textPath.addLine(to: CGPoint(x: 112.52, y: 153))
        textPath.addLine(to: CGPoint(x: 114.23, y: 153))
        textPath.addLine(to: CGPoint(x: 114.23, y: 142.11))
        textPath.addLine(to: CGPoint(x: 114.27, y: 142.11))
        textPath.addLine(to: CGPoint(x: 121.36, y: 153))
        textPath.addLine(to: CGPoint(x: 123.33, y: 153))
        textPath.addLine(to: CGPoint(x: 123.33, y: 139.43))
        textPath.addLine(to: CGPoint(x: 121.62, y: 139.43))
        textPath.addLine(to: CGPoint(x: 121.62, y: 150.44))
        textPath.addLine(to: CGPoint(x: 121.58, y: 150.44))
        textPath.addLine(to: CGPoint(x: 114.44, y: 139.43))
        textPath.addLine(to: CGPoint(x: 112.52, y: 139.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 127.17, y: 148.1))
        textPath.addCurve(to: CGPoint(x: 127.41, y: 146.51), controlPoint1: CGPoint(x: 127.17, y: 147.5), controlPoint2: CGPoint(x: 127.25, y: 146.97))
        textPath.addCurve(to: CGPoint(x: 128.06, y: 145.34), controlPoint1: CGPoint(x: 127.57, y: 146.05), controlPoint2: CGPoint(x: 127.78, y: 145.66))
        textPath.addCurve(to: CGPoint(x: 129.04, y: 144.62), controlPoint1: CGPoint(x: 128.34, y: 145.03), controlPoint2: CGPoint(x: 128.67, y: 144.79))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 144.37), controlPoint1: CGPoint(x: 129.42, y: 144.46), controlPoint2: CGPoint(x: 129.81, y: 144.37))
        textPath.addCurve(to: CGPoint(x: 131.42, y: 144.62), controlPoint1: CGPoint(x: 130.65, y: 144.37), controlPoint2: CGPoint(x: 131.04, y: 144.46))
        textPath.addCurve(to: CGPoint(x: 132.4, y: 145.34), controlPoint1: CGPoint(x: 131.79, y: 144.79), controlPoint2: CGPoint(x: 132.12, y: 145.03))
        textPath.addCurve(to: CGPoint(x: 133.05, y: 146.51), controlPoint1: CGPoint(x: 132.67, y: 145.66), controlPoint2: CGPoint(x: 132.89, y: 146.05))
        textPath.addCurve(to: CGPoint(x: 133.29, y: 148.1), controlPoint1: CGPoint(x: 133.21, y: 146.97), controlPoint2: CGPoint(x: 133.29, y: 147.5))
        textPath.addCurve(to: CGPoint(x: 133.05, y: 149.68), controlPoint1: CGPoint(x: 133.29, y: 148.69), controlPoint2: CGPoint(x: 133.21, y: 149.22))
        textPath.addCurve(to: CGPoint(x: 132.4, y: 150.84), controlPoint1: CGPoint(x: 132.89, y: 150.15), controlPoint2: CGPoint(x: 132.67, y: 150.53))
        textPath.addCurve(to: CGPoint(x: 131.42, y: 151.56), controlPoint1: CGPoint(x: 132.12, y: 151.15), controlPoint2: CGPoint(x: 131.79, y: 151.39))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 151.8), controlPoint1: CGPoint(x: 131.04, y: 151.72), controlPoint2: CGPoint(x: 130.65, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 129.04, y: 151.56), controlPoint1: CGPoint(x: 129.81, y: 151.8), controlPoint2: CGPoint(x: 129.42, y: 151.72))
        textPath.addCurve(to: CGPoint(x: 128.06, y: 150.84), controlPoint1: CGPoint(x: 128.67, y: 151.39), controlPoint2: CGPoint(x: 128.34, y: 151.15))
        textPath.addCurve(to: CGPoint(x: 127.41, y: 149.68), controlPoint1: CGPoint(x: 127.78, y: 150.53), controlPoint2: CGPoint(x: 127.57, y: 150.15))
        textPath.addCurve(to: CGPoint(x: 127.17, y: 148.1), controlPoint1: CGPoint(x: 127.25, y: 149.22), controlPoint2: CGPoint(x: 127.17, y: 148.69))
        textPath.close()
        textPath.move(to: CGPoint(x: 125.46, y: 148.1))
        textPath.addCurve(to: CGPoint(x: 125.76, y: 150.11), controlPoint1: CGPoint(x: 125.46, y: 148.82), controlPoint2: CGPoint(x: 125.56, y: 149.49))
        textPath.addCurve(to: CGPoint(x: 126.68, y: 151.74), controlPoint1: CGPoint(x: 125.97, y: 150.73), controlPoint2: CGPoint(x: 126.27, y: 151.27))
        textPath.addCurve(to: CGPoint(x: 128.18, y: 152.82), controlPoint1: CGPoint(x: 127.08, y: 152.2), controlPoint2: CGPoint(x: 127.58, y: 152.56))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 153.21), controlPoint1: CGPoint(x: 128.77, y: 153.08), controlPoint2: CGPoint(x: 129.46, y: 153.21))
        textPath.addCurve(to: CGPoint(x: 132.29, y: 152.82), controlPoint1: CGPoint(x: 131.01, y: 153.21), controlPoint2: CGPoint(x: 131.7, y: 153.08))
        textPath.addCurve(to: CGPoint(x: 133.78, y: 151.74), controlPoint1: CGPoint(x: 132.88, y: 152.56), controlPoint2: CGPoint(x: 133.38, y: 152.2))
        textPath.addCurve(to: CGPoint(x: 134.69, y: 150.11), controlPoint1: CGPoint(x: 134.19, y: 151.27), controlPoint2: CGPoint(x: 134.49, y: 150.73))
        textPath.addCurve(to: CGPoint(x: 135, y: 148.1), controlPoint1: CGPoint(x: 134.9, y: 149.49), controlPoint2: CGPoint(x: 135, y: 148.82))
        textPath.addCurve(to: CGPoint(x: 134.69, y: 146.07), controlPoint1: CGPoint(x: 135, y: 147.38), controlPoint2: CGPoint(x: 134.9, y: 146.7))
        textPath.addCurve(to: CGPoint(x: 133.78, y: 144.44), controlPoint1: CGPoint(x: 134.49, y: 145.45), controlPoint2: CGPoint(x: 134.19, y: 144.9))
        textPath.addCurve(to: CGPoint(x: 132.29, y: 143.35), controlPoint1: CGPoint(x: 133.38, y: 143.98), controlPoint2: CGPoint(x: 132.88, y: 143.61))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 142.95), controlPoint1: CGPoint(x: 131.7, y: 143.08), controlPoint2: CGPoint(x: 131.01, y: 142.95))
        textPath.addCurve(to: CGPoint(x: 128.18, y: 143.35), controlPoint1: CGPoint(x: 129.46, y: 142.95), controlPoint2: CGPoint(x: 128.77, y: 143.08))
        textPath.addCurve(to: CGPoint(x: 126.68, y: 144.44), controlPoint1: CGPoint(x: 127.58, y: 143.61), controlPoint2: CGPoint(x: 127.08, y: 143.98))
        textPath.addCurve(to: CGPoint(x: 125.76, y: 146.07), controlPoint1: CGPoint(x: 126.27, y: 144.9), controlPoint2: CGPoint(x: 125.97, y: 145.45))
        textPath.addCurve(to: CGPoint(x: 125.46, y: 148.1), controlPoint1: CGPoint(x: 125.56, y: 146.7), controlPoint2: CGPoint(x: 125.46, y: 147.38))
        textPath.close()
        textPath.move(to: CGPoint(x: 146.63, y: 153))
        textPath.addLine(to: CGPoint(x: 149.76, y: 143.18))
        textPath.addLine(to: CGPoint(x: 148.09, y: 143.18))
        textPath.addLine(to: CGPoint(x: 145.89, y: 151.21))
        textPath.addLine(to: CGPoint(x: 145.85, y: 151.21))
        textPath.addLine(to: CGPoint(x: 143.8, y: 143.18))
        textPath.addLine(to: CGPoint(x: 142.03, y: 143.18))
        textPath.addLine(to: CGPoint(x: 140.05, y: 151.21))
        textPath.addLine(to: CGPoint(x: 140.01, y: 151.21))
        textPath.addLine(to: CGPoint(x: 137.79, y: 143.18))
        textPath.addLine(to: CGPoint(x: 136.01, y: 143.18))
        textPath.addLine(to: CGPoint(x: 139.16, y: 153))
        textPath.addLine(to: CGPoint(x: 140.91, y: 153))
        textPath.addLine(to: CGPoint(x: 142.88, y: 145.19))
        textPath.addLine(to: CGPoint(x: 142.92, y: 145.19))
        textPath.addLine(to: CGPoint(x: 144.92, y: 153))
        textPath.addLine(to: CGPoint(x: 146.63, y: 153))
        textPath.close()
        UIColor.white.setFill()
        textPath.fill()
    }

    @objc dynamic public class func drawSubscribetwo() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!


        //// Gradient Declarations
        let gradient11 = CGGradient(colorsSpace: nil, colors: [ButtonsForFJ092018.blueGradientColor2.cgColor, ButtonsForFJ092018.gradientForBoxColor2.cgColor] as CFArray, locations: [0, 1])!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 170, height: 47))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(gradient11, start: CGPoint(x: 85, y: -0), end: CGPoint(x: 85, y: 47), options: [])
        context.restoreGState()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 0, y: 123, width: 170, height: 47))
        context.saveGState()
        rectangle2Path.addClip()
        context.drawLinearGradient(gradient11, start: CGPoint(x: 85, y: 123), end: CGPoint(x: 85, y: 170), options: [])
        context.restoreGState()


        //// Text 4 Drawing
        let text4Path = UIBezierPath()
        text4Path.move(to: CGPoint(x: 51.55, y: 26.12))
        text4Path.addLine(to: CGPoint(x: 50.6, y: 27.23))
        text4Path.addLine(to: CGPoint(x: 52.1, y: 28.42))
        text4Path.addCurve(to: CGPoint(x: 50.22, y: 28.8), controlPoint1: CGPoint(x: 51.49, y: 28.68), controlPoint2: CGPoint(x: 50.87, y: 28.8))
        text4Path.addCurve(to: CGPoint(x: 48.09, y: 28.32), controlPoint1: CGPoint(x: 49.4, y: 28.8), controlPoint2: CGPoint(x: 48.69, y: 28.64))
        text4Path.addCurve(to: CGPoint(x: 46.63, y: 27.04), controlPoint1: CGPoint(x: 47.5, y: 28), controlPoint2: CGPoint(x: 47.01, y: 27.57))
        text4Path.addCurve(to: CGPoint(x: 45.79, y: 25.24), controlPoint1: CGPoint(x: 46.25, y: 26.5), controlPoint2: CGPoint(x: 45.97, y: 25.91))
        text4Path.addCurve(to: CGPoint(x: 45.53, y: 23.22), controlPoint1: CGPoint(x: 45.62, y: 24.58), controlPoint2: CGPoint(x: 45.53, y: 23.9))
        text4Path.addCurve(to: CGPoint(x: 45.79, y: 21.19), controlPoint1: CGPoint(x: 45.53, y: 22.53), controlPoint2: CGPoint(x: 45.62, y: 21.86))
        text4Path.addCurve(to: CGPoint(x: 46.63, y: 19.4), controlPoint1: CGPoint(x: 45.97, y: 20.53), controlPoint2: CGPoint(x: 46.25, y: 19.93))
        text4Path.addCurve(to: CGPoint(x: 48.09, y: 18.12), controlPoint1: CGPoint(x: 47.01, y: 18.87), controlPoint2: CGPoint(x: 47.5, y: 18.44))
        text4Path.addCurve(to: CGPoint(x: 50.22, y: 17.63), controlPoint1: CGPoint(x: 48.69, y: 17.79), controlPoint2: CGPoint(x: 49.4, y: 17.63))
        text4Path.addCurve(to: CGPoint(x: 52.35, y: 18.12), controlPoint1: CGPoint(x: 51.04, y: 17.63), controlPoint2: CGPoint(x: 51.75, y: 17.79))
        text4Path.addCurve(to: CGPoint(x: 53.81, y: 19.4), controlPoint1: CGPoint(x: 52.94, y: 18.44), controlPoint2: CGPoint(x: 53.43, y: 18.87))
        text4Path.addCurve(to: CGPoint(x: 54.65, y: 21.19), controlPoint1: CGPoint(x: 54.19, y: 19.93), controlPoint2: CGPoint(x: 54.47, y: 20.53))
        text4Path.addCurve(to: CGPoint(x: 54.91, y: 23.22), controlPoint1: CGPoint(x: 54.82, y: 21.86), controlPoint2: CGPoint(x: 54.91, y: 22.53))
        text4Path.addCurve(to: CGPoint(x: 54.53, y: 25.62), controlPoint1: CGPoint(x: 54.91, y: 24.05), controlPoint2: CGPoint(x: 54.79, y: 24.85))
        text4Path.addCurve(to: CGPoint(x: 53.36, y: 27.57), controlPoint1: CGPoint(x: 54.28, y: 26.39), controlPoint2: CGPoint(x: 53.89, y: 27.04))
        text4Path.addLine(to: CGPoint(x: 51.55, y: 26.12))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 55.54, y: 31.16))
        text4Path.addLine(to: CGPoint(x: 56.45, y: 30.02))
        text4Path.addLine(to: CGPoint(x: 54.67, y: 28.61))
        text4Path.addCurve(to: CGPoint(x: 56.2, y: 26.18), controlPoint1: CGPoint(x: 55.35, y: 27.93), controlPoint2: CGPoint(x: 55.86, y: 27.12))
        text4Path.addCurve(to: CGPoint(x: 56.72, y: 23.22), controlPoint1: CGPoint(x: 56.55, y: 25.24), controlPoint2: CGPoint(x: 56.72, y: 24.26))
        text4Path.addCurve(to: CGPoint(x: 56.31, y: 20.55), controlPoint1: CGPoint(x: 56.72, y: 22.29), controlPoint2: CGPoint(x: 56.58, y: 21.4))
        text4Path.addCurve(to: CGPoint(x: 55.08, y: 18.28), controlPoint1: CGPoint(x: 56.04, y: 19.69), controlPoint2: CGPoint(x: 55.63, y: 18.94))
        text4Path.addCurve(to: CGPoint(x: 53.05, y: 16.7), controlPoint1: CGPoint(x: 54.54, y: 17.62), controlPoint2: CGPoint(x: 53.86, y: 17.09))
        text4Path.addCurve(to: CGPoint(x: 50.22, y: 16.11), controlPoint1: CGPoint(x: 52.24, y: 16.31), controlPoint2: CGPoint(x: 51.3, y: 16.11))
        text4Path.addCurve(to: CGPoint(x: 47.39, y: 16.7), controlPoint1: CGPoint(x: 49.14, y: 16.11), controlPoint2: CGPoint(x: 48.2, y: 16.31))
        text4Path.addCurve(to: CGPoint(x: 45.36, y: 18.28), controlPoint1: CGPoint(x: 46.58, y: 17.09), controlPoint2: CGPoint(x: 45.9, y: 17.62))
        text4Path.addCurve(to: CGPoint(x: 44.13, y: 20.55), controlPoint1: CGPoint(x: 44.81, y: 18.94), controlPoint2: CGPoint(x: 44.4, y: 19.69))
        text4Path.addCurve(to: CGPoint(x: 43.72, y: 23.22), controlPoint1: CGPoint(x: 43.86, y: 21.4), controlPoint2: CGPoint(x: 43.72, y: 22.29))
        text4Path.addCurve(to: CGPoint(x: 44.13, y: 25.89), controlPoint1: CGPoint(x: 43.72, y: 24.14), controlPoint2: CGPoint(x: 43.86, y: 25.03))
        text4Path.addCurve(to: CGPoint(x: 45.36, y: 28.16), controlPoint1: CGPoint(x: 44.4, y: 26.74), controlPoint2: CGPoint(x: 44.81, y: 27.5))
        text4Path.addCurve(to: CGPoint(x: 47.39, y: 29.72), controlPoint1: CGPoint(x: 45.9, y: 28.82), controlPoint2: CGPoint(x: 46.58, y: 29.34))
        text4Path.addCurve(to: CGPoint(x: 50.22, y: 30.3), controlPoint1: CGPoint(x: 48.2, y: 30.11), controlPoint2: CGPoint(x: 49.14, y: 30.3))
        text4Path.addCurve(to: CGPoint(x: 53.47, y: 29.51), controlPoint1: CGPoint(x: 51.47, y: 30.3), controlPoint2: CGPoint(x: 52.56, y: 30.04))
        text4Path.addLine(to: CGPoint(x: 55.54, y: 31.16))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 66.79, y: 30))
        text4Path.addLine(to: CGPoint(x: 66.79, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 65.17, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 65.17, y: 25.72))
        text4Path.addCurve(to: CGPoint(x: 64.99, y: 26.95), controlPoint1: CGPoint(x: 65.17, y: 26.17), controlPoint2: CGPoint(x: 65.11, y: 26.58))
        text4Path.addCurve(to: CGPoint(x: 64.45, y: 27.93), controlPoint1: CGPoint(x: 64.87, y: 27.32), controlPoint2: CGPoint(x: 64.69, y: 27.65))
        text4Path.addCurve(to: CGPoint(x: 63.55, y: 28.57), controlPoint1: CGPoint(x: 64.21, y: 28.21), controlPoint2: CGPoint(x: 63.91, y: 28.42))
        text4Path.addCurve(to: CGPoint(x: 62.27, y: 28.8), controlPoint1: CGPoint(x: 63.19, y: 28.73), controlPoint2: CGPoint(x: 62.76, y: 28.8))
        text4Path.addCurve(to: CGPoint(x: 60.8, y: 28.27), controlPoint1: CGPoint(x: 61.65, y: 28.8), controlPoint2: CGPoint(x: 61.16, y: 28.63))
        text4Path.addCurve(to: CGPoint(x: 60.27, y: 26.83), controlPoint1: CGPoint(x: 60.45, y: 27.92), controlPoint2: CGPoint(x: 60.27, y: 27.44))
        text4Path.addLine(to: CGPoint(x: 60.27, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 58.66, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 58.66, y: 26.64))
        text4Path.addCurve(to: CGPoint(x: 58.82, y: 28.09), controlPoint1: CGPoint(x: 58.66, y: 27.17), controlPoint2: CGPoint(x: 58.71, y: 27.65))
        text4Path.addCurve(to: CGPoint(x: 59.38, y: 29.22), controlPoint1: CGPoint(x: 58.93, y: 28.53), controlPoint2: CGPoint(x: 59.11, y: 28.9))
        text4Path.addCurve(to: CGPoint(x: 60.42, y: 29.95), controlPoint1: CGPoint(x: 59.64, y: 29.54), controlPoint2: CGPoint(x: 59.99, y: 29.78))
        text4Path.addCurve(to: CGPoint(x: 62.04, y: 30.21), controlPoint1: CGPoint(x: 60.85, y: 30.12), controlPoint2: CGPoint(x: 61.39, y: 30.21))
        text4Path.addCurve(to: CGPoint(x: 63.92, y: 29.78), controlPoint1: CGPoint(x: 62.76, y: 30.21), controlPoint2: CGPoint(x: 63.39, y: 30.07))
        text4Path.addCurve(to: CGPoint(x: 65.23, y: 28.44), controlPoint1: CGPoint(x: 64.45, y: 29.5), controlPoint2: CGPoint(x: 64.89, y: 29.05))
        text4Path.addLine(to: CGPoint(x: 65.27, y: 28.44))
        text4Path.addLine(to: CGPoint(x: 65.27, y: 30))
        text4Path.addLine(to: CGPoint(x: 66.79, y: 30))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 77.92, y: 29.96))
        text4Path.addCurve(to: CGPoint(x: 76.76, y: 30.21), controlPoint1: CGPoint(x: 77.64, y: 30.13), controlPoint2: CGPoint(x: 77.26, y: 30.21))
        text4Path.addCurve(to: CGPoint(x: 75.77, y: 29.86), controlPoint1: CGPoint(x: 76.34, y: 30.21), controlPoint2: CGPoint(x: 76.01, y: 30.09))
        text4Path.addCurve(to: CGPoint(x: 75.39, y: 28.71), controlPoint1: CGPoint(x: 75.52, y: 29.62), controlPoint2: CGPoint(x: 75.39, y: 29.24))
        text4Path.addCurve(to: CGPoint(x: 73.85, y: 29.86), controlPoint1: CGPoint(x: 74.95, y: 29.24), controlPoint2: CGPoint(x: 74.44, y: 29.62))
        text4Path.addCurve(to: CGPoint(x: 71.94, y: 30.21), controlPoint1: CGPoint(x: 73.26, y: 30.09), controlPoint2: CGPoint(x: 72.62, y: 30.21))
        text4Path.addCurve(to: CGPoint(x: 70.67, y: 30.06), controlPoint1: CGPoint(x: 71.49, y: 30.21), controlPoint2: CGPoint(x: 71.07, y: 30.16))
        text4Path.addCurve(to: CGPoint(x: 69.64, y: 29.58), controlPoint1: CGPoint(x: 70.27, y: 29.96), controlPoint2: CGPoint(x: 69.93, y: 29.8))
        text4Path.addCurve(to: CGPoint(x: 68.94, y: 28.74), controlPoint1: CGPoint(x: 69.35, y: 29.37), controlPoint2: CGPoint(x: 69.12, y: 29.08))
        text4Path.addCurve(to: CGPoint(x: 68.69, y: 27.47), controlPoint1: CGPoint(x: 68.77, y: 28.39), controlPoint2: CGPoint(x: 68.69, y: 27.97))
        text4Path.addCurve(to: CGPoint(x: 68.97, y: 26.1), controlPoint1: CGPoint(x: 68.69, y: 26.92), controlPoint2: CGPoint(x: 68.78, y: 26.46))
        text4Path.addCurve(to: CGPoint(x: 69.72, y: 25.24), controlPoint1: CGPoint(x: 69.16, y: 25.75), controlPoint2: CGPoint(x: 69.41, y: 25.46))
        text4Path.addCurve(to: CGPoint(x: 70.79, y: 24.74), controlPoint1: CGPoint(x: 70.03, y: 25.02), controlPoint2: CGPoint(x: 70.39, y: 24.85))
        text4Path.addCurve(to: CGPoint(x: 72.01, y: 24.45), controlPoint1: CGPoint(x: 71.19, y: 24.62), controlPoint2: CGPoint(x: 71.59, y: 24.53))
        text4Path.addCurve(to: CGPoint(x: 73.28, y: 24.25), controlPoint1: CGPoint(x: 72.46, y: 24.36), controlPoint2: CGPoint(x: 72.88, y: 24.3))
        text4Path.addCurve(to: CGPoint(x: 74.33, y: 24.06), controlPoint1: CGPoint(x: 73.68, y: 24.21), controlPoint2: CGPoint(x: 74.03, y: 24.14))
        text4Path.addCurve(to: CGPoint(x: 75.05, y: 23.7), controlPoint1: CGPoint(x: 74.64, y: 23.98), controlPoint2: CGPoint(x: 74.88, y: 23.86))
        text4Path.addCurve(to: CGPoint(x: 75.32, y: 23.01), controlPoint1: CGPoint(x: 75.23, y: 23.54), controlPoint2: CGPoint(x: 75.32, y: 23.31))
        text4Path.addCurve(to: CGPoint(x: 75.12, y: 22.15), controlPoint1: CGPoint(x: 75.32, y: 22.65), controlPoint2: CGPoint(x: 75.25, y: 22.37))
        text4Path.addCurve(to: CGPoint(x: 74.61, y: 21.66), controlPoint1: CGPoint(x: 74.99, y: 21.94), controlPoint2: CGPoint(x: 74.82, y: 21.77))
        text4Path.addCurve(to: CGPoint(x: 73.9, y: 21.43), controlPoint1: CGPoint(x: 74.4, y: 21.54), controlPoint2: CGPoint(x: 74.16, y: 21.47))
        text4Path.addCurve(to: CGPoint(x: 73.13, y: 21.37), controlPoint1: CGPoint(x: 73.64, y: 21.39), controlPoint2: CGPoint(x: 73.39, y: 21.37))
        text4Path.addCurve(to: CGPoint(x: 71.42, y: 21.76), controlPoint1: CGPoint(x: 72.45, y: 21.37), controlPoint2: CGPoint(x: 71.88, y: 21.5))
        text4Path.addCurve(to: CGPoint(x: 70.68, y: 23.24), controlPoint1: CGPoint(x: 70.97, y: 22.02), controlPoint2: CGPoint(x: 70.72, y: 22.51))
        text4Path.addLine(to: CGPoint(x: 69.07, y: 23.24))
        text4Path.addCurve(to: CGPoint(x: 69.45, y: 21.7), controlPoint1: CGPoint(x: 69.09, y: 22.63), controlPoint2: CGPoint(x: 69.22, y: 22.12))
        text4Path.addCurve(to: CGPoint(x: 70.36, y: 20.68), controlPoint1: CGPoint(x: 69.68, y: 21.28), controlPoint2: CGPoint(x: 69.98, y: 20.94))
        text4Path.addCurve(to: CGPoint(x: 71.66, y: 20.12), controlPoint1: CGPoint(x: 70.74, y: 20.42), controlPoint2: CGPoint(x: 71.17, y: 20.23))
        text4Path.addCurve(to: CGPoint(x: 73.23, y: 19.95), controlPoint1: CGPoint(x: 72.15, y: 20.01), controlPoint2: CGPoint(x: 72.67, y: 19.95))
        text4Path.addCurve(to: CGPoint(x: 74.55, y: 20.04), controlPoint1: CGPoint(x: 73.67, y: 19.95), controlPoint2: CGPoint(x: 74.11, y: 19.98))
        text4Path.addCurve(to: CGPoint(x: 75.74, y: 20.43), controlPoint1: CGPoint(x: 74.99, y: 20.11), controlPoint2: CGPoint(x: 75.38, y: 20.24))
        text4Path.addCurve(to: CGPoint(x: 76.59, y: 21.26), controlPoint1: CGPoint(x: 76.09, y: 20.63), controlPoint2: CGPoint(x: 76.38, y: 20.91))
        text4Path.addCurve(to: CGPoint(x: 76.91, y: 22.65), controlPoint1: CGPoint(x: 76.81, y: 21.61), controlPoint2: CGPoint(x: 76.91, y: 22.08))
        text4Path.addLine(to: CGPoint(x: 76.91, y: 27.7))
        text4Path.addCurve(to: CGPoint(x: 76.98, y: 28.54), controlPoint1: CGPoint(x: 76.91, y: 28.08), controlPoint2: CGPoint(x: 76.94, y: 28.36))
        text4Path.addCurve(to: CGPoint(x: 77.43, y: 28.8), controlPoint1: CGPoint(x: 77.03, y: 28.71), controlPoint2: CGPoint(x: 77.17, y: 28.8))
        text4Path.addCurve(to: CGPoint(x: 77.92, y: 28.71), controlPoint1: CGPoint(x: 77.57, y: 28.8), controlPoint2: CGPoint(x: 77.73, y: 28.77))
        text4Path.addLine(to: CGPoint(x: 77.92, y: 29.96))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 75.3, y: 24.93))
        text4Path.addCurve(to: CGPoint(x: 74.5, y: 25.26), controlPoint1: CGPoint(x: 75.1, y: 25.08), controlPoint2: CGPoint(x: 74.83, y: 25.19))
        text4Path.addCurve(to: CGPoint(x: 73.47, y: 25.43), controlPoint1: CGPoint(x: 74.17, y: 25.33), controlPoint2: CGPoint(x: 73.83, y: 25.39))
        text4Path.addCurve(to: CGPoint(x: 72.37, y: 25.58), controlPoint1: CGPoint(x: 73.11, y: 25.47), controlPoint2: CGPoint(x: 72.74, y: 25.53))
        text4Path.addCurve(to: CGPoint(x: 71.39, y: 25.86), controlPoint1: CGPoint(x: 72.01, y: 25.64), controlPoint2: CGPoint(x: 71.68, y: 25.73))
        text4Path.addCurve(to: CGPoint(x: 70.67, y: 26.4), controlPoint1: CGPoint(x: 71.09, y: 25.98), controlPoint2: CGPoint(x: 70.86, y: 26.17))
        text4Path.addCurve(to: CGPoint(x: 70.4, y: 27.36), controlPoint1: CGPoint(x: 70.49, y: 26.63), controlPoint2: CGPoint(x: 70.4, y: 26.95))
        text4Path.addCurve(to: CGPoint(x: 70.56, y: 28.03), controlPoint1: CGPoint(x: 70.4, y: 27.63), controlPoint2: CGPoint(x: 70.45, y: 27.85))
        text4Path.addCurve(to: CGPoint(x: 70.98, y: 28.48), controlPoint1: CGPoint(x: 70.67, y: 28.22), controlPoint2: CGPoint(x: 70.81, y: 28.37))
        text4Path.addCurve(to: CGPoint(x: 71.58, y: 28.73), controlPoint1: CGPoint(x: 71.15, y: 28.59), controlPoint2: CGPoint(x: 71.35, y: 28.68))
        text4Path.addCurve(to: CGPoint(x: 72.3, y: 28.8), controlPoint1: CGPoint(x: 71.8, y: 28.78), controlPoint2: CGPoint(x: 72.04, y: 28.8))
        text4Path.addCurve(to: CGPoint(x: 73.67, y: 28.58), controlPoint1: CGPoint(x: 72.83, y: 28.8), controlPoint2: CGPoint(x: 73.29, y: 28.73))
        text4Path.addCurve(to: CGPoint(x: 74.6, y: 28.03), controlPoint1: CGPoint(x: 74.05, y: 28.44), controlPoint2: CGPoint(x: 74.36, y: 28.26))
        text4Path.addCurve(to: CGPoint(x: 75.13, y: 27.31), controlPoint1: CGPoint(x: 74.84, y: 27.81), controlPoint2: CGPoint(x: 75.01, y: 27.57))
        text4Path.addCurve(to: CGPoint(x: 75.3, y: 26.58), controlPoint1: CGPoint(x: 75.24, y: 27.05), controlPoint2: CGPoint(x: 75.3, y: 26.81))
        text4Path.addLine(to: CGPoint(x: 75.3, y: 24.93))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 79.37, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 79.37, y: 30))
        text4Path.addLine(to: CGPoint(x: 80.98, y: 30))
        text4Path.addLine(to: CGPoint(x: 80.98, y: 25.63))
        text4Path.addCurve(to: CGPoint(x: 81.17, y: 23.95), controlPoint1: CGPoint(x: 80.98, y: 25), controlPoint2: CGPoint(x: 81.04, y: 24.44))
        text4Path.addCurve(to: CGPoint(x: 81.78, y: 22.7), controlPoint1: CGPoint(x: 81.3, y: 23.46), controlPoint2: CGPoint(x: 81.5, y: 23.05))
        text4Path.addCurve(to: CGPoint(x: 82.88, y: 21.92), controlPoint1: CGPoint(x: 82.06, y: 22.36), controlPoint2: CGPoint(x: 82.42, y: 22.1))
        text4Path.addCurve(to: CGPoint(x: 84.53, y: 21.66), controlPoint1: CGPoint(x: 83.34, y: 21.75), controlPoint2: CGPoint(x: 83.89, y: 21.66))
        text4Path.addLine(to: CGPoint(x: 84.53, y: 19.95))
        text4Path.addCurve(to: CGPoint(x: 82.37, y: 20.48), controlPoint1: CGPoint(x: 83.66, y: 19.92), controlPoint2: CGPoint(x: 82.94, y: 20.1))
        text4Path.addCurve(to: CGPoint(x: 80.92, y: 22.25), controlPoint1: CGPoint(x: 81.8, y: 20.86), controlPoint2: CGPoint(x: 81.32, y: 21.45))
        text4Path.addLine(to: CGPoint(x: 80.89, y: 22.25))
        text4Path.addLine(to: CGPoint(x: 80.89, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 79.37, y: 20.18))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 87.99, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 87.99, y: 17.23))
        text4Path.addLine(to: CGPoint(x: 86.38, y: 17.23))
        text4Path.addLine(to: CGPoint(x: 86.38, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 84.7, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 84.7, y: 21.6))
        text4Path.addLine(to: CGPoint(x: 86.38, y: 21.6))
        text4Path.addLine(to: CGPoint(x: 86.38, y: 27.85))
        text4Path.addCurve(to: CGPoint(x: 86.51, y: 28.95), controlPoint1: CGPoint(x: 86.38, y: 28.31), controlPoint2: CGPoint(x: 86.42, y: 28.68))
        text4Path.addCurve(to: CGPoint(x: 86.92, y: 29.6), controlPoint1: CGPoint(x: 86.6, y: 29.23), controlPoint2: CGPoint(x: 86.73, y: 29.45))
        text4Path.addCurve(to: CGPoint(x: 87.64, y: 29.91), controlPoint1: CGPoint(x: 87.1, y: 29.75), controlPoint2: CGPoint(x: 87.34, y: 29.86))
        text4Path.addCurve(to: CGPoint(x: 88.71, y: 30), controlPoint1: CGPoint(x: 87.94, y: 29.97), controlPoint2: CGPoint(x: 88.3, y: 30))
        text4Path.addLine(to: CGPoint(x: 89.95, y: 30))
        text4Path.addLine(to: CGPoint(x: 89.95, y: 28.57))
        text4Path.addLine(to: CGPoint(x: 89.21, y: 28.57))
        text4Path.addCurve(to: CGPoint(x: 88.59, y: 28.55), controlPoint1: CGPoint(x: 88.95, y: 28.57), controlPoint2: CGPoint(x: 88.75, y: 28.57))
        text4Path.addCurve(to: CGPoint(x: 88.22, y: 28.42), controlPoint1: CGPoint(x: 88.43, y: 28.53), controlPoint2: CGPoint(x: 88.31, y: 28.49))
        text4Path.addCurve(to: CGPoint(x: 88.04, y: 28.16), controlPoint1: CGPoint(x: 88.13, y: 28.36), controlPoint2: CGPoint(x: 88.07, y: 28.27))
        text4Path.addCurve(to: CGPoint(x: 87.99, y: 27.7), controlPoint1: CGPoint(x: 88.01, y: 28.04), controlPoint2: CGPoint(x: 87.99, y: 27.89))
        text4Path.addLine(to: CGPoint(x: 87.99, y: 21.6))
        text4Path.addLine(to: CGPoint(x: 89.95, y: 21.6))
        text4Path.addLine(to: CGPoint(x: 89.95, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 87.99, y: 20.18))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 98.56, y: 24.15))
        text4Path.addLine(to: CGPoint(x: 92.91, y: 24.15))
        text4Path.addCurve(to: CGPoint(x: 93.16, y: 23.07), controlPoint1: CGPoint(x: 92.94, y: 23.77), controlPoint2: CGPoint(x: 93.02, y: 23.41))
        text4Path.addCurve(to: CGPoint(x: 93.73, y: 22.19), controlPoint1: CGPoint(x: 93.3, y: 22.74), controlPoint2: CGPoint(x: 93.49, y: 22.44))
        text4Path.addCurve(to: CGPoint(x: 94.59, y: 21.59), controlPoint1: CGPoint(x: 93.97, y: 21.94), controlPoint2: CGPoint(x: 94.26, y: 21.74))
        text4Path.addCurve(to: CGPoint(x: 95.72, y: 21.37), controlPoint1: CGPoint(x: 94.93, y: 21.45), controlPoint2: CGPoint(x: 95.31, y: 21.37))
        text4Path.addCurve(to: CGPoint(x: 96.84, y: 21.59), controlPoint1: CGPoint(x: 96.13, y: 21.37), controlPoint2: CGPoint(x: 96.5, y: 21.45))
        text4Path.addCurve(to: CGPoint(x: 97.71, y: 22.18), controlPoint1: CGPoint(x: 97.17, y: 21.74), controlPoint2: CGPoint(x: 97.46, y: 21.93))
        text4Path.addCurve(to: CGPoint(x: 98.3, y: 23.06), controlPoint1: CGPoint(x: 97.96, y: 22.43), controlPoint2: CGPoint(x: 98.15, y: 22.72))
        text4Path.addCurve(to: CGPoint(x: 98.56, y: 24.15), controlPoint1: CGPoint(x: 98.45, y: 23.41), controlPoint2: CGPoint(x: 98.53, y: 23.77))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 100.11, y: 26.88))
        text4Path.addLine(to: CGPoint(x: 98.52, y: 26.88))
        text4Path.addCurve(to: CGPoint(x: 97.65, y: 28.33), controlPoint1: CGPoint(x: 98.38, y: 27.53), controlPoint2: CGPoint(x: 98.09, y: 28.01))
        text4Path.addCurve(to: CGPoint(x: 95.97, y: 28.8), controlPoint1: CGPoint(x: 97.22, y: 28.64), controlPoint2: CGPoint(x: 96.66, y: 28.8))
        text4Path.addCurve(to: CGPoint(x: 94.58, y: 28.54), controlPoint1: CGPoint(x: 95.44, y: 28.8), controlPoint2: CGPoint(x: 94.98, y: 28.71))
        text4Path.addCurve(to: CGPoint(x: 93.62, y: 27.82), controlPoint1: CGPoint(x: 94.19, y: 28.36), controlPoint2: CGPoint(x: 93.87, y: 28.12))
        text4Path.addCurve(to: CGPoint(x: 93.06, y: 26.8), controlPoint1: CGPoint(x: 93.36, y: 27.53), controlPoint2: CGPoint(x: 93.18, y: 27.18))
        text4Path.addCurve(to: CGPoint(x: 92.91, y: 25.57), controlPoint1: CGPoint(x: 92.95, y: 26.41), controlPoint2: CGPoint(x: 92.9, y: 26))
        text4Path.addLine(to: CGPoint(x: 100.27, y: 25.57))
        text4Path.addCurve(to: CGPoint(x: 100.1, y: 23.69), controlPoint1: CGPoint(x: 100.29, y: 24.98), controlPoint2: CGPoint(x: 100.24, y: 24.35))
        text4Path.addCurve(to: CGPoint(x: 99.38, y: 21.87), controlPoint1: CGPoint(x: 99.97, y: 23.03), controlPoint2: CGPoint(x: 99.73, y: 22.43))
        text4Path.addCurve(to: CGPoint(x: 98, y: 20.49), controlPoint1: CGPoint(x: 99.03, y: 21.31), controlPoint2: CGPoint(x: 98.57, y: 20.85))
        text4Path.addCurve(to: CGPoint(x: 95.82, y: 19.95), controlPoint1: CGPoint(x: 97.42, y: 20.13), controlPoint2: CGPoint(x: 96.69, y: 19.95))
        text4Path.addCurve(to: CGPoint(x: 93.97, y: 20.33), controlPoint1: CGPoint(x: 95.15, y: 19.95), controlPoint2: CGPoint(x: 94.53, y: 20.08))
        text4Path.addCurve(to: CGPoint(x: 92.5, y: 21.39), controlPoint1: CGPoint(x: 93.4, y: 20.58), controlPoint2: CGPoint(x: 92.92, y: 20.94))
        text4Path.addCurve(to: CGPoint(x: 91.54, y: 23.01), controlPoint1: CGPoint(x: 92.09, y: 21.85), controlPoint2: CGPoint(x: 91.77, y: 22.39))
        text4Path.addCurve(to: CGPoint(x: 91.2, y: 25.06), controlPoint1: CGPoint(x: 91.32, y: 23.63), controlPoint2: CGPoint(x: 91.2, y: 24.31))
        text4Path.addCurve(to: CGPoint(x: 91.54, y: 27.13), controlPoint1: CGPoint(x: 91.23, y: 25.81), controlPoint2: CGPoint(x: 91.34, y: 26.5))
        text4Path.addCurve(to: CGPoint(x: 92.42, y: 28.76), controlPoint1: CGPoint(x: 91.73, y: 27.76), controlPoint2: CGPoint(x: 92.03, y: 28.31))
        text4Path.addCurve(to: CGPoint(x: 93.87, y: 29.83), controlPoint1: CGPoint(x: 92.81, y: 29.22), controlPoint2: CGPoint(x: 93.3, y: 29.58))
        text4Path.addCurve(to: CGPoint(x: 95.91, y: 30.21), controlPoint1: CGPoint(x: 94.45, y: 30.08), controlPoint2: CGPoint(x: 95.13, y: 30.21))
        text4Path.addCurve(to: CGPoint(x: 98.69, y: 29.37), controlPoint1: CGPoint(x: 97.03, y: 30.21), controlPoint2: CGPoint(x: 97.95, y: 29.93))
        text4Path.addCurve(to: CGPoint(x: 100.11, y: 26.88), controlPoint1: CGPoint(x: 99.42, y: 28.82), controlPoint2: CGPoint(x: 99.9, y: 27.99))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 101.88, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 101.88, y: 30))
        text4Path.addLine(to: CGPoint(x: 103.5, y: 30))
        text4Path.addLine(to: CGPoint(x: 103.5, y: 25.63))
        text4Path.addCurve(to: CGPoint(x: 103.69, y: 23.95), controlPoint1: CGPoint(x: 103.5, y: 25), controlPoint2: CGPoint(x: 103.56, y: 24.44))
        text4Path.addCurve(to: CGPoint(x: 104.29, y: 22.7), controlPoint1: CGPoint(x: 103.81, y: 23.46), controlPoint2: CGPoint(x: 104.02, y: 23.05))
        text4Path.addCurve(to: CGPoint(x: 105.4, y: 21.92), controlPoint1: CGPoint(x: 104.57, y: 22.36), controlPoint2: CGPoint(x: 104.94, y: 22.1))
        text4Path.addCurve(to: CGPoint(x: 107.05, y: 21.66), controlPoint1: CGPoint(x: 105.85, y: 21.75), controlPoint2: CGPoint(x: 106.4, y: 21.66))
        text4Path.addLine(to: CGPoint(x: 107.05, y: 19.95))
        text4Path.addCurve(to: CGPoint(x: 104.88, y: 20.48), controlPoint1: CGPoint(x: 106.17, y: 19.92), controlPoint2: CGPoint(x: 105.45, y: 20.1))
        text4Path.addCurve(to: CGPoint(x: 103.44, y: 22.25), controlPoint1: CGPoint(x: 104.31, y: 20.86), controlPoint2: CGPoint(x: 103.83, y: 21.45))
        text4Path.addLine(to: CGPoint(x: 103.4, y: 22.25))
        text4Path.addLine(to: CGPoint(x: 103.4, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 101.88, y: 20.18))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 108.36, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 108.36, y: 30))
        text4Path.addLine(to: CGPoint(x: 109.97, y: 30))
        text4Path.addLine(to: CGPoint(x: 109.97, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 108.36, y: 16.43))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 116.34, y: 31.31))
        text4Path.addCurve(to: CGPoint(x: 115.78, y: 32.53), controlPoint1: CGPoint(x: 116.15, y: 31.79), controlPoint2: CGPoint(x: 115.96, y: 32.2))
        text4Path.addCurve(to: CGPoint(x: 115.17, y: 33.33), controlPoint1: CGPoint(x: 115.6, y: 32.86), controlPoint2: CGPoint(x: 115.39, y: 33.13))
        text4Path.addCurve(to: CGPoint(x: 114.43, y: 33.79), controlPoint1: CGPoint(x: 114.95, y: 33.54), controlPoint2: CGPoint(x: 114.7, y: 33.7))
        text4Path.addCurve(to: CGPoint(x: 113.49, y: 33.93), controlPoint1: CGPoint(x: 114.16, y: 33.89), controlPoint2: CGPoint(x: 113.84, y: 33.93))
        text4Path.addCurve(to: CGPoint(x: 112.92, y: 33.89), controlPoint1: CGPoint(x: 113.3, y: 33.93), controlPoint2: CGPoint(x: 113.11, y: 33.92))
        text4Path.addCurve(to: CGPoint(x: 112.37, y: 33.76), controlPoint1: CGPoint(x: 112.73, y: 33.87), controlPoint2: CGPoint(x: 112.55, y: 33.83))
        text4Path.addLine(to: CGPoint(x: 112.37, y: 32.28))
        text4Path.addCurve(to: CGPoint(x: 112.85, y: 32.44), controlPoint1: CGPoint(x: 112.51, y: 32.34), controlPoint2: CGPoint(x: 112.67, y: 32.4))
        text4Path.addCurve(to: CGPoint(x: 113.32, y: 32.51), controlPoint1: CGPoint(x: 113.04, y: 32.49), controlPoint2: CGPoint(x: 113.19, y: 32.51))
        text4Path.addCurve(to: CGPoint(x: 114.15, y: 32.27), controlPoint1: CGPoint(x: 113.65, y: 32.51), controlPoint2: CGPoint(x: 113.92, y: 32.43))
        text4Path.addCurve(to: CGPoint(x: 114.65, y: 31.6), controlPoint1: CGPoint(x: 114.37, y: 32.11), controlPoint2: CGPoint(x: 114.53, y: 31.89))
        text4Path.addLine(to: CGPoint(x: 115.31, y: 29.94))
        text4Path.addLine(to: CGPoint(x: 111.42, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 113.24, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 116.11, y: 28.21))
        text4Path.addLine(to: CGPoint(x: 116.15, y: 28.21))
        text4Path.addLine(to: CGPoint(x: 118.91, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 120.62, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 116.34, y: 31.31))
        text4Path.close()
        UIColor.white.setFill()
        text4Path.fill()


        //// Text Drawing
        let textPath = UIBezierPath()
        textPath.move(to: CGPoint(x: 29.24, y: 143.41))
        textPath.addLine(to: CGPoint(x: 30.95, y: 143.41))
        textPath.addCurve(to: CGPoint(x: 30.53, y: 141.48), controlPoint1: CGPoint(x: 30.93, y: 142.66), controlPoint2: CGPoint(x: 30.79, y: 142.01))
        textPath.addCurve(to: CGPoint(x: 29.46, y: 140.14), controlPoint1: CGPoint(x: 30.27, y: 140.94), controlPoint2: CGPoint(x: 29.91, y: 140.49))
        textPath.addCurve(to: CGPoint(x: 27.9, y: 139.36), controlPoint1: CGPoint(x: 29.01, y: 139.78), controlPoint2: CGPoint(x: 28.49, y: 139.52))
        textPath.addCurve(to: CGPoint(x: 25.96, y: 139.11), controlPoint1: CGPoint(x: 27.3, y: 139.19), controlPoint2: CGPoint(x: 26.65, y: 139.11))
        textPath.addCurve(to: CGPoint(x: 24.14, y: 139.35), controlPoint1: CGPoint(x: 25.34, y: 139.11), controlPoint2: CGPoint(x: 24.73, y: 139.19))
        textPath.addCurve(to: CGPoint(x: 22.57, y: 140.07), controlPoint1: CGPoint(x: 23.55, y: 139.51), controlPoint2: CGPoint(x: 23.03, y: 139.75))
        textPath.addCurve(to: CGPoint(x: 21.45, y: 141.31), controlPoint1: CGPoint(x: 22.1, y: 140.39), controlPoint2: CGPoint(x: 21.73, y: 140.81))
        textPath.addCurve(to: CGPoint(x: 21.04, y: 143.08), controlPoint1: CGPoint(x: 21.18, y: 141.81), controlPoint2: CGPoint(x: 21.04, y: 142.4))
        textPath.addCurve(to: CGPoint(x: 21.41, y: 144.63), controlPoint1: CGPoint(x: 21.04, y: 143.7), controlPoint2: CGPoint(x: 21.16, y: 144.22))
        textPath.addCurve(to: CGPoint(x: 22.39, y: 145.64), controlPoint1: CGPoint(x: 21.65, y: 145.04), controlPoint2: CGPoint(x: 21.98, y: 145.38))
        textPath.addCurve(to: CGPoint(x: 23.79, y: 146.26), controlPoint1: CGPoint(x: 22.81, y: 145.9), controlPoint2: CGPoint(x: 23.27, y: 146.11))
        textPath.addCurve(to: CGPoint(x: 25.38, y: 146.68), controlPoint1: CGPoint(x: 24.31, y: 146.42), controlPoint2: CGPoint(x: 24.84, y: 146.56))
        textPath.addCurve(to: CGPoint(x: 26.96, y: 147.03), controlPoint1: CGPoint(x: 25.92, y: 146.8), controlPoint2: CGPoint(x: 26.45, y: 146.92))
        textPath.addCurve(to: CGPoint(x: 28.36, y: 147.48), controlPoint1: CGPoint(x: 27.48, y: 147.15), controlPoint2: CGPoint(x: 27.95, y: 147.3))
        textPath.addCurve(to: CGPoint(x: 29.35, y: 148.19), controlPoint1: CGPoint(x: 28.77, y: 147.66), controlPoint2: CGPoint(x: 29.1, y: 147.9))
        textPath.addCurve(to: CGPoint(x: 29.72, y: 149.33), controlPoint1: CGPoint(x: 29.6, y: 148.48), controlPoint2: CGPoint(x: 29.72, y: 148.86))
        textPath.addCurve(to: CGPoint(x: 29.42, y: 150.55), controlPoint1: CGPoint(x: 29.72, y: 149.83), controlPoint2: CGPoint(x: 29.62, y: 150.23))
        textPath.addCurve(to: CGPoint(x: 28.62, y: 151.3), controlPoint1: CGPoint(x: 29.21, y: 150.87), controlPoint2: CGPoint(x: 28.95, y: 151.12))
        textPath.addCurve(to: CGPoint(x: 27.51, y: 151.69), controlPoint1: CGPoint(x: 28.29, y: 151.48), controlPoint2: CGPoint(x: 27.92, y: 151.61))
        textPath.addCurve(to: CGPoint(x: 26.28, y: 151.8), controlPoint1: CGPoint(x: 27.09, y: 151.77), controlPoint2: CGPoint(x: 26.69, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 24.8, y: 151.61), controlPoint1: CGPoint(x: 25.77, y: 151.8), controlPoint2: CGPoint(x: 25.28, y: 151.74))
        textPath.addCurve(to: CGPoint(x: 23.53, y: 151.02), controlPoint1: CGPoint(x: 24.32, y: 151.49), controlPoint2: CGPoint(x: 23.9, y: 151.29))
        textPath.addCurve(to: CGPoint(x: 22.66, y: 150.01), controlPoint1: CGPoint(x: 23.17, y: 150.76), controlPoint2: CGPoint(x: 22.88, y: 150.42))
        textPath.addCurve(to: CGPoint(x: 22.33, y: 148.53), controlPoint1: CGPoint(x: 22.44, y: 149.6), controlPoint2: CGPoint(x: 22.33, y: 149.11))
        textPath.addLine(to: CGPoint(x: 20.62, y: 148.53))
        textPath.addCurve(to: CGPoint(x: 21.06, y: 150.67), controlPoint1: CGPoint(x: 20.62, y: 149.36), controlPoint2: CGPoint(x: 20.77, y: 150.07))
        textPath.addCurve(to: CGPoint(x: 22.28, y: 152.15), controlPoint1: CGPoint(x: 21.36, y: 151.27), controlPoint2: CGPoint(x: 21.77, y: 151.77))
        textPath.addCurve(to: CGPoint(x: 24.07, y: 153.02), controlPoint1: CGPoint(x: 22.79, y: 152.54), controlPoint2: CGPoint(x: 23.39, y: 152.83))
        textPath.addCurve(to: CGPoint(x: 26.22, y: 153.3), controlPoint1: CGPoint(x: 24.74, y: 153.21), controlPoint2: CGPoint(x: 25.46, y: 153.3))
        textPath.addCurve(to: CGPoint(x: 28.09, y: 153.09), controlPoint1: CGPoint(x: 26.84, y: 153.3), controlPoint2: CGPoint(x: 27.47, y: 153.23))
        textPath.addCurve(to: CGPoint(x: 29.8, y: 152.38), controlPoint1: CGPoint(x: 28.72, y: 152.94), controlPoint2: CGPoint(x: 29.29, y: 152.71))
        textPath.addCurve(to: CGPoint(x: 31.04, y: 151.13), controlPoint1: CGPoint(x: 30.3, y: 152.06), controlPoint2: CGPoint(x: 30.72, y: 151.64))
        textPath.addCurve(to: CGPoint(x: 31.52, y: 149.28), controlPoint1: CGPoint(x: 31.36, y: 150.62), controlPoint2: CGPoint(x: 31.52, y: 150))
        textPath.addCurve(to: CGPoint(x: 31.15, y: 147.6), controlPoint1: CGPoint(x: 31.52, y: 148.6), controlPoint2: CGPoint(x: 31.4, y: 148.05))
        textPath.addCurve(to: CGPoint(x: 30.17, y: 146.5), controlPoint1: CGPoint(x: 30.91, y: 147.16), controlPoint2: CGPoint(x: 30.58, y: 146.79))
        textPath.addCurve(to: CGPoint(x: 28.77, y: 145.81), controlPoint1: CGPoint(x: 29.75, y: 146.21), controlPoint2: CGPoint(x: 29.29, y: 145.98))
        textPath.addCurve(to: CGPoint(x: 27.18, y: 145.36), controlPoint1: CGPoint(x: 28.25, y: 145.64), controlPoint2: CGPoint(x: 27.72, y: 145.49))
        textPath.addCurve(to: CGPoint(x: 25.6, y: 145.01), controlPoint1: CGPoint(x: 26.64, y: 145.24), controlPoint2: CGPoint(x: 26.12, y: 145.12))
        textPath.addCurve(to: CGPoint(x: 24.2, y: 144.6), controlPoint1: CGPoint(x: 25.08, y: 144.9), controlPoint2: CGPoint(x: 24.61, y: 144.77))
        textPath.addCurve(to: CGPoint(x: 23.21, y: 143.97), controlPoint1: CGPoint(x: 23.79, y: 144.44), controlPoint2: CGPoint(x: 23.46, y: 144.23))
        textPath.addCurve(to: CGPoint(x: 22.84, y: 142.95), controlPoint1: CGPoint(x: 22.96, y: 143.71), controlPoint2: CGPoint(x: 22.84, y: 143.37))
        textPath.addCurve(to: CGPoint(x: 23.1, y: 141.84), controlPoint1: CGPoint(x: 22.84, y: 142.51), controlPoint2: CGPoint(x: 22.93, y: 142.14))
        textPath.addCurve(to: CGPoint(x: 23.78, y: 141.12), controlPoint1: CGPoint(x: 23.27, y: 141.54), controlPoint2: CGPoint(x: 23.5, y: 141.3))
        textPath.addCurve(to: CGPoint(x: 24.76, y: 140.75), controlPoint1: CGPoint(x: 24.07, y: 140.95), controlPoint2: CGPoint(x: 24.39, y: 140.82))
        textPath.addCurve(to: CGPoint(x: 25.88, y: 140.63), controlPoint1: CGPoint(x: 25.13, y: 140.67), controlPoint2: CGPoint(x: 25.5, y: 140.63))
        textPath.addCurve(to: CGPoint(x: 28.19, y: 141.29), controlPoint1: CGPoint(x: 26.82, y: 140.63), controlPoint2: CGPoint(x: 27.59, y: 140.85))
        textPath.addCurve(to: CGPoint(x: 29.24, y: 143.41), controlPoint1: CGPoint(x: 28.79, y: 141.72), controlPoint2: CGPoint(x: 29.14, y: 142.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 41.58, y: 153))
        textPath.addLine(to: CGPoint(x: 41.58, y: 143.18))
        textPath.addLine(to: CGPoint(x: 39.96, y: 143.18))
        textPath.addLine(to: CGPoint(x: 39.96, y: 148.72))
        textPath.addCurve(to: CGPoint(x: 39.78, y: 149.95), controlPoint1: CGPoint(x: 39.96, y: 149.17), controlPoint2: CGPoint(x: 39.9, y: 149.58))
        textPath.addCurve(to: CGPoint(x: 39.24, y: 150.93), controlPoint1: CGPoint(x: 39.66, y: 150.32), controlPoint2: CGPoint(x: 39.48, y: 150.65))
        textPath.addCurve(to: CGPoint(x: 38.34, y: 151.57), controlPoint1: CGPoint(x: 39, y: 151.21), controlPoint2: CGPoint(x: 38.7, y: 151.42))
        textPath.addCurve(to: CGPoint(x: 37.05, y: 151.8), controlPoint1: CGPoint(x: 37.97, y: 151.73), controlPoint2: CGPoint(x: 37.55, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 35.59, y: 151.27), controlPoint1: CGPoint(x: 36.43, y: 151.8), controlPoint2: CGPoint(x: 35.95, y: 151.63))
        textPath.addCurve(to: CGPoint(x: 35.06, y: 149.83), controlPoint1: CGPoint(x: 35.24, y: 150.92), controlPoint2: CGPoint(x: 35.06, y: 150.44))
        textPath.addLine(to: CGPoint(x: 35.06, y: 143.18))
        textPath.addLine(to: CGPoint(x: 33.44, y: 143.18))
        textPath.addLine(to: CGPoint(x: 33.44, y: 149.64))
        textPath.addCurve(to: CGPoint(x: 33.6, y: 151.09), controlPoint1: CGPoint(x: 33.44, y: 150.17), controlPoint2: CGPoint(x: 33.5, y: 150.65))
        textPath.addCurve(to: CGPoint(x: 34.17, y: 152.22), controlPoint1: CGPoint(x: 33.71, y: 151.53), controlPoint2: CGPoint(x: 33.9, y: 151.9))
        textPath.addCurve(to: CGPoint(x: 35.21, y: 152.95), controlPoint1: CGPoint(x: 34.43, y: 152.54), controlPoint2: CGPoint(x: 34.78, y: 152.78))
        textPath.addCurve(to: CGPoint(x: 36.83, y: 153.21), controlPoint1: CGPoint(x: 35.64, y: 153.12), controlPoint2: CGPoint(x: 36.18, y: 153.21))
        textPath.addCurve(to: CGPoint(x: 38.71, y: 152.78), controlPoint1: CGPoint(x: 37.55, y: 153.21), controlPoint2: CGPoint(x: 38.17, y: 153.07))
        textPath.addCurve(to: CGPoint(x: 40.02, y: 151.44), controlPoint1: CGPoint(x: 39.24, y: 152.5), controlPoint2: CGPoint(x: 39.68, y: 152.05))
        textPath.addLine(to: CGPoint(x: 40.06, y: 151.44))
        textPath.addLine(to: CGPoint(x: 40.06, y: 153))
        textPath.addLine(to: CGPoint(x: 41.58, y: 153))
        textPath.close()
        textPath.move(to: CGPoint(x: 44.06, y: 139.43))
        textPath.addLine(to: CGPoint(x: 44.06, y: 153))
        textPath.addLine(to: CGPoint(x: 45.68, y: 153))
        textPath.addLine(to: CGPoint(x: 45.68, y: 151.69))
        textPath.addLine(to: CGPoint(x: 45.72, y: 151.69))
        textPath.addCurve(to: CGPoint(x: 46.37, y: 152.42), controlPoint1: CGPoint(x: 45.89, y: 151.98), controlPoint2: CGPoint(x: 46.11, y: 152.22))
        textPath.addCurve(to: CGPoint(x: 47.2, y: 152.89), controlPoint1: CGPoint(x: 46.63, y: 152.62), controlPoint2: CGPoint(x: 46.91, y: 152.77))
        textPath.addCurve(to: CGPoint(x: 48.08, y: 153.13), controlPoint1: CGPoint(x: 47.49, y: 153), controlPoint2: CGPoint(x: 47.79, y: 153.08))
        textPath.addCurve(to: CGPoint(x: 48.89, y: 153.21), controlPoint1: CGPoint(x: 48.38, y: 153.18), controlPoint2: CGPoint(x: 48.65, y: 153.21))
        textPath.addCurve(to: CGPoint(x: 50.86, y: 152.81), controlPoint1: CGPoint(x: 49.64, y: 153.21), controlPoint2: CGPoint(x: 50.29, y: 153.08))
        textPath.addCurve(to: CGPoint(x: 52.26, y: 151.72), controlPoint1: CGPoint(x: 51.42, y: 152.54), controlPoint2: CGPoint(x: 51.89, y: 152.18))
        textPath.addCurve(to: CGPoint(x: 53.1, y: 150.09), controlPoint1: CGPoint(x: 52.64, y: 151.26), controlPoint2: CGPoint(x: 52.92, y: 150.71))
        textPath.addCurve(to: CGPoint(x: 53.37, y: 148.12), controlPoint1: CGPoint(x: 53.28, y: 149.47), controlPoint2: CGPoint(x: 53.37, y: 148.81))
        textPath.addCurve(to: CGPoint(x: 53.09, y: 146.14), controlPoint1: CGPoint(x: 53.37, y: 147.42), controlPoint2: CGPoint(x: 53.28, y: 146.76))
        textPath.addCurve(to: CGPoint(x: 52.24, y: 144.5), controlPoint1: CGPoint(x: 52.9, y: 145.52), controlPoint2: CGPoint(x: 52.62, y: 144.97))
        textPath.addCurve(to: CGPoint(x: 50.84, y: 143.37), controlPoint1: CGPoint(x: 51.87, y: 144.02), controlPoint2: CGPoint(x: 51.4, y: 143.65))
        textPath.addCurve(to: CGPoint(x: 48.85, y: 142.95), controlPoint1: CGPoint(x: 50.27, y: 143.09), controlPoint2: CGPoint(x: 49.61, y: 142.95))
        textPath.addCurve(to: CGPoint(x: 46.97, y: 143.32), controlPoint1: CGPoint(x: 48.17, y: 142.95), controlPoint2: CGPoint(x: 47.54, y: 143.07))
        textPath.addCurve(to: CGPoint(x: 45.72, y: 144.51), controlPoint1: CGPoint(x: 46.4, y: 143.57), controlPoint2: CGPoint(x: 45.98, y: 143.96))
        textPath.addLine(to: CGPoint(x: 45.68, y: 144.51))
        textPath.addLine(to: CGPoint(x: 45.68, y: 139.43))
        textPath.addLine(to: CGPoint(x: 44.06, y: 139.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 51.66, y: 148))
        textPath.addCurve(to: CGPoint(x: 51.51, y: 149.41), controlPoint1: CGPoint(x: 51.66, y: 148.48), controlPoint2: CGPoint(x: 51.61, y: 148.95))
        textPath.addCurve(to: CGPoint(x: 51.02, y: 150.62), controlPoint1: CGPoint(x: 51.41, y: 149.87), controlPoint2: CGPoint(x: 51.25, y: 150.27))
        textPath.addCurve(to: CGPoint(x: 50.12, y: 151.48), controlPoint1: CGPoint(x: 50.79, y: 150.98), controlPoint2: CGPoint(x: 50.49, y: 151.26))
        textPath.addCurve(to: CGPoint(x: 48.72, y: 151.8), controlPoint1: CGPoint(x: 49.74, y: 151.7), controlPoint2: CGPoint(x: 49.28, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 47.29, y: 151.49), controlPoint1: CGPoint(x: 48.16, y: 151.8), controlPoint2: CGPoint(x: 47.69, y: 151.7))
        textPath.addCurve(to: CGPoint(x: 46.33, y: 150.66), controlPoint1: CGPoint(x: 46.9, y: 151.28), controlPoint2: CGPoint(x: 46.58, y: 151.01))
        textPath.addCurve(to: CGPoint(x: 45.79, y: 149.48), controlPoint1: CGPoint(x: 46.09, y: 150.32), controlPoint2: CGPoint(x: 45.91, y: 149.93))
        textPath.addCurve(to: CGPoint(x: 45.62, y: 148.08), controlPoint1: CGPoint(x: 45.68, y: 149.03), controlPoint2: CGPoint(x: 45.62, y: 148.56))
        textPath.addCurve(to: CGPoint(x: 45.78, y: 146.73), controlPoint1: CGPoint(x: 45.62, y: 147.62), controlPoint2: CGPoint(x: 45.68, y: 147.17))
        textPath.addCurve(to: CGPoint(x: 46.31, y: 145.54), controlPoint1: CGPoint(x: 45.89, y: 146.29), controlPoint2: CGPoint(x: 46.07, y: 145.89))
        textPath.addCurve(to: CGPoint(x: 47.24, y: 144.7), controlPoint1: CGPoint(x: 46.55, y: 145.19), controlPoint2: CGPoint(x: 46.86, y: 144.91))
        textPath.addCurve(to: CGPoint(x: 48.62, y: 144.37), controlPoint1: CGPoint(x: 47.62, y: 144.48), controlPoint2: CGPoint(x: 48.08, y: 144.37))
        textPath.addCurve(to: CGPoint(x: 49.98, y: 144.68), controlPoint1: CGPoint(x: 49.14, y: 144.37), controlPoint2: CGPoint(x: 49.6, y: 144.48))
        textPath.addCurve(to: CGPoint(x: 50.93, y: 145.5), controlPoint1: CGPoint(x: 50.37, y: 144.88), controlPoint2: CGPoint(x: 50.69, y: 145.15))
        textPath.addCurve(to: CGPoint(x: 51.48, y: 146.66), controlPoint1: CGPoint(x: 51.18, y: 145.84), controlPoint2: CGPoint(x: 51.36, y: 146.23))
        textPath.addCurve(to: CGPoint(x: 51.66, y: 148), controlPoint1: CGPoint(x: 51.6, y: 147.1), controlPoint2: CGPoint(x: 51.66, y: 147.55))
        textPath.close()
        textPath.move(to: CGPoint(x: 56.26, y: 149.9))
        textPath.addLine(to: CGPoint(x: 54.65, y: 149.9))
        textPath.addCurve(to: CGPoint(x: 55.03, y: 151.45), controlPoint1: CGPoint(x: 54.67, y: 150.51), controlPoint2: CGPoint(x: 54.8, y: 151.03))
        textPath.addCurve(to: CGPoint(x: 55.94, y: 152.48), controlPoint1: CGPoint(x: 55.26, y: 151.88), controlPoint2: CGPoint(x: 55.56, y: 152.22))
        textPath.addCurve(to: CGPoint(x: 57.25, y: 153.04), controlPoint1: CGPoint(x: 56.32, y: 152.74), controlPoint2: CGPoint(x: 56.76, y: 152.92))
        textPath.addCurve(to: CGPoint(x: 58.81, y: 153.21), controlPoint1: CGPoint(x: 57.74, y: 153.15), controlPoint2: CGPoint(x: 58.26, y: 153.21))
        textPath.addCurve(to: CGPoint(x: 60.3, y: 153.07), controlPoint1: CGPoint(x: 59.3, y: 153.21), controlPoint2: CGPoint(x: 59.8, y: 153.16))
        textPath.addCurve(to: CGPoint(x: 61.65, y: 152.56), controlPoint1: CGPoint(x: 60.8, y: 152.97), controlPoint2: CGPoint(x: 61.25, y: 152.8))
        textPath.addCurve(to: CGPoint(x: 62.62, y: 151.61), controlPoint1: CGPoint(x: 62.05, y: 152.32), controlPoint2: CGPoint(x: 62.37, y: 152.01))
        textPath.addCurve(to: CGPoint(x: 62.99, y: 150.13), controlPoint1: CGPoint(x: 62.87, y: 151.22), controlPoint2: CGPoint(x: 62.99, y: 150.73))
        textPath.addCurve(to: CGPoint(x: 62.71, y: 148.95), controlPoint1: CGPoint(x: 62.99, y: 149.66), controlPoint2: CGPoint(x: 62.9, y: 149.27))
        textPath.addCurve(to: CGPoint(x: 61.99, y: 148.16), controlPoint1: CGPoint(x: 62.53, y: 148.64), controlPoint2: CGPoint(x: 62.29, y: 148.37))
        textPath.addCurve(to: CGPoint(x: 60.97, y: 147.66), controlPoint1: CGPoint(x: 61.69, y: 147.96), controlPoint2: CGPoint(x: 61.35, y: 147.79))
        textPath.addCurve(to: CGPoint(x: 59.78, y: 147.34), controlPoint1: CGPoint(x: 60.58, y: 147.53), controlPoint2: CGPoint(x: 60.18, y: 147.43))
        textPath.addCurve(to: CGPoint(x: 58.64, y: 147.08), controlPoint1: CGPoint(x: 59.4, y: 147.25), controlPoint2: CGPoint(x: 59.02, y: 147.16))
        textPath.addCurve(to: CGPoint(x: 57.61, y: 146.78), controlPoint1: CGPoint(x: 58.26, y: 147), controlPoint2: CGPoint(x: 57.92, y: 146.9))
        textPath.addCurve(to: CGPoint(x: 56.86, y: 146.32), controlPoint1: CGPoint(x: 57.31, y: 146.66), controlPoint2: CGPoint(x: 57.06, y: 146.51))
        textPath.addCurve(to: CGPoint(x: 56.57, y: 145.63), controlPoint1: CGPoint(x: 56.66, y: 146.14), controlPoint2: CGPoint(x: 56.57, y: 145.91))
        textPath.addCurve(to: CGPoint(x: 56.76, y: 145.01), controlPoint1: CGPoint(x: 56.57, y: 145.37), controlPoint2: CGPoint(x: 56.63, y: 145.17))
        textPath.addCurve(to: CGPoint(x: 57.25, y: 144.63), controlPoint1: CGPoint(x: 56.88, y: 144.85), controlPoint2: CGPoint(x: 57.05, y: 144.73))
        textPath.addCurve(to: CGPoint(x: 57.92, y: 144.43), controlPoint1: CGPoint(x: 57.45, y: 144.54), controlPoint2: CGPoint(x: 57.68, y: 144.47))
        textPath.addCurve(to: CGPoint(x: 58.66, y: 144.37), controlPoint1: CGPoint(x: 58.17, y: 144.39), controlPoint2: CGPoint(x: 58.42, y: 144.37))
        textPath.addCurve(to: CGPoint(x: 59.44, y: 144.46), controlPoint1: CGPoint(x: 58.92, y: 144.37), controlPoint2: CGPoint(x: 59.19, y: 144.4))
        textPath.addCurve(to: CGPoint(x: 60.16, y: 144.74), controlPoint1: CGPoint(x: 59.7, y: 144.52), controlPoint2: CGPoint(x: 59.94, y: 144.61))
        textPath.addCurve(to: CGPoint(x: 60.69, y: 145.24), controlPoint1: CGPoint(x: 60.37, y: 144.86), controlPoint2: CGPoint(x: 60.55, y: 145.03))
        textPath.addCurve(to: CGPoint(x: 60.94, y: 146.03), controlPoint1: CGPoint(x: 60.83, y: 145.45), controlPoint2: CGPoint(x: 60.91, y: 145.71))
        textPath.addLine(to: CGPoint(x: 62.55, y: 146.03))
        textPath.addCurve(to: CGPoint(x: 62.17, y: 144.54), controlPoint1: CGPoint(x: 62.51, y: 145.43), controlPoint2: CGPoint(x: 62.39, y: 144.93))
        textPath.addCurve(to: CGPoint(x: 61.31, y: 143.59), controlPoint1: CGPoint(x: 61.96, y: 144.14), controlPoint2: CGPoint(x: 61.67, y: 143.82))
        textPath.addCurve(to: CGPoint(x: 60.06, y: 143.09), controlPoint1: CGPoint(x: 60.95, y: 143.35), controlPoint2: CGPoint(x: 60.53, y: 143.19))
        textPath.addCurve(to: CGPoint(x: 58.52, y: 142.95), controlPoint1: CGPoint(x: 59.59, y: 143), controlPoint2: CGPoint(x: 59.08, y: 142.95))
        textPath.addCurve(to: CGPoint(x: 57.22, y: 143.11), controlPoint1: CGPoint(x: 58.09, y: 142.95), controlPoint2: CGPoint(x: 57.66, y: 143))
        textPath.addCurve(to: CGPoint(x: 56.04, y: 143.6), controlPoint1: CGPoint(x: 56.78, y: 143.22), controlPoint2: CGPoint(x: 56.39, y: 143.38))
        textPath.addCurve(to: CGPoint(x: 55.19, y: 144.47), controlPoint1: CGPoint(x: 55.7, y: 143.83), controlPoint2: CGPoint(x: 55.41, y: 144.11))
        textPath.addCurve(to: CGPoint(x: 54.86, y: 145.74), controlPoint1: CGPoint(x: 54.97, y: 144.82), controlPoint2: CGPoint(x: 54.86, y: 145.25))
        textPath.addCurve(to: CGPoint(x: 55.33, y: 147.22), controlPoint1: CGPoint(x: 54.86, y: 146.38), controlPoint2: CGPoint(x: 55.01, y: 146.87))
        textPath.addCurve(to: CGPoint(x: 56.52, y: 148.05), controlPoint1: CGPoint(x: 55.65, y: 147.58), controlPoint2: CGPoint(x: 56.04, y: 147.85))
        textPath.addCurve(to: CGPoint(x: 58.07, y: 148.51), controlPoint1: CGPoint(x: 56.99, y: 148.25), controlPoint2: CGPoint(x: 57.51, y: 148.4))
        textPath.addCurve(to: CGPoint(x: 59.62, y: 148.87), controlPoint1: CGPoint(x: 58.62, y: 148.61), controlPoint2: CGPoint(x: 59.14, y: 148.73))
        textPath.addCurve(to: CGPoint(x: 60.8, y: 149.39), controlPoint1: CGPoint(x: 60.09, y: 149), controlPoint2: CGPoint(x: 60.49, y: 149.17))
        textPath.addCurve(to: CGPoint(x: 61.28, y: 150.34), controlPoint1: CGPoint(x: 61.12, y: 149.61), controlPoint2: CGPoint(x: 61.28, y: 149.92))
        textPath.addCurve(to: CGPoint(x: 61.05, y: 151.09), controlPoint1: CGPoint(x: 61.28, y: 150.64), controlPoint2: CGPoint(x: 61.2, y: 150.89))
        textPath.addCurve(to: CGPoint(x: 60.47, y: 151.54), controlPoint1: CGPoint(x: 60.9, y: 151.29), controlPoint2: CGPoint(x: 60.71, y: 151.44))
        textPath.addCurve(to: CGPoint(x: 59.7, y: 151.75), controlPoint1: CGPoint(x: 60.24, y: 151.64), controlPoint2: CGPoint(x: 59.98, y: 151.71))
        textPath.addCurve(to: CGPoint(x: 58.9, y: 151.8), controlPoint1: CGPoint(x: 59.42, y: 151.78), controlPoint2: CGPoint(x: 59.16, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 57.94, y: 151.71), controlPoint1: CGPoint(x: 58.57, y: 151.8), controlPoint2: CGPoint(x: 58.25, y: 151.77))
        textPath.addCurve(to: CGPoint(x: 57.11, y: 151.39), controlPoint1: CGPoint(x: 57.63, y: 151.64), controlPoint2: CGPoint(x: 57.36, y: 151.54))
        textPath.addCurve(to: CGPoint(x: 56.51, y: 150.81), controlPoint1: CGPoint(x: 56.86, y: 151.25), controlPoint2: CGPoint(x: 56.66, y: 151.05))
        textPath.addCurve(to: CGPoint(x: 56.26, y: 149.9), controlPoint1: CGPoint(x: 56.36, y: 150.56), controlPoint2: CGPoint(x: 56.28, y: 150.26))
        textPath.close()
        textPath.move(to: CGPoint(x: 71.44, y: 146.33))
        textPath.addLine(to: CGPoint(x: 73.12, y: 146.33))
        textPath.addCurve(to: CGPoint(x: 72.66, y: 144.82), controlPoint1: CGPoint(x: 73.05, y: 145.75), controlPoint2: CGPoint(x: 72.9, y: 145.24))
        textPath.addCurve(to: CGPoint(x: 71.74, y: 143.77), controlPoint1: CGPoint(x: 72.42, y: 144.4), controlPoint2: CGPoint(x: 72.11, y: 144.04))
        textPath.addCurve(to: CGPoint(x: 70.45, y: 143.15), controlPoint1: CGPoint(x: 71.36, y: 143.49), controlPoint2: CGPoint(x: 70.93, y: 143.28))
        textPath.addCurve(to: CGPoint(x: 68.88, y: 142.95), controlPoint1: CGPoint(x: 69.96, y: 143.02), controlPoint2: CGPoint(x: 69.44, y: 142.95))
        textPath.addCurve(to: CGPoint(x: 66.85, y: 143.36), controlPoint1: CGPoint(x: 68.11, y: 142.95), controlPoint2: CGPoint(x: 67.43, y: 143.09))
        textPath.addCurve(to: CGPoint(x: 65.39, y: 144.48), controlPoint1: CGPoint(x: 66.26, y: 143.63), controlPoint2: CGPoint(x: 65.78, y: 144))
        textPath.addCurve(to: CGPoint(x: 64.53, y: 146.15), controlPoint1: CGPoint(x: 65.01, y: 144.95), controlPoint2: CGPoint(x: 64.72, y: 145.51))
        textPath.addCurve(to: CGPoint(x: 64.24, y: 148.21), controlPoint1: CGPoint(x: 64.34, y: 146.79), controlPoint2: CGPoint(x: 64.24, y: 147.48))
        textPath.addCurve(to: CGPoint(x: 64.54, y: 150.24), controlPoint1: CGPoint(x: 64.24, y: 148.95), controlPoint2: CGPoint(x: 64.34, y: 149.62))
        textPath.addCurve(to: CGPoint(x: 65.41, y: 151.82), controlPoint1: CGPoint(x: 64.73, y: 150.85), controlPoint2: CGPoint(x: 65.02, y: 151.38))
        textPath.addCurve(to: CGPoint(x: 66.85, y: 152.85), controlPoint1: CGPoint(x: 65.8, y: 152.27), controlPoint2: CGPoint(x: 66.28, y: 152.61))
        textPath.addCurve(to: CGPoint(x: 68.84, y: 153.21), controlPoint1: CGPoint(x: 67.43, y: 153.09), controlPoint2: CGPoint(x: 68.09, y: 153.21))
        textPath.addCurve(to: CGPoint(x: 71.81, y: 152.22), controlPoint1: CGPoint(x: 70.09, y: 153.21), controlPoint2: CGPoint(x: 71.09, y: 152.88))
        textPath.addCurve(to: CGPoint(x: 73.17, y: 149.41), controlPoint1: CGPoint(x: 72.54, y: 151.56), controlPoint2: CGPoint(x: 73, y: 150.63))
        textPath.addLine(to: CGPoint(x: 71.52, y: 149.41))
        textPath.addCurve(to: CGPoint(x: 70.69, y: 151.18), controlPoint1: CGPoint(x: 71.42, y: 150.17), controlPoint2: CGPoint(x: 71.14, y: 150.76))
        textPath.addCurve(to: CGPoint(x: 68.82, y: 151.8), controlPoint1: CGPoint(x: 70.24, y: 151.59), controlPoint2: CGPoint(x: 69.62, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 67.51, y: 151.5), controlPoint1: CGPoint(x: 68.31, y: 151.8), controlPoint2: CGPoint(x: 67.88, y: 151.7))
        textPath.addCurve(to: CGPoint(x: 66.62, y: 150.69), controlPoint1: CGPoint(x: 67.14, y: 151.3), controlPoint2: CGPoint(x: 66.85, y: 151.03))
        textPath.addCurve(to: CGPoint(x: 66.11, y: 149.54), controlPoint1: CGPoint(x: 66.39, y: 150.36), controlPoint2: CGPoint(x: 66.22, y: 149.97))
        textPath.addCurve(to: CGPoint(x: 65.95, y: 148.21), controlPoint1: CGPoint(x: 66.01, y: 149.11), controlPoint2: CGPoint(x: 65.95, y: 148.67))
        textPath.addCurve(to: CGPoint(x: 66.1, y: 146.78), controlPoint1: CGPoint(x: 65.95, y: 147.72), controlPoint2: CGPoint(x: 66, y: 147.24))
        textPath.addCurve(to: CGPoint(x: 66.61, y: 145.55), controlPoint1: CGPoint(x: 66.21, y: 146.32), controlPoint2: CGPoint(x: 66.37, y: 145.91))
        textPath.addCurve(to: CGPoint(x: 67.55, y: 144.7), controlPoint1: CGPoint(x: 66.84, y: 145.2), controlPoint2: CGPoint(x: 67.16, y: 144.91))
        textPath.addCurve(to: CGPoint(x: 69.01, y: 144.37), controlPoint1: CGPoint(x: 67.94, y: 144.48), controlPoint2: CGPoint(x: 68.43, y: 144.37))
        textPath.addCurve(to: CGPoint(x: 70.65, y: 144.89), controlPoint1: CGPoint(x: 69.7, y: 144.37), controlPoint2: CGPoint(x: 70.24, y: 144.54))
        textPath.addCurve(to: CGPoint(x: 71.44, y: 146.33), controlPoint1: CGPoint(x: 71.05, y: 145.23), controlPoint2: CGPoint(x: 71.32, y: 145.71))
        textPath.close()
        textPath.move(to: CGPoint(x: 74.92, y: 143.18))
        textPath.addLine(to: CGPoint(x: 74.92, y: 153))
        textPath.addLine(to: CGPoint(x: 76.54, y: 153))
        textPath.addLine(to: CGPoint(x: 76.54, y: 148.63))
        textPath.addCurve(to: CGPoint(x: 76.73, y: 146.95), controlPoint1: CGPoint(x: 76.54, y: 148), controlPoint2: CGPoint(x: 76.6, y: 147.44))
        textPath.addCurve(to: CGPoint(x: 77.33, y: 145.7), controlPoint1: CGPoint(x: 76.85, y: 146.46), controlPoint2: CGPoint(x: 77.05, y: 146.05))
        textPath.addCurve(to: CGPoint(x: 78.44, y: 144.93), controlPoint1: CGPoint(x: 77.61, y: 145.36), controlPoint2: CGPoint(x: 77.98, y: 145.1))
        textPath.addCurve(to: CGPoint(x: 80.09, y: 144.66), controlPoint1: CGPoint(x: 78.89, y: 144.75), controlPoint2: CGPoint(x: 79.44, y: 144.66))
        textPath.addLine(to: CGPoint(x: 80.09, y: 142.95))
        textPath.addCurve(to: CGPoint(x: 77.92, y: 143.48), controlPoint1: CGPoint(x: 79.21, y: 142.92), controlPoint2: CGPoint(x: 78.49, y: 143.1))
        textPath.addCurve(to: CGPoint(x: 76.48, y: 145.25), controlPoint1: CGPoint(x: 77.35, y: 143.86), controlPoint2: CGPoint(x: 76.87, y: 144.45))
        textPath.addLine(to: CGPoint(x: 76.44, y: 145.25))
        textPath.addLine(to: CGPoint(x: 76.44, y: 143.18))
        textPath.addLine(to: CGPoint(x: 74.92, y: 143.18))
        textPath.close()
        textPath.move(to: CGPoint(x: 83.01, y: 141.41))
        textPath.addLine(to: CGPoint(x: 83.01, y: 139.43))
        textPath.addLine(to: CGPoint(x: 81.4, y: 139.43))
        textPath.addLine(to: CGPoint(x: 81.4, y: 141.41))
        textPath.addLine(to: CGPoint(x: 83.01, y: 141.41))
        textPath.close()
        textPath.move(to: CGPoint(x: 81.4, y: 143.18))
        textPath.addLine(to: CGPoint(x: 81.4, y: 153))
        textPath.addLine(to: CGPoint(x: 83.01, y: 153))
        textPath.addLine(to: CGPoint(x: 83.01, y: 143.18))
        textPath.addLine(to: CGPoint(x: 81.4, y: 143.18))
        textPath.close()
        textPath.move(to: CGPoint(x: 85.58, y: 139.43))
        textPath.addLine(to: CGPoint(x: 85.58, y: 153))
        textPath.addLine(to: CGPoint(x: 87.19, y: 153))
        textPath.addLine(to: CGPoint(x: 87.19, y: 151.69))
        textPath.addLine(to: CGPoint(x: 87.23, y: 151.69))
        textPath.addCurve(to: CGPoint(x: 87.89, y: 152.42), controlPoint1: CGPoint(x: 87.41, y: 151.98), controlPoint2: CGPoint(x: 87.63, y: 152.22))
        textPath.addCurve(to: CGPoint(x: 88.71, y: 152.89), controlPoint1: CGPoint(x: 88.15, y: 152.62), controlPoint2: CGPoint(x: 88.42, y: 152.77))
        textPath.addCurve(to: CGPoint(x: 89.6, y: 153.13), controlPoint1: CGPoint(x: 89.01, y: 153), controlPoint2: CGPoint(x: 89.3, y: 153.08))
        textPath.addCurve(to: CGPoint(x: 90.41, y: 153.21), controlPoint1: CGPoint(x: 89.9, y: 153.18), controlPoint2: CGPoint(x: 90.16, y: 153.21))
        textPath.addCurve(to: CGPoint(x: 92.37, y: 152.81), controlPoint1: CGPoint(x: 91.15, y: 153.21), controlPoint2: CGPoint(x: 91.81, y: 153.08))
        textPath.addCurve(to: CGPoint(x: 93.78, y: 151.72), controlPoint1: CGPoint(x: 92.94, y: 152.54), controlPoint2: CGPoint(x: 93.4, y: 152.18))
        textPath.addCurve(to: CGPoint(x: 94.61, y: 150.09), controlPoint1: CGPoint(x: 94.15, y: 151.26), controlPoint2: CGPoint(x: 94.43, y: 150.71))
        textPath.addCurve(to: CGPoint(x: 94.89, y: 148.12), controlPoint1: CGPoint(x: 94.8, y: 149.47), controlPoint2: CGPoint(x: 94.89, y: 148.81))
        textPath.addCurve(to: CGPoint(x: 94.6, y: 146.14), controlPoint1: CGPoint(x: 94.89, y: 147.42), controlPoint2: CGPoint(x: 94.79, y: 146.76))
        textPath.addCurve(to: CGPoint(x: 93.76, y: 144.5), controlPoint1: CGPoint(x: 94.41, y: 145.52), controlPoint2: CGPoint(x: 94.13, y: 144.97))
        textPath.addCurve(to: CGPoint(x: 92.35, y: 143.37), controlPoint1: CGPoint(x: 93.39, y: 144.02), controlPoint2: CGPoint(x: 92.92, y: 143.65))
        textPath.addCurve(to: CGPoint(x: 90.37, y: 142.95), controlPoint1: CGPoint(x: 91.79, y: 143.09), controlPoint2: CGPoint(x: 91.13, y: 142.95))
        textPath.addCurve(to: CGPoint(x: 88.49, y: 143.32), controlPoint1: CGPoint(x: 89.68, y: 142.95), controlPoint2: CGPoint(x: 89.06, y: 143.07))
        textPath.addCurve(to: CGPoint(x: 87.23, y: 144.51), controlPoint1: CGPoint(x: 87.92, y: 143.57), controlPoint2: CGPoint(x: 87.5, y: 143.96))
        textPath.addLine(to: CGPoint(x: 87.19, y: 144.51))
        textPath.addLine(to: CGPoint(x: 87.19, y: 139.43))
        textPath.addLine(to: CGPoint(x: 85.58, y: 139.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 93.18, y: 148))
        textPath.addCurve(to: CGPoint(x: 93.03, y: 149.41), controlPoint1: CGPoint(x: 93.18, y: 148.48), controlPoint2: CGPoint(x: 93.13, y: 148.95))
        textPath.addCurve(to: CGPoint(x: 92.53, y: 150.62), controlPoint1: CGPoint(x: 92.93, y: 149.87), controlPoint2: CGPoint(x: 92.76, y: 150.27))
        textPath.addCurve(to: CGPoint(x: 91.63, y: 151.48), controlPoint1: CGPoint(x: 92.31, y: 150.98), controlPoint2: CGPoint(x: 92, y: 151.26))
        textPath.addCurve(to: CGPoint(x: 90.23, y: 151.8), controlPoint1: CGPoint(x: 91.26, y: 151.7), controlPoint2: CGPoint(x: 90.79, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 88.81, y: 151.49), controlPoint1: CGPoint(x: 89.68, y: 151.8), controlPoint2: CGPoint(x: 89.2, y: 151.7))
        textPath.addCurve(to: CGPoint(x: 87.85, y: 150.66), controlPoint1: CGPoint(x: 88.42, y: 151.28), controlPoint2: CGPoint(x: 88.1, y: 151.01))
        textPath.addCurve(to: CGPoint(x: 87.31, y: 149.48), controlPoint1: CGPoint(x: 87.6, y: 150.32), controlPoint2: CGPoint(x: 87.42, y: 149.93))
        textPath.addCurve(to: CGPoint(x: 87.14, y: 148.08), controlPoint1: CGPoint(x: 87.19, y: 149.03), controlPoint2: CGPoint(x: 87.14, y: 148.56))
        textPath.addCurve(to: CGPoint(x: 87.3, y: 146.73), controlPoint1: CGPoint(x: 87.14, y: 147.62), controlPoint2: CGPoint(x: 87.19, y: 147.17))
        textPath.addCurve(to: CGPoint(x: 87.82, y: 145.54), controlPoint1: CGPoint(x: 87.41, y: 146.29), controlPoint2: CGPoint(x: 87.58, y: 145.89))
        textPath.addCurve(to: CGPoint(x: 88.75, y: 144.7), controlPoint1: CGPoint(x: 88.06, y: 145.19), controlPoint2: CGPoint(x: 88.37, y: 144.91))
        textPath.addCurve(to: CGPoint(x: 90.14, y: 144.37), controlPoint1: CGPoint(x: 89.13, y: 144.48), controlPoint2: CGPoint(x: 89.59, y: 144.37))
        textPath.addCurve(to: CGPoint(x: 91.5, y: 144.68), controlPoint1: CGPoint(x: 90.66, y: 144.37), controlPoint2: CGPoint(x: 91.11, y: 144.48))
        textPath.addCurve(to: CGPoint(x: 92.45, y: 145.5), controlPoint1: CGPoint(x: 91.88, y: 144.88), controlPoint2: CGPoint(x: 92.2, y: 145.15))
        textPath.addCurve(to: CGPoint(x: 93, y: 146.66), controlPoint1: CGPoint(x: 92.7, y: 145.84), controlPoint2: CGPoint(x: 92.88, y: 146.23))
        textPath.addCurve(to: CGPoint(x: 93.18, y: 148), controlPoint1: CGPoint(x: 93.12, y: 147.1), controlPoint2: CGPoint(x: 93.18, y: 147.55))
        textPath.close()
        textPath.move(to: CGPoint(x: 103.61, y: 147.15))
        textPath.addLine(to: CGPoint(x: 97.97, y: 147.15))
        textPath.addCurve(to: CGPoint(x: 98.21, y: 146.07), controlPoint1: CGPoint(x: 97.99, y: 146.77), controlPoint2: CGPoint(x: 98.08, y: 146.41))
        textPath.addCurve(to: CGPoint(x: 98.78, y: 145.19), controlPoint1: CGPoint(x: 98.35, y: 145.74), controlPoint2: CGPoint(x: 98.54, y: 145.44))
        textPath.addCurve(to: CGPoint(x: 99.65, y: 144.59), controlPoint1: CGPoint(x: 99.03, y: 144.94), controlPoint2: CGPoint(x: 99.31, y: 144.74))
        textPath.addCurve(to: CGPoint(x: 100.78, y: 144.37), controlPoint1: CGPoint(x: 99.98, y: 144.45), controlPoint2: CGPoint(x: 100.36, y: 144.37))
        textPath.addCurve(to: CGPoint(x: 101.89, y: 144.59), controlPoint1: CGPoint(x: 101.18, y: 144.37), controlPoint2: CGPoint(x: 101.56, y: 144.45))
        textPath.addCurve(to: CGPoint(x: 102.77, y: 145.18), controlPoint1: CGPoint(x: 102.23, y: 144.74), controlPoint2: CGPoint(x: 102.52, y: 144.93))
        textPath.addCurve(to: CGPoint(x: 103.35, y: 146.06), controlPoint1: CGPoint(x: 103.01, y: 145.43), controlPoint2: CGPoint(x: 103.21, y: 145.72))
        textPath.addCurve(to: CGPoint(x: 103.61, y: 147.15), controlPoint1: CGPoint(x: 103.5, y: 146.41), controlPoint2: CGPoint(x: 103.59, y: 146.77))
        textPath.close()
        textPath.move(to: CGPoint(x: 105.17, y: 149.88))
        textPath.addLine(to: CGPoint(x: 103.57, y: 149.88))
        textPath.addCurve(to: CGPoint(x: 102.71, y: 151.33), controlPoint1: CGPoint(x: 103.43, y: 150.53), controlPoint2: CGPoint(x: 103.15, y: 151.01))
        textPath.addCurve(to: CGPoint(x: 101.03, y: 151.8), controlPoint1: CGPoint(x: 102.27, y: 151.64), controlPoint2: CGPoint(x: 101.71, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 99.64, y: 151.54), controlPoint1: CGPoint(x: 100.49, y: 151.8), controlPoint2: CGPoint(x: 100.03, y: 151.71))
        textPath.addCurve(to: CGPoint(x: 98.67, y: 150.82), controlPoint1: CGPoint(x: 99.25, y: 151.36), controlPoint2: CGPoint(x: 98.92, y: 151.12))
        textPath.addCurve(to: CGPoint(x: 98.12, y: 149.8), controlPoint1: CGPoint(x: 98.42, y: 150.53), controlPoint2: CGPoint(x: 98.23, y: 150.18))
        textPath.addCurve(to: CGPoint(x: 97.97, y: 148.57), controlPoint1: CGPoint(x: 98.01, y: 149.41), controlPoint2: CGPoint(x: 97.95, y: 149))
        textPath.addLine(to: CGPoint(x: 105.32, y: 148.57))
        textPath.addCurve(to: CGPoint(x: 105.16, y: 146.69), controlPoint1: CGPoint(x: 105.35, y: 147.98), controlPoint2: CGPoint(x: 105.29, y: 147.35))
        textPath.addCurve(to: CGPoint(x: 104.44, y: 144.87), controlPoint1: CGPoint(x: 105.03, y: 146.03), controlPoint2: CGPoint(x: 104.79, y: 145.43))
        textPath.addCurve(to: CGPoint(x: 103.05, y: 143.49), controlPoint1: CGPoint(x: 104.09, y: 144.31), controlPoint2: CGPoint(x: 103.63, y: 143.85))
        textPath.addCurve(to: CGPoint(x: 100.87, y: 142.95), controlPoint1: CGPoint(x: 102.47, y: 143.13), controlPoint2: CGPoint(x: 101.75, y: 142.95))
        textPath.addCurve(to: CGPoint(x: 99.02, y: 143.33), controlPoint1: CGPoint(x: 100.2, y: 142.95), controlPoint2: CGPoint(x: 99.59, y: 143.08))
        textPath.addCurve(to: CGPoint(x: 97.56, y: 144.39), controlPoint1: CGPoint(x: 98.46, y: 143.58), controlPoint2: CGPoint(x: 97.97, y: 143.94))
        textPath.addCurve(to: CGPoint(x: 96.6, y: 146.01), controlPoint1: CGPoint(x: 97.15, y: 144.85), controlPoint2: CGPoint(x: 96.83, y: 145.39))
        textPath.addCurve(to: CGPoint(x: 96.26, y: 148.06), controlPoint1: CGPoint(x: 96.37, y: 146.63), controlPoint2: CGPoint(x: 96.26, y: 147.31))
        textPath.addCurve(to: CGPoint(x: 96.59, y: 150.13), controlPoint1: CGPoint(x: 96.28, y: 148.81), controlPoint2: CGPoint(x: 96.39, y: 149.5))
        textPath.addCurve(to: CGPoint(x: 97.47, y: 151.76), controlPoint1: CGPoint(x: 96.79, y: 150.76), controlPoint2: CGPoint(x: 97.08, y: 151.31))
        textPath.addCurve(to: CGPoint(x: 98.93, y: 152.83), controlPoint1: CGPoint(x: 97.87, y: 152.22), controlPoint2: CGPoint(x: 98.35, y: 152.58))
        textPath.addCurve(to: CGPoint(x: 100.97, y: 153.21), controlPoint1: CGPoint(x: 99.5, y: 153.08), controlPoint2: CGPoint(x: 100.18, y: 153.21))
        textPath.addCurve(to: CGPoint(x: 103.74, y: 152.37), controlPoint1: CGPoint(x: 102.08, y: 153.21), controlPoint2: CGPoint(x: 103.01, y: 152.93))
        textPath.addCurve(to: CGPoint(x: 105.17, y: 149.88), controlPoint1: CGPoint(x: 104.48, y: 151.82), controlPoint2: CGPoint(x: 104.95, y: 150.99))
        textPath.close()
        textPath.move(to: CGPoint(x: 112.52, y: 139.43))
        textPath.addLine(to: CGPoint(x: 112.52, y: 153))
        textPath.addLine(to: CGPoint(x: 114.23, y: 153))
        textPath.addLine(to: CGPoint(x: 114.23, y: 142.11))
        textPath.addLine(to: CGPoint(x: 114.27, y: 142.11))
        textPath.addLine(to: CGPoint(x: 121.36, y: 153))
        textPath.addLine(to: CGPoint(x: 123.33, y: 153))
        textPath.addLine(to: CGPoint(x: 123.33, y: 139.43))
        textPath.addLine(to: CGPoint(x: 121.62, y: 139.43))
        textPath.addLine(to: CGPoint(x: 121.62, y: 150.44))
        textPath.addLine(to: CGPoint(x: 121.58, y: 150.44))
        textPath.addLine(to: CGPoint(x: 114.44, y: 139.43))
        textPath.addLine(to: CGPoint(x: 112.52, y: 139.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 127.17, y: 148.1))
        textPath.addCurve(to: CGPoint(x: 127.41, y: 146.51), controlPoint1: CGPoint(x: 127.17, y: 147.5), controlPoint2: CGPoint(x: 127.25, y: 146.97))
        textPath.addCurve(to: CGPoint(x: 128.06, y: 145.34), controlPoint1: CGPoint(x: 127.57, y: 146.05), controlPoint2: CGPoint(x: 127.78, y: 145.66))
        textPath.addCurve(to: CGPoint(x: 129.04, y: 144.62), controlPoint1: CGPoint(x: 128.34, y: 145.03), controlPoint2: CGPoint(x: 128.67, y: 144.79))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 144.37), controlPoint1: CGPoint(x: 129.42, y: 144.46), controlPoint2: CGPoint(x: 129.81, y: 144.37))
        textPath.addCurve(to: CGPoint(x: 131.42, y: 144.62), controlPoint1: CGPoint(x: 130.65, y: 144.37), controlPoint2: CGPoint(x: 131.04, y: 144.46))
        textPath.addCurve(to: CGPoint(x: 132.4, y: 145.34), controlPoint1: CGPoint(x: 131.79, y: 144.79), controlPoint2: CGPoint(x: 132.12, y: 145.03))
        textPath.addCurve(to: CGPoint(x: 133.05, y: 146.51), controlPoint1: CGPoint(x: 132.67, y: 145.66), controlPoint2: CGPoint(x: 132.89, y: 146.05))
        textPath.addCurve(to: CGPoint(x: 133.29, y: 148.1), controlPoint1: CGPoint(x: 133.21, y: 146.97), controlPoint2: CGPoint(x: 133.29, y: 147.5))
        textPath.addCurve(to: CGPoint(x: 133.05, y: 149.68), controlPoint1: CGPoint(x: 133.29, y: 148.69), controlPoint2: CGPoint(x: 133.21, y: 149.22))
        textPath.addCurve(to: CGPoint(x: 132.4, y: 150.84), controlPoint1: CGPoint(x: 132.89, y: 150.15), controlPoint2: CGPoint(x: 132.67, y: 150.53))
        textPath.addCurve(to: CGPoint(x: 131.42, y: 151.56), controlPoint1: CGPoint(x: 132.12, y: 151.15), controlPoint2: CGPoint(x: 131.79, y: 151.39))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 151.8), controlPoint1: CGPoint(x: 131.04, y: 151.72), controlPoint2: CGPoint(x: 130.65, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 129.04, y: 151.56), controlPoint1: CGPoint(x: 129.81, y: 151.8), controlPoint2: CGPoint(x: 129.42, y: 151.72))
        textPath.addCurve(to: CGPoint(x: 128.06, y: 150.84), controlPoint1: CGPoint(x: 128.67, y: 151.39), controlPoint2: CGPoint(x: 128.34, y: 151.15))
        textPath.addCurve(to: CGPoint(x: 127.41, y: 149.68), controlPoint1: CGPoint(x: 127.78, y: 150.53), controlPoint2: CGPoint(x: 127.57, y: 150.15))
        textPath.addCurve(to: CGPoint(x: 127.17, y: 148.1), controlPoint1: CGPoint(x: 127.25, y: 149.22), controlPoint2: CGPoint(x: 127.17, y: 148.69))
        textPath.close()
        textPath.move(to: CGPoint(x: 125.46, y: 148.1))
        textPath.addCurve(to: CGPoint(x: 125.76, y: 150.11), controlPoint1: CGPoint(x: 125.46, y: 148.82), controlPoint2: CGPoint(x: 125.56, y: 149.49))
        textPath.addCurve(to: CGPoint(x: 126.68, y: 151.74), controlPoint1: CGPoint(x: 125.97, y: 150.73), controlPoint2: CGPoint(x: 126.27, y: 151.27))
        textPath.addCurve(to: CGPoint(x: 128.18, y: 152.82), controlPoint1: CGPoint(x: 127.08, y: 152.2), controlPoint2: CGPoint(x: 127.58, y: 152.56))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 153.21), controlPoint1: CGPoint(x: 128.77, y: 153.08), controlPoint2: CGPoint(x: 129.46, y: 153.21))
        textPath.addCurve(to: CGPoint(x: 132.29, y: 152.82), controlPoint1: CGPoint(x: 131.01, y: 153.21), controlPoint2: CGPoint(x: 131.7, y: 153.08))
        textPath.addCurve(to: CGPoint(x: 133.78, y: 151.74), controlPoint1: CGPoint(x: 132.88, y: 152.56), controlPoint2: CGPoint(x: 133.38, y: 152.2))
        textPath.addCurve(to: CGPoint(x: 134.69, y: 150.11), controlPoint1: CGPoint(x: 134.19, y: 151.27), controlPoint2: CGPoint(x: 134.49, y: 150.73))
        textPath.addCurve(to: CGPoint(x: 135, y: 148.1), controlPoint1: CGPoint(x: 134.9, y: 149.49), controlPoint2: CGPoint(x: 135, y: 148.82))
        textPath.addCurve(to: CGPoint(x: 134.69, y: 146.07), controlPoint1: CGPoint(x: 135, y: 147.38), controlPoint2: CGPoint(x: 134.9, y: 146.7))
        textPath.addCurve(to: CGPoint(x: 133.78, y: 144.44), controlPoint1: CGPoint(x: 134.49, y: 145.45), controlPoint2: CGPoint(x: 134.19, y: 144.9))
        textPath.addCurve(to: CGPoint(x: 132.29, y: 143.35), controlPoint1: CGPoint(x: 133.38, y: 143.98), controlPoint2: CGPoint(x: 132.88, y: 143.61))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 142.95), controlPoint1: CGPoint(x: 131.7, y: 143.08), controlPoint2: CGPoint(x: 131.01, y: 142.95))
        textPath.addCurve(to: CGPoint(x: 128.18, y: 143.35), controlPoint1: CGPoint(x: 129.46, y: 142.95), controlPoint2: CGPoint(x: 128.77, y: 143.08))
        textPath.addCurve(to: CGPoint(x: 126.68, y: 144.44), controlPoint1: CGPoint(x: 127.58, y: 143.61), controlPoint2: CGPoint(x: 127.08, y: 143.98))
        textPath.addCurve(to: CGPoint(x: 125.76, y: 146.07), controlPoint1: CGPoint(x: 126.27, y: 144.9), controlPoint2: CGPoint(x: 125.97, y: 145.45))
        textPath.addCurve(to: CGPoint(x: 125.46, y: 148.1), controlPoint1: CGPoint(x: 125.56, y: 146.7), controlPoint2: CGPoint(x: 125.46, y: 147.38))
        textPath.close()
        textPath.move(to: CGPoint(x: 146.63, y: 153))
        textPath.addLine(to: CGPoint(x: 149.76, y: 143.18))
        textPath.addLine(to: CGPoint(x: 148.09, y: 143.18))
        textPath.addLine(to: CGPoint(x: 145.89, y: 151.21))
        textPath.addLine(to: CGPoint(x: 145.85, y: 151.21))
        textPath.addLine(to: CGPoint(x: 143.8, y: 143.18))
        textPath.addLine(to: CGPoint(x: 142.03, y: 143.18))
        textPath.addLine(to: CGPoint(x: 140.05, y: 151.21))
        textPath.addLine(to: CGPoint(x: 140.01, y: 151.21))
        textPath.addLine(to: CGPoint(x: 137.79, y: 143.18))
        textPath.addLine(to: CGPoint(x: 136.01, y: 143.18))
        textPath.addLine(to: CGPoint(x: 139.16, y: 153))
        textPath.addLine(to: CGPoint(x: 140.91, y: 153))
        textPath.addLine(to: CGPoint(x: 142.88, y: 145.19))
        textPath.addLine(to: CGPoint(x: 142.92, y: 145.19))
        textPath.addLine(to: CGPoint(x: 144.92, y: 153))
        textPath.addLine(to: CGPoint(x: 146.63, y: 153))
        textPath.close()
        UIColor.white.setFill()
        textPath.fill()
    }

    @objc dynamic public class func drawSubscribethree() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 170, height: 47))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(ButtonsForFJ092018.gradient9, start: CGPoint(x: 85, y: -0), end: CGPoint(x: 85, y: 47), options: [])
        context.restoreGState()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 0, y: 123, width: 170, height: 47))
        context.saveGState()
        rectangle2Path.addClip()
        context.drawLinearGradient(ButtonsForFJ092018.gradient9, start: CGPoint(x: 85, y: 123), end: CGPoint(x: 85, y: 170), options: [])
        context.restoreGState()


        //// Text 4 Drawing
        let text4Path = UIBezierPath()
        text4Path.move(to: CGPoint(x: 52.75, y: 24.39))
        text4Path.addLine(to: CGPoint(x: 55.05, y: 18.07))
        text4Path.addLine(to: CGPoint(x: 55.08, y: 18.07))
        text4Path.addLine(to: CGPoint(x: 57.35, y: 24.39))
        text4Path.addLine(to: CGPoint(x: 52.75, y: 24.39))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 54.1, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 48.81, y: 30))
        text4Path.addLine(to: CGPoint(x: 50.66, y: 30))
        text4Path.addLine(to: CGPoint(x: 52.18, y: 25.91))
        text4Path.addLine(to: CGPoint(x: 57.92, y: 25.91))
        text4Path.addLine(to: CGPoint(x: 59.4, y: 30))
        text4Path.addLine(to: CGPoint(x: 61.39, y: 30))
        text4Path.addLine(to: CGPoint(x: 56.09, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 54.1, y: 16.43))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 62.46, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 62.46, y: 30))
        text4Path.addLine(to: CGPoint(x: 64.07, y: 30))
        text4Path.addLine(to: CGPoint(x: 64.07, y: 24.45))
        text4Path.addCurve(to: CGPoint(x: 64.25, y: 23.23), controlPoint1: CGPoint(x: 64.07, y: 24.01), controlPoint2: CGPoint(x: 64.13, y: 23.6))
        text4Path.addCurve(to: CGPoint(x: 64.79, y: 22.25), controlPoint1: CGPoint(x: 64.37, y: 22.85), controlPoint2: CGPoint(x: 64.55, y: 22.53))
        text4Path.addCurve(to: CGPoint(x: 65.7, y: 21.6), controlPoint1: CGPoint(x: 65.03, y: 21.97), controlPoint2: CGPoint(x: 65.33, y: 21.75))
        text4Path.addCurve(to: CGPoint(x: 66.98, y: 21.37), controlPoint1: CGPoint(x: 66.06, y: 21.45), controlPoint2: CGPoint(x: 66.48, y: 21.37))
        text4Path.addCurve(to: CGPoint(x: 68.44, y: 21.91), controlPoint1: CGPoint(x: 67.6, y: 21.37), controlPoint2: CGPoint(x: 68.09, y: 21.55))
        text4Path.addCurve(to: CGPoint(x: 68.97, y: 23.35), controlPoint1: CGPoint(x: 68.8, y: 22.26), controlPoint2: CGPoint(x: 68.97, y: 22.74))
        text4Path.addLine(to: CGPoint(x: 68.97, y: 30))
        text4Path.addLine(to: CGPoint(x: 70.59, y: 30))
        text4Path.addLine(to: CGPoint(x: 70.59, y: 23.54))
        text4Path.addCurve(to: CGPoint(x: 70.43, y: 22.09), controlPoint1: CGPoint(x: 70.59, y: 23.01), controlPoint2: CGPoint(x: 70.53, y: 22.52))
        text4Path.addCurve(to: CGPoint(x: 69.87, y: 20.96), controlPoint1: CGPoint(x: 70.32, y: 21.65), controlPoint2: CGPoint(x: 70.13, y: 21.27))
        text4Path.addCurve(to: CGPoint(x: 68.82, y: 20.22), controlPoint1: CGPoint(x: 69.6, y: 20.64), controlPoint2: CGPoint(x: 69.25, y: 20.39))
        text4Path.addCurve(to: CGPoint(x: 67.21, y: 19.95), controlPoint1: CGPoint(x: 68.39, y: 20.04), controlPoint2: CGPoint(x: 67.85, y: 19.95))
        text4Path.addCurve(to: CGPoint(x: 64.01, y: 21.74), controlPoint1: CGPoint(x: 65.75, y: 19.95), controlPoint2: CGPoint(x: 64.69, y: 20.54))
        text4Path.addLine(to: CGPoint(x: 63.98, y: 21.74))
        text4Path.addLine(to: CGPoint(x: 63.98, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 62.46, y: 20.18))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 73.02, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 73.02, y: 30))
        text4Path.addLine(to: CGPoint(x: 74.64, y: 30))
        text4Path.addLine(to: CGPoint(x: 74.64, y: 24.45))
        text4Path.addCurve(to: CGPoint(x: 74.82, y: 23.23), controlPoint1: CGPoint(x: 74.64, y: 24.01), controlPoint2: CGPoint(x: 74.7, y: 23.6))
        text4Path.addCurve(to: CGPoint(x: 75.36, y: 22.25), controlPoint1: CGPoint(x: 74.94, y: 22.85), controlPoint2: CGPoint(x: 75.12, y: 22.53))
        text4Path.addCurve(to: CGPoint(x: 76.26, y: 21.6), controlPoint1: CGPoint(x: 75.6, y: 21.97), controlPoint2: CGPoint(x: 75.9, y: 21.75))
        text4Path.addCurve(to: CGPoint(x: 77.54, y: 21.37), controlPoint1: CGPoint(x: 76.62, y: 21.45), controlPoint2: CGPoint(x: 77.05, y: 21.37))
        text4Path.addCurve(to: CGPoint(x: 79.01, y: 21.91), controlPoint1: CGPoint(x: 78.16, y: 21.37), controlPoint2: CGPoint(x: 78.65, y: 21.55))
        text4Path.addCurve(to: CGPoint(x: 79.54, y: 23.35), controlPoint1: CGPoint(x: 79.36, y: 22.26), controlPoint2: CGPoint(x: 79.54, y: 22.74))
        text4Path.addLine(to: CGPoint(x: 79.54, y: 30))
        text4Path.addLine(to: CGPoint(x: 81.15, y: 30))
        text4Path.addLine(to: CGPoint(x: 81.15, y: 23.54))
        text4Path.addCurve(to: CGPoint(x: 80.99, y: 22.09), controlPoint1: CGPoint(x: 81.15, y: 23.01), controlPoint2: CGPoint(x: 81.1, y: 22.52))
        text4Path.addCurve(to: CGPoint(x: 80.43, y: 20.96), controlPoint1: CGPoint(x: 80.88, y: 21.65), controlPoint2: CGPoint(x: 80.7, y: 21.27))
        text4Path.addCurve(to: CGPoint(x: 79.39, y: 20.22), controlPoint1: CGPoint(x: 80.16, y: 20.64), controlPoint2: CGPoint(x: 79.82, y: 20.39))
        text4Path.addCurve(to: CGPoint(x: 77.77, y: 19.95), controlPoint1: CGPoint(x: 78.95, y: 20.04), controlPoint2: CGPoint(x: 78.42, y: 19.95))
        text4Path.addCurve(to: CGPoint(x: 74.58, y: 21.74), controlPoint1: CGPoint(x: 76.31, y: 19.95), controlPoint2: CGPoint(x: 75.25, y: 20.54))
        text4Path.addLine(to: CGPoint(x: 74.54, y: 21.74))
        text4Path.addLine(to: CGPoint(x: 74.54, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 73.02, y: 20.18))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 91.72, y: 30))
        text4Path.addLine(to: CGPoint(x: 91.72, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 90.1, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 90.1, y: 25.72))
        text4Path.addCurve(to: CGPoint(x: 89.92, y: 26.95), controlPoint1: CGPoint(x: 90.1, y: 26.17), controlPoint2: CGPoint(x: 90.04, y: 26.58))
        text4Path.addCurve(to: CGPoint(x: 89.38, y: 27.93), controlPoint1: CGPoint(x: 89.8, y: 27.32), controlPoint2: CGPoint(x: 89.62, y: 27.65))
        text4Path.addCurve(to: CGPoint(x: 88.48, y: 28.57), controlPoint1: CGPoint(x: 89.14, y: 28.21), controlPoint2: CGPoint(x: 88.84, y: 28.42))
        text4Path.addCurve(to: CGPoint(x: 87.19, y: 28.8), controlPoint1: CGPoint(x: 88.12, y: 28.73), controlPoint2: CGPoint(x: 87.69, y: 28.8))
        text4Path.addCurve(to: CGPoint(x: 85.73, y: 28.27), controlPoint1: CGPoint(x: 86.57, y: 28.8), controlPoint2: CGPoint(x: 86.09, y: 28.63))
        text4Path.addCurve(to: CGPoint(x: 85.2, y: 26.83), controlPoint1: CGPoint(x: 85.38, y: 27.92), controlPoint2: CGPoint(x: 85.2, y: 27.44))
        text4Path.addLine(to: CGPoint(x: 85.2, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 83.58, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 83.58, y: 26.64))
        text4Path.addCurve(to: CGPoint(x: 83.75, y: 28.09), controlPoint1: CGPoint(x: 83.58, y: 27.17), controlPoint2: CGPoint(x: 83.64, y: 27.65))
        text4Path.addCurve(to: CGPoint(x: 84.31, y: 29.22), controlPoint1: CGPoint(x: 83.85, y: 28.53), controlPoint2: CGPoint(x: 84.04, y: 28.9))
        text4Path.addCurve(to: CGPoint(x: 85.35, y: 29.95), controlPoint1: CGPoint(x: 84.57, y: 29.54), controlPoint2: CGPoint(x: 84.92, y: 29.78))
        text4Path.addCurve(to: CGPoint(x: 86.97, y: 30.21), controlPoint1: CGPoint(x: 85.78, y: 30.12), controlPoint2: CGPoint(x: 86.32, y: 30.21))
        text4Path.addCurve(to: CGPoint(x: 88.85, y: 29.78), controlPoint1: CGPoint(x: 87.69, y: 30.21), controlPoint2: CGPoint(x: 88.32, y: 30.07))
        text4Path.addCurve(to: CGPoint(x: 90.16, y: 28.44), controlPoint1: CGPoint(x: 89.38, y: 29.5), controlPoint2: CGPoint(x: 89.82, y: 29.05))
        text4Path.addLine(to: CGPoint(x: 90.2, y: 28.44))
        text4Path.addLine(to: CGPoint(x: 90.2, y: 30))
        text4Path.addLine(to: CGPoint(x: 91.72, y: 30))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 102.85, y: 29.96))
        text4Path.addCurve(to: CGPoint(x: 101.69, y: 30.21), controlPoint1: CGPoint(x: 102.57, y: 30.13), controlPoint2: CGPoint(x: 102.19, y: 30.21))
        text4Path.addCurve(to: CGPoint(x: 100.69, y: 29.86), controlPoint1: CGPoint(x: 101.27, y: 30.21), controlPoint2: CGPoint(x: 100.94, y: 30.09))
        text4Path.addCurve(to: CGPoint(x: 100.32, y: 28.71), controlPoint1: CGPoint(x: 100.45, y: 29.62), controlPoint2: CGPoint(x: 100.32, y: 29.24))
        text4Path.addCurve(to: CGPoint(x: 98.77, y: 29.86), controlPoint1: CGPoint(x: 99.88, y: 29.24), controlPoint2: CGPoint(x: 99.36, y: 29.62))
        text4Path.addCurve(to: CGPoint(x: 96.87, y: 30.21), controlPoint1: CGPoint(x: 98.19, y: 30.09), controlPoint2: CGPoint(x: 97.55, y: 30.21))
        text4Path.addCurve(to: CGPoint(x: 95.6, y: 30.06), controlPoint1: CGPoint(x: 96.42, y: 30.21), controlPoint2: CGPoint(x: 96, y: 30.16))
        text4Path.addCurve(to: CGPoint(x: 94.57, y: 29.58), controlPoint1: CGPoint(x: 95.2, y: 29.96), controlPoint2: CGPoint(x: 94.86, y: 29.8))
        text4Path.addCurve(to: CGPoint(x: 93.87, y: 28.74), controlPoint1: CGPoint(x: 94.28, y: 29.37), controlPoint2: CGPoint(x: 94.04, y: 29.08))
        text4Path.addCurve(to: CGPoint(x: 93.62, y: 27.47), controlPoint1: CGPoint(x: 93.7, y: 28.39), controlPoint2: CGPoint(x: 93.62, y: 27.97))
        text4Path.addCurve(to: CGPoint(x: 93.9, y: 26.11), controlPoint1: CGPoint(x: 93.62, y: 26.92), controlPoint2: CGPoint(x: 93.71, y: 26.46))
        text4Path.addCurve(to: CGPoint(x: 94.65, y: 25.24), controlPoint1: CGPoint(x: 94.09, y: 25.75), controlPoint2: CGPoint(x: 94.34, y: 25.46))
        text4Path.addCurve(to: CGPoint(x: 95.72, y: 24.74), controlPoint1: CGPoint(x: 94.96, y: 25.02), controlPoint2: CGPoint(x: 95.32, y: 24.85))
        text4Path.addCurve(to: CGPoint(x: 96.94, y: 24.45), controlPoint1: CGPoint(x: 96.12, y: 24.62), controlPoint2: CGPoint(x: 96.52, y: 24.53))
        text4Path.addCurve(to: CGPoint(x: 98.2, y: 24.25), controlPoint1: CGPoint(x: 97.38, y: 24.36), controlPoint2: CGPoint(x: 97.81, y: 24.3))
        text4Path.addCurve(to: CGPoint(x: 99.26, y: 24.06), controlPoint1: CGPoint(x: 98.6, y: 24.21), controlPoint2: CGPoint(x: 98.96, y: 24.14))
        text4Path.addCurve(to: CGPoint(x: 99.98, y: 23.7), controlPoint1: CGPoint(x: 99.56, y: 23.98), controlPoint2: CGPoint(x: 99.8, y: 23.86))
        text4Path.addCurve(to: CGPoint(x: 100.25, y: 23.01), controlPoint1: CGPoint(x: 100.16, y: 23.54), controlPoint2: CGPoint(x: 100.25, y: 23.31))
        text4Path.addCurve(to: CGPoint(x: 100.05, y: 22.15), controlPoint1: CGPoint(x: 100.25, y: 22.65), controlPoint2: CGPoint(x: 100.18, y: 22.37))
        text4Path.addCurve(to: CGPoint(x: 99.53, y: 21.66), controlPoint1: CGPoint(x: 99.91, y: 21.94), controlPoint2: CGPoint(x: 99.74, y: 21.77))
        text4Path.addCurve(to: CGPoint(x: 98.83, y: 21.43), controlPoint1: CGPoint(x: 99.33, y: 21.54), controlPoint2: CGPoint(x: 99.09, y: 21.47))
        text4Path.addCurve(to: CGPoint(x: 98.06, y: 21.37), controlPoint1: CGPoint(x: 98.57, y: 21.39), controlPoint2: CGPoint(x: 98.32, y: 21.37))
        text4Path.addCurve(to: CGPoint(x: 96.35, y: 21.76), controlPoint1: CGPoint(x: 97.38, y: 21.37), controlPoint2: CGPoint(x: 96.81, y: 21.5))
        text4Path.addCurve(to: CGPoint(x: 95.61, y: 23.24), controlPoint1: CGPoint(x: 95.9, y: 22.02), controlPoint2: CGPoint(x: 95.65, y: 22.51))
        text4Path.addLine(to: CGPoint(x: 94, y: 23.24))
        text4Path.addCurve(to: CGPoint(x: 94.38, y: 21.7), controlPoint1: CGPoint(x: 94.02, y: 22.63), controlPoint2: CGPoint(x: 94.15, y: 22.12))
        text4Path.addCurve(to: CGPoint(x: 95.29, y: 20.68), controlPoint1: CGPoint(x: 94.6, y: 21.28), controlPoint2: CGPoint(x: 94.91, y: 20.94))
        text4Path.addCurve(to: CGPoint(x: 96.59, y: 20.12), controlPoint1: CGPoint(x: 95.67, y: 20.42), controlPoint2: CGPoint(x: 96.1, y: 20.23))
        text4Path.addCurve(to: CGPoint(x: 98.16, y: 19.95), controlPoint1: CGPoint(x: 97.08, y: 20.01), controlPoint2: CGPoint(x: 97.6, y: 19.95))
        text4Path.addCurve(to: CGPoint(x: 99.48, y: 20.04), controlPoint1: CGPoint(x: 98.6, y: 19.95), controlPoint2: CGPoint(x: 99.04, y: 19.98))
        text4Path.addCurve(to: CGPoint(x: 100.67, y: 20.43), controlPoint1: CGPoint(x: 99.92, y: 20.11), controlPoint2: CGPoint(x: 100.31, y: 20.24))
        text4Path.addCurve(to: CGPoint(x: 101.52, y: 21.26), controlPoint1: CGPoint(x: 101.02, y: 20.63), controlPoint2: CGPoint(x: 101.31, y: 20.91))
        text4Path.addCurve(to: CGPoint(x: 101.84, y: 22.65), controlPoint1: CGPoint(x: 101.74, y: 21.61), controlPoint2: CGPoint(x: 101.84, y: 22.08))
        text4Path.addLine(to: CGPoint(x: 101.84, y: 27.7))
        text4Path.addCurve(to: CGPoint(x: 101.91, y: 28.54), controlPoint1: CGPoint(x: 101.84, y: 28.08), controlPoint2: CGPoint(x: 101.87, y: 28.36))
        text4Path.addCurve(to: CGPoint(x: 102.36, y: 28.8), controlPoint1: CGPoint(x: 101.95, y: 28.71), controlPoint2: CGPoint(x: 102.1, y: 28.8))
        text4Path.addCurve(to: CGPoint(x: 102.85, y: 28.71), controlPoint1: CGPoint(x: 102.5, y: 28.8), controlPoint2: CGPoint(x: 102.66, y: 28.77))
        text4Path.addLine(to: CGPoint(x: 102.85, y: 29.96))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 100.23, y: 24.93))
        text4Path.addCurve(to: CGPoint(x: 99.43, y: 25.26), controlPoint1: CGPoint(x: 100.03, y: 25.08), controlPoint2: CGPoint(x: 99.76, y: 25.19))
        text4Path.addCurve(to: CGPoint(x: 98.39, y: 25.43), controlPoint1: CGPoint(x: 99.1, y: 25.33), controlPoint2: CGPoint(x: 98.76, y: 25.39))
        text4Path.addCurve(to: CGPoint(x: 97.3, y: 25.58), controlPoint1: CGPoint(x: 98.03, y: 25.47), controlPoint2: CGPoint(x: 97.67, y: 25.53))
        text4Path.addCurve(to: CGPoint(x: 96.31, y: 25.86), controlPoint1: CGPoint(x: 96.94, y: 25.64), controlPoint2: CGPoint(x: 96.61, y: 25.73))
        text4Path.addCurve(to: CGPoint(x: 95.6, y: 26.4), controlPoint1: CGPoint(x: 96.02, y: 25.98), controlPoint2: CGPoint(x: 95.79, y: 26.17))
        text4Path.addCurve(to: CGPoint(x: 95.33, y: 27.36), controlPoint1: CGPoint(x: 95.42, y: 26.63), controlPoint2: CGPoint(x: 95.33, y: 26.95))
        text4Path.addCurve(to: CGPoint(x: 95.49, y: 28.03), controlPoint1: CGPoint(x: 95.33, y: 27.63), controlPoint2: CGPoint(x: 95.38, y: 27.85))
        text4Path.addCurve(to: CGPoint(x: 95.91, y: 28.48), controlPoint1: CGPoint(x: 95.6, y: 28.22), controlPoint2: CGPoint(x: 95.73, y: 28.37))
        text4Path.addCurve(to: CGPoint(x: 96.5, y: 28.73), controlPoint1: CGPoint(x: 96.08, y: 28.59), controlPoint2: CGPoint(x: 96.28, y: 28.68))
        text4Path.addCurve(to: CGPoint(x: 97.23, y: 28.8), controlPoint1: CGPoint(x: 96.73, y: 28.78), controlPoint2: CGPoint(x: 96.97, y: 28.8))
        text4Path.addCurve(to: CGPoint(x: 98.59, y: 28.58), controlPoint1: CGPoint(x: 97.76, y: 28.8), controlPoint2: CGPoint(x: 98.21, y: 28.73))
        text4Path.addCurve(to: CGPoint(x: 99.53, y: 28.03), controlPoint1: CGPoint(x: 98.97, y: 28.44), controlPoint2: CGPoint(x: 99.28, y: 28.26))
        text4Path.addCurve(to: CGPoint(x: 100.06, y: 27.31), controlPoint1: CGPoint(x: 99.77, y: 27.81), controlPoint2: CGPoint(x: 99.94, y: 27.57))
        text4Path.addCurve(to: CGPoint(x: 100.23, y: 26.58), controlPoint1: CGPoint(x: 100.17, y: 27.05), controlPoint2: CGPoint(x: 100.23, y: 26.81))
        text4Path.addLine(to: CGPoint(x: 100.23, y: 24.93))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 104.45, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 104.45, y: 30))
        text4Path.addLine(to: CGPoint(x: 106.06, y: 30))
        text4Path.addLine(to: CGPoint(x: 106.06, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 104.45, y: 16.43))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 108.66, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 108.66, y: 30))
        text4Path.addLine(to: CGPoint(x: 110.28, y: 30))
        text4Path.addLine(to: CGPoint(x: 110.28, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 108.66, y: 16.43))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 116.64, y: 31.31))
        text4Path.addCurve(to: CGPoint(x: 116.08, y: 32.53), controlPoint1: CGPoint(x: 116.45, y: 31.79), controlPoint2: CGPoint(x: 116.27, y: 32.2))
        text4Path.addCurve(to: CGPoint(x: 115.48, y: 33.33), controlPoint1: CGPoint(x: 115.9, y: 32.86), controlPoint2: CGPoint(x: 115.7, y: 33.13))
        text4Path.addCurve(to: CGPoint(x: 114.73, y: 33.79), controlPoint1: CGPoint(x: 115.25, y: 33.54), controlPoint2: CGPoint(x: 115.01, y: 33.7))
        text4Path.addCurve(to: CGPoint(x: 113.79, y: 33.93), controlPoint1: CGPoint(x: 114.46, y: 33.89), controlPoint2: CGPoint(x: 114.15, y: 33.93))
        text4Path.addCurve(to: CGPoint(x: 113.22, y: 33.89), controlPoint1: CGPoint(x: 113.6, y: 33.93), controlPoint2: CGPoint(x: 113.41, y: 33.92))
        text4Path.addCurve(to: CGPoint(x: 112.67, y: 33.76), controlPoint1: CGPoint(x: 113.03, y: 33.87), controlPoint2: CGPoint(x: 112.85, y: 33.83))
        text4Path.addLine(to: CGPoint(x: 112.67, y: 32.28))
        text4Path.addCurve(to: CGPoint(x: 113.16, y: 32.44), controlPoint1: CGPoint(x: 112.81, y: 32.34), controlPoint2: CGPoint(x: 112.97, y: 32.4))
        text4Path.addCurve(to: CGPoint(x: 113.62, y: 32.51), controlPoint1: CGPoint(x: 113.34, y: 32.49), controlPoint2: CGPoint(x: 113.5, y: 32.51))
        text4Path.addCurve(to: CGPoint(x: 114.45, y: 32.27), controlPoint1: CGPoint(x: 113.95, y: 32.51), controlPoint2: CGPoint(x: 114.23, y: 32.43))
        text4Path.addCurve(to: CGPoint(x: 114.95, y: 31.6), controlPoint1: CGPoint(x: 114.67, y: 32.11), controlPoint2: CGPoint(x: 114.84, y: 31.89))
        text4Path.addLine(to: CGPoint(x: 115.62, y: 29.94))
        text4Path.addLine(to: CGPoint(x: 111.72, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 113.55, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 116.42, y: 28.21))
        text4Path.addLine(to: CGPoint(x: 116.45, y: 28.21))
        text4Path.addLine(to: CGPoint(x: 119.21, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 120.92, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 116.64, y: 31.31))
        text4Path.close()
        UIColor.white.setFill()
        text4Path.fill()


        //// Text Drawing
        let textPath = UIBezierPath()
        textPath.move(to: CGPoint(x: 29.24, y: 143.41))
        textPath.addLine(to: CGPoint(x: 30.95, y: 143.41))
        textPath.addCurve(to: CGPoint(x: 30.53, y: 141.48), controlPoint1: CGPoint(x: 30.93, y: 142.66), controlPoint2: CGPoint(x: 30.79, y: 142.01))
        textPath.addCurve(to: CGPoint(x: 29.46, y: 140.14), controlPoint1: CGPoint(x: 30.27, y: 140.94), controlPoint2: CGPoint(x: 29.91, y: 140.49))
        textPath.addCurve(to: CGPoint(x: 27.9, y: 139.36), controlPoint1: CGPoint(x: 29.01, y: 139.78), controlPoint2: CGPoint(x: 28.49, y: 139.52))
        textPath.addCurve(to: CGPoint(x: 25.96, y: 139.11), controlPoint1: CGPoint(x: 27.3, y: 139.19), controlPoint2: CGPoint(x: 26.65, y: 139.11))
        textPath.addCurve(to: CGPoint(x: 24.14, y: 139.35), controlPoint1: CGPoint(x: 25.34, y: 139.11), controlPoint2: CGPoint(x: 24.73, y: 139.19))
        textPath.addCurve(to: CGPoint(x: 22.57, y: 140.07), controlPoint1: CGPoint(x: 23.55, y: 139.51), controlPoint2: CGPoint(x: 23.03, y: 139.75))
        textPath.addCurve(to: CGPoint(x: 21.45, y: 141.31), controlPoint1: CGPoint(x: 22.1, y: 140.39), controlPoint2: CGPoint(x: 21.73, y: 140.81))
        textPath.addCurve(to: CGPoint(x: 21.04, y: 143.08), controlPoint1: CGPoint(x: 21.18, y: 141.81), controlPoint2: CGPoint(x: 21.04, y: 142.4))
        textPath.addCurve(to: CGPoint(x: 21.41, y: 144.63), controlPoint1: CGPoint(x: 21.04, y: 143.7), controlPoint2: CGPoint(x: 21.16, y: 144.22))
        textPath.addCurve(to: CGPoint(x: 22.39, y: 145.64), controlPoint1: CGPoint(x: 21.65, y: 145.04), controlPoint2: CGPoint(x: 21.98, y: 145.38))
        textPath.addCurve(to: CGPoint(x: 23.79, y: 146.26), controlPoint1: CGPoint(x: 22.81, y: 145.9), controlPoint2: CGPoint(x: 23.27, y: 146.11))
        textPath.addCurve(to: CGPoint(x: 25.38, y: 146.68), controlPoint1: CGPoint(x: 24.31, y: 146.42), controlPoint2: CGPoint(x: 24.84, y: 146.56))
        textPath.addCurve(to: CGPoint(x: 26.96, y: 147.03), controlPoint1: CGPoint(x: 25.92, y: 146.8), controlPoint2: CGPoint(x: 26.45, y: 146.92))
        textPath.addCurve(to: CGPoint(x: 28.36, y: 147.48), controlPoint1: CGPoint(x: 27.48, y: 147.15), controlPoint2: CGPoint(x: 27.95, y: 147.3))
        textPath.addCurve(to: CGPoint(x: 29.35, y: 148.19), controlPoint1: CGPoint(x: 28.77, y: 147.66), controlPoint2: CGPoint(x: 29.1, y: 147.9))
        textPath.addCurve(to: CGPoint(x: 29.72, y: 149.33), controlPoint1: CGPoint(x: 29.6, y: 148.48), controlPoint2: CGPoint(x: 29.72, y: 148.86))
        textPath.addCurve(to: CGPoint(x: 29.42, y: 150.55), controlPoint1: CGPoint(x: 29.72, y: 149.83), controlPoint2: CGPoint(x: 29.62, y: 150.23))
        textPath.addCurve(to: CGPoint(x: 28.62, y: 151.3), controlPoint1: CGPoint(x: 29.21, y: 150.87), controlPoint2: CGPoint(x: 28.95, y: 151.12))
        textPath.addCurve(to: CGPoint(x: 27.51, y: 151.69), controlPoint1: CGPoint(x: 28.29, y: 151.48), controlPoint2: CGPoint(x: 27.92, y: 151.61))
        textPath.addCurve(to: CGPoint(x: 26.28, y: 151.8), controlPoint1: CGPoint(x: 27.09, y: 151.77), controlPoint2: CGPoint(x: 26.69, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 24.8, y: 151.61), controlPoint1: CGPoint(x: 25.77, y: 151.8), controlPoint2: CGPoint(x: 25.28, y: 151.74))
        textPath.addCurve(to: CGPoint(x: 23.53, y: 151.02), controlPoint1: CGPoint(x: 24.32, y: 151.49), controlPoint2: CGPoint(x: 23.9, y: 151.29))
        textPath.addCurve(to: CGPoint(x: 22.66, y: 150.01), controlPoint1: CGPoint(x: 23.17, y: 150.76), controlPoint2: CGPoint(x: 22.88, y: 150.42))
        textPath.addCurve(to: CGPoint(x: 22.33, y: 148.53), controlPoint1: CGPoint(x: 22.44, y: 149.6), controlPoint2: CGPoint(x: 22.33, y: 149.11))
        textPath.addLine(to: CGPoint(x: 20.62, y: 148.53))
        textPath.addCurve(to: CGPoint(x: 21.06, y: 150.67), controlPoint1: CGPoint(x: 20.62, y: 149.36), controlPoint2: CGPoint(x: 20.77, y: 150.07))
        textPath.addCurve(to: CGPoint(x: 22.28, y: 152.15), controlPoint1: CGPoint(x: 21.36, y: 151.27), controlPoint2: CGPoint(x: 21.77, y: 151.77))
        textPath.addCurve(to: CGPoint(x: 24.07, y: 153.02), controlPoint1: CGPoint(x: 22.79, y: 152.54), controlPoint2: CGPoint(x: 23.39, y: 152.83))
        textPath.addCurve(to: CGPoint(x: 26.22, y: 153.3), controlPoint1: CGPoint(x: 24.74, y: 153.21), controlPoint2: CGPoint(x: 25.46, y: 153.3))
        textPath.addCurve(to: CGPoint(x: 28.09, y: 153.09), controlPoint1: CGPoint(x: 26.84, y: 153.3), controlPoint2: CGPoint(x: 27.47, y: 153.23))
        textPath.addCurve(to: CGPoint(x: 29.8, y: 152.38), controlPoint1: CGPoint(x: 28.72, y: 152.94), controlPoint2: CGPoint(x: 29.29, y: 152.71))
        textPath.addCurve(to: CGPoint(x: 31.04, y: 151.13), controlPoint1: CGPoint(x: 30.3, y: 152.06), controlPoint2: CGPoint(x: 30.72, y: 151.64))
        textPath.addCurve(to: CGPoint(x: 31.52, y: 149.28), controlPoint1: CGPoint(x: 31.36, y: 150.62), controlPoint2: CGPoint(x: 31.52, y: 150))
        textPath.addCurve(to: CGPoint(x: 31.15, y: 147.6), controlPoint1: CGPoint(x: 31.52, y: 148.6), controlPoint2: CGPoint(x: 31.4, y: 148.05))
        textPath.addCurve(to: CGPoint(x: 30.17, y: 146.5), controlPoint1: CGPoint(x: 30.91, y: 147.16), controlPoint2: CGPoint(x: 30.58, y: 146.79))
        textPath.addCurve(to: CGPoint(x: 28.77, y: 145.81), controlPoint1: CGPoint(x: 29.75, y: 146.21), controlPoint2: CGPoint(x: 29.29, y: 145.98))
        textPath.addCurve(to: CGPoint(x: 27.18, y: 145.36), controlPoint1: CGPoint(x: 28.25, y: 145.64), controlPoint2: CGPoint(x: 27.72, y: 145.49))
        textPath.addCurve(to: CGPoint(x: 25.6, y: 145.01), controlPoint1: CGPoint(x: 26.64, y: 145.24), controlPoint2: CGPoint(x: 26.12, y: 145.12))
        textPath.addCurve(to: CGPoint(x: 24.2, y: 144.6), controlPoint1: CGPoint(x: 25.08, y: 144.9), controlPoint2: CGPoint(x: 24.61, y: 144.77))
        textPath.addCurve(to: CGPoint(x: 23.21, y: 143.97), controlPoint1: CGPoint(x: 23.79, y: 144.44), controlPoint2: CGPoint(x: 23.46, y: 144.23))
        textPath.addCurve(to: CGPoint(x: 22.84, y: 142.95), controlPoint1: CGPoint(x: 22.96, y: 143.71), controlPoint2: CGPoint(x: 22.84, y: 143.37))
        textPath.addCurve(to: CGPoint(x: 23.1, y: 141.84), controlPoint1: CGPoint(x: 22.84, y: 142.51), controlPoint2: CGPoint(x: 22.93, y: 142.14))
        textPath.addCurve(to: CGPoint(x: 23.78, y: 141.12), controlPoint1: CGPoint(x: 23.27, y: 141.54), controlPoint2: CGPoint(x: 23.5, y: 141.3))
        textPath.addCurve(to: CGPoint(x: 24.76, y: 140.75), controlPoint1: CGPoint(x: 24.07, y: 140.95), controlPoint2: CGPoint(x: 24.39, y: 140.82))
        textPath.addCurve(to: CGPoint(x: 25.88, y: 140.63), controlPoint1: CGPoint(x: 25.13, y: 140.67), controlPoint2: CGPoint(x: 25.5, y: 140.63))
        textPath.addCurve(to: CGPoint(x: 28.19, y: 141.29), controlPoint1: CGPoint(x: 26.82, y: 140.63), controlPoint2: CGPoint(x: 27.59, y: 140.85))
        textPath.addCurve(to: CGPoint(x: 29.24, y: 143.41), controlPoint1: CGPoint(x: 28.79, y: 141.72), controlPoint2: CGPoint(x: 29.14, y: 142.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 41.58, y: 153))
        textPath.addLine(to: CGPoint(x: 41.58, y: 143.18))
        textPath.addLine(to: CGPoint(x: 39.96, y: 143.18))
        textPath.addLine(to: CGPoint(x: 39.96, y: 148.72))
        textPath.addCurve(to: CGPoint(x: 39.78, y: 149.95), controlPoint1: CGPoint(x: 39.96, y: 149.17), controlPoint2: CGPoint(x: 39.9, y: 149.58))
        textPath.addCurve(to: CGPoint(x: 39.24, y: 150.93), controlPoint1: CGPoint(x: 39.66, y: 150.32), controlPoint2: CGPoint(x: 39.48, y: 150.65))
        textPath.addCurve(to: CGPoint(x: 38.34, y: 151.57), controlPoint1: CGPoint(x: 39, y: 151.21), controlPoint2: CGPoint(x: 38.7, y: 151.42))
        textPath.addCurve(to: CGPoint(x: 37.05, y: 151.8), controlPoint1: CGPoint(x: 37.97, y: 151.73), controlPoint2: CGPoint(x: 37.55, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 35.59, y: 151.27), controlPoint1: CGPoint(x: 36.43, y: 151.8), controlPoint2: CGPoint(x: 35.95, y: 151.63))
        textPath.addCurve(to: CGPoint(x: 35.06, y: 149.83), controlPoint1: CGPoint(x: 35.24, y: 150.92), controlPoint2: CGPoint(x: 35.06, y: 150.44))
        textPath.addLine(to: CGPoint(x: 35.06, y: 143.18))
        textPath.addLine(to: CGPoint(x: 33.44, y: 143.18))
        textPath.addLine(to: CGPoint(x: 33.44, y: 149.64))
        textPath.addCurve(to: CGPoint(x: 33.6, y: 151.09), controlPoint1: CGPoint(x: 33.44, y: 150.17), controlPoint2: CGPoint(x: 33.5, y: 150.65))
        textPath.addCurve(to: CGPoint(x: 34.17, y: 152.22), controlPoint1: CGPoint(x: 33.71, y: 151.53), controlPoint2: CGPoint(x: 33.9, y: 151.9))
        textPath.addCurve(to: CGPoint(x: 35.21, y: 152.95), controlPoint1: CGPoint(x: 34.43, y: 152.54), controlPoint2: CGPoint(x: 34.78, y: 152.78))
        textPath.addCurve(to: CGPoint(x: 36.83, y: 153.21), controlPoint1: CGPoint(x: 35.64, y: 153.12), controlPoint2: CGPoint(x: 36.18, y: 153.21))
        textPath.addCurve(to: CGPoint(x: 38.71, y: 152.78), controlPoint1: CGPoint(x: 37.55, y: 153.21), controlPoint2: CGPoint(x: 38.17, y: 153.07))
        textPath.addCurve(to: CGPoint(x: 40.02, y: 151.44), controlPoint1: CGPoint(x: 39.24, y: 152.5), controlPoint2: CGPoint(x: 39.68, y: 152.05))
        textPath.addLine(to: CGPoint(x: 40.06, y: 151.44))
        textPath.addLine(to: CGPoint(x: 40.06, y: 153))
        textPath.addLine(to: CGPoint(x: 41.58, y: 153))
        textPath.close()
        textPath.move(to: CGPoint(x: 44.06, y: 139.43))
        textPath.addLine(to: CGPoint(x: 44.06, y: 153))
        textPath.addLine(to: CGPoint(x: 45.68, y: 153))
        textPath.addLine(to: CGPoint(x: 45.68, y: 151.69))
        textPath.addLine(to: CGPoint(x: 45.72, y: 151.69))
        textPath.addCurve(to: CGPoint(x: 46.37, y: 152.42), controlPoint1: CGPoint(x: 45.89, y: 151.98), controlPoint2: CGPoint(x: 46.11, y: 152.22))
        textPath.addCurve(to: CGPoint(x: 47.2, y: 152.89), controlPoint1: CGPoint(x: 46.63, y: 152.62), controlPoint2: CGPoint(x: 46.91, y: 152.77))
        textPath.addCurve(to: CGPoint(x: 48.08, y: 153.13), controlPoint1: CGPoint(x: 47.49, y: 153), controlPoint2: CGPoint(x: 47.79, y: 153.08))
        textPath.addCurve(to: CGPoint(x: 48.89, y: 153.21), controlPoint1: CGPoint(x: 48.38, y: 153.18), controlPoint2: CGPoint(x: 48.65, y: 153.21))
        textPath.addCurve(to: CGPoint(x: 50.86, y: 152.81), controlPoint1: CGPoint(x: 49.64, y: 153.21), controlPoint2: CGPoint(x: 50.29, y: 153.08))
        textPath.addCurve(to: CGPoint(x: 52.26, y: 151.72), controlPoint1: CGPoint(x: 51.42, y: 152.54), controlPoint2: CGPoint(x: 51.89, y: 152.18))
        textPath.addCurve(to: CGPoint(x: 53.1, y: 150.09), controlPoint1: CGPoint(x: 52.64, y: 151.26), controlPoint2: CGPoint(x: 52.92, y: 150.71))
        textPath.addCurve(to: CGPoint(x: 53.37, y: 148.12), controlPoint1: CGPoint(x: 53.28, y: 149.47), controlPoint2: CGPoint(x: 53.37, y: 148.81))
        textPath.addCurve(to: CGPoint(x: 53.09, y: 146.14), controlPoint1: CGPoint(x: 53.37, y: 147.42), controlPoint2: CGPoint(x: 53.28, y: 146.76))
        textPath.addCurve(to: CGPoint(x: 52.24, y: 144.5), controlPoint1: CGPoint(x: 52.9, y: 145.52), controlPoint2: CGPoint(x: 52.62, y: 144.97))
        textPath.addCurve(to: CGPoint(x: 50.84, y: 143.37), controlPoint1: CGPoint(x: 51.87, y: 144.02), controlPoint2: CGPoint(x: 51.4, y: 143.65))
        textPath.addCurve(to: CGPoint(x: 48.85, y: 142.95), controlPoint1: CGPoint(x: 50.27, y: 143.09), controlPoint2: CGPoint(x: 49.61, y: 142.95))
        textPath.addCurve(to: CGPoint(x: 46.97, y: 143.32), controlPoint1: CGPoint(x: 48.17, y: 142.95), controlPoint2: CGPoint(x: 47.54, y: 143.07))
        textPath.addCurve(to: CGPoint(x: 45.72, y: 144.51), controlPoint1: CGPoint(x: 46.4, y: 143.57), controlPoint2: CGPoint(x: 45.98, y: 143.96))
        textPath.addLine(to: CGPoint(x: 45.68, y: 144.51))
        textPath.addLine(to: CGPoint(x: 45.68, y: 139.43))
        textPath.addLine(to: CGPoint(x: 44.06, y: 139.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 51.66, y: 148))
        textPath.addCurve(to: CGPoint(x: 51.51, y: 149.41), controlPoint1: CGPoint(x: 51.66, y: 148.48), controlPoint2: CGPoint(x: 51.61, y: 148.95))
        textPath.addCurve(to: CGPoint(x: 51.02, y: 150.62), controlPoint1: CGPoint(x: 51.41, y: 149.87), controlPoint2: CGPoint(x: 51.25, y: 150.27))
        textPath.addCurve(to: CGPoint(x: 50.12, y: 151.48), controlPoint1: CGPoint(x: 50.79, y: 150.98), controlPoint2: CGPoint(x: 50.49, y: 151.26))
        textPath.addCurve(to: CGPoint(x: 48.72, y: 151.8), controlPoint1: CGPoint(x: 49.74, y: 151.7), controlPoint2: CGPoint(x: 49.28, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 47.29, y: 151.49), controlPoint1: CGPoint(x: 48.16, y: 151.8), controlPoint2: CGPoint(x: 47.69, y: 151.7))
        textPath.addCurve(to: CGPoint(x: 46.33, y: 150.66), controlPoint1: CGPoint(x: 46.9, y: 151.28), controlPoint2: CGPoint(x: 46.58, y: 151.01))
        textPath.addCurve(to: CGPoint(x: 45.79, y: 149.48), controlPoint1: CGPoint(x: 46.09, y: 150.32), controlPoint2: CGPoint(x: 45.91, y: 149.93))
        textPath.addCurve(to: CGPoint(x: 45.62, y: 148.08), controlPoint1: CGPoint(x: 45.68, y: 149.03), controlPoint2: CGPoint(x: 45.62, y: 148.56))
        textPath.addCurve(to: CGPoint(x: 45.78, y: 146.73), controlPoint1: CGPoint(x: 45.62, y: 147.62), controlPoint2: CGPoint(x: 45.68, y: 147.17))
        textPath.addCurve(to: CGPoint(x: 46.31, y: 145.54), controlPoint1: CGPoint(x: 45.89, y: 146.29), controlPoint2: CGPoint(x: 46.07, y: 145.89))
        textPath.addCurve(to: CGPoint(x: 47.24, y: 144.7), controlPoint1: CGPoint(x: 46.55, y: 145.19), controlPoint2: CGPoint(x: 46.86, y: 144.91))
        textPath.addCurve(to: CGPoint(x: 48.62, y: 144.37), controlPoint1: CGPoint(x: 47.62, y: 144.48), controlPoint2: CGPoint(x: 48.08, y: 144.37))
        textPath.addCurve(to: CGPoint(x: 49.98, y: 144.68), controlPoint1: CGPoint(x: 49.14, y: 144.37), controlPoint2: CGPoint(x: 49.6, y: 144.48))
        textPath.addCurve(to: CGPoint(x: 50.93, y: 145.5), controlPoint1: CGPoint(x: 50.37, y: 144.88), controlPoint2: CGPoint(x: 50.69, y: 145.15))
        textPath.addCurve(to: CGPoint(x: 51.48, y: 146.66), controlPoint1: CGPoint(x: 51.18, y: 145.84), controlPoint2: CGPoint(x: 51.36, y: 146.23))
        textPath.addCurve(to: CGPoint(x: 51.66, y: 148), controlPoint1: CGPoint(x: 51.6, y: 147.1), controlPoint2: CGPoint(x: 51.66, y: 147.55))
        textPath.close()
        textPath.move(to: CGPoint(x: 56.26, y: 149.9))
        textPath.addLine(to: CGPoint(x: 54.65, y: 149.9))
        textPath.addCurve(to: CGPoint(x: 55.03, y: 151.45), controlPoint1: CGPoint(x: 54.67, y: 150.51), controlPoint2: CGPoint(x: 54.8, y: 151.03))
        textPath.addCurve(to: CGPoint(x: 55.94, y: 152.48), controlPoint1: CGPoint(x: 55.26, y: 151.88), controlPoint2: CGPoint(x: 55.56, y: 152.22))
        textPath.addCurve(to: CGPoint(x: 57.25, y: 153.04), controlPoint1: CGPoint(x: 56.32, y: 152.74), controlPoint2: CGPoint(x: 56.76, y: 152.92))
        textPath.addCurve(to: CGPoint(x: 58.81, y: 153.21), controlPoint1: CGPoint(x: 57.74, y: 153.15), controlPoint2: CGPoint(x: 58.26, y: 153.21))
        textPath.addCurve(to: CGPoint(x: 60.3, y: 153.07), controlPoint1: CGPoint(x: 59.3, y: 153.21), controlPoint2: CGPoint(x: 59.8, y: 153.16))
        textPath.addCurve(to: CGPoint(x: 61.65, y: 152.56), controlPoint1: CGPoint(x: 60.8, y: 152.97), controlPoint2: CGPoint(x: 61.25, y: 152.8))
        textPath.addCurve(to: CGPoint(x: 62.62, y: 151.61), controlPoint1: CGPoint(x: 62.05, y: 152.32), controlPoint2: CGPoint(x: 62.37, y: 152.01))
        textPath.addCurve(to: CGPoint(x: 62.99, y: 150.13), controlPoint1: CGPoint(x: 62.87, y: 151.22), controlPoint2: CGPoint(x: 62.99, y: 150.73))
        textPath.addCurve(to: CGPoint(x: 62.71, y: 148.95), controlPoint1: CGPoint(x: 62.99, y: 149.66), controlPoint2: CGPoint(x: 62.9, y: 149.27))
        textPath.addCurve(to: CGPoint(x: 61.99, y: 148.16), controlPoint1: CGPoint(x: 62.53, y: 148.64), controlPoint2: CGPoint(x: 62.29, y: 148.37))
        textPath.addCurve(to: CGPoint(x: 60.97, y: 147.66), controlPoint1: CGPoint(x: 61.69, y: 147.96), controlPoint2: CGPoint(x: 61.35, y: 147.79))
        textPath.addCurve(to: CGPoint(x: 59.78, y: 147.34), controlPoint1: CGPoint(x: 60.58, y: 147.53), controlPoint2: CGPoint(x: 60.18, y: 147.43))
        textPath.addCurve(to: CGPoint(x: 58.64, y: 147.08), controlPoint1: CGPoint(x: 59.4, y: 147.25), controlPoint2: CGPoint(x: 59.02, y: 147.16))
        textPath.addCurve(to: CGPoint(x: 57.61, y: 146.78), controlPoint1: CGPoint(x: 58.26, y: 147), controlPoint2: CGPoint(x: 57.92, y: 146.9))
        textPath.addCurve(to: CGPoint(x: 56.86, y: 146.32), controlPoint1: CGPoint(x: 57.31, y: 146.66), controlPoint2: CGPoint(x: 57.06, y: 146.51))
        textPath.addCurve(to: CGPoint(x: 56.57, y: 145.63), controlPoint1: CGPoint(x: 56.66, y: 146.14), controlPoint2: CGPoint(x: 56.57, y: 145.91))
        textPath.addCurve(to: CGPoint(x: 56.76, y: 145.01), controlPoint1: CGPoint(x: 56.57, y: 145.37), controlPoint2: CGPoint(x: 56.63, y: 145.17))
        textPath.addCurve(to: CGPoint(x: 57.25, y: 144.63), controlPoint1: CGPoint(x: 56.88, y: 144.85), controlPoint2: CGPoint(x: 57.05, y: 144.73))
        textPath.addCurve(to: CGPoint(x: 57.92, y: 144.43), controlPoint1: CGPoint(x: 57.45, y: 144.54), controlPoint2: CGPoint(x: 57.68, y: 144.47))
        textPath.addCurve(to: CGPoint(x: 58.66, y: 144.37), controlPoint1: CGPoint(x: 58.17, y: 144.39), controlPoint2: CGPoint(x: 58.42, y: 144.37))
        textPath.addCurve(to: CGPoint(x: 59.44, y: 144.46), controlPoint1: CGPoint(x: 58.92, y: 144.37), controlPoint2: CGPoint(x: 59.19, y: 144.4))
        textPath.addCurve(to: CGPoint(x: 60.16, y: 144.74), controlPoint1: CGPoint(x: 59.7, y: 144.52), controlPoint2: CGPoint(x: 59.94, y: 144.61))
        textPath.addCurve(to: CGPoint(x: 60.69, y: 145.24), controlPoint1: CGPoint(x: 60.37, y: 144.86), controlPoint2: CGPoint(x: 60.55, y: 145.03))
        textPath.addCurve(to: CGPoint(x: 60.94, y: 146.03), controlPoint1: CGPoint(x: 60.83, y: 145.45), controlPoint2: CGPoint(x: 60.91, y: 145.71))
        textPath.addLine(to: CGPoint(x: 62.55, y: 146.03))
        textPath.addCurve(to: CGPoint(x: 62.17, y: 144.54), controlPoint1: CGPoint(x: 62.51, y: 145.43), controlPoint2: CGPoint(x: 62.39, y: 144.93))
        textPath.addCurve(to: CGPoint(x: 61.31, y: 143.59), controlPoint1: CGPoint(x: 61.96, y: 144.14), controlPoint2: CGPoint(x: 61.67, y: 143.82))
        textPath.addCurve(to: CGPoint(x: 60.06, y: 143.09), controlPoint1: CGPoint(x: 60.95, y: 143.35), controlPoint2: CGPoint(x: 60.53, y: 143.19))
        textPath.addCurve(to: CGPoint(x: 58.52, y: 142.95), controlPoint1: CGPoint(x: 59.59, y: 143), controlPoint2: CGPoint(x: 59.08, y: 142.95))
        textPath.addCurve(to: CGPoint(x: 57.22, y: 143.11), controlPoint1: CGPoint(x: 58.09, y: 142.95), controlPoint2: CGPoint(x: 57.66, y: 143))
        textPath.addCurve(to: CGPoint(x: 56.04, y: 143.6), controlPoint1: CGPoint(x: 56.78, y: 143.22), controlPoint2: CGPoint(x: 56.39, y: 143.38))
        textPath.addCurve(to: CGPoint(x: 55.19, y: 144.47), controlPoint1: CGPoint(x: 55.7, y: 143.83), controlPoint2: CGPoint(x: 55.41, y: 144.11))
        textPath.addCurve(to: CGPoint(x: 54.86, y: 145.74), controlPoint1: CGPoint(x: 54.97, y: 144.82), controlPoint2: CGPoint(x: 54.86, y: 145.25))
        textPath.addCurve(to: CGPoint(x: 55.33, y: 147.22), controlPoint1: CGPoint(x: 54.86, y: 146.38), controlPoint2: CGPoint(x: 55.01, y: 146.87))
        textPath.addCurve(to: CGPoint(x: 56.52, y: 148.05), controlPoint1: CGPoint(x: 55.65, y: 147.58), controlPoint2: CGPoint(x: 56.04, y: 147.85))
        textPath.addCurve(to: CGPoint(x: 58.07, y: 148.51), controlPoint1: CGPoint(x: 56.99, y: 148.25), controlPoint2: CGPoint(x: 57.51, y: 148.4))
        textPath.addCurve(to: CGPoint(x: 59.62, y: 148.87), controlPoint1: CGPoint(x: 58.62, y: 148.61), controlPoint2: CGPoint(x: 59.14, y: 148.73))
        textPath.addCurve(to: CGPoint(x: 60.8, y: 149.39), controlPoint1: CGPoint(x: 60.09, y: 149), controlPoint2: CGPoint(x: 60.49, y: 149.17))
        textPath.addCurve(to: CGPoint(x: 61.28, y: 150.34), controlPoint1: CGPoint(x: 61.12, y: 149.61), controlPoint2: CGPoint(x: 61.28, y: 149.92))
        textPath.addCurve(to: CGPoint(x: 61.05, y: 151.09), controlPoint1: CGPoint(x: 61.28, y: 150.64), controlPoint2: CGPoint(x: 61.2, y: 150.89))
        textPath.addCurve(to: CGPoint(x: 60.47, y: 151.54), controlPoint1: CGPoint(x: 60.9, y: 151.29), controlPoint2: CGPoint(x: 60.71, y: 151.44))
        textPath.addCurve(to: CGPoint(x: 59.7, y: 151.75), controlPoint1: CGPoint(x: 60.24, y: 151.64), controlPoint2: CGPoint(x: 59.98, y: 151.71))
        textPath.addCurve(to: CGPoint(x: 58.9, y: 151.8), controlPoint1: CGPoint(x: 59.42, y: 151.78), controlPoint2: CGPoint(x: 59.16, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 57.94, y: 151.71), controlPoint1: CGPoint(x: 58.57, y: 151.8), controlPoint2: CGPoint(x: 58.25, y: 151.77))
        textPath.addCurve(to: CGPoint(x: 57.11, y: 151.39), controlPoint1: CGPoint(x: 57.63, y: 151.64), controlPoint2: CGPoint(x: 57.36, y: 151.54))
        textPath.addCurve(to: CGPoint(x: 56.51, y: 150.81), controlPoint1: CGPoint(x: 56.86, y: 151.25), controlPoint2: CGPoint(x: 56.66, y: 151.05))
        textPath.addCurve(to: CGPoint(x: 56.26, y: 149.9), controlPoint1: CGPoint(x: 56.36, y: 150.56), controlPoint2: CGPoint(x: 56.28, y: 150.26))
        textPath.close()
        textPath.move(to: CGPoint(x: 71.44, y: 146.33))
        textPath.addLine(to: CGPoint(x: 73.12, y: 146.33))
        textPath.addCurve(to: CGPoint(x: 72.66, y: 144.82), controlPoint1: CGPoint(x: 73.05, y: 145.75), controlPoint2: CGPoint(x: 72.9, y: 145.24))
        textPath.addCurve(to: CGPoint(x: 71.74, y: 143.77), controlPoint1: CGPoint(x: 72.42, y: 144.4), controlPoint2: CGPoint(x: 72.11, y: 144.04))
        textPath.addCurve(to: CGPoint(x: 70.45, y: 143.15), controlPoint1: CGPoint(x: 71.36, y: 143.49), controlPoint2: CGPoint(x: 70.93, y: 143.28))
        textPath.addCurve(to: CGPoint(x: 68.88, y: 142.95), controlPoint1: CGPoint(x: 69.96, y: 143.02), controlPoint2: CGPoint(x: 69.44, y: 142.95))
        textPath.addCurve(to: CGPoint(x: 66.85, y: 143.36), controlPoint1: CGPoint(x: 68.11, y: 142.95), controlPoint2: CGPoint(x: 67.43, y: 143.09))
        textPath.addCurve(to: CGPoint(x: 65.39, y: 144.48), controlPoint1: CGPoint(x: 66.26, y: 143.63), controlPoint2: CGPoint(x: 65.78, y: 144))
        textPath.addCurve(to: CGPoint(x: 64.53, y: 146.15), controlPoint1: CGPoint(x: 65.01, y: 144.95), controlPoint2: CGPoint(x: 64.72, y: 145.51))
        textPath.addCurve(to: CGPoint(x: 64.24, y: 148.21), controlPoint1: CGPoint(x: 64.34, y: 146.79), controlPoint2: CGPoint(x: 64.24, y: 147.48))
        textPath.addCurve(to: CGPoint(x: 64.54, y: 150.24), controlPoint1: CGPoint(x: 64.24, y: 148.95), controlPoint2: CGPoint(x: 64.34, y: 149.62))
        textPath.addCurve(to: CGPoint(x: 65.41, y: 151.82), controlPoint1: CGPoint(x: 64.73, y: 150.85), controlPoint2: CGPoint(x: 65.02, y: 151.38))
        textPath.addCurve(to: CGPoint(x: 66.85, y: 152.85), controlPoint1: CGPoint(x: 65.8, y: 152.27), controlPoint2: CGPoint(x: 66.28, y: 152.61))
        textPath.addCurve(to: CGPoint(x: 68.84, y: 153.21), controlPoint1: CGPoint(x: 67.43, y: 153.09), controlPoint2: CGPoint(x: 68.09, y: 153.21))
        textPath.addCurve(to: CGPoint(x: 71.81, y: 152.22), controlPoint1: CGPoint(x: 70.09, y: 153.21), controlPoint2: CGPoint(x: 71.09, y: 152.88))
        textPath.addCurve(to: CGPoint(x: 73.17, y: 149.41), controlPoint1: CGPoint(x: 72.54, y: 151.56), controlPoint2: CGPoint(x: 73, y: 150.63))
        textPath.addLine(to: CGPoint(x: 71.52, y: 149.41))
        textPath.addCurve(to: CGPoint(x: 70.69, y: 151.18), controlPoint1: CGPoint(x: 71.42, y: 150.17), controlPoint2: CGPoint(x: 71.14, y: 150.76))
        textPath.addCurve(to: CGPoint(x: 68.82, y: 151.8), controlPoint1: CGPoint(x: 70.24, y: 151.59), controlPoint2: CGPoint(x: 69.62, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 67.51, y: 151.5), controlPoint1: CGPoint(x: 68.31, y: 151.8), controlPoint2: CGPoint(x: 67.88, y: 151.7))
        textPath.addCurve(to: CGPoint(x: 66.62, y: 150.69), controlPoint1: CGPoint(x: 67.14, y: 151.3), controlPoint2: CGPoint(x: 66.85, y: 151.03))
        textPath.addCurve(to: CGPoint(x: 66.11, y: 149.54), controlPoint1: CGPoint(x: 66.39, y: 150.36), controlPoint2: CGPoint(x: 66.22, y: 149.97))
        textPath.addCurve(to: CGPoint(x: 65.95, y: 148.21), controlPoint1: CGPoint(x: 66.01, y: 149.11), controlPoint2: CGPoint(x: 65.95, y: 148.67))
        textPath.addCurve(to: CGPoint(x: 66.1, y: 146.78), controlPoint1: CGPoint(x: 65.95, y: 147.72), controlPoint2: CGPoint(x: 66, y: 147.24))
        textPath.addCurve(to: CGPoint(x: 66.61, y: 145.55), controlPoint1: CGPoint(x: 66.21, y: 146.32), controlPoint2: CGPoint(x: 66.37, y: 145.91))
        textPath.addCurve(to: CGPoint(x: 67.55, y: 144.7), controlPoint1: CGPoint(x: 66.84, y: 145.2), controlPoint2: CGPoint(x: 67.16, y: 144.91))
        textPath.addCurve(to: CGPoint(x: 69.01, y: 144.37), controlPoint1: CGPoint(x: 67.94, y: 144.48), controlPoint2: CGPoint(x: 68.43, y: 144.37))
        textPath.addCurve(to: CGPoint(x: 70.65, y: 144.89), controlPoint1: CGPoint(x: 69.7, y: 144.37), controlPoint2: CGPoint(x: 70.24, y: 144.54))
        textPath.addCurve(to: CGPoint(x: 71.44, y: 146.33), controlPoint1: CGPoint(x: 71.05, y: 145.23), controlPoint2: CGPoint(x: 71.32, y: 145.71))
        textPath.close()
        textPath.move(to: CGPoint(x: 74.92, y: 143.18))
        textPath.addLine(to: CGPoint(x: 74.92, y: 153))
        textPath.addLine(to: CGPoint(x: 76.54, y: 153))
        textPath.addLine(to: CGPoint(x: 76.54, y: 148.63))
        textPath.addCurve(to: CGPoint(x: 76.73, y: 146.95), controlPoint1: CGPoint(x: 76.54, y: 148), controlPoint2: CGPoint(x: 76.6, y: 147.44))
        textPath.addCurve(to: CGPoint(x: 77.33, y: 145.7), controlPoint1: CGPoint(x: 76.85, y: 146.46), controlPoint2: CGPoint(x: 77.05, y: 146.05))
        textPath.addCurve(to: CGPoint(x: 78.44, y: 144.93), controlPoint1: CGPoint(x: 77.61, y: 145.36), controlPoint2: CGPoint(x: 77.98, y: 145.1))
        textPath.addCurve(to: CGPoint(x: 80.09, y: 144.66), controlPoint1: CGPoint(x: 78.89, y: 144.75), controlPoint2: CGPoint(x: 79.44, y: 144.66))
        textPath.addLine(to: CGPoint(x: 80.09, y: 142.95))
        textPath.addCurve(to: CGPoint(x: 77.92, y: 143.48), controlPoint1: CGPoint(x: 79.21, y: 142.92), controlPoint2: CGPoint(x: 78.49, y: 143.1))
        textPath.addCurve(to: CGPoint(x: 76.48, y: 145.25), controlPoint1: CGPoint(x: 77.35, y: 143.86), controlPoint2: CGPoint(x: 76.87, y: 144.45))
        textPath.addLine(to: CGPoint(x: 76.44, y: 145.25))
        textPath.addLine(to: CGPoint(x: 76.44, y: 143.18))
        textPath.addLine(to: CGPoint(x: 74.92, y: 143.18))
        textPath.close()
        textPath.move(to: CGPoint(x: 83.01, y: 141.41))
        textPath.addLine(to: CGPoint(x: 83.01, y: 139.43))
        textPath.addLine(to: CGPoint(x: 81.4, y: 139.43))
        textPath.addLine(to: CGPoint(x: 81.4, y: 141.41))
        textPath.addLine(to: CGPoint(x: 83.01, y: 141.41))
        textPath.close()
        textPath.move(to: CGPoint(x: 81.4, y: 143.18))
        textPath.addLine(to: CGPoint(x: 81.4, y: 153))
        textPath.addLine(to: CGPoint(x: 83.01, y: 153))
        textPath.addLine(to: CGPoint(x: 83.01, y: 143.18))
        textPath.addLine(to: CGPoint(x: 81.4, y: 143.18))
        textPath.close()
        textPath.move(to: CGPoint(x: 85.58, y: 139.43))
        textPath.addLine(to: CGPoint(x: 85.58, y: 153))
        textPath.addLine(to: CGPoint(x: 87.19, y: 153))
        textPath.addLine(to: CGPoint(x: 87.19, y: 151.69))
        textPath.addLine(to: CGPoint(x: 87.23, y: 151.69))
        textPath.addCurve(to: CGPoint(x: 87.89, y: 152.42), controlPoint1: CGPoint(x: 87.41, y: 151.98), controlPoint2: CGPoint(x: 87.63, y: 152.22))
        textPath.addCurve(to: CGPoint(x: 88.71, y: 152.89), controlPoint1: CGPoint(x: 88.15, y: 152.62), controlPoint2: CGPoint(x: 88.42, y: 152.77))
        textPath.addCurve(to: CGPoint(x: 89.6, y: 153.13), controlPoint1: CGPoint(x: 89.01, y: 153), controlPoint2: CGPoint(x: 89.3, y: 153.08))
        textPath.addCurve(to: CGPoint(x: 90.41, y: 153.21), controlPoint1: CGPoint(x: 89.9, y: 153.18), controlPoint2: CGPoint(x: 90.16, y: 153.21))
        textPath.addCurve(to: CGPoint(x: 92.37, y: 152.81), controlPoint1: CGPoint(x: 91.15, y: 153.21), controlPoint2: CGPoint(x: 91.81, y: 153.08))
        textPath.addCurve(to: CGPoint(x: 93.78, y: 151.72), controlPoint1: CGPoint(x: 92.94, y: 152.54), controlPoint2: CGPoint(x: 93.4, y: 152.18))
        textPath.addCurve(to: CGPoint(x: 94.61, y: 150.09), controlPoint1: CGPoint(x: 94.15, y: 151.26), controlPoint2: CGPoint(x: 94.43, y: 150.71))
        textPath.addCurve(to: CGPoint(x: 94.89, y: 148.12), controlPoint1: CGPoint(x: 94.8, y: 149.47), controlPoint2: CGPoint(x: 94.89, y: 148.81))
        textPath.addCurve(to: CGPoint(x: 94.6, y: 146.14), controlPoint1: CGPoint(x: 94.89, y: 147.42), controlPoint2: CGPoint(x: 94.79, y: 146.76))
        textPath.addCurve(to: CGPoint(x: 93.76, y: 144.5), controlPoint1: CGPoint(x: 94.41, y: 145.52), controlPoint2: CGPoint(x: 94.13, y: 144.97))
        textPath.addCurve(to: CGPoint(x: 92.35, y: 143.37), controlPoint1: CGPoint(x: 93.39, y: 144.02), controlPoint2: CGPoint(x: 92.92, y: 143.65))
        textPath.addCurve(to: CGPoint(x: 90.37, y: 142.95), controlPoint1: CGPoint(x: 91.79, y: 143.09), controlPoint2: CGPoint(x: 91.13, y: 142.95))
        textPath.addCurve(to: CGPoint(x: 88.49, y: 143.32), controlPoint1: CGPoint(x: 89.68, y: 142.95), controlPoint2: CGPoint(x: 89.06, y: 143.07))
        textPath.addCurve(to: CGPoint(x: 87.23, y: 144.51), controlPoint1: CGPoint(x: 87.92, y: 143.57), controlPoint2: CGPoint(x: 87.5, y: 143.96))
        textPath.addLine(to: CGPoint(x: 87.19, y: 144.51))
        textPath.addLine(to: CGPoint(x: 87.19, y: 139.43))
        textPath.addLine(to: CGPoint(x: 85.58, y: 139.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 93.18, y: 148))
        textPath.addCurve(to: CGPoint(x: 93.03, y: 149.41), controlPoint1: CGPoint(x: 93.18, y: 148.48), controlPoint2: CGPoint(x: 93.13, y: 148.95))
        textPath.addCurve(to: CGPoint(x: 92.53, y: 150.62), controlPoint1: CGPoint(x: 92.93, y: 149.87), controlPoint2: CGPoint(x: 92.76, y: 150.27))
        textPath.addCurve(to: CGPoint(x: 91.63, y: 151.48), controlPoint1: CGPoint(x: 92.31, y: 150.98), controlPoint2: CGPoint(x: 92, y: 151.26))
        textPath.addCurve(to: CGPoint(x: 90.23, y: 151.8), controlPoint1: CGPoint(x: 91.26, y: 151.7), controlPoint2: CGPoint(x: 90.79, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 88.81, y: 151.49), controlPoint1: CGPoint(x: 89.68, y: 151.8), controlPoint2: CGPoint(x: 89.2, y: 151.7))
        textPath.addCurve(to: CGPoint(x: 87.85, y: 150.66), controlPoint1: CGPoint(x: 88.42, y: 151.28), controlPoint2: CGPoint(x: 88.1, y: 151.01))
        textPath.addCurve(to: CGPoint(x: 87.31, y: 149.48), controlPoint1: CGPoint(x: 87.6, y: 150.32), controlPoint2: CGPoint(x: 87.42, y: 149.93))
        textPath.addCurve(to: CGPoint(x: 87.14, y: 148.08), controlPoint1: CGPoint(x: 87.19, y: 149.03), controlPoint2: CGPoint(x: 87.14, y: 148.56))
        textPath.addCurve(to: CGPoint(x: 87.3, y: 146.73), controlPoint1: CGPoint(x: 87.14, y: 147.62), controlPoint2: CGPoint(x: 87.19, y: 147.17))
        textPath.addCurve(to: CGPoint(x: 87.82, y: 145.54), controlPoint1: CGPoint(x: 87.41, y: 146.29), controlPoint2: CGPoint(x: 87.58, y: 145.89))
        textPath.addCurve(to: CGPoint(x: 88.75, y: 144.7), controlPoint1: CGPoint(x: 88.06, y: 145.19), controlPoint2: CGPoint(x: 88.37, y: 144.91))
        textPath.addCurve(to: CGPoint(x: 90.14, y: 144.37), controlPoint1: CGPoint(x: 89.13, y: 144.48), controlPoint2: CGPoint(x: 89.59, y: 144.37))
        textPath.addCurve(to: CGPoint(x: 91.5, y: 144.68), controlPoint1: CGPoint(x: 90.66, y: 144.37), controlPoint2: CGPoint(x: 91.11, y: 144.48))
        textPath.addCurve(to: CGPoint(x: 92.45, y: 145.5), controlPoint1: CGPoint(x: 91.88, y: 144.88), controlPoint2: CGPoint(x: 92.2, y: 145.15))
        textPath.addCurve(to: CGPoint(x: 93, y: 146.66), controlPoint1: CGPoint(x: 92.7, y: 145.84), controlPoint2: CGPoint(x: 92.88, y: 146.23))
        textPath.addCurve(to: CGPoint(x: 93.18, y: 148), controlPoint1: CGPoint(x: 93.12, y: 147.1), controlPoint2: CGPoint(x: 93.18, y: 147.55))
        textPath.close()
        textPath.move(to: CGPoint(x: 103.61, y: 147.15))
        textPath.addLine(to: CGPoint(x: 97.97, y: 147.15))
        textPath.addCurve(to: CGPoint(x: 98.21, y: 146.07), controlPoint1: CGPoint(x: 97.99, y: 146.77), controlPoint2: CGPoint(x: 98.08, y: 146.41))
        textPath.addCurve(to: CGPoint(x: 98.78, y: 145.19), controlPoint1: CGPoint(x: 98.35, y: 145.74), controlPoint2: CGPoint(x: 98.54, y: 145.44))
        textPath.addCurve(to: CGPoint(x: 99.65, y: 144.59), controlPoint1: CGPoint(x: 99.03, y: 144.94), controlPoint2: CGPoint(x: 99.31, y: 144.74))
        textPath.addCurve(to: CGPoint(x: 100.78, y: 144.37), controlPoint1: CGPoint(x: 99.98, y: 144.45), controlPoint2: CGPoint(x: 100.36, y: 144.37))
        textPath.addCurve(to: CGPoint(x: 101.89, y: 144.59), controlPoint1: CGPoint(x: 101.18, y: 144.37), controlPoint2: CGPoint(x: 101.56, y: 144.45))
        textPath.addCurve(to: CGPoint(x: 102.77, y: 145.18), controlPoint1: CGPoint(x: 102.23, y: 144.74), controlPoint2: CGPoint(x: 102.52, y: 144.93))
        textPath.addCurve(to: CGPoint(x: 103.35, y: 146.06), controlPoint1: CGPoint(x: 103.01, y: 145.43), controlPoint2: CGPoint(x: 103.21, y: 145.72))
        textPath.addCurve(to: CGPoint(x: 103.61, y: 147.15), controlPoint1: CGPoint(x: 103.5, y: 146.41), controlPoint2: CGPoint(x: 103.59, y: 146.77))
        textPath.close()
        textPath.move(to: CGPoint(x: 105.17, y: 149.88))
        textPath.addLine(to: CGPoint(x: 103.57, y: 149.88))
        textPath.addCurve(to: CGPoint(x: 102.71, y: 151.33), controlPoint1: CGPoint(x: 103.43, y: 150.53), controlPoint2: CGPoint(x: 103.15, y: 151.01))
        textPath.addCurve(to: CGPoint(x: 101.03, y: 151.8), controlPoint1: CGPoint(x: 102.27, y: 151.64), controlPoint2: CGPoint(x: 101.71, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 99.64, y: 151.54), controlPoint1: CGPoint(x: 100.49, y: 151.8), controlPoint2: CGPoint(x: 100.03, y: 151.71))
        textPath.addCurve(to: CGPoint(x: 98.67, y: 150.82), controlPoint1: CGPoint(x: 99.25, y: 151.36), controlPoint2: CGPoint(x: 98.92, y: 151.12))
        textPath.addCurve(to: CGPoint(x: 98.12, y: 149.8), controlPoint1: CGPoint(x: 98.42, y: 150.53), controlPoint2: CGPoint(x: 98.23, y: 150.18))
        textPath.addCurve(to: CGPoint(x: 97.97, y: 148.57), controlPoint1: CGPoint(x: 98.01, y: 149.41), controlPoint2: CGPoint(x: 97.95, y: 149))
        textPath.addLine(to: CGPoint(x: 105.32, y: 148.57))
        textPath.addCurve(to: CGPoint(x: 105.16, y: 146.69), controlPoint1: CGPoint(x: 105.35, y: 147.98), controlPoint2: CGPoint(x: 105.29, y: 147.35))
        textPath.addCurve(to: CGPoint(x: 104.44, y: 144.87), controlPoint1: CGPoint(x: 105.03, y: 146.03), controlPoint2: CGPoint(x: 104.79, y: 145.43))
        textPath.addCurve(to: CGPoint(x: 103.05, y: 143.49), controlPoint1: CGPoint(x: 104.09, y: 144.31), controlPoint2: CGPoint(x: 103.63, y: 143.85))
        textPath.addCurve(to: CGPoint(x: 100.87, y: 142.95), controlPoint1: CGPoint(x: 102.47, y: 143.13), controlPoint2: CGPoint(x: 101.75, y: 142.95))
        textPath.addCurve(to: CGPoint(x: 99.02, y: 143.33), controlPoint1: CGPoint(x: 100.2, y: 142.95), controlPoint2: CGPoint(x: 99.59, y: 143.08))
        textPath.addCurve(to: CGPoint(x: 97.56, y: 144.39), controlPoint1: CGPoint(x: 98.46, y: 143.58), controlPoint2: CGPoint(x: 97.97, y: 143.94))
        textPath.addCurve(to: CGPoint(x: 96.6, y: 146.01), controlPoint1: CGPoint(x: 97.15, y: 144.85), controlPoint2: CGPoint(x: 96.83, y: 145.39))
        textPath.addCurve(to: CGPoint(x: 96.26, y: 148.06), controlPoint1: CGPoint(x: 96.37, y: 146.63), controlPoint2: CGPoint(x: 96.26, y: 147.31))
        textPath.addCurve(to: CGPoint(x: 96.59, y: 150.13), controlPoint1: CGPoint(x: 96.28, y: 148.81), controlPoint2: CGPoint(x: 96.39, y: 149.5))
        textPath.addCurve(to: CGPoint(x: 97.47, y: 151.76), controlPoint1: CGPoint(x: 96.79, y: 150.76), controlPoint2: CGPoint(x: 97.08, y: 151.31))
        textPath.addCurve(to: CGPoint(x: 98.93, y: 152.83), controlPoint1: CGPoint(x: 97.87, y: 152.22), controlPoint2: CGPoint(x: 98.35, y: 152.58))
        textPath.addCurve(to: CGPoint(x: 100.97, y: 153.21), controlPoint1: CGPoint(x: 99.5, y: 153.08), controlPoint2: CGPoint(x: 100.18, y: 153.21))
        textPath.addCurve(to: CGPoint(x: 103.74, y: 152.37), controlPoint1: CGPoint(x: 102.08, y: 153.21), controlPoint2: CGPoint(x: 103.01, y: 152.93))
        textPath.addCurve(to: CGPoint(x: 105.17, y: 149.88), controlPoint1: CGPoint(x: 104.48, y: 151.82), controlPoint2: CGPoint(x: 104.95, y: 150.99))
        textPath.close()
        textPath.move(to: CGPoint(x: 112.52, y: 139.43))
        textPath.addLine(to: CGPoint(x: 112.52, y: 153))
        textPath.addLine(to: CGPoint(x: 114.23, y: 153))
        textPath.addLine(to: CGPoint(x: 114.23, y: 142.11))
        textPath.addLine(to: CGPoint(x: 114.27, y: 142.11))
        textPath.addLine(to: CGPoint(x: 121.36, y: 153))
        textPath.addLine(to: CGPoint(x: 123.33, y: 153))
        textPath.addLine(to: CGPoint(x: 123.33, y: 139.43))
        textPath.addLine(to: CGPoint(x: 121.62, y: 139.43))
        textPath.addLine(to: CGPoint(x: 121.62, y: 150.44))
        textPath.addLine(to: CGPoint(x: 121.58, y: 150.44))
        textPath.addLine(to: CGPoint(x: 114.44, y: 139.43))
        textPath.addLine(to: CGPoint(x: 112.52, y: 139.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 127.17, y: 148.1))
        textPath.addCurve(to: CGPoint(x: 127.41, y: 146.51), controlPoint1: CGPoint(x: 127.17, y: 147.5), controlPoint2: CGPoint(x: 127.25, y: 146.97))
        textPath.addCurve(to: CGPoint(x: 128.06, y: 145.34), controlPoint1: CGPoint(x: 127.57, y: 146.05), controlPoint2: CGPoint(x: 127.78, y: 145.66))
        textPath.addCurve(to: CGPoint(x: 129.04, y: 144.62), controlPoint1: CGPoint(x: 128.34, y: 145.03), controlPoint2: CGPoint(x: 128.67, y: 144.79))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 144.37), controlPoint1: CGPoint(x: 129.42, y: 144.46), controlPoint2: CGPoint(x: 129.81, y: 144.37))
        textPath.addCurve(to: CGPoint(x: 131.42, y: 144.62), controlPoint1: CGPoint(x: 130.65, y: 144.37), controlPoint2: CGPoint(x: 131.04, y: 144.46))
        textPath.addCurve(to: CGPoint(x: 132.4, y: 145.34), controlPoint1: CGPoint(x: 131.79, y: 144.79), controlPoint2: CGPoint(x: 132.12, y: 145.03))
        textPath.addCurve(to: CGPoint(x: 133.05, y: 146.51), controlPoint1: CGPoint(x: 132.67, y: 145.66), controlPoint2: CGPoint(x: 132.89, y: 146.05))
        textPath.addCurve(to: CGPoint(x: 133.29, y: 148.1), controlPoint1: CGPoint(x: 133.21, y: 146.97), controlPoint2: CGPoint(x: 133.29, y: 147.5))
        textPath.addCurve(to: CGPoint(x: 133.05, y: 149.68), controlPoint1: CGPoint(x: 133.29, y: 148.69), controlPoint2: CGPoint(x: 133.21, y: 149.22))
        textPath.addCurve(to: CGPoint(x: 132.4, y: 150.84), controlPoint1: CGPoint(x: 132.89, y: 150.15), controlPoint2: CGPoint(x: 132.67, y: 150.53))
        textPath.addCurve(to: CGPoint(x: 131.42, y: 151.56), controlPoint1: CGPoint(x: 132.12, y: 151.15), controlPoint2: CGPoint(x: 131.79, y: 151.39))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 151.8), controlPoint1: CGPoint(x: 131.04, y: 151.72), controlPoint2: CGPoint(x: 130.65, y: 151.8))
        textPath.addCurve(to: CGPoint(x: 129.04, y: 151.56), controlPoint1: CGPoint(x: 129.81, y: 151.8), controlPoint2: CGPoint(x: 129.42, y: 151.72))
        textPath.addCurve(to: CGPoint(x: 128.06, y: 150.84), controlPoint1: CGPoint(x: 128.67, y: 151.39), controlPoint2: CGPoint(x: 128.34, y: 151.15))
        textPath.addCurve(to: CGPoint(x: 127.41, y: 149.68), controlPoint1: CGPoint(x: 127.78, y: 150.53), controlPoint2: CGPoint(x: 127.57, y: 150.15))
        textPath.addCurve(to: CGPoint(x: 127.17, y: 148.1), controlPoint1: CGPoint(x: 127.25, y: 149.22), controlPoint2: CGPoint(x: 127.17, y: 148.69))
        textPath.close()
        textPath.move(to: CGPoint(x: 125.46, y: 148.1))
        textPath.addCurve(to: CGPoint(x: 125.76, y: 150.11), controlPoint1: CGPoint(x: 125.46, y: 148.82), controlPoint2: CGPoint(x: 125.56, y: 149.49))
        textPath.addCurve(to: CGPoint(x: 126.68, y: 151.74), controlPoint1: CGPoint(x: 125.97, y: 150.73), controlPoint2: CGPoint(x: 126.27, y: 151.27))
        textPath.addCurve(to: CGPoint(x: 128.18, y: 152.82), controlPoint1: CGPoint(x: 127.08, y: 152.2), controlPoint2: CGPoint(x: 127.58, y: 152.56))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 153.21), controlPoint1: CGPoint(x: 128.77, y: 153.08), controlPoint2: CGPoint(x: 129.46, y: 153.21))
        textPath.addCurve(to: CGPoint(x: 132.29, y: 152.82), controlPoint1: CGPoint(x: 131.01, y: 153.21), controlPoint2: CGPoint(x: 131.7, y: 153.08))
        textPath.addCurve(to: CGPoint(x: 133.78, y: 151.74), controlPoint1: CGPoint(x: 132.88, y: 152.56), controlPoint2: CGPoint(x: 133.38, y: 152.2))
        textPath.addCurve(to: CGPoint(x: 134.69, y: 150.11), controlPoint1: CGPoint(x: 134.19, y: 151.27), controlPoint2: CGPoint(x: 134.49, y: 150.73))
        textPath.addCurve(to: CGPoint(x: 135, y: 148.1), controlPoint1: CGPoint(x: 134.9, y: 149.49), controlPoint2: CGPoint(x: 135, y: 148.82))
        textPath.addCurve(to: CGPoint(x: 134.69, y: 146.07), controlPoint1: CGPoint(x: 135, y: 147.38), controlPoint2: CGPoint(x: 134.9, y: 146.7))
        textPath.addCurve(to: CGPoint(x: 133.78, y: 144.44), controlPoint1: CGPoint(x: 134.49, y: 145.45), controlPoint2: CGPoint(x: 134.19, y: 144.9))
        textPath.addCurve(to: CGPoint(x: 132.29, y: 143.35), controlPoint1: CGPoint(x: 133.38, y: 143.98), controlPoint2: CGPoint(x: 132.88, y: 143.61))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 142.95), controlPoint1: CGPoint(x: 131.7, y: 143.08), controlPoint2: CGPoint(x: 131.01, y: 142.95))
        textPath.addCurve(to: CGPoint(x: 128.18, y: 143.35), controlPoint1: CGPoint(x: 129.46, y: 142.95), controlPoint2: CGPoint(x: 128.77, y: 143.08))
        textPath.addCurve(to: CGPoint(x: 126.68, y: 144.44), controlPoint1: CGPoint(x: 127.58, y: 143.61), controlPoint2: CGPoint(x: 127.08, y: 143.98))
        textPath.addCurve(to: CGPoint(x: 125.76, y: 146.07), controlPoint1: CGPoint(x: 126.27, y: 144.9), controlPoint2: CGPoint(x: 125.97, y: 145.45))
        textPath.addCurve(to: CGPoint(x: 125.46, y: 148.1), controlPoint1: CGPoint(x: 125.56, y: 146.7), controlPoint2: CGPoint(x: 125.46, y: 147.38))
        textPath.close()
        textPath.move(to: CGPoint(x: 146.63, y: 153))
        textPath.addLine(to: CGPoint(x: 149.76, y: 143.18))
        textPath.addLine(to: CGPoint(x: 148.09, y: 143.18))
        textPath.addLine(to: CGPoint(x: 145.89, y: 151.21))
        textPath.addLine(to: CGPoint(x: 145.85, y: 151.21))
        textPath.addLine(to: CGPoint(x: 143.8, y: 143.18))
        textPath.addLine(to: CGPoint(x: 142.03, y: 143.18))
        textPath.addLine(to: CGPoint(x: 140.05, y: 151.21))
        textPath.addLine(to: CGPoint(x: 140.01, y: 151.21))
        textPath.addLine(to: CGPoint(x: 137.79, y: 143.18))
        textPath.addLine(to: CGPoint(x: 136.01, y: 143.18))
        textPath.addLine(to: CGPoint(x: 139.16, y: 153))
        textPath.addLine(to: CGPoint(x: 140.91, y: 153))
        textPath.addLine(to: CGPoint(x: 142.88, y: 145.19))
        textPath.addLine(to: CGPoint(x: 142.92, y: 145.19))
        textPath.addLine(to: CGPoint(x: 144.92, y: 153))
        textPath.addLine(to: CGPoint(x: 146.63, y: 153))
        textPath.close()
        UIColor.white.setFill()
        textPath.fill()
    }

    @objc dynamic public class func drawSuscribethreesmall() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 170, height: 47))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(ButtonsForFJ092018.gradient9, start: CGPoint(x: 85, y: -0), end: CGPoint(x: 85, y: 47), options: [])
        context.restoreGState()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 0, y: 103, width: 170, height: 47))
        context.saveGState()
        rectangle2Path.addClip()
        context.drawLinearGradient(ButtonsForFJ092018.gradient9, start: CGPoint(x: 85, y: 103), end: CGPoint(x: 85, y: 150), options: [])
        context.restoreGState()


        //// Text 4 Drawing
        let text4Path = UIBezierPath()
        text4Path.move(to: CGPoint(x: 52.75, y: 21.39))
        text4Path.addLine(to: CGPoint(x: 55.05, y: 15.07))
        text4Path.addLine(to: CGPoint(x: 55.08, y: 15.07))
        text4Path.addLine(to: CGPoint(x: 57.35, y: 21.39))
        text4Path.addLine(to: CGPoint(x: 52.75, y: 21.39))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 54.1, y: 13.43))
        text4Path.addLine(to: CGPoint(x: 48.81, y: 27))
        text4Path.addLine(to: CGPoint(x: 50.66, y: 27))
        text4Path.addLine(to: CGPoint(x: 52.18, y: 22.91))
        text4Path.addLine(to: CGPoint(x: 57.92, y: 22.91))
        text4Path.addLine(to: CGPoint(x: 59.4, y: 27))
        text4Path.addLine(to: CGPoint(x: 61.39, y: 27))
        text4Path.addLine(to: CGPoint(x: 56.09, y: 13.43))
        text4Path.addLine(to: CGPoint(x: 54.1, y: 13.43))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 62.46, y: 17.18))
        text4Path.addLine(to: CGPoint(x: 62.46, y: 27))
        text4Path.addLine(to: CGPoint(x: 64.07, y: 27))
        text4Path.addLine(to: CGPoint(x: 64.07, y: 21.45))
        text4Path.addCurve(to: CGPoint(x: 64.25, y: 20.23), controlPoint1: CGPoint(x: 64.07, y: 21.01), controlPoint2: CGPoint(x: 64.13, y: 20.6))
        text4Path.addCurve(to: CGPoint(x: 64.79, y: 19.25), controlPoint1: CGPoint(x: 64.37, y: 19.85), controlPoint2: CGPoint(x: 64.55, y: 19.53))
        text4Path.addCurve(to: CGPoint(x: 65.7, y: 18.6), controlPoint1: CGPoint(x: 65.03, y: 18.97), controlPoint2: CGPoint(x: 65.33, y: 18.75))
        text4Path.addCurve(to: CGPoint(x: 66.98, y: 18.37), controlPoint1: CGPoint(x: 66.06, y: 18.45), controlPoint2: CGPoint(x: 66.48, y: 18.37))
        text4Path.addCurve(to: CGPoint(x: 68.44, y: 18.91), controlPoint1: CGPoint(x: 67.6, y: 18.37), controlPoint2: CGPoint(x: 68.09, y: 18.55))
        text4Path.addCurve(to: CGPoint(x: 68.97, y: 20.35), controlPoint1: CGPoint(x: 68.8, y: 19.26), controlPoint2: CGPoint(x: 68.97, y: 19.74))
        text4Path.addLine(to: CGPoint(x: 68.97, y: 27))
        text4Path.addLine(to: CGPoint(x: 70.59, y: 27))
        text4Path.addLine(to: CGPoint(x: 70.59, y: 20.54))
        text4Path.addCurve(to: CGPoint(x: 70.43, y: 19.09), controlPoint1: CGPoint(x: 70.59, y: 20.01), controlPoint2: CGPoint(x: 70.53, y: 19.52))
        text4Path.addCurve(to: CGPoint(x: 69.87, y: 17.96), controlPoint1: CGPoint(x: 70.32, y: 18.65), controlPoint2: CGPoint(x: 70.13, y: 18.27))
        text4Path.addCurve(to: CGPoint(x: 68.82, y: 17.22), controlPoint1: CGPoint(x: 69.6, y: 17.64), controlPoint2: CGPoint(x: 69.25, y: 17.39))
        text4Path.addCurve(to: CGPoint(x: 67.21, y: 16.95), controlPoint1: CGPoint(x: 68.39, y: 17.04), controlPoint2: CGPoint(x: 67.85, y: 16.95))
        text4Path.addCurve(to: CGPoint(x: 64.01, y: 18.74), controlPoint1: CGPoint(x: 65.75, y: 16.95), controlPoint2: CGPoint(x: 64.69, y: 17.54))
        text4Path.addLine(to: CGPoint(x: 63.98, y: 18.74))
        text4Path.addLine(to: CGPoint(x: 63.98, y: 17.18))
        text4Path.addLine(to: CGPoint(x: 62.46, y: 17.18))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 73.02, y: 17.18))
        text4Path.addLine(to: CGPoint(x: 73.02, y: 27))
        text4Path.addLine(to: CGPoint(x: 74.64, y: 27))
        text4Path.addLine(to: CGPoint(x: 74.64, y: 21.45))
        text4Path.addCurve(to: CGPoint(x: 74.82, y: 20.23), controlPoint1: CGPoint(x: 74.64, y: 21.01), controlPoint2: CGPoint(x: 74.7, y: 20.6))
        text4Path.addCurve(to: CGPoint(x: 75.36, y: 19.25), controlPoint1: CGPoint(x: 74.94, y: 19.85), controlPoint2: CGPoint(x: 75.12, y: 19.53))
        text4Path.addCurve(to: CGPoint(x: 76.26, y: 18.6), controlPoint1: CGPoint(x: 75.6, y: 18.97), controlPoint2: CGPoint(x: 75.9, y: 18.75))
        text4Path.addCurve(to: CGPoint(x: 77.54, y: 18.37), controlPoint1: CGPoint(x: 76.62, y: 18.45), controlPoint2: CGPoint(x: 77.05, y: 18.37))
        text4Path.addCurve(to: CGPoint(x: 79.01, y: 18.91), controlPoint1: CGPoint(x: 78.16, y: 18.37), controlPoint2: CGPoint(x: 78.65, y: 18.55))
        text4Path.addCurve(to: CGPoint(x: 79.54, y: 20.35), controlPoint1: CGPoint(x: 79.36, y: 19.26), controlPoint2: CGPoint(x: 79.54, y: 19.74))
        text4Path.addLine(to: CGPoint(x: 79.54, y: 27))
        text4Path.addLine(to: CGPoint(x: 81.15, y: 27))
        text4Path.addLine(to: CGPoint(x: 81.15, y: 20.54))
        text4Path.addCurve(to: CGPoint(x: 80.99, y: 19.09), controlPoint1: CGPoint(x: 81.15, y: 20.01), controlPoint2: CGPoint(x: 81.1, y: 19.52))
        text4Path.addCurve(to: CGPoint(x: 80.43, y: 17.96), controlPoint1: CGPoint(x: 80.88, y: 18.65), controlPoint2: CGPoint(x: 80.7, y: 18.27))
        text4Path.addCurve(to: CGPoint(x: 79.39, y: 17.22), controlPoint1: CGPoint(x: 80.16, y: 17.64), controlPoint2: CGPoint(x: 79.82, y: 17.39))
        text4Path.addCurve(to: CGPoint(x: 77.77, y: 16.95), controlPoint1: CGPoint(x: 78.95, y: 17.04), controlPoint2: CGPoint(x: 78.42, y: 16.95))
        text4Path.addCurve(to: CGPoint(x: 74.58, y: 18.74), controlPoint1: CGPoint(x: 76.31, y: 16.95), controlPoint2: CGPoint(x: 75.25, y: 17.54))
        text4Path.addLine(to: CGPoint(x: 74.54, y: 18.74))
        text4Path.addLine(to: CGPoint(x: 74.54, y: 17.18))
        text4Path.addLine(to: CGPoint(x: 73.02, y: 17.18))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 91.72, y: 27))
        text4Path.addLine(to: CGPoint(x: 91.72, y: 17.18))
        text4Path.addLine(to: CGPoint(x: 90.1, y: 17.18))
        text4Path.addLine(to: CGPoint(x: 90.1, y: 22.72))
        text4Path.addCurve(to: CGPoint(x: 89.92, y: 23.95), controlPoint1: CGPoint(x: 90.1, y: 23.17), controlPoint2: CGPoint(x: 90.04, y: 23.58))
        text4Path.addCurve(to: CGPoint(x: 89.38, y: 24.93), controlPoint1: CGPoint(x: 89.8, y: 24.32), controlPoint2: CGPoint(x: 89.62, y: 24.65))
        text4Path.addCurve(to: CGPoint(x: 88.48, y: 25.57), controlPoint1: CGPoint(x: 89.14, y: 25.21), controlPoint2: CGPoint(x: 88.84, y: 25.42))
        text4Path.addCurve(to: CGPoint(x: 87.19, y: 25.8), controlPoint1: CGPoint(x: 88.12, y: 25.73), controlPoint2: CGPoint(x: 87.69, y: 25.8))
        text4Path.addCurve(to: CGPoint(x: 85.73, y: 25.27), controlPoint1: CGPoint(x: 86.57, y: 25.8), controlPoint2: CGPoint(x: 86.09, y: 25.63))
        text4Path.addCurve(to: CGPoint(x: 85.2, y: 23.83), controlPoint1: CGPoint(x: 85.38, y: 24.92), controlPoint2: CGPoint(x: 85.2, y: 24.44))
        text4Path.addLine(to: CGPoint(x: 85.2, y: 17.18))
        text4Path.addLine(to: CGPoint(x: 83.58, y: 17.18))
        text4Path.addLine(to: CGPoint(x: 83.58, y: 23.64))
        text4Path.addCurve(to: CGPoint(x: 83.75, y: 25.09), controlPoint1: CGPoint(x: 83.58, y: 24.17), controlPoint2: CGPoint(x: 83.64, y: 24.65))
        text4Path.addCurve(to: CGPoint(x: 84.31, y: 26.22), controlPoint1: CGPoint(x: 83.85, y: 25.53), controlPoint2: CGPoint(x: 84.04, y: 25.9))
        text4Path.addCurve(to: CGPoint(x: 85.35, y: 26.95), controlPoint1: CGPoint(x: 84.57, y: 26.54), controlPoint2: CGPoint(x: 84.92, y: 26.78))
        text4Path.addCurve(to: CGPoint(x: 86.97, y: 27.21), controlPoint1: CGPoint(x: 85.78, y: 27.12), controlPoint2: CGPoint(x: 86.32, y: 27.21))
        text4Path.addCurve(to: CGPoint(x: 88.85, y: 26.78), controlPoint1: CGPoint(x: 87.69, y: 27.21), controlPoint2: CGPoint(x: 88.32, y: 27.07))
        text4Path.addCurve(to: CGPoint(x: 90.16, y: 25.44), controlPoint1: CGPoint(x: 89.38, y: 26.5), controlPoint2: CGPoint(x: 89.82, y: 26.05))
        text4Path.addLine(to: CGPoint(x: 90.2, y: 25.44))
        text4Path.addLine(to: CGPoint(x: 90.2, y: 27))
        text4Path.addLine(to: CGPoint(x: 91.72, y: 27))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 102.85, y: 26.96))
        text4Path.addCurve(to: CGPoint(x: 101.69, y: 27.21), controlPoint1: CGPoint(x: 102.57, y: 27.13), controlPoint2: CGPoint(x: 102.19, y: 27.21))
        text4Path.addCurve(to: CGPoint(x: 100.69, y: 26.86), controlPoint1: CGPoint(x: 101.27, y: 27.21), controlPoint2: CGPoint(x: 100.94, y: 27.09))
        text4Path.addCurve(to: CGPoint(x: 100.32, y: 25.71), controlPoint1: CGPoint(x: 100.45, y: 26.62), controlPoint2: CGPoint(x: 100.32, y: 26.24))
        text4Path.addCurve(to: CGPoint(x: 98.77, y: 26.86), controlPoint1: CGPoint(x: 99.88, y: 26.24), controlPoint2: CGPoint(x: 99.36, y: 26.62))
        text4Path.addCurve(to: CGPoint(x: 96.87, y: 27.21), controlPoint1: CGPoint(x: 98.19, y: 27.09), controlPoint2: CGPoint(x: 97.55, y: 27.21))
        text4Path.addCurve(to: CGPoint(x: 95.6, y: 27.06), controlPoint1: CGPoint(x: 96.42, y: 27.21), controlPoint2: CGPoint(x: 96, y: 27.16))
        text4Path.addCurve(to: CGPoint(x: 94.57, y: 26.58), controlPoint1: CGPoint(x: 95.2, y: 26.96), controlPoint2: CGPoint(x: 94.86, y: 26.8))
        text4Path.addCurve(to: CGPoint(x: 93.87, y: 25.74), controlPoint1: CGPoint(x: 94.28, y: 26.37), controlPoint2: CGPoint(x: 94.04, y: 26.08))
        text4Path.addCurve(to: CGPoint(x: 93.62, y: 24.47), controlPoint1: CGPoint(x: 93.7, y: 25.39), controlPoint2: CGPoint(x: 93.62, y: 24.97))
        text4Path.addCurve(to: CGPoint(x: 93.9, y: 23.11), controlPoint1: CGPoint(x: 93.62, y: 23.92), controlPoint2: CGPoint(x: 93.71, y: 23.46))
        text4Path.addCurve(to: CGPoint(x: 94.65, y: 22.24), controlPoint1: CGPoint(x: 94.09, y: 22.75), controlPoint2: CGPoint(x: 94.34, y: 22.46))
        text4Path.addCurve(to: CGPoint(x: 95.72, y: 21.74), controlPoint1: CGPoint(x: 94.96, y: 22.02), controlPoint2: CGPoint(x: 95.32, y: 21.85))
        text4Path.addCurve(to: CGPoint(x: 96.94, y: 21.45), controlPoint1: CGPoint(x: 96.12, y: 21.62), controlPoint2: CGPoint(x: 96.52, y: 21.53))
        text4Path.addCurve(to: CGPoint(x: 98.2, y: 21.25), controlPoint1: CGPoint(x: 97.38, y: 21.36), controlPoint2: CGPoint(x: 97.81, y: 21.3))
        text4Path.addCurve(to: CGPoint(x: 99.26, y: 21.06), controlPoint1: CGPoint(x: 98.6, y: 21.21), controlPoint2: CGPoint(x: 98.96, y: 21.14))
        text4Path.addCurve(to: CGPoint(x: 99.98, y: 20.7), controlPoint1: CGPoint(x: 99.56, y: 20.98), controlPoint2: CGPoint(x: 99.8, y: 20.86))
        text4Path.addCurve(to: CGPoint(x: 100.25, y: 20.01), controlPoint1: CGPoint(x: 100.16, y: 20.54), controlPoint2: CGPoint(x: 100.25, y: 20.31))
        text4Path.addCurve(to: CGPoint(x: 100.05, y: 19.15), controlPoint1: CGPoint(x: 100.25, y: 19.65), controlPoint2: CGPoint(x: 100.18, y: 19.37))
        text4Path.addCurve(to: CGPoint(x: 99.53, y: 18.66), controlPoint1: CGPoint(x: 99.91, y: 18.94), controlPoint2: CGPoint(x: 99.74, y: 18.77))
        text4Path.addCurve(to: CGPoint(x: 98.83, y: 18.43), controlPoint1: CGPoint(x: 99.33, y: 18.54), controlPoint2: CGPoint(x: 99.09, y: 18.47))
        text4Path.addCurve(to: CGPoint(x: 98.06, y: 18.37), controlPoint1: CGPoint(x: 98.57, y: 18.39), controlPoint2: CGPoint(x: 98.32, y: 18.37))
        text4Path.addCurve(to: CGPoint(x: 96.35, y: 18.76), controlPoint1: CGPoint(x: 97.38, y: 18.37), controlPoint2: CGPoint(x: 96.81, y: 18.5))
        text4Path.addCurve(to: CGPoint(x: 95.61, y: 20.24), controlPoint1: CGPoint(x: 95.9, y: 19.02), controlPoint2: CGPoint(x: 95.65, y: 19.51))
        text4Path.addLine(to: CGPoint(x: 94, y: 20.24))
        text4Path.addCurve(to: CGPoint(x: 94.38, y: 18.7), controlPoint1: CGPoint(x: 94.02, y: 19.63), controlPoint2: CGPoint(x: 94.15, y: 19.12))
        text4Path.addCurve(to: CGPoint(x: 95.29, y: 17.68), controlPoint1: CGPoint(x: 94.6, y: 18.28), controlPoint2: CGPoint(x: 94.91, y: 17.94))
        text4Path.addCurve(to: CGPoint(x: 96.59, y: 17.12), controlPoint1: CGPoint(x: 95.67, y: 17.42), controlPoint2: CGPoint(x: 96.1, y: 17.23))
        text4Path.addCurve(to: CGPoint(x: 98.16, y: 16.95), controlPoint1: CGPoint(x: 97.08, y: 17.01), controlPoint2: CGPoint(x: 97.6, y: 16.95))
        text4Path.addCurve(to: CGPoint(x: 99.48, y: 17.04), controlPoint1: CGPoint(x: 98.6, y: 16.95), controlPoint2: CGPoint(x: 99.04, y: 16.98))
        text4Path.addCurve(to: CGPoint(x: 100.67, y: 17.43), controlPoint1: CGPoint(x: 99.92, y: 17.11), controlPoint2: CGPoint(x: 100.31, y: 17.24))
        text4Path.addCurve(to: CGPoint(x: 101.52, y: 18.26), controlPoint1: CGPoint(x: 101.02, y: 17.63), controlPoint2: CGPoint(x: 101.31, y: 17.91))
        text4Path.addCurve(to: CGPoint(x: 101.84, y: 19.65), controlPoint1: CGPoint(x: 101.74, y: 18.61), controlPoint2: CGPoint(x: 101.84, y: 19.08))
        text4Path.addLine(to: CGPoint(x: 101.84, y: 24.7))
        text4Path.addCurve(to: CGPoint(x: 101.91, y: 25.54), controlPoint1: CGPoint(x: 101.84, y: 25.08), controlPoint2: CGPoint(x: 101.87, y: 25.36))
        text4Path.addCurve(to: CGPoint(x: 102.36, y: 25.8), controlPoint1: CGPoint(x: 101.95, y: 25.71), controlPoint2: CGPoint(x: 102.1, y: 25.8))
        text4Path.addCurve(to: CGPoint(x: 102.85, y: 25.71), controlPoint1: CGPoint(x: 102.5, y: 25.8), controlPoint2: CGPoint(x: 102.66, y: 25.77))
        text4Path.addLine(to: CGPoint(x: 102.85, y: 26.96))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 100.23, y: 21.93))
        text4Path.addCurve(to: CGPoint(x: 99.43, y: 22.26), controlPoint1: CGPoint(x: 100.03, y: 22.08), controlPoint2: CGPoint(x: 99.76, y: 22.19))
        text4Path.addCurve(to: CGPoint(x: 98.39, y: 22.43), controlPoint1: CGPoint(x: 99.1, y: 22.33), controlPoint2: CGPoint(x: 98.76, y: 22.39))
        text4Path.addCurve(to: CGPoint(x: 97.3, y: 22.58), controlPoint1: CGPoint(x: 98.03, y: 22.47), controlPoint2: CGPoint(x: 97.67, y: 22.53))
        text4Path.addCurve(to: CGPoint(x: 96.31, y: 22.86), controlPoint1: CGPoint(x: 96.94, y: 22.64), controlPoint2: CGPoint(x: 96.61, y: 22.73))
        text4Path.addCurve(to: CGPoint(x: 95.6, y: 23.4), controlPoint1: CGPoint(x: 96.02, y: 22.98), controlPoint2: CGPoint(x: 95.79, y: 23.17))
        text4Path.addCurve(to: CGPoint(x: 95.33, y: 24.36), controlPoint1: CGPoint(x: 95.42, y: 23.63), controlPoint2: CGPoint(x: 95.33, y: 23.95))
        text4Path.addCurve(to: CGPoint(x: 95.49, y: 25.03), controlPoint1: CGPoint(x: 95.33, y: 24.63), controlPoint2: CGPoint(x: 95.38, y: 24.85))
        text4Path.addCurve(to: CGPoint(x: 95.91, y: 25.48), controlPoint1: CGPoint(x: 95.6, y: 25.22), controlPoint2: CGPoint(x: 95.73, y: 25.37))
        text4Path.addCurve(to: CGPoint(x: 96.5, y: 25.73), controlPoint1: CGPoint(x: 96.08, y: 25.59), controlPoint2: CGPoint(x: 96.28, y: 25.68))
        text4Path.addCurve(to: CGPoint(x: 97.23, y: 25.8), controlPoint1: CGPoint(x: 96.73, y: 25.78), controlPoint2: CGPoint(x: 96.97, y: 25.8))
        text4Path.addCurve(to: CGPoint(x: 98.59, y: 25.58), controlPoint1: CGPoint(x: 97.76, y: 25.8), controlPoint2: CGPoint(x: 98.21, y: 25.73))
        text4Path.addCurve(to: CGPoint(x: 99.53, y: 25.03), controlPoint1: CGPoint(x: 98.97, y: 25.44), controlPoint2: CGPoint(x: 99.28, y: 25.26))
        text4Path.addCurve(to: CGPoint(x: 100.06, y: 24.31), controlPoint1: CGPoint(x: 99.77, y: 24.81), controlPoint2: CGPoint(x: 99.94, y: 24.57))
        text4Path.addCurve(to: CGPoint(x: 100.23, y: 23.58), controlPoint1: CGPoint(x: 100.17, y: 24.05), controlPoint2: CGPoint(x: 100.23, y: 23.81))
        text4Path.addLine(to: CGPoint(x: 100.23, y: 21.93))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 104.45, y: 13.43))
        text4Path.addLine(to: CGPoint(x: 104.45, y: 27))
        text4Path.addLine(to: CGPoint(x: 106.06, y: 27))
        text4Path.addLine(to: CGPoint(x: 106.06, y: 13.43))
        text4Path.addLine(to: CGPoint(x: 104.45, y: 13.43))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 108.66, y: 13.43))
        text4Path.addLine(to: CGPoint(x: 108.66, y: 27))
        text4Path.addLine(to: CGPoint(x: 110.28, y: 27))
        text4Path.addLine(to: CGPoint(x: 110.28, y: 13.43))
        text4Path.addLine(to: CGPoint(x: 108.66, y: 13.43))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 116.64, y: 28.31))
        text4Path.addCurve(to: CGPoint(x: 116.08, y: 29.53), controlPoint1: CGPoint(x: 116.45, y: 28.79), controlPoint2: CGPoint(x: 116.27, y: 29.2))
        text4Path.addCurve(to: CGPoint(x: 115.48, y: 30.33), controlPoint1: CGPoint(x: 115.9, y: 29.86), controlPoint2: CGPoint(x: 115.7, y: 30.13))
        text4Path.addCurve(to: CGPoint(x: 114.73, y: 30.79), controlPoint1: CGPoint(x: 115.25, y: 30.54), controlPoint2: CGPoint(x: 115.01, y: 30.7))
        text4Path.addCurve(to: CGPoint(x: 113.79, y: 30.93), controlPoint1: CGPoint(x: 114.46, y: 30.89), controlPoint2: CGPoint(x: 114.15, y: 30.93))
        text4Path.addCurve(to: CGPoint(x: 113.22, y: 30.89), controlPoint1: CGPoint(x: 113.6, y: 30.93), controlPoint2: CGPoint(x: 113.41, y: 30.92))
        text4Path.addCurve(to: CGPoint(x: 112.67, y: 30.76), controlPoint1: CGPoint(x: 113.03, y: 30.87), controlPoint2: CGPoint(x: 112.85, y: 30.83))
        text4Path.addLine(to: CGPoint(x: 112.67, y: 29.28))
        text4Path.addCurve(to: CGPoint(x: 113.16, y: 29.44), controlPoint1: CGPoint(x: 112.81, y: 29.34), controlPoint2: CGPoint(x: 112.97, y: 29.4))
        text4Path.addCurve(to: CGPoint(x: 113.62, y: 29.51), controlPoint1: CGPoint(x: 113.34, y: 29.49), controlPoint2: CGPoint(x: 113.5, y: 29.51))
        text4Path.addCurve(to: CGPoint(x: 114.45, y: 29.27), controlPoint1: CGPoint(x: 113.95, y: 29.51), controlPoint2: CGPoint(x: 114.23, y: 29.43))
        text4Path.addCurve(to: CGPoint(x: 114.95, y: 28.6), controlPoint1: CGPoint(x: 114.67, y: 29.11), controlPoint2: CGPoint(x: 114.84, y: 28.89))
        text4Path.addLine(to: CGPoint(x: 115.62, y: 26.94))
        text4Path.addLine(to: CGPoint(x: 111.72, y: 17.18))
        text4Path.addLine(to: CGPoint(x: 113.55, y: 17.18))
        text4Path.addLine(to: CGPoint(x: 116.42, y: 25.21))
        text4Path.addLine(to: CGPoint(x: 116.45, y: 25.21))
        text4Path.addLine(to: CGPoint(x: 119.21, y: 17.18))
        text4Path.addLine(to: CGPoint(x: 120.92, y: 17.18))
        text4Path.addLine(to: CGPoint(x: 116.64, y: 28.31))
        text4Path.close()
        UIColor.white.setFill()
        text4Path.fill()


        //// Text Drawing
        let textPath = UIBezierPath()
        textPath.move(to: CGPoint(x: 29.24, y: 124.41))
        textPath.addLine(to: CGPoint(x: 30.95, y: 124.41))
        textPath.addCurve(to: CGPoint(x: 30.53, y: 122.48), controlPoint1: CGPoint(x: 30.93, y: 123.66), controlPoint2: CGPoint(x: 30.79, y: 123.01))
        textPath.addCurve(to: CGPoint(x: 29.46, y: 121.14), controlPoint1: CGPoint(x: 30.27, y: 121.94), controlPoint2: CGPoint(x: 29.91, y: 121.49))
        textPath.addCurve(to: CGPoint(x: 27.9, y: 120.36), controlPoint1: CGPoint(x: 29.01, y: 120.78), controlPoint2: CGPoint(x: 28.49, y: 120.52))
        textPath.addCurve(to: CGPoint(x: 25.96, y: 120.11), controlPoint1: CGPoint(x: 27.3, y: 120.19), controlPoint2: CGPoint(x: 26.65, y: 120.11))
        textPath.addCurve(to: CGPoint(x: 24.14, y: 120.35), controlPoint1: CGPoint(x: 25.34, y: 120.11), controlPoint2: CGPoint(x: 24.73, y: 120.19))
        textPath.addCurve(to: CGPoint(x: 22.57, y: 121.07), controlPoint1: CGPoint(x: 23.55, y: 120.51), controlPoint2: CGPoint(x: 23.03, y: 120.75))
        textPath.addCurve(to: CGPoint(x: 21.45, y: 122.31), controlPoint1: CGPoint(x: 22.1, y: 121.39), controlPoint2: CGPoint(x: 21.73, y: 121.81))
        textPath.addCurve(to: CGPoint(x: 21.04, y: 124.08), controlPoint1: CGPoint(x: 21.18, y: 122.81), controlPoint2: CGPoint(x: 21.04, y: 123.4))
        textPath.addCurve(to: CGPoint(x: 21.41, y: 125.63), controlPoint1: CGPoint(x: 21.04, y: 124.7), controlPoint2: CGPoint(x: 21.16, y: 125.22))
        textPath.addCurve(to: CGPoint(x: 22.39, y: 126.64), controlPoint1: CGPoint(x: 21.65, y: 126.04), controlPoint2: CGPoint(x: 21.98, y: 126.38))
        textPath.addCurve(to: CGPoint(x: 23.79, y: 127.26), controlPoint1: CGPoint(x: 22.81, y: 126.9), controlPoint2: CGPoint(x: 23.27, y: 127.11))
        textPath.addCurve(to: CGPoint(x: 25.38, y: 127.68), controlPoint1: CGPoint(x: 24.31, y: 127.42), controlPoint2: CGPoint(x: 24.84, y: 127.56))
        textPath.addCurve(to: CGPoint(x: 26.96, y: 128.03), controlPoint1: CGPoint(x: 25.92, y: 127.8), controlPoint2: CGPoint(x: 26.45, y: 127.92))
        textPath.addCurve(to: CGPoint(x: 28.36, y: 128.48), controlPoint1: CGPoint(x: 27.48, y: 128.15), controlPoint2: CGPoint(x: 27.95, y: 128.3))
        textPath.addCurve(to: CGPoint(x: 29.35, y: 129.19), controlPoint1: CGPoint(x: 28.77, y: 128.66), controlPoint2: CGPoint(x: 29.1, y: 128.9))
        textPath.addCurve(to: CGPoint(x: 29.72, y: 130.33), controlPoint1: CGPoint(x: 29.6, y: 129.48), controlPoint2: CGPoint(x: 29.72, y: 129.86))
        textPath.addCurve(to: CGPoint(x: 29.42, y: 131.55), controlPoint1: CGPoint(x: 29.72, y: 130.83), controlPoint2: CGPoint(x: 29.62, y: 131.23))
        textPath.addCurve(to: CGPoint(x: 28.62, y: 132.3), controlPoint1: CGPoint(x: 29.21, y: 131.87), controlPoint2: CGPoint(x: 28.95, y: 132.12))
        textPath.addCurve(to: CGPoint(x: 27.51, y: 132.69), controlPoint1: CGPoint(x: 28.29, y: 132.48), controlPoint2: CGPoint(x: 27.92, y: 132.61))
        textPath.addCurve(to: CGPoint(x: 26.28, y: 132.8), controlPoint1: CGPoint(x: 27.09, y: 132.77), controlPoint2: CGPoint(x: 26.69, y: 132.8))
        textPath.addCurve(to: CGPoint(x: 24.8, y: 132.61), controlPoint1: CGPoint(x: 25.77, y: 132.8), controlPoint2: CGPoint(x: 25.28, y: 132.74))
        textPath.addCurve(to: CGPoint(x: 23.53, y: 132.02), controlPoint1: CGPoint(x: 24.32, y: 132.49), controlPoint2: CGPoint(x: 23.9, y: 132.29))
        textPath.addCurve(to: CGPoint(x: 22.66, y: 131.01), controlPoint1: CGPoint(x: 23.17, y: 131.76), controlPoint2: CGPoint(x: 22.88, y: 131.42))
        textPath.addCurve(to: CGPoint(x: 22.33, y: 129.53), controlPoint1: CGPoint(x: 22.44, y: 130.6), controlPoint2: CGPoint(x: 22.33, y: 130.11))
        textPath.addLine(to: CGPoint(x: 20.62, y: 129.53))
        textPath.addCurve(to: CGPoint(x: 21.06, y: 131.67), controlPoint1: CGPoint(x: 20.62, y: 130.36), controlPoint2: CGPoint(x: 20.77, y: 131.07))
        textPath.addCurve(to: CGPoint(x: 22.28, y: 133.15), controlPoint1: CGPoint(x: 21.36, y: 132.27), controlPoint2: CGPoint(x: 21.77, y: 132.77))
        textPath.addCurve(to: CGPoint(x: 24.07, y: 134.02), controlPoint1: CGPoint(x: 22.79, y: 133.54), controlPoint2: CGPoint(x: 23.39, y: 133.83))
        textPath.addCurve(to: CGPoint(x: 26.22, y: 134.3), controlPoint1: CGPoint(x: 24.74, y: 134.21), controlPoint2: CGPoint(x: 25.46, y: 134.3))
        textPath.addCurve(to: CGPoint(x: 28.09, y: 134.09), controlPoint1: CGPoint(x: 26.84, y: 134.3), controlPoint2: CGPoint(x: 27.47, y: 134.23))
        textPath.addCurve(to: CGPoint(x: 29.8, y: 133.38), controlPoint1: CGPoint(x: 28.72, y: 133.94), controlPoint2: CGPoint(x: 29.29, y: 133.71))
        textPath.addCurve(to: CGPoint(x: 31.04, y: 132.13), controlPoint1: CGPoint(x: 30.3, y: 133.06), controlPoint2: CGPoint(x: 30.72, y: 132.64))
        textPath.addCurve(to: CGPoint(x: 31.52, y: 130.28), controlPoint1: CGPoint(x: 31.36, y: 131.62), controlPoint2: CGPoint(x: 31.52, y: 131))
        textPath.addCurve(to: CGPoint(x: 31.15, y: 128.6), controlPoint1: CGPoint(x: 31.52, y: 129.6), controlPoint2: CGPoint(x: 31.4, y: 129.05))
        textPath.addCurve(to: CGPoint(x: 30.17, y: 127.5), controlPoint1: CGPoint(x: 30.91, y: 128.16), controlPoint2: CGPoint(x: 30.58, y: 127.79))
        textPath.addCurve(to: CGPoint(x: 28.77, y: 126.81), controlPoint1: CGPoint(x: 29.75, y: 127.21), controlPoint2: CGPoint(x: 29.29, y: 126.98))
        textPath.addCurve(to: CGPoint(x: 27.18, y: 126.36), controlPoint1: CGPoint(x: 28.25, y: 126.64), controlPoint2: CGPoint(x: 27.72, y: 126.49))
        textPath.addCurve(to: CGPoint(x: 25.6, y: 126.01), controlPoint1: CGPoint(x: 26.64, y: 126.24), controlPoint2: CGPoint(x: 26.12, y: 126.12))
        textPath.addCurve(to: CGPoint(x: 24.2, y: 125.6), controlPoint1: CGPoint(x: 25.08, y: 125.9), controlPoint2: CGPoint(x: 24.61, y: 125.77))
        textPath.addCurve(to: CGPoint(x: 23.21, y: 124.97), controlPoint1: CGPoint(x: 23.79, y: 125.44), controlPoint2: CGPoint(x: 23.46, y: 125.23))
        textPath.addCurve(to: CGPoint(x: 22.84, y: 123.95), controlPoint1: CGPoint(x: 22.96, y: 124.71), controlPoint2: CGPoint(x: 22.84, y: 124.37))
        textPath.addCurve(to: CGPoint(x: 23.1, y: 122.84), controlPoint1: CGPoint(x: 22.84, y: 123.51), controlPoint2: CGPoint(x: 22.93, y: 123.14))
        textPath.addCurve(to: CGPoint(x: 23.78, y: 122.12), controlPoint1: CGPoint(x: 23.27, y: 122.54), controlPoint2: CGPoint(x: 23.5, y: 122.3))
        textPath.addCurve(to: CGPoint(x: 24.76, y: 121.75), controlPoint1: CGPoint(x: 24.07, y: 121.95), controlPoint2: CGPoint(x: 24.39, y: 121.82))
        textPath.addCurve(to: CGPoint(x: 25.88, y: 121.63), controlPoint1: CGPoint(x: 25.13, y: 121.67), controlPoint2: CGPoint(x: 25.5, y: 121.63))
        textPath.addCurve(to: CGPoint(x: 28.19, y: 122.29), controlPoint1: CGPoint(x: 26.82, y: 121.63), controlPoint2: CGPoint(x: 27.59, y: 121.85))
        textPath.addCurve(to: CGPoint(x: 29.24, y: 124.41), controlPoint1: CGPoint(x: 28.79, y: 122.72), controlPoint2: CGPoint(x: 29.14, y: 123.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 41.58, y: 134))
        textPath.addLine(to: CGPoint(x: 41.58, y: 124.18))
        textPath.addLine(to: CGPoint(x: 39.96, y: 124.18))
        textPath.addLine(to: CGPoint(x: 39.96, y: 129.72))
        textPath.addCurve(to: CGPoint(x: 39.78, y: 130.95), controlPoint1: CGPoint(x: 39.96, y: 130.17), controlPoint2: CGPoint(x: 39.9, y: 130.58))
        textPath.addCurve(to: CGPoint(x: 39.24, y: 131.93), controlPoint1: CGPoint(x: 39.66, y: 131.32), controlPoint2: CGPoint(x: 39.48, y: 131.65))
        textPath.addCurve(to: CGPoint(x: 38.34, y: 132.57), controlPoint1: CGPoint(x: 39, y: 132.21), controlPoint2: CGPoint(x: 38.7, y: 132.42))
        textPath.addCurve(to: CGPoint(x: 37.05, y: 132.8), controlPoint1: CGPoint(x: 37.97, y: 132.73), controlPoint2: CGPoint(x: 37.55, y: 132.8))
        textPath.addCurve(to: CGPoint(x: 35.59, y: 132.27), controlPoint1: CGPoint(x: 36.43, y: 132.8), controlPoint2: CGPoint(x: 35.95, y: 132.63))
        textPath.addCurve(to: CGPoint(x: 35.06, y: 130.83), controlPoint1: CGPoint(x: 35.24, y: 131.92), controlPoint2: CGPoint(x: 35.06, y: 131.44))
        textPath.addLine(to: CGPoint(x: 35.06, y: 124.18))
        textPath.addLine(to: CGPoint(x: 33.44, y: 124.18))
        textPath.addLine(to: CGPoint(x: 33.44, y: 130.64))
        textPath.addCurve(to: CGPoint(x: 33.6, y: 132.09), controlPoint1: CGPoint(x: 33.44, y: 131.17), controlPoint2: CGPoint(x: 33.5, y: 131.65))
        textPath.addCurve(to: CGPoint(x: 34.17, y: 133.22), controlPoint1: CGPoint(x: 33.71, y: 132.53), controlPoint2: CGPoint(x: 33.9, y: 132.9))
        textPath.addCurve(to: CGPoint(x: 35.21, y: 133.95), controlPoint1: CGPoint(x: 34.43, y: 133.54), controlPoint2: CGPoint(x: 34.78, y: 133.78))
        textPath.addCurve(to: CGPoint(x: 36.83, y: 134.21), controlPoint1: CGPoint(x: 35.64, y: 134.12), controlPoint2: CGPoint(x: 36.18, y: 134.21))
        textPath.addCurve(to: CGPoint(x: 38.71, y: 133.78), controlPoint1: CGPoint(x: 37.55, y: 134.21), controlPoint2: CGPoint(x: 38.17, y: 134.07))
        textPath.addCurve(to: CGPoint(x: 40.02, y: 132.44), controlPoint1: CGPoint(x: 39.24, y: 133.5), controlPoint2: CGPoint(x: 39.68, y: 133.05))
        textPath.addLine(to: CGPoint(x: 40.06, y: 132.44))
        textPath.addLine(to: CGPoint(x: 40.06, y: 134))
        textPath.addLine(to: CGPoint(x: 41.58, y: 134))
        textPath.close()
        textPath.move(to: CGPoint(x: 44.06, y: 120.43))
        textPath.addLine(to: CGPoint(x: 44.06, y: 134))
        textPath.addLine(to: CGPoint(x: 45.68, y: 134))
        textPath.addLine(to: CGPoint(x: 45.68, y: 132.69))
        textPath.addLine(to: CGPoint(x: 45.72, y: 132.69))
        textPath.addCurve(to: CGPoint(x: 46.37, y: 133.42), controlPoint1: CGPoint(x: 45.89, y: 132.98), controlPoint2: CGPoint(x: 46.11, y: 133.22))
        textPath.addCurve(to: CGPoint(x: 47.2, y: 133.89), controlPoint1: CGPoint(x: 46.63, y: 133.62), controlPoint2: CGPoint(x: 46.91, y: 133.77))
        textPath.addCurve(to: CGPoint(x: 48.08, y: 134.13), controlPoint1: CGPoint(x: 47.49, y: 134), controlPoint2: CGPoint(x: 47.79, y: 134.08))
        textPath.addCurve(to: CGPoint(x: 48.89, y: 134.21), controlPoint1: CGPoint(x: 48.38, y: 134.18), controlPoint2: CGPoint(x: 48.65, y: 134.21))
        textPath.addCurve(to: CGPoint(x: 50.86, y: 133.81), controlPoint1: CGPoint(x: 49.64, y: 134.21), controlPoint2: CGPoint(x: 50.29, y: 134.08))
        textPath.addCurve(to: CGPoint(x: 52.26, y: 132.72), controlPoint1: CGPoint(x: 51.42, y: 133.54), controlPoint2: CGPoint(x: 51.89, y: 133.18))
        textPath.addCurve(to: CGPoint(x: 53.1, y: 131.09), controlPoint1: CGPoint(x: 52.64, y: 132.26), controlPoint2: CGPoint(x: 52.92, y: 131.71))
        textPath.addCurve(to: CGPoint(x: 53.37, y: 129.12), controlPoint1: CGPoint(x: 53.28, y: 130.47), controlPoint2: CGPoint(x: 53.37, y: 129.81))
        textPath.addCurve(to: CGPoint(x: 53.09, y: 127.14), controlPoint1: CGPoint(x: 53.37, y: 128.42), controlPoint2: CGPoint(x: 53.28, y: 127.76))
        textPath.addCurve(to: CGPoint(x: 52.24, y: 125.5), controlPoint1: CGPoint(x: 52.9, y: 126.52), controlPoint2: CGPoint(x: 52.62, y: 125.97))
        textPath.addCurve(to: CGPoint(x: 50.84, y: 124.37), controlPoint1: CGPoint(x: 51.87, y: 125.02), controlPoint2: CGPoint(x: 51.4, y: 124.65))
        textPath.addCurve(to: CGPoint(x: 48.85, y: 123.95), controlPoint1: CGPoint(x: 50.27, y: 124.09), controlPoint2: CGPoint(x: 49.61, y: 123.95))
        textPath.addCurve(to: CGPoint(x: 46.97, y: 124.32), controlPoint1: CGPoint(x: 48.17, y: 123.95), controlPoint2: CGPoint(x: 47.54, y: 124.07))
        textPath.addCurve(to: CGPoint(x: 45.72, y: 125.51), controlPoint1: CGPoint(x: 46.4, y: 124.57), controlPoint2: CGPoint(x: 45.98, y: 124.96))
        textPath.addLine(to: CGPoint(x: 45.68, y: 125.51))
        textPath.addLine(to: CGPoint(x: 45.68, y: 120.43))
        textPath.addLine(to: CGPoint(x: 44.06, y: 120.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 51.66, y: 129))
        textPath.addCurve(to: CGPoint(x: 51.51, y: 130.41), controlPoint1: CGPoint(x: 51.66, y: 129.48), controlPoint2: CGPoint(x: 51.61, y: 129.95))
        textPath.addCurve(to: CGPoint(x: 51.02, y: 131.62), controlPoint1: CGPoint(x: 51.41, y: 130.87), controlPoint2: CGPoint(x: 51.25, y: 131.27))
        textPath.addCurve(to: CGPoint(x: 50.12, y: 132.48), controlPoint1: CGPoint(x: 50.79, y: 131.98), controlPoint2: CGPoint(x: 50.49, y: 132.26))
        textPath.addCurve(to: CGPoint(x: 48.72, y: 132.8), controlPoint1: CGPoint(x: 49.74, y: 132.7), controlPoint2: CGPoint(x: 49.28, y: 132.8))
        textPath.addCurve(to: CGPoint(x: 47.29, y: 132.49), controlPoint1: CGPoint(x: 48.16, y: 132.8), controlPoint2: CGPoint(x: 47.69, y: 132.7))
        textPath.addCurve(to: CGPoint(x: 46.33, y: 131.66), controlPoint1: CGPoint(x: 46.9, y: 132.28), controlPoint2: CGPoint(x: 46.58, y: 132.01))
        textPath.addCurve(to: CGPoint(x: 45.79, y: 130.48), controlPoint1: CGPoint(x: 46.09, y: 131.32), controlPoint2: CGPoint(x: 45.91, y: 130.93))
        textPath.addCurve(to: CGPoint(x: 45.62, y: 129.08), controlPoint1: CGPoint(x: 45.68, y: 130.03), controlPoint2: CGPoint(x: 45.62, y: 129.56))
        textPath.addCurve(to: CGPoint(x: 45.78, y: 127.73), controlPoint1: CGPoint(x: 45.62, y: 128.62), controlPoint2: CGPoint(x: 45.68, y: 128.17))
        textPath.addCurve(to: CGPoint(x: 46.31, y: 126.54), controlPoint1: CGPoint(x: 45.89, y: 127.29), controlPoint2: CGPoint(x: 46.07, y: 126.89))
        textPath.addCurve(to: CGPoint(x: 47.24, y: 125.7), controlPoint1: CGPoint(x: 46.55, y: 126.19), controlPoint2: CGPoint(x: 46.86, y: 125.91))
        textPath.addCurve(to: CGPoint(x: 48.62, y: 125.37), controlPoint1: CGPoint(x: 47.62, y: 125.48), controlPoint2: CGPoint(x: 48.08, y: 125.37))
        textPath.addCurve(to: CGPoint(x: 49.98, y: 125.68), controlPoint1: CGPoint(x: 49.14, y: 125.37), controlPoint2: CGPoint(x: 49.6, y: 125.48))
        textPath.addCurve(to: CGPoint(x: 50.93, y: 126.5), controlPoint1: CGPoint(x: 50.37, y: 125.88), controlPoint2: CGPoint(x: 50.69, y: 126.15))
        textPath.addCurve(to: CGPoint(x: 51.48, y: 127.66), controlPoint1: CGPoint(x: 51.18, y: 126.84), controlPoint2: CGPoint(x: 51.36, y: 127.23))
        textPath.addCurve(to: CGPoint(x: 51.66, y: 129), controlPoint1: CGPoint(x: 51.6, y: 128.1), controlPoint2: CGPoint(x: 51.66, y: 128.55))
        textPath.close()
        textPath.move(to: CGPoint(x: 56.26, y: 130.9))
        textPath.addLine(to: CGPoint(x: 54.65, y: 130.9))
        textPath.addCurve(to: CGPoint(x: 55.03, y: 132.45), controlPoint1: CGPoint(x: 54.67, y: 131.51), controlPoint2: CGPoint(x: 54.8, y: 132.03))
        textPath.addCurve(to: CGPoint(x: 55.94, y: 133.48), controlPoint1: CGPoint(x: 55.26, y: 132.88), controlPoint2: CGPoint(x: 55.56, y: 133.22))
        textPath.addCurve(to: CGPoint(x: 57.25, y: 134.04), controlPoint1: CGPoint(x: 56.32, y: 133.74), controlPoint2: CGPoint(x: 56.76, y: 133.92))
        textPath.addCurve(to: CGPoint(x: 58.81, y: 134.21), controlPoint1: CGPoint(x: 57.74, y: 134.15), controlPoint2: CGPoint(x: 58.26, y: 134.21))
        textPath.addCurve(to: CGPoint(x: 60.3, y: 134.07), controlPoint1: CGPoint(x: 59.3, y: 134.21), controlPoint2: CGPoint(x: 59.8, y: 134.16))
        textPath.addCurve(to: CGPoint(x: 61.65, y: 133.56), controlPoint1: CGPoint(x: 60.8, y: 133.97), controlPoint2: CGPoint(x: 61.25, y: 133.8))
        textPath.addCurve(to: CGPoint(x: 62.62, y: 132.61), controlPoint1: CGPoint(x: 62.05, y: 133.32), controlPoint2: CGPoint(x: 62.37, y: 133.01))
        textPath.addCurve(to: CGPoint(x: 62.99, y: 131.13), controlPoint1: CGPoint(x: 62.87, y: 132.22), controlPoint2: CGPoint(x: 62.99, y: 131.73))
        textPath.addCurve(to: CGPoint(x: 62.71, y: 129.95), controlPoint1: CGPoint(x: 62.99, y: 130.66), controlPoint2: CGPoint(x: 62.9, y: 130.27))
        textPath.addCurve(to: CGPoint(x: 61.99, y: 129.16), controlPoint1: CGPoint(x: 62.53, y: 129.64), controlPoint2: CGPoint(x: 62.29, y: 129.37))
        textPath.addCurve(to: CGPoint(x: 60.97, y: 128.66), controlPoint1: CGPoint(x: 61.69, y: 128.96), controlPoint2: CGPoint(x: 61.35, y: 128.79))
        textPath.addCurve(to: CGPoint(x: 59.78, y: 128.34), controlPoint1: CGPoint(x: 60.58, y: 128.53), controlPoint2: CGPoint(x: 60.18, y: 128.43))
        textPath.addCurve(to: CGPoint(x: 58.64, y: 128.08), controlPoint1: CGPoint(x: 59.4, y: 128.25), controlPoint2: CGPoint(x: 59.02, y: 128.16))
        textPath.addCurve(to: CGPoint(x: 57.61, y: 127.78), controlPoint1: CGPoint(x: 58.26, y: 128), controlPoint2: CGPoint(x: 57.92, y: 127.9))
        textPath.addCurve(to: CGPoint(x: 56.86, y: 127.32), controlPoint1: CGPoint(x: 57.31, y: 127.66), controlPoint2: CGPoint(x: 57.06, y: 127.51))
        textPath.addCurve(to: CGPoint(x: 56.57, y: 126.63), controlPoint1: CGPoint(x: 56.66, y: 127.14), controlPoint2: CGPoint(x: 56.57, y: 126.91))
        textPath.addCurve(to: CGPoint(x: 56.76, y: 126.01), controlPoint1: CGPoint(x: 56.57, y: 126.37), controlPoint2: CGPoint(x: 56.63, y: 126.17))
        textPath.addCurve(to: CGPoint(x: 57.25, y: 125.63), controlPoint1: CGPoint(x: 56.88, y: 125.85), controlPoint2: CGPoint(x: 57.05, y: 125.73))
        textPath.addCurve(to: CGPoint(x: 57.92, y: 125.43), controlPoint1: CGPoint(x: 57.45, y: 125.54), controlPoint2: CGPoint(x: 57.68, y: 125.47))
        textPath.addCurve(to: CGPoint(x: 58.66, y: 125.37), controlPoint1: CGPoint(x: 58.17, y: 125.39), controlPoint2: CGPoint(x: 58.42, y: 125.37))
        textPath.addCurve(to: CGPoint(x: 59.44, y: 125.46), controlPoint1: CGPoint(x: 58.92, y: 125.37), controlPoint2: CGPoint(x: 59.19, y: 125.4))
        textPath.addCurve(to: CGPoint(x: 60.16, y: 125.74), controlPoint1: CGPoint(x: 59.7, y: 125.52), controlPoint2: CGPoint(x: 59.94, y: 125.61))
        textPath.addCurve(to: CGPoint(x: 60.69, y: 126.24), controlPoint1: CGPoint(x: 60.37, y: 125.86), controlPoint2: CGPoint(x: 60.55, y: 126.03))
        textPath.addCurve(to: CGPoint(x: 60.94, y: 127.03), controlPoint1: CGPoint(x: 60.83, y: 126.45), controlPoint2: CGPoint(x: 60.91, y: 126.71))
        textPath.addLine(to: CGPoint(x: 62.55, y: 127.03))
        textPath.addCurve(to: CGPoint(x: 62.17, y: 125.54), controlPoint1: CGPoint(x: 62.51, y: 126.43), controlPoint2: CGPoint(x: 62.39, y: 125.93))
        textPath.addCurve(to: CGPoint(x: 61.31, y: 124.59), controlPoint1: CGPoint(x: 61.96, y: 125.14), controlPoint2: CGPoint(x: 61.67, y: 124.82))
        textPath.addCurve(to: CGPoint(x: 60.06, y: 124.09), controlPoint1: CGPoint(x: 60.95, y: 124.35), controlPoint2: CGPoint(x: 60.53, y: 124.19))
        textPath.addCurve(to: CGPoint(x: 58.52, y: 123.95), controlPoint1: CGPoint(x: 59.59, y: 124), controlPoint2: CGPoint(x: 59.08, y: 123.95))
        textPath.addCurve(to: CGPoint(x: 57.22, y: 124.11), controlPoint1: CGPoint(x: 58.09, y: 123.95), controlPoint2: CGPoint(x: 57.66, y: 124))
        textPath.addCurve(to: CGPoint(x: 56.04, y: 124.6), controlPoint1: CGPoint(x: 56.78, y: 124.22), controlPoint2: CGPoint(x: 56.39, y: 124.38))
        textPath.addCurve(to: CGPoint(x: 55.19, y: 125.47), controlPoint1: CGPoint(x: 55.7, y: 124.83), controlPoint2: CGPoint(x: 55.41, y: 125.11))
        textPath.addCurve(to: CGPoint(x: 54.86, y: 126.74), controlPoint1: CGPoint(x: 54.97, y: 125.82), controlPoint2: CGPoint(x: 54.86, y: 126.25))
        textPath.addCurve(to: CGPoint(x: 55.33, y: 128.22), controlPoint1: CGPoint(x: 54.86, y: 127.38), controlPoint2: CGPoint(x: 55.01, y: 127.87))
        textPath.addCurve(to: CGPoint(x: 56.52, y: 129.05), controlPoint1: CGPoint(x: 55.65, y: 128.58), controlPoint2: CGPoint(x: 56.04, y: 128.85))
        textPath.addCurve(to: CGPoint(x: 58.07, y: 129.51), controlPoint1: CGPoint(x: 56.99, y: 129.25), controlPoint2: CGPoint(x: 57.51, y: 129.4))
        textPath.addCurve(to: CGPoint(x: 59.62, y: 129.87), controlPoint1: CGPoint(x: 58.62, y: 129.61), controlPoint2: CGPoint(x: 59.14, y: 129.73))
        textPath.addCurve(to: CGPoint(x: 60.8, y: 130.39), controlPoint1: CGPoint(x: 60.09, y: 130), controlPoint2: CGPoint(x: 60.49, y: 130.17))
        textPath.addCurve(to: CGPoint(x: 61.28, y: 131.34), controlPoint1: CGPoint(x: 61.12, y: 130.61), controlPoint2: CGPoint(x: 61.28, y: 130.92))
        textPath.addCurve(to: CGPoint(x: 61.05, y: 132.09), controlPoint1: CGPoint(x: 61.28, y: 131.64), controlPoint2: CGPoint(x: 61.2, y: 131.89))
        textPath.addCurve(to: CGPoint(x: 60.47, y: 132.54), controlPoint1: CGPoint(x: 60.9, y: 132.29), controlPoint2: CGPoint(x: 60.71, y: 132.44))
        textPath.addCurve(to: CGPoint(x: 59.7, y: 132.75), controlPoint1: CGPoint(x: 60.24, y: 132.64), controlPoint2: CGPoint(x: 59.98, y: 132.71))
        textPath.addCurve(to: CGPoint(x: 58.9, y: 132.8), controlPoint1: CGPoint(x: 59.42, y: 132.78), controlPoint2: CGPoint(x: 59.16, y: 132.8))
        textPath.addCurve(to: CGPoint(x: 57.94, y: 132.71), controlPoint1: CGPoint(x: 58.57, y: 132.8), controlPoint2: CGPoint(x: 58.25, y: 132.77))
        textPath.addCurve(to: CGPoint(x: 57.11, y: 132.39), controlPoint1: CGPoint(x: 57.63, y: 132.64), controlPoint2: CGPoint(x: 57.36, y: 132.54))
        textPath.addCurve(to: CGPoint(x: 56.51, y: 131.81), controlPoint1: CGPoint(x: 56.86, y: 132.25), controlPoint2: CGPoint(x: 56.66, y: 132.05))
        textPath.addCurve(to: CGPoint(x: 56.26, y: 130.9), controlPoint1: CGPoint(x: 56.36, y: 131.56), controlPoint2: CGPoint(x: 56.28, y: 131.26))
        textPath.close()
        textPath.move(to: CGPoint(x: 71.44, y: 127.33))
        textPath.addLine(to: CGPoint(x: 73.12, y: 127.33))
        textPath.addCurve(to: CGPoint(x: 72.66, y: 125.82), controlPoint1: CGPoint(x: 73.05, y: 126.75), controlPoint2: CGPoint(x: 72.9, y: 126.24))
        textPath.addCurve(to: CGPoint(x: 71.74, y: 124.77), controlPoint1: CGPoint(x: 72.42, y: 125.4), controlPoint2: CGPoint(x: 72.11, y: 125.04))
        textPath.addCurve(to: CGPoint(x: 70.45, y: 124.15), controlPoint1: CGPoint(x: 71.36, y: 124.49), controlPoint2: CGPoint(x: 70.93, y: 124.28))
        textPath.addCurve(to: CGPoint(x: 68.88, y: 123.95), controlPoint1: CGPoint(x: 69.96, y: 124.02), controlPoint2: CGPoint(x: 69.44, y: 123.95))
        textPath.addCurve(to: CGPoint(x: 66.85, y: 124.36), controlPoint1: CGPoint(x: 68.11, y: 123.95), controlPoint2: CGPoint(x: 67.43, y: 124.09))
        textPath.addCurve(to: CGPoint(x: 65.39, y: 125.48), controlPoint1: CGPoint(x: 66.26, y: 124.63), controlPoint2: CGPoint(x: 65.78, y: 125))
        textPath.addCurve(to: CGPoint(x: 64.53, y: 127.15), controlPoint1: CGPoint(x: 65.01, y: 125.95), controlPoint2: CGPoint(x: 64.72, y: 126.51))
        textPath.addCurve(to: CGPoint(x: 64.24, y: 129.21), controlPoint1: CGPoint(x: 64.34, y: 127.79), controlPoint2: CGPoint(x: 64.24, y: 128.48))
        textPath.addCurve(to: CGPoint(x: 64.54, y: 131.24), controlPoint1: CGPoint(x: 64.24, y: 129.95), controlPoint2: CGPoint(x: 64.34, y: 130.62))
        textPath.addCurve(to: CGPoint(x: 65.41, y: 132.82), controlPoint1: CGPoint(x: 64.73, y: 131.85), controlPoint2: CGPoint(x: 65.02, y: 132.38))
        textPath.addCurve(to: CGPoint(x: 66.85, y: 133.85), controlPoint1: CGPoint(x: 65.8, y: 133.27), controlPoint2: CGPoint(x: 66.28, y: 133.61))
        textPath.addCurve(to: CGPoint(x: 68.84, y: 134.21), controlPoint1: CGPoint(x: 67.43, y: 134.09), controlPoint2: CGPoint(x: 68.09, y: 134.21))
        textPath.addCurve(to: CGPoint(x: 71.81, y: 133.22), controlPoint1: CGPoint(x: 70.09, y: 134.21), controlPoint2: CGPoint(x: 71.09, y: 133.88))
        textPath.addCurve(to: CGPoint(x: 73.17, y: 130.41), controlPoint1: CGPoint(x: 72.54, y: 132.56), controlPoint2: CGPoint(x: 73, y: 131.63))
        textPath.addLine(to: CGPoint(x: 71.52, y: 130.41))
        textPath.addCurve(to: CGPoint(x: 70.69, y: 132.18), controlPoint1: CGPoint(x: 71.42, y: 131.17), controlPoint2: CGPoint(x: 71.14, y: 131.76))
        textPath.addCurve(to: CGPoint(x: 68.82, y: 132.8), controlPoint1: CGPoint(x: 70.24, y: 132.59), controlPoint2: CGPoint(x: 69.62, y: 132.8))
        textPath.addCurve(to: CGPoint(x: 67.51, y: 132.5), controlPoint1: CGPoint(x: 68.31, y: 132.8), controlPoint2: CGPoint(x: 67.88, y: 132.7))
        textPath.addCurve(to: CGPoint(x: 66.62, y: 131.69), controlPoint1: CGPoint(x: 67.14, y: 132.3), controlPoint2: CGPoint(x: 66.85, y: 132.03))
        textPath.addCurve(to: CGPoint(x: 66.11, y: 130.54), controlPoint1: CGPoint(x: 66.39, y: 131.36), controlPoint2: CGPoint(x: 66.22, y: 130.97))
        textPath.addCurve(to: CGPoint(x: 65.95, y: 129.21), controlPoint1: CGPoint(x: 66.01, y: 130.11), controlPoint2: CGPoint(x: 65.95, y: 129.67))
        textPath.addCurve(to: CGPoint(x: 66.1, y: 127.78), controlPoint1: CGPoint(x: 65.95, y: 128.72), controlPoint2: CGPoint(x: 66, y: 128.24))
        textPath.addCurve(to: CGPoint(x: 66.61, y: 126.55), controlPoint1: CGPoint(x: 66.21, y: 127.32), controlPoint2: CGPoint(x: 66.37, y: 126.91))
        textPath.addCurve(to: CGPoint(x: 67.55, y: 125.7), controlPoint1: CGPoint(x: 66.84, y: 126.2), controlPoint2: CGPoint(x: 67.16, y: 125.91))
        textPath.addCurve(to: CGPoint(x: 69.01, y: 125.37), controlPoint1: CGPoint(x: 67.94, y: 125.48), controlPoint2: CGPoint(x: 68.43, y: 125.37))
        textPath.addCurve(to: CGPoint(x: 70.65, y: 125.89), controlPoint1: CGPoint(x: 69.7, y: 125.37), controlPoint2: CGPoint(x: 70.24, y: 125.54))
        textPath.addCurve(to: CGPoint(x: 71.44, y: 127.33), controlPoint1: CGPoint(x: 71.05, y: 126.23), controlPoint2: CGPoint(x: 71.32, y: 126.71))
        textPath.close()
        textPath.move(to: CGPoint(x: 74.92, y: 124.18))
        textPath.addLine(to: CGPoint(x: 74.92, y: 134))
        textPath.addLine(to: CGPoint(x: 76.54, y: 134))
        textPath.addLine(to: CGPoint(x: 76.54, y: 129.63))
        textPath.addCurve(to: CGPoint(x: 76.73, y: 127.95), controlPoint1: CGPoint(x: 76.54, y: 129), controlPoint2: CGPoint(x: 76.6, y: 128.44))
        textPath.addCurve(to: CGPoint(x: 77.33, y: 126.7), controlPoint1: CGPoint(x: 76.85, y: 127.46), controlPoint2: CGPoint(x: 77.05, y: 127.05))
        textPath.addCurve(to: CGPoint(x: 78.44, y: 125.93), controlPoint1: CGPoint(x: 77.61, y: 126.36), controlPoint2: CGPoint(x: 77.98, y: 126.1))
        textPath.addCurve(to: CGPoint(x: 80.09, y: 125.66), controlPoint1: CGPoint(x: 78.89, y: 125.75), controlPoint2: CGPoint(x: 79.44, y: 125.66))
        textPath.addLine(to: CGPoint(x: 80.09, y: 123.95))
        textPath.addCurve(to: CGPoint(x: 77.92, y: 124.48), controlPoint1: CGPoint(x: 79.21, y: 123.92), controlPoint2: CGPoint(x: 78.49, y: 124.1))
        textPath.addCurve(to: CGPoint(x: 76.48, y: 126.25), controlPoint1: CGPoint(x: 77.35, y: 124.86), controlPoint2: CGPoint(x: 76.87, y: 125.45))
        textPath.addLine(to: CGPoint(x: 76.44, y: 126.25))
        textPath.addLine(to: CGPoint(x: 76.44, y: 124.18))
        textPath.addLine(to: CGPoint(x: 74.92, y: 124.18))
        textPath.close()
        textPath.move(to: CGPoint(x: 83.01, y: 122.41))
        textPath.addLine(to: CGPoint(x: 83.01, y: 120.43))
        textPath.addLine(to: CGPoint(x: 81.4, y: 120.43))
        textPath.addLine(to: CGPoint(x: 81.4, y: 122.41))
        textPath.addLine(to: CGPoint(x: 83.01, y: 122.41))
        textPath.close()
        textPath.move(to: CGPoint(x: 81.4, y: 124.18))
        textPath.addLine(to: CGPoint(x: 81.4, y: 134))
        textPath.addLine(to: CGPoint(x: 83.01, y: 134))
        textPath.addLine(to: CGPoint(x: 83.01, y: 124.18))
        textPath.addLine(to: CGPoint(x: 81.4, y: 124.18))
        textPath.close()
        textPath.move(to: CGPoint(x: 85.58, y: 120.43))
        textPath.addLine(to: CGPoint(x: 85.58, y: 134))
        textPath.addLine(to: CGPoint(x: 87.19, y: 134))
        textPath.addLine(to: CGPoint(x: 87.19, y: 132.69))
        textPath.addLine(to: CGPoint(x: 87.23, y: 132.69))
        textPath.addCurve(to: CGPoint(x: 87.89, y: 133.42), controlPoint1: CGPoint(x: 87.41, y: 132.98), controlPoint2: CGPoint(x: 87.63, y: 133.22))
        textPath.addCurve(to: CGPoint(x: 88.71, y: 133.89), controlPoint1: CGPoint(x: 88.15, y: 133.62), controlPoint2: CGPoint(x: 88.42, y: 133.77))
        textPath.addCurve(to: CGPoint(x: 89.6, y: 134.13), controlPoint1: CGPoint(x: 89.01, y: 134), controlPoint2: CGPoint(x: 89.3, y: 134.08))
        textPath.addCurve(to: CGPoint(x: 90.41, y: 134.21), controlPoint1: CGPoint(x: 89.9, y: 134.18), controlPoint2: CGPoint(x: 90.16, y: 134.21))
        textPath.addCurve(to: CGPoint(x: 92.37, y: 133.81), controlPoint1: CGPoint(x: 91.15, y: 134.21), controlPoint2: CGPoint(x: 91.81, y: 134.08))
        textPath.addCurve(to: CGPoint(x: 93.78, y: 132.72), controlPoint1: CGPoint(x: 92.94, y: 133.54), controlPoint2: CGPoint(x: 93.4, y: 133.18))
        textPath.addCurve(to: CGPoint(x: 94.61, y: 131.09), controlPoint1: CGPoint(x: 94.15, y: 132.26), controlPoint2: CGPoint(x: 94.43, y: 131.71))
        textPath.addCurve(to: CGPoint(x: 94.89, y: 129.12), controlPoint1: CGPoint(x: 94.8, y: 130.47), controlPoint2: CGPoint(x: 94.89, y: 129.81))
        textPath.addCurve(to: CGPoint(x: 94.6, y: 127.14), controlPoint1: CGPoint(x: 94.89, y: 128.42), controlPoint2: CGPoint(x: 94.79, y: 127.76))
        textPath.addCurve(to: CGPoint(x: 93.76, y: 125.5), controlPoint1: CGPoint(x: 94.41, y: 126.52), controlPoint2: CGPoint(x: 94.13, y: 125.97))
        textPath.addCurve(to: CGPoint(x: 92.35, y: 124.37), controlPoint1: CGPoint(x: 93.39, y: 125.02), controlPoint2: CGPoint(x: 92.92, y: 124.65))
        textPath.addCurve(to: CGPoint(x: 90.37, y: 123.95), controlPoint1: CGPoint(x: 91.79, y: 124.09), controlPoint2: CGPoint(x: 91.13, y: 123.95))
        textPath.addCurve(to: CGPoint(x: 88.49, y: 124.32), controlPoint1: CGPoint(x: 89.68, y: 123.95), controlPoint2: CGPoint(x: 89.06, y: 124.07))
        textPath.addCurve(to: CGPoint(x: 87.23, y: 125.51), controlPoint1: CGPoint(x: 87.92, y: 124.57), controlPoint2: CGPoint(x: 87.5, y: 124.96))
        textPath.addLine(to: CGPoint(x: 87.19, y: 125.51))
        textPath.addLine(to: CGPoint(x: 87.19, y: 120.43))
        textPath.addLine(to: CGPoint(x: 85.58, y: 120.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 93.18, y: 129))
        textPath.addCurve(to: CGPoint(x: 93.03, y: 130.41), controlPoint1: CGPoint(x: 93.18, y: 129.48), controlPoint2: CGPoint(x: 93.13, y: 129.95))
        textPath.addCurve(to: CGPoint(x: 92.53, y: 131.62), controlPoint1: CGPoint(x: 92.93, y: 130.87), controlPoint2: CGPoint(x: 92.76, y: 131.27))
        textPath.addCurve(to: CGPoint(x: 91.63, y: 132.48), controlPoint1: CGPoint(x: 92.31, y: 131.98), controlPoint2: CGPoint(x: 92, y: 132.26))
        textPath.addCurve(to: CGPoint(x: 90.23, y: 132.8), controlPoint1: CGPoint(x: 91.26, y: 132.7), controlPoint2: CGPoint(x: 90.79, y: 132.8))
        textPath.addCurve(to: CGPoint(x: 88.81, y: 132.49), controlPoint1: CGPoint(x: 89.68, y: 132.8), controlPoint2: CGPoint(x: 89.2, y: 132.7))
        textPath.addCurve(to: CGPoint(x: 87.85, y: 131.66), controlPoint1: CGPoint(x: 88.42, y: 132.28), controlPoint2: CGPoint(x: 88.1, y: 132.01))
        textPath.addCurve(to: CGPoint(x: 87.31, y: 130.48), controlPoint1: CGPoint(x: 87.6, y: 131.32), controlPoint2: CGPoint(x: 87.42, y: 130.93))
        textPath.addCurve(to: CGPoint(x: 87.14, y: 129.08), controlPoint1: CGPoint(x: 87.19, y: 130.03), controlPoint2: CGPoint(x: 87.14, y: 129.56))
        textPath.addCurve(to: CGPoint(x: 87.3, y: 127.73), controlPoint1: CGPoint(x: 87.14, y: 128.62), controlPoint2: CGPoint(x: 87.19, y: 128.17))
        textPath.addCurve(to: CGPoint(x: 87.82, y: 126.54), controlPoint1: CGPoint(x: 87.41, y: 127.29), controlPoint2: CGPoint(x: 87.58, y: 126.89))
        textPath.addCurve(to: CGPoint(x: 88.75, y: 125.7), controlPoint1: CGPoint(x: 88.06, y: 126.19), controlPoint2: CGPoint(x: 88.37, y: 125.91))
        textPath.addCurve(to: CGPoint(x: 90.14, y: 125.37), controlPoint1: CGPoint(x: 89.13, y: 125.48), controlPoint2: CGPoint(x: 89.59, y: 125.37))
        textPath.addCurve(to: CGPoint(x: 91.5, y: 125.68), controlPoint1: CGPoint(x: 90.66, y: 125.37), controlPoint2: CGPoint(x: 91.11, y: 125.48))
        textPath.addCurve(to: CGPoint(x: 92.45, y: 126.5), controlPoint1: CGPoint(x: 91.88, y: 125.88), controlPoint2: CGPoint(x: 92.2, y: 126.15))
        textPath.addCurve(to: CGPoint(x: 93, y: 127.66), controlPoint1: CGPoint(x: 92.7, y: 126.84), controlPoint2: CGPoint(x: 92.88, y: 127.23))
        textPath.addCurve(to: CGPoint(x: 93.18, y: 129), controlPoint1: CGPoint(x: 93.12, y: 128.1), controlPoint2: CGPoint(x: 93.18, y: 128.55))
        textPath.close()
        textPath.move(to: CGPoint(x: 103.61, y: 128.15))
        textPath.addLine(to: CGPoint(x: 97.97, y: 128.15))
        textPath.addCurve(to: CGPoint(x: 98.21, y: 127.07), controlPoint1: CGPoint(x: 97.99, y: 127.77), controlPoint2: CGPoint(x: 98.08, y: 127.41))
        textPath.addCurve(to: CGPoint(x: 98.78, y: 126.19), controlPoint1: CGPoint(x: 98.35, y: 126.74), controlPoint2: CGPoint(x: 98.54, y: 126.44))
        textPath.addCurve(to: CGPoint(x: 99.65, y: 125.59), controlPoint1: CGPoint(x: 99.03, y: 125.94), controlPoint2: CGPoint(x: 99.31, y: 125.74))
        textPath.addCurve(to: CGPoint(x: 100.78, y: 125.37), controlPoint1: CGPoint(x: 99.98, y: 125.45), controlPoint2: CGPoint(x: 100.36, y: 125.37))
        textPath.addCurve(to: CGPoint(x: 101.89, y: 125.59), controlPoint1: CGPoint(x: 101.18, y: 125.37), controlPoint2: CGPoint(x: 101.56, y: 125.45))
        textPath.addCurve(to: CGPoint(x: 102.77, y: 126.18), controlPoint1: CGPoint(x: 102.23, y: 125.74), controlPoint2: CGPoint(x: 102.52, y: 125.93))
        textPath.addCurve(to: CGPoint(x: 103.35, y: 127.06), controlPoint1: CGPoint(x: 103.01, y: 126.43), controlPoint2: CGPoint(x: 103.21, y: 126.72))
        textPath.addCurve(to: CGPoint(x: 103.61, y: 128.15), controlPoint1: CGPoint(x: 103.5, y: 127.41), controlPoint2: CGPoint(x: 103.59, y: 127.77))
        textPath.close()
        textPath.move(to: CGPoint(x: 105.17, y: 130.88))
        textPath.addLine(to: CGPoint(x: 103.57, y: 130.88))
        textPath.addCurve(to: CGPoint(x: 102.71, y: 132.33), controlPoint1: CGPoint(x: 103.43, y: 131.53), controlPoint2: CGPoint(x: 103.15, y: 132.01))
        textPath.addCurve(to: CGPoint(x: 101.03, y: 132.8), controlPoint1: CGPoint(x: 102.27, y: 132.64), controlPoint2: CGPoint(x: 101.71, y: 132.8))
        textPath.addCurve(to: CGPoint(x: 99.64, y: 132.54), controlPoint1: CGPoint(x: 100.49, y: 132.8), controlPoint2: CGPoint(x: 100.03, y: 132.71))
        textPath.addCurve(to: CGPoint(x: 98.67, y: 131.82), controlPoint1: CGPoint(x: 99.25, y: 132.36), controlPoint2: CGPoint(x: 98.92, y: 132.12))
        textPath.addCurve(to: CGPoint(x: 98.12, y: 130.8), controlPoint1: CGPoint(x: 98.42, y: 131.53), controlPoint2: CGPoint(x: 98.23, y: 131.18))
        textPath.addCurve(to: CGPoint(x: 97.97, y: 129.57), controlPoint1: CGPoint(x: 98.01, y: 130.41), controlPoint2: CGPoint(x: 97.95, y: 130))
        textPath.addLine(to: CGPoint(x: 105.32, y: 129.57))
        textPath.addCurve(to: CGPoint(x: 105.16, y: 127.69), controlPoint1: CGPoint(x: 105.35, y: 128.98), controlPoint2: CGPoint(x: 105.29, y: 128.35))
        textPath.addCurve(to: CGPoint(x: 104.44, y: 125.87), controlPoint1: CGPoint(x: 105.03, y: 127.03), controlPoint2: CGPoint(x: 104.79, y: 126.43))
        textPath.addCurve(to: CGPoint(x: 103.05, y: 124.49), controlPoint1: CGPoint(x: 104.09, y: 125.31), controlPoint2: CGPoint(x: 103.63, y: 124.85))
        textPath.addCurve(to: CGPoint(x: 100.87, y: 123.95), controlPoint1: CGPoint(x: 102.47, y: 124.13), controlPoint2: CGPoint(x: 101.75, y: 123.95))
        textPath.addCurve(to: CGPoint(x: 99.02, y: 124.33), controlPoint1: CGPoint(x: 100.2, y: 123.95), controlPoint2: CGPoint(x: 99.59, y: 124.08))
        textPath.addCurve(to: CGPoint(x: 97.56, y: 125.39), controlPoint1: CGPoint(x: 98.46, y: 124.58), controlPoint2: CGPoint(x: 97.97, y: 124.94))
        textPath.addCurve(to: CGPoint(x: 96.6, y: 127.01), controlPoint1: CGPoint(x: 97.15, y: 125.85), controlPoint2: CGPoint(x: 96.83, y: 126.39))
        textPath.addCurve(to: CGPoint(x: 96.26, y: 129.06), controlPoint1: CGPoint(x: 96.37, y: 127.63), controlPoint2: CGPoint(x: 96.26, y: 128.31))
        textPath.addCurve(to: CGPoint(x: 96.59, y: 131.13), controlPoint1: CGPoint(x: 96.28, y: 129.81), controlPoint2: CGPoint(x: 96.39, y: 130.5))
        textPath.addCurve(to: CGPoint(x: 97.47, y: 132.76), controlPoint1: CGPoint(x: 96.79, y: 131.76), controlPoint2: CGPoint(x: 97.08, y: 132.31))
        textPath.addCurve(to: CGPoint(x: 98.93, y: 133.83), controlPoint1: CGPoint(x: 97.87, y: 133.22), controlPoint2: CGPoint(x: 98.35, y: 133.58))
        textPath.addCurve(to: CGPoint(x: 100.97, y: 134.21), controlPoint1: CGPoint(x: 99.5, y: 134.08), controlPoint2: CGPoint(x: 100.18, y: 134.21))
        textPath.addCurve(to: CGPoint(x: 103.74, y: 133.37), controlPoint1: CGPoint(x: 102.08, y: 134.21), controlPoint2: CGPoint(x: 103.01, y: 133.93))
        textPath.addCurve(to: CGPoint(x: 105.17, y: 130.88), controlPoint1: CGPoint(x: 104.48, y: 132.82), controlPoint2: CGPoint(x: 104.95, y: 131.99))
        textPath.close()
        textPath.move(to: CGPoint(x: 112.52, y: 120.43))
        textPath.addLine(to: CGPoint(x: 112.52, y: 134))
        textPath.addLine(to: CGPoint(x: 114.23, y: 134))
        textPath.addLine(to: CGPoint(x: 114.23, y: 123.11))
        textPath.addLine(to: CGPoint(x: 114.27, y: 123.11))
        textPath.addLine(to: CGPoint(x: 121.36, y: 134))
        textPath.addLine(to: CGPoint(x: 123.33, y: 134))
        textPath.addLine(to: CGPoint(x: 123.33, y: 120.43))
        textPath.addLine(to: CGPoint(x: 121.62, y: 120.43))
        textPath.addLine(to: CGPoint(x: 121.62, y: 131.44))
        textPath.addLine(to: CGPoint(x: 121.58, y: 131.44))
        textPath.addLine(to: CGPoint(x: 114.44, y: 120.43))
        textPath.addLine(to: CGPoint(x: 112.52, y: 120.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 127.17, y: 129.1))
        textPath.addCurve(to: CGPoint(x: 127.41, y: 127.51), controlPoint1: CGPoint(x: 127.17, y: 128.5), controlPoint2: CGPoint(x: 127.25, y: 127.97))
        textPath.addCurve(to: CGPoint(x: 128.06, y: 126.34), controlPoint1: CGPoint(x: 127.57, y: 127.05), controlPoint2: CGPoint(x: 127.78, y: 126.66))
        textPath.addCurve(to: CGPoint(x: 129.04, y: 125.62), controlPoint1: CGPoint(x: 128.34, y: 126.03), controlPoint2: CGPoint(x: 128.67, y: 125.79))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 125.37), controlPoint1: CGPoint(x: 129.42, y: 125.46), controlPoint2: CGPoint(x: 129.81, y: 125.37))
        textPath.addCurve(to: CGPoint(x: 131.42, y: 125.62), controlPoint1: CGPoint(x: 130.65, y: 125.37), controlPoint2: CGPoint(x: 131.04, y: 125.46))
        textPath.addCurve(to: CGPoint(x: 132.4, y: 126.34), controlPoint1: CGPoint(x: 131.79, y: 125.79), controlPoint2: CGPoint(x: 132.12, y: 126.03))
        textPath.addCurve(to: CGPoint(x: 133.05, y: 127.51), controlPoint1: CGPoint(x: 132.67, y: 126.66), controlPoint2: CGPoint(x: 132.89, y: 127.05))
        textPath.addCurve(to: CGPoint(x: 133.29, y: 129.1), controlPoint1: CGPoint(x: 133.21, y: 127.97), controlPoint2: CGPoint(x: 133.29, y: 128.5))
        textPath.addCurve(to: CGPoint(x: 133.05, y: 130.68), controlPoint1: CGPoint(x: 133.29, y: 129.69), controlPoint2: CGPoint(x: 133.21, y: 130.22))
        textPath.addCurve(to: CGPoint(x: 132.4, y: 131.84), controlPoint1: CGPoint(x: 132.89, y: 131.15), controlPoint2: CGPoint(x: 132.67, y: 131.53))
        textPath.addCurve(to: CGPoint(x: 131.42, y: 132.56), controlPoint1: CGPoint(x: 132.12, y: 132.15), controlPoint2: CGPoint(x: 131.79, y: 132.39))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 132.8), controlPoint1: CGPoint(x: 131.04, y: 132.72), controlPoint2: CGPoint(x: 130.65, y: 132.8))
        textPath.addCurve(to: CGPoint(x: 129.04, y: 132.56), controlPoint1: CGPoint(x: 129.81, y: 132.8), controlPoint2: CGPoint(x: 129.42, y: 132.72))
        textPath.addCurve(to: CGPoint(x: 128.06, y: 131.84), controlPoint1: CGPoint(x: 128.67, y: 132.39), controlPoint2: CGPoint(x: 128.34, y: 132.15))
        textPath.addCurve(to: CGPoint(x: 127.41, y: 130.68), controlPoint1: CGPoint(x: 127.78, y: 131.53), controlPoint2: CGPoint(x: 127.57, y: 131.15))
        textPath.addCurve(to: CGPoint(x: 127.17, y: 129.1), controlPoint1: CGPoint(x: 127.25, y: 130.22), controlPoint2: CGPoint(x: 127.17, y: 129.69))
        textPath.close()
        textPath.move(to: CGPoint(x: 125.46, y: 129.1))
        textPath.addCurve(to: CGPoint(x: 125.76, y: 131.11), controlPoint1: CGPoint(x: 125.46, y: 129.82), controlPoint2: CGPoint(x: 125.56, y: 130.49))
        textPath.addCurve(to: CGPoint(x: 126.68, y: 132.74), controlPoint1: CGPoint(x: 125.97, y: 131.73), controlPoint2: CGPoint(x: 126.27, y: 132.27))
        textPath.addCurve(to: CGPoint(x: 128.18, y: 133.82), controlPoint1: CGPoint(x: 127.08, y: 133.2), controlPoint2: CGPoint(x: 127.58, y: 133.56))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 134.21), controlPoint1: CGPoint(x: 128.77, y: 134.08), controlPoint2: CGPoint(x: 129.46, y: 134.21))
        textPath.addCurve(to: CGPoint(x: 132.29, y: 133.82), controlPoint1: CGPoint(x: 131.01, y: 134.21), controlPoint2: CGPoint(x: 131.7, y: 134.08))
        textPath.addCurve(to: CGPoint(x: 133.78, y: 132.74), controlPoint1: CGPoint(x: 132.88, y: 133.56), controlPoint2: CGPoint(x: 133.38, y: 133.2))
        textPath.addCurve(to: CGPoint(x: 134.69, y: 131.11), controlPoint1: CGPoint(x: 134.19, y: 132.27), controlPoint2: CGPoint(x: 134.49, y: 131.73))
        textPath.addCurve(to: CGPoint(x: 135, y: 129.1), controlPoint1: CGPoint(x: 134.9, y: 130.49), controlPoint2: CGPoint(x: 135, y: 129.82))
        textPath.addCurve(to: CGPoint(x: 134.69, y: 127.07), controlPoint1: CGPoint(x: 135, y: 128.38), controlPoint2: CGPoint(x: 134.9, y: 127.7))
        textPath.addCurve(to: CGPoint(x: 133.78, y: 125.44), controlPoint1: CGPoint(x: 134.49, y: 126.45), controlPoint2: CGPoint(x: 134.19, y: 125.9))
        textPath.addCurve(to: CGPoint(x: 132.29, y: 124.35), controlPoint1: CGPoint(x: 133.38, y: 124.98), controlPoint2: CGPoint(x: 132.88, y: 124.61))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 123.95), controlPoint1: CGPoint(x: 131.7, y: 124.08), controlPoint2: CGPoint(x: 131.01, y: 123.95))
        textPath.addCurve(to: CGPoint(x: 128.18, y: 124.35), controlPoint1: CGPoint(x: 129.46, y: 123.95), controlPoint2: CGPoint(x: 128.77, y: 124.08))
        textPath.addCurve(to: CGPoint(x: 126.68, y: 125.44), controlPoint1: CGPoint(x: 127.58, y: 124.61), controlPoint2: CGPoint(x: 127.08, y: 124.98))
        textPath.addCurve(to: CGPoint(x: 125.76, y: 127.07), controlPoint1: CGPoint(x: 126.27, y: 125.9), controlPoint2: CGPoint(x: 125.97, y: 126.45))
        textPath.addCurve(to: CGPoint(x: 125.46, y: 129.1), controlPoint1: CGPoint(x: 125.56, y: 127.7), controlPoint2: CGPoint(x: 125.46, y: 128.38))
        textPath.close()
        textPath.move(to: CGPoint(x: 146.63, y: 134))
        textPath.addLine(to: CGPoint(x: 149.76, y: 124.18))
        textPath.addLine(to: CGPoint(x: 148.09, y: 124.18))
        textPath.addLine(to: CGPoint(x: 145.89, y: 132.21))
        textPath.addLine(to: CGPoint(x: 145.85, y: 132.21))
        textPath.addLine(to: CGPoint(x: 143.8, y: 124.18))
        textPath.addLine(to: CGPoint(x: 142.03, y: 124.18))
        textPath.addLine(to: CGPoint(x: 140.05, y: 132.21))
        textPath.addLine(to: CGPoint(x: 140.01, y: 132.21))
        textPath.addLine(to: CGPoint(x: 137.79, y: 124.18))
        textPath.addLine(to: CGPoint(x: 136.01, y: 124.18))
        textPath.addLine(to: CGPoint(x: 139.16, y: 134))
        textPath.addLine(to: CGPoint(x: 140.91, y: 134))
        textPath.addLine(to: CGPoint(x: 142.88, y: 126.19))
        textPath.addLine(to: CGPoint(x: 142.92, y: 126.19))
        textPath.addLine(to: CGPoint(x: 144.92, y: 134))
        textPath.addLine(to: CGPoint(x: 146.63, y: 134))
        textPath.close()
        UIColor.white.setFill()
        textPath.fill()
    }

    @objc dynamic public class func drawSubscribetwosmall() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!


        //// Gradient Declarations
        let gradient11 = CGGradient(colorsSpace: nil, colors: [ButtonsForFJ092018.blueGradientColor2.cgColor, ButtonsForFJ092018.gradientForBoxColor2.cgColor] as CFArray, locations: [0, 1])!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 170, height: 47))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(gradient11, start: CGPoint(x: 85, y: -0), end: CGPoint(x: 85, y: 47), options: [])
        context.restoreGState()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 0, y: 103, width: 170, height: 47))
        context.saveGState()
        rectangle2Path.addClip()
        context.drawLinearGradient(gradient11, start: CGPoint(x: 85, y: 103), end: CGPoint(x: 85, y: 150), options: [])
        context.restoreGState()


        //// Text 4 Drawing
        let text4Path = UIBezierPath()
        text4Path.move(to: CGPoint(x: 51.55, y: 26.12))
        text4Path.addLine(to: CGPoint(x: 50.6, y: 27.23))
        text4Path.addLine(to: CGPoint(x: 52.1, y: 28.42))
        text4Path.addCurve(to: CGPoint(x: 50.22, y: 28.8), controlPoint1: CGPoint(x: 51.49, y: 28.68), controlPoint2: CGPoint(x: 50.87, y: 28.8))
        text4Path.addCurve(to: CGPoint(x: 48.09, y: 28.32), controlPoint1: CGPoint(x: 49.4, y: 28.8), controlPoint2: CGPoint(x: 48.69, y: 28.64))
        text4Path.addCurve(to: CGPoint(x: 46.63, y: 27.04), controlPoint1: CGPoint(x: 47.5, y: 28), controlPoint2: CGPoint(x: 47.01, y: 27.57))
        text4Path.addCurve(to: CGPoint(x: 45.79, y: 25.24), controlPoint1: CGPoint(x: 46.25, y: 26.5), controlPoint2: CGPoint(x: 45.97, y: 25.91))
        text4Path.addCurve(to: CGPoint(x: 45.53, y: 23.22), controlPoint1: CGPoint(x: 45.62, y: 24.58), controlPoint2: CGPoint(x: 45.53, y: 23.9))
        text4Path.addCurve(to: CGPoint(x: 45.79, y: 21.19), controlPoint1: CGPoint(x: 45.53, y: 22.53), controlPoint2: CGPoint(x: 45.62, y: 21.86))
        text4Path.addCurve(to: CGPoint(x: 46.63, y: 19.4), controlPoint1: CGPoint(x: 45.97, y: 20.53), controlPoint2: CGPoint(x: 46.25, y: 19.93))
        text4Path.addCurve(to: CGPoint(x: 48.09, y: 18.12), controlPoint1: CGPoint(x: 47.01, y: 18.87), controlPoint2: CGPoint(x: 47.5, y: 18.44))
        text4Path.addCurve(to: CGPoint(x: 50.22, y: 17.63), controlPoint1: CGPoint(x: 48.69, y: 17.79), controlPoint2: CGPoint(x: 49.4, y: 17.63))
        text4Path.addCurve(to: CGPoint(x: 52.35, y: 18.12), controlPoint1: CGPoint(x: 51.04, y: 17.63), controlPoint2: CGPoint(x: 51.75, y: 17.79))
        text4Path.addCurve(to: CGPoint(x: 53.81, y: 19.4), controlPoint1: CGPoint(x: 52.94, y: 18.44), controlPoint2: CGPoint(x: 53.43, y: 18.87))
        text4Path.addCurve(to: CGPoint(x: 54.65, y: 21.19), controlPoint1: CGPoint(x: 54.19, y: 19.93), controlPoint2: CGPoint(x: 54.47, y: 20.53))
        text4Path.addCurve(to: CGPoint(x: 54.91, y: 23.22), controlPoint1: CGPoint(x: 54.82, y: 21.86), controlPoint2: CGPoint(x: 54.91, y: 22.53))
        text4Path.addCurve(to: CGPoint(x: 54.53, y: 25.62), controlPoint1: CGPoint(x: 54.91, y: 24.05), controlPoint2: CGPoint(x: 54.79, y: 24.85))
        text4Path.addCurve(to: CGPoint(x: 53.36, y: 27.57), controlPoint1: CGPoint(x: 54.28, y: 26.39), controlPoint2: CGPoint(x: 53.89, y: 27.04))
        text4Path.addLine(to: CGPoint(x: 51.55, y: 26.12))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 55.54, y: 31.16))
        text4Path.addLine(to: CGPoint(x: 56.45, y: 30.02))
        text4Path.addLine(to: CGPoint(x: 54.67, y: 28.61))
        text4Path.addCurve(to: CGPoint(x: 56.2, y: 26.18), controlPoint1: CGPoint(x: 55.35, y: 27.93), controlPoint2: CGPoint(x: 55.86, y: 27.12))
        text4Path.addCurve(to: CGPoint(x: 56.72, y: 23.22), controlPoint1: CGPoint(x: 56.55, y: 25.24), controlPoint2: CGPoint(x: 56.72, y: 24.26))
        text4Path.addCurve(to: CGPoint(x: 56.31, y: 20.55), controlPoint1: CGPoint(x: 56.72, y: 22.29), controlPoint2: CGPoint(x: 56.58, y: 21.4))
        text4Path.addCurve(to: CGPoint(x: 55.08, y: 18.28), controlPoint1: CGPoint(x: 56.04, y: 19.69), controlPoint2: CGPoint(x: 55.63, y: 18.94))
        text4Path.addCurve(to: CGPoint(x: 53.05, y: 16.7), controlPoint1: CGPoint(x: 54.54, y: 17.62), controlPoint2: CGPoint(x: 53.86, y: 17.09))
        text4Path.addCurve(to: CGPoint(x: 50.22, y: 16.11), controlPoint1: CGPoint(x: 52.24, y: 16.31), controlPoint2: CGPoint(x: 51.3, y: 16.11))
        text4Path.addCurve(to: CGPoint(x: 47.39, y: 16.7), controlPoint1: CGPoint(x: 49.14, y: 16.11), controlPoint2: CGPoint(x: 48.2, y: 16.31))
        text4Path.addCurve(to: CGPoint(x: 45.36, y: 18.28), controlPoint1: CGPoint(x: 46.58, y: 17.09), controlPoint2: CGPoint(x: 45.9, y: 17.62))
        text4Path.addCurve(to: CGPoint(x: 44.13, y: 20.55), controlPoint1: CGPoint(x: 44.81, y: 18.94), controlPoint2: CGPoint(x: 44.4, y: 19.69))
        text4Path.addCurve(to: CGPoint(x: 43.72, y: 23.22), controlPoint1: CGPoint(x: 43.86, y: 21.4), controlPoint2: CGPoint(x: 43.72, y: 22.29))
        text4Path.addCurve(to: CGPoint(x: 44.13, y: 25.89), controlPoint1: CGPoint(x: 43.72, y: 24.14), controlPoint2: CGPoint(x: 43.86, y: 25.03))
        text4Path.addCurve(to: CGPoint(x: 45.36, y: 28.16), controlPoint1: CGPoint(x: 44.4, y: 26.74), controlPoint2: CGPoint(x: 44.81, y: 27.5))
        text4Path.addCurve(to: CGPoint(x: 47.39, y: 29.72), controlPoint1: CGPoint(x: 45.9, y: 28.82), controlPoint2: CGPoint(x: 46.58, y: 29.34))
        text4Path.addCurve(to: CGPoint(x: 50.22, y: 30.3), controlPoint1: CGPoint(x: 48.2, y: 30.11), controlPoint2: CGPoint(x: 49.14, y: 30.3))
        text4Path.addCurve(to: CGPoint(x: 53.47, y: 29.51), controlPoint1: CGPoint(x: 51.47, y: 30.3), controlPoint2: CGPoint(x: 52.56, y: 30.04))
        text4Path.addLine(to: CGPoint(x: 55.54, y: 31.16))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 66.79, y: 30))
        text4Path.addLine(to: CGPoint(x: 66.79, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 65.17, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 65.17, y: 25.72))
        text4Path.addCurve(to: CGPoint(x: 64.99, y: 26.95), controlPoint1: CGPoint(x: 65.17, y: 26.17), controlPoint2: CGPoint(x: 65.11, y: 26.58))
        text4Path.addCurve(to: CGPoint(x: 64.45, y: 27.93), controlPoint1: CGPoint(x: 64.87, y: 27.32), controlPoint2: CGPoint(x: 64.69, y: 27.65))
        text4Path.addCurve(to: CGPoint(x: 63.55, y: 28.57), controlPoint1: CGPoint(x: 64.21, y: 28.21), controlPoint2: CGPoint(x: 63.91, y: 28.42))
        text4Path.addCurve(to: CGPoint(x: 62.27, y: 28.8), controlPoint1: CGPoint(x: 63.19, y: 28.73), controlPoint2: CGPoint(x: 62.76, y: 28.8))
        text4Path.addCurve(to: CGPoint(x: 60.8, y: 28.27), controlPoint1: CGPoint(x: 61.65, y: 28.8), controlPoint2: CGPoint(x: 61.16, y: 28.63))
        text4Path.addCurve(to: CGPoint(x: 60.27, y: 26.83), controlPoint1: CGPoint(x: 60.45, y: 27.92), controlPoint2: CGPoint(x: 60.27, y: 27.44))
        text4Path.addLine(to: CGPoint(x: 60.27, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 58.66, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 58.66, y: 26.64))
        text4Path.addCurve(to: CGPoint(x: 58.82, y: 28.09), controlPoint1: CGPoint(x: 58.66, y: 27.17), controlPoint2: CGPoint(x: 58.71, y: 27.65))
        text4Path.addCurve(to: CGPoint(x: 59.38, y: 29.22), controlPoint1: CGPoint(x: 58.93, y: 28.53), controlPoint2: CGPoint(x: 59.11, y: 28.9))
        text4Path.addCurve(to: CGPoint(x: 60.42, y: 29.95), controlPoint1: CGPoint(x: 59.64, y: 29.54), controlPoint2: CGPoint(x: 59.99, y: 29.78))
        text4Path.addCurve(to: CGPoint(x: 62.04, y: 30.21), controlPoint1: CGPoint(x: 60.85, y: 30.12), controlPoint2: CGPoint(x: 61.39, y: 30.21))
        text4Path.addCurve(to: CGPoint(x: 63.92, y: 29.78), controlPoint1: CGPoint(x: 62.76, y: 30.21), controlPoint2: CGPoint(x: 63.39, y: 30.07))
        text4Path.addCurve(to: CGPoint(x: 65.23, y: 28.44), controlPoint1: CGPoint(x: 64.45, y: 29.5), controlPoint2: CGPoint(x: 64.89, y: 29.05))
        text4Path.addLine(to: CGPoint(x: 65.27, y: 28.44))
        text4Path.addLine(to: CGPoint(x: 65.27, y: 30))
        text4Path.addLine(to: CGPoint(x: 66.79, y: 30))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 77.92, y: 29.96))
        text4Path.addCurve(to: CGPoint(x: 76.76, y: 30.21), controlPoint1: CGPoint(x: 77.64, y: 30.13), controlPoint2: CGPoint(x: 77.26, y: 30.21))
        text4Path.addCurve(to: CGPoint(x: 75.77, y: 29.86), controlPoint1: CGPoint(x: 76.34, y: 30.21), controlPoint2: CGPoint(x: 76.01, y: 30.09))
        text4Path.addCurve(to: CGPoint(x: 75.39, y: 28.71), controlPoint1: CGPoint(x: 75.52, y: 29.62), controlPoint2: CGPoint(x: 75.39, y: 29.24))
        text4Path.addCurve(to: CGPoint(x: 73.85, y: 29.86), controlPoint1: CGPoint(x: 74.95, y: 29.24), controlPoint2: CGPoint(x: 74.44, y: 29.62))
        text4Path.addCurve(to: CGPoint(x: 71.94, y: 30.21), controlPoint1: CGPoint(x: 73.26, y: 30.09), controlPoint2: CGPoint(x: 72.62, y: 30.21))
        text4Path.addCurve(to: CGPoint(x: 70.67, y: 30.06), controlPoint1: CGPoint(x: 71.49, y: 30.21), controlPoint2: CGPoint(x: 71.07, y: 30.16))
        text4Path.addCurve(to: CGPoint(x: 69.64, y: 29.58), controlPoint1: CGPoint(x: 70.27, y: 29.96), controlPoint2: CGPoint(x: 69.93, y: 29.8))
        text4Path.addCurve(to: CGPoint(x: 68.94, y: 28.74), controlPoint1: CGPoint(x: 69.35, y: 29.37), controlPoint2: CGPoint(x: 69.12, y: 29.08))
        text4Path.addCurve(to: CGPoint(x: 68.69, y: 27.47), controlPoint1: CGPoint(x: 68.77, y: 28.39), controlPoint2: CGPoint(x: 68.69, y: 27.97))
        text4Path.addCurve(to: CGPoint(x: 68.97, y: 26.1), controlPoint1: CGPoint(x: 68.69, y: 26.92), controlPoint2: CGPoint(x: 68.78, y: 26.46))
        text4Path.addCurve(to: CGPoint(x: 69.72, y: 25.24), controlPoint1: CGPoint(x: 69.16, y: 25.75), controlPoint2: CGPoint(x: 69.41, y: 25.46))
        text4Path.addCurve(to: CGPoint(x: 70.79, y: 24.74), controlPoint1: CGPoint(x: 70.03, y: 25.02), controlPoint2: CGPoint(x: 70.39, y: 24.85))
        text4Path.addCurve(to: CGPoint(x: 72.01, y: 24.45), controlPoint1: CGPoint(x: 71.19, y: 24.62), controlPoint2: CGPoint(x: 71.59, y: 24.53))
        text4Path.addCurve(to: CGPoint(x: 73.28, y: 24.25), controlPoint1: CGPoint(x: 72.46, y: 24.36), controlPoint2: CGPoint(x: 72.88, y: 24.3))
        text4Path.addCurve(to: CGPoint(x: 74.33, y: 24.06), controlPoint1: CGPoint(x: 73.68, y: 24.21), controlPoint2: CGPoint(x: 74.03, y: 24.14))
        text4Path.addCurve(to: CGPoint(x: 75.05, y: 23.7), controlPoint1: CGPoint(x: 74.64, y: 23.98), controlPoint2: CGPoint(x: 74.88, y: 23.86))
        text4Path.addCurve(to: CGPoint(x: 75.32, y: 23.01), controlPoint1: CGPoint(x: 75.23, y: 23.54), controlPoint2: CGPoint(x: 75.32, y: 23.31))
        text4Path.addCurve(to: CGPoint(x: 75.12, y: 22.15), controlPoint1: CGPoint(x: 75.32, y: 22.65), controlPoint2: CGPoint(x: 75.25, y: 22.37))
        text4Path.addCurve(to: CGPoint(x: 74.61, y: 21.66), controlPoint1: CGPoint(x: 74.99, y: 21.94), controlPoint2: CGPoint(x: 74.82, y: 21.77))
        text4Path.addCurve(to: CGPoint(x: 73.9, y: 21.43), controlPoint1: CGPoint(x: 74.4, y: 21.54), controlPoint2: CGPoint(x: 74.16, y: 21.47))
        text4Path.addCurve(to: CGPoint(x: 73.13, y: 21.37), controlPoint1: CGPoint(x: 73.64, y: 21.39), controlPoint2: CGPoint(x: 73.39, y: 21.37))
        text4Path.addCurve(to: CGPoint(x: 71.42, y: 21.76), controlPoint1: CGPoint(x: 72.45, y: 21.37), controlPoint2: CGPoint(x: 71.88, y: 21.5))
        text4Path.addCurve(to: CGPoint(x: 70.68, y: 23.24), controlPoint1: CGPoint(x: 70.97, y: 22.02), controlPoint2: CGPoint(x: 70.72, y: 22.51))
        text4Path.addLine(to: CGPoint(x: 69.07, y: 23.24))
        text4Path.addCurve(to: CGPoint(x: 69.45, y: 21.7), controlPoint1: CGPoint(x: 69.09, y: 22.63), controlPoint2: CGPoint(x: 69.22, y: 22.12))
        text4Path.addCurve(to: CGPoint(x: 70.36, y: 20.68), controlPoint1: CGPoint(x: 69.68, y: 21.28), controlPoint2: CGPoint(x: 69.98, y: 20.94))
        text4Path.addCurve(to: CGPoint(x: 71.66, y: 20.12), controlPoint1: CGPoint(x: 70.74, y: 20.42), controlPoint2: CGPoint(x: 71.17, y: 20.23))
        text4Path.addCurve(to: CGPoint(x: 73.23, y: 19.95), controlPoint1: CGPoint(x: 72.15, y: 20.01), controlPoint2: CGPoint(x: 72.67, y: 19.95))
        text4Path.addCurve(to: CGPoint(x: 74.55, y: 20.04), controlPoint1: CGPoint(x: 73.67, y: 19.95), controlPoint2: CGPoint(x: 74.11, y: 19.98))
        text4Path.addCurve(to: CGPoint(x: 75.74, y: 20.43), controlPoint1: CGPoint(x: 74.99, y: 20.11), controlPoint2: CGPoint(x: 75.38, y: 20.24))
        text4Path.addCurve(to: CGPoint(x: 76.59, y: 21.26), controlPoint1: CGPoint(x: 76.09, y: 20.63), controlPoint2: CGPoint(x: 76.38, y: 20.91))
        text4Path.addCurve(to: CGPoint(x: 76.91, y: 22.65), controlPoint1: CGPoint(x: 76.81, y: 21.61), controlPoint2: CGPoint(x: 76.91, y: 22.08))
        text4Path.addLine(to: CGPoint(x: 76.91, y: 27.7))
        text4Path.addCurve(to: CGPoint(x: 76.98, y: 28.54), controlPoint1: CGPoint(x: 76.91, y: 28.08), controlPoint2: CGPoint(x: 76.94, y: 28.36))
        text4Path.addCurve(to: CGPoint(x: 77.43, y: 28.8), controlPoint1: CGPoint(x: 77.03, y: 28.71), controlPoint2: CGPoint(x: 77.17, y: 28.8))
        text4Path.addCurve(to: CGPoint(x: 77.92, y: 28.71), controlPoint1: CGPoint(x: 77.57, y: 28.8), controlPoint2: CGPoint(x: 77.73, y: 28.77))
        text4Path.addLine(to: CGPoint(x: 77.92, y: 29.96))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 75.3, y: 24.93))
        text4Path.addCurve(to: CGPoint(x: 74.5, y: 25.26), controlPoint1: CGPoint(x: 75.1, y: 25.08), controlPoint2: CGPoint(x: 74.83, y: 25.19))
        text4Path.addCurve(to: CGPoint(x: 73.47, y: 25.43), controlPoint1: CGPoint(x: 74.17, y: 25.33), controlPoint2: CGPoint(x: 73.83, y: 25.39))
        text4Path.addCurve(to: CGPoint(x: 72.37, y: 25.58), controlPoint1: CGPoint(x: 73.11, y: 25.47), controlPoint2: CGPoint(x: 72.74, y: 25.53))
        text4Path.addCurve(to: CGPoint(x: 71.39, y: 25.86), controlPoint1: CGPoint(x: 72.01, y: 25.64), controlPoint2: CGPoint(x: 71.68, y: 25.73))
        text4Path.addCurve(to: CGPoint(x: 70.67, y: 26.4), controlPoint1: CGPoint(x: 71.09, y: 25.98), controlPoint2: CGPoint(x: 70.86, y: 26.17))
        text4Path.addCurve(to: CGPoint(x: 70.4, y: 27.36), controlPoint1: CGPoint(x: 70.49, y: 26.63), controlPoint2: CGPoint(x: 70.4, y: 26.95))
        text4Path.addCurve(to: CGPoint(x: 70.56, y: 28.03), controlPoint1: CGPoint(x: 70.4, y: 27.63), controlPoint2: CGPoint(x: 70.45, y: 27.85))
        text4Path.addCurve(to: CGPoint(x: 70.98, y: 28.48), controlPoint1: CGPoint(x: 70.67, y: 28.22), controlPoint2: CGPoint(x: 70.81, y: 28.37))
        text4Path.addCurve(to: CGPoint(x: 71.58, y: 28.73), controlPoint1: CGPoint(x: 71.15, y: 28.59), controlPoint2: CGPoint(x: 71.35, y: 28.68))
        text4Path.addCurve(to: CGPoint(x: 72.3, y: 28.8), controlPoint1: CGPoint(x: 71.8, y: 28.78), controlPoint2: CGPoint(x: 72.04, y: 28.8))
        text4Path.addCurve(to: CGPoint(x: 73.67, y: 28.58), controlPoint1: CGPoint(x: 72.83, y: 28.8), controlPoint2: CGPoint(x: 73.29, y: 28.73))
        text4Path.addCurve(to: CGPoint(x: 74.6, y: 28.03), controlPoint1: CGPoint(x: 74.05, y: 28.44), controlPoint2: CGPoint(x: 74.36, y: 28.26))
        text4Path.addCurve(to: CGPoint(x: 75.13, y: 27.31), controlPoint1: CGPoint(x: 74.84, y: 27.81), controlPoint2: CGPoint(x: 75.01, y: 27.57))
        text4Path.addCurve(to: CGPoint(x: 75.3, y: 26.58), controlPoint1: CGPoint(x: 75.24, y: 27.05), controlPoint2: CGPoint(x: 75.3, y: 26.81))
        text4Path.addLine(to: CGPoint(x: 75.3, y: 24.93))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 79.37, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 79.37, y: 30))
        text4Path.addLine(to: CGPoint(x: 80.98, y: 30))
        text4Path.addLine(to: CGPoint(x: 80.98, y: 25.63))
        text4Path.addCurve(to: CGPoint(x: 81.17, y: 23.95), controlPoint1: CGPoint(x: 80.98, y: 25), controlPoint2: CGPoint(x: 81.04, y: 24.44))
        text4Path.addCurve(to: CGPoint(x: 81.78, y: 22.7), controlPoint1: CGPoint(x: 81.3, y: 23.46), controlPoint2: CGPoint(x: 81.5, y: 23.05))
        text4Path.addCurve(to: CGPoint(x: 82.88, y: 21.92), controlPoint1: CGPoint(x: 82.06, y: 22.36), controlPoint2: CGPoint(x: 82.42, y: 22.1))
        text4Path.addCurve(to: CGPoint(x: 84.53, y: 21.66), controlPoint1: CGPoint(x: 83.34, y: 21.75), controlPoint2: CGPoint(x: 83.89, y: 21.66))
        text4Path.addLine(to: CGPoint(x: 84.53, y: 19.95))
        text4Path.addCurve(to: CGPoint(x: 82.37, y: 20.48), controlPoint1: CGPoint(x: 83.66, y: 19.92), controlPoint2: CGPoint(x: 82.94, y: 20.1))
        text4Path.addCurve(to: CGPoint(x: 80.92, y: 22.25), controlPoint1: CGPoint(x: 81.8, y: 20.86), controlPoint2: CGPoint(x: 81.32, y: 21.45))
        text4Path.addLine(to: CGPoint(x: 80.89, y: 22.25))
        text4Path.addLine(to: CGPoint(x: 80.89, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 79.37, y: 20.18))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 87.99, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 87.99, y: 17.23))
        text4Path.addLine(to: CGPoint(x: 86.38, y: 17.23))
        text4Path.addLine(to: CGPoint(x: 86.38, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 84.7, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 84.7, y: 21.6))
        text4Path.addLine(to: CGPoint(x: 86.38, y: 21.6))
        text4Path.addLine(to: CGPoint(x: 86.38, y: 27.85))
        text4Path.addCurve(to: CGPoint(x: 86.51, y: 28.95), controlPoint1: CGPoint(x: 86.38, y: 28.31), controlPoint2: CGPoint(x: 86.42, y: 28.68))
        text4Path.addCurve(to: CGPoint(x: 86.92, y: 29.6), controlPoint1: CGPoint(x: 86.6, y: 29.23), controlPoint2: CGPoint(x: 86.73, y: 29.45))
        text4Path.addCurve(to: CGPoint(x: 87.64, y: 29.91), controlPoint1: CGPoint(x: 87.1, y: 29.75), controlPoint2: CGPoint(x: 87.34, y: 29.86))
        text4Path.addCurve(to: CGPoint(x: 88.71, y: 30), controlPoint1: CGPoint(x: 87.94, y: 29.97), controlPoint2: CGPoint(x: 88.3, y: 30))
        text4Path.addLine(to: CGPoint(x: 89.95, y: 30))
        text4Path.addLine(to: CGPoint(x: 89.95, y: 28.57))
        text4Path.addLine(to: CGPoint(x: 89.21, y: 28.57))
        text4Path.addCurve(to: CGPoint(x: 88.59, y: 28.55), controlPoint1: CGPoint(x: 88.95, y: 28.57), controlPoint2: CGPoint(x: 88.75, y: 28.57))
        text4Path.addCurve(to: CGPoint(x: 88.22, y: 28.42), controlPoint1: CGPoint(x: 88.43, y: 28.53), controlPoint2: CGPoint(x: 88.31, y: 28.49))
        text4Path.addCurve(to: CGPoint(x: 88.04, y: 28.16), controlPoint1: CGPoint(x: 88.13, y: 28.36), controlPoint2: CGPoint(x: 88.07, y: 28.27))
        text4Path.addCurve(to: CGPoint(x: 87.99, y: 27.7), controlPoint1: CGPoint(x: 88.01, y: 28.04), controlPoint2: CGPoint(x: 87.99, y: 27.89))
        text4Path.addLine(to: CGPoint(x: 87.99, y: 21.6))
        text4Path.addLine(to: CGPoint(x: 89.95, y: 21.6))
        text4Path.addLine(to: CGPoint(x: 89.95, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 87.99, y: 20.18))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 98.56, y: 24.15))
        text4Path.addLine(to: CGPoint(x: 92.91, y: 24.15))
        text4Path.addCurve(to: CGPoint(x: 93.16, y: 23.07), controlPoint1: CGPoint(x: 92.94, y: 23.77), controlPoint2: CGPoint(x: 93.02, y: 23.41))
        text4Path.addCurve(to: CGPoint(x: 93.73, y: 22.19), controlPoint1: CGPoint(x: 93.3, y: 22.74), controlPoint2: CGPoint(x: 93.49, y: 22.44))
        text4Path.addCurve(to: CGPoint(x: 94.59, y: 21.59), controlPoint1: CGPoint(x: 93.97, y: 21.94), controlPoint2: CGPoint(x: 94.26, y: 21.74))
        text4Path.addCurve(to: CGPoint(x: 95.72, y: 21.37), controlPoint1: CGPoint(x: 94.93, y: 21.45), controlPoint2: CGPoint(x: 95.31, y: 21.37))
        text4Path.addCurve(to: CGPoint(x: 96.84, y: 21.59), controlPoint1: CGPoint(x: 96.13, y: 21.37), controlPoint2: CGPoint(x: 96.5, y: 21.45))
        text4Path.addCurve(to: CGPoint(x: 97.71, y: 22.18), controlPoint1: CGPoint(x: 97.17, y: 21.74), controlPoint2: CGPoint(x: 97.46, y: 21.93))
        text4Path.addCurve(to: CGPoint(x: 98.3, y: 23.06), controlPoint1: CGPoint(x: 97.96, y: 22.43), controlPoint2: CGPoint(x: 98.15, y: 22.72))
        text4Path.addCurve(to: CGPoint(x: 98.56, y: 24.15), controlPoint1: CGPoint(x: 98.45, y: 23.41), controlPoint2: CGPoint(x: 98.53, y: 23.77))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 100.11, y: 26.88))
        text4Path.addLine(to: CGPoint(x: 98.52, y: 26.88))
        text4Path.addCurve(to: CGPoint(x: 97.65, y: 28.33), controlPoint1: CGPoint(x: 98.38, y: 27.53), controlPoint2: CGPoint(x: 98.09, y: 28.01))
        text4Path.addCurve(to: CGPoint(x: 95.97, y: 28.8), controlPoint1: CGPoint(x: 97.22, y: 28.64), controlPoint2: CGPoint(x: 96.66, y: 28.8))
        text4Path.addCurve(to: CGPoint(x: 94.58, y: 28.54), controlPoint1: CGPoint(x: 95.44, y: 28.8), controlPoint2: CGPoint(x: 94.98, y: 28.71))
        text4Path.addCurve(to: CGPoint(x: 93.62, y: 27.82), controlPoint1: CGPoint(x: 94.19, y: 28.36), controlPoint2: CGPoint(x: 93.87, y: 28.12))
        text4Path.addCurve(to: CGPoint(x: 93.06, y: 26.8), controlPoint1: CGPoint(x: 93.36, y: 27.53), controlPoint2: CGPoint(x: 93.18, y: 27.18))
        text4Path.addCurve(to: CGPoint(x: 92.91, y: 25.57), controlPoint1: CGPoint(x: 92.95, y: 26.41), controlPoint2: CGPoint(x: 92.9, y: 26))
        text4Path.addLine(to: CGPoint(x: 100.27, y: 25.57))
        text4Path.addCurve(to: CGPoint(x: 100.1, y: 23.69), controlPoint1: CGPoint(x: 100.29, y: 24.98), controlPoint2: CGPoint(x: 100.24, y: 24.35))
        text4Path.addCurve(to: CGPoint(x: 99.38, y: 21.87), controlPoint1: CGPoint(x: 99.97, y: 23.03), controlPoint2: CGPoint(x: 99.73, y: 22.43))
        text4Path.addCurve(to: CGPoint(x: 98, y: 20.49), controlPoint1: CGPoint(x: 99.03, y: 21.31), controlPoint2: CGPoint(x: 98.57, y: 20.85))
        text4Path.addCurve(to: CGPoint(x: 95.82, y: 19.95), controlPoint1: CGPoint(x: 97.42, y: 20.13), controlPoint2: CGPoint(x: 96.69, y: 19.95))
        text4Path.addCurve(to: CGPoint(x: 93.97, y: 20.33), controlPoint1: CGPoint(x: 95.15, y: 19.95), controlPoint2: CGPoint(x: 94.53, y: 20.08))
        text4Path.addCurve(to: CGPoint(x: 92.5, y: 21.39), controlPoint1: CGPoint(x: 93.4, y: 20.58), controlPoint2: CGPoint(x: 92.92, y: 20.94))
        text4Path.addCurve(to: CGPoint(x: 91.54, y: 23.01), controlPoint1: CGPoint(x: 92.09, y: 21.85), controlPoint2: CGPoint(x: 91.77, y: 22.39))
        text4Path.addCurve(to: CGPoint(x: 91.2, y: 25.06), controlPoint1: CGPoint(x: 91.32, y: 23.63), controlPoint2: CGPoint(x: 91.2, y: 24.31))
        text4Path.addCurve(to: CGPoint(x: 91.54, y: 27.13), controlPoint1: CGPoint(x: 91.23, y: 25.81), controlPoint2: CGPoint(x: 91.34, y: 26.5))
        text4Path.addCurve(to: CGPoint(x: 92.42, y: 28.76), controlPoint1: CGPoint(x: 91.73, y: 27.76), controlPoint2: CGPoint(x: 92.03, y: 28.31))
        text4Path.addCurve(to: CGPoint(x: 93.87, y: 29.83), controlPoint1: CGPoint(x: 92.81, y: 29.22), controlPoint2: CGPoint(x: 93.3, y: 29.58))
        text4Path.addCurve(to: CGPoint(x: 95.91, y: 30.21), controlPoint1: CGPoint(x: 94.45, y: 30.08), controlPoint2: CGPoint(x: 95.13, y: 30.21))
        text4Path.addCurve(to: CGPoint(x: 98.69, y: 29.37), controlPoint1: CGPoint(x: 97.03, y: 30.21), controlPoint2: CGPoint(x: 97.95, y: 29.93))
        text4Path.addCurve(to: CGPoint(x: 100.11, y: 26.88), controlPoint1: CGPoint(x: 99.42, y: 28.82), controlPoint2: CGPoint(x: 99.9, y: 27.99))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 101.88, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 101.88, y: 30))
        text4Path.addLine(to: CGPoint(x: 103.5, y: 30))
        text4Path.addLine(to: CGPoint(x: 103.5, y: 25.63))
        text4Path.addCurve(to: CGPoint(x: 103.69, y: 23.95), controlPoint1: CGPoint(x: 103.5, y: 25), controlPoint2: CGPoint(x: 103.56, y: 24.44))
        text4Path.addCurve(to: CGPoint(x: 104.29, y: 22.7), controlPoint1: CGPoint(x: 103.81, y: 23.46), controlPoint2: CGPoint(x: 104.02, y: 23.05))
        text4Path.addCurve(to: CGPoint(x: 105.4, y: 21.92), controlPoint1: CGPoint(x: 104.57, y: 22.36), controlPoint2: CGPoint(x: 104.94, y: 22.1))
        text4Path.addCurve(to: CGPoint(x: 107.05, y: 21.66), controlPoint1: CGPoint(x: 105.85, y: 21.75), controlPoint2: CGPoint(x: 106.4, y: 21.66))
        text4Path.addLine(to: CGPoint(x: 107.05, y: 19.95))
        text4Path.addCurve(to: CGPoint(x: 104.88, y: 20.48), controlPoint1: CGPoint(x: 106.17, y: 19.92), controlPoint2: CGPoint(x: 105.45, y: 20.1))
        text4Path.addCurve(to: CGPoint(x: 103.44, y: 22.25), controlPoint1: CGPoint(x: 104.31, y: 20.86), controlPoint2: CGPoint(x: 103.83, y: 21.45))
        text4Path.addLine(to: CGPoint(x: 103.4, y: 22.25))
        text4Path.addLine(to: CGPoint(x: 103.4, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 101.88, y: 20.18))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 108.36, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 108.36, y: 30))
        text4Path.addLine(to: CGPoint(x: 109.97, y: 30))
        text4Path.addLine(to: CGPoint(x: 109.97, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 108.36, y: 16.43))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 116.34, y: 31.31))
        text4Path.addCurve(to: CGPoint(x: 115.78, y: 32.53), controlPoint1: CGPoint(x: 116.15, y: 31.79), controlPoint2: CGPoint(x: 115.96, y: 32.2))
        text4Path.addCurve(to: CGPoint(x: 115.17, y: 33.33), controlPoint1: CGPoint(x: 115.6, y: 32.86), controlPoint2: CGPoint(x: 115.39, y: 33.13))
        text4Path.addCurve(to: CGPoint(x: 114.43, y: 33.79), controlPoint1: CGPoint(x: 114.95, y: 33.54), controlPoint2: CGPoint(x: 114.7, y: 33.7))
        text4Path.addCurve(to: CGPoint(x: 113.49, y: 33.93), controlPoint1: CGPoint(x: 114.16, y: 33.89), controlPoint2: CGPoint(x: 113.84, y: 33.93))
        text4Path.addCurve(to: CGPoint(x: 112.92, y: 33.89), controlPoint1: CGPoint(x: 113.3, y: 33.93), controlPoint2: CGPoint(x: 113.11, y: 33.92))
        text4Path.addCurve(to: CGPoint(x: 112.37, y: 33.76), controlPoint1: CGPoint(x: 112.73, y: 33.87), controlPoint2: CGPoint(x: 112.55, y: 33.83))
        text4Path.addLine(to: CGPoint(x: 112.37, y: 32.28))
        text4Path.addCurve(to: CGPoint(x: 112.85, y: 32.44), controlPoint1: CGPoint(x: 112.51, y: 32.34), controlPoint2: CGPoint(x: 112.67, y: 32.4))
        text4Path.addCurve(to: CGPoint(x: 113.32, y: 32.51), controlPoint1: CGPoint(x: 113.04, y: 32.49), controlPoint2: CGPoint(x: 113.19, y: 32.51))
        text4Path.addCurve(to: CGPoint(x: 114.15, y: 32.27), controlPoint1: CGPoint(x: 113.65, y: 32.51), controlPoint2: CGPoint(x: 113.92, y: 32.43))
        text4Path.addCurve(to: CGPoint(x: 114.65, y: 31.6), controlPoint1: CGPoint(x: 114.37, y: 32.11), controlPoint2: CGPoint(x: 114.53, y: 31.89))
        text4Path.addLine(to: CGPoint(x: 115.31, y: 29.94))
        text4Path.addLine(to: CGPoint(x: 111.42, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 113.24, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 116.11, y: 28.21))
        text4Path.addLine(to: CGPoint(x: 116.15, y: 28.21))
        text4Path.addLine(to: CGPoint(x: 118.91, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 120.62, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 116.34, y: 31.31))
        text4Path.close()
        UIColor.white.setFill()
        text4Path.fill()


        //// Text Drawing
        let textPath = UIBezierPath()
        textPath.move(to: CGPoint(x: 29.24, y: 123.41))
        textPath.addLine(to: CGPoint(x: 30.95, y: 123.41))
        textPath.addCurve(to: CGPoint(x: 30.53, y: 121.48), controlPoint1: CGPoint(x: 30.93, y: 122.66), controlPoint2: CGPoint(x: 30.79, y: 122.01))
        textPath.addCurve(to: CGPoint(x: 29.46, y: 120.14), controlPoint1: CGPoint(x: 30.27, y: 120.94), controlPoint2: CGPoint(x: 29.91, y: 120.49))
        textPath.addCurve(to: CGPoint(x: 27.9, y: 119.36), controlPoint1: CGPoint(x: 29.01, y: 119.78), controlPoint2: CGPoint(x: 28.49, y: 119.52))
        textPath.addCurve(to: CGPoint(x: 25.96, y: 119.11), controlPoint1: CGPoint(x: 27.3, y: 119.19), controlPoint2: CGPoint(x: 26.65, y: 119.11))
        textPath.addCurve(to: CGPoint(x: 24.14, y: 119.35), controlPoint1: CGPoint(x: 25.34, y: 119.11), controlPoint2: CGPoint(x: 24.73, y: 119.19))
        textPath.addCurve(to: CGPoint(x: 22.57, y: 120.07), controlPoint1: CGPoint(x: 23.55, y: 119.51), controlPoint2: CGPoint(x: 23.03, y: 119.75))
        textPath.addCurve(to: CGPoint(x: 21.45, y: 121.31), controlPoint1: CGPoint(x: 22.1, y: 120.39), controlPoint2: CGPoint(x: 21.73, y: 120.81))
        textPath.addCurve(to: CGPoint(x: 21.04, y: 123.08), controlPoint1: CGPoint(x: 21.18, y: 121.81), controlPoint2: CGPoint(x: 21.04, y: 122.4))
        textPath.addCurve(to: CGPoint(x: 21.41, y: 124.63), controlPoint1: CGPoint(x: 21.04, y: 123.7), controlPoint2: CGPoint(x: 21.16, y: 124.22))
        textPath.addCurve(to: CGPoint(x: 22.39, y: 125.64), controlPoint1: CGPoint(x: 21.65, y: 125.04), controlPoint2: CGPoint(x: 21.98, y: 125.38))
        textPath.addCurve(to: CGPoint(x: 23.79, y: 126.26), controlPoint1: CGPoint(x: 22.81, y: 125.9), controlPoint2: CGPoint(x: 23.27, y: 126.11))
        textPath.addCurve(to: CGPoint(x: 25.38, y: 126.68), controlPoint1: CGPoint(x: 24.31, y: 126.42), controlPoint2: CGPoint(x: 24.84, y: 126.56))
        textPath.addCurve(to: CGPoint(x: 26.96, y: 127.03), controlPoint1: CGPoint(x: 25.92, y: 126.8), controlPoint2: CGPoint(x: 26.45, y: 126.92))
        textPath.addCurve(to: CGPoint(x: 28.36, y: 127.48), controlPoint1: CGPoint(x: 27.48, y: 127.15), controlPoint2: CGPoint(x: 27.95, y: 127.3))
        textPath.addCurve(to: CGPoint(x: 29.35, y: 128.19), controlPoint1: CGPoint(x: 28.77, y: 127.66), controlPoint2: CGPoint(x: 29.1, y: 127.9))
        textPath.addCurve(to: CGPoint(x: 29.72, y: 129.33), controlPoint1: CGPoint(x: 29.6, y: 128.48), controlPoint2: CGPoint(x: 29.72, y: 128.86))
        textPath.addCurve(to: CGPoint(x: 29.42, y: 130.55), controlPoint1: CGPoint(x: 29.72, y: 129.83), controlPoint2: CGPoint(x: 29.62, y: 130.23))
        textPath.addCurve(to: CGPoint(x: 28.62, y: 131.3), controlPoint1: CGPoint(x: 29.21, y: 130.87), controlPoint2: CGPoint(x: 28.95, y: 131.12))
        textPath.addCurve(to: CGPoint(x: 27.51, y: 131.69), controlPoint1: CGPoint(x: 28.29, y: 131.48), controlPoint2: CGPoint(x: 27.92, y: 131.61))
        textPath.addCurve(to: CGPoint(x: 26.28, y: 131.8), controlPoint1: CGPoint(x: 27.09, y: 131.77), controlPoint2: CGPoint(x: 26.69, y: 131.8))
        textPath.addCurve(to: CGPoint(x: 24.8, y: 131.61), controlPoint1: CGPoint(x: 25.77, y: 131.8), controlPoint2: CGPoint(x: 25.28, y: 131.74))
        textPath.addCurve(to: CGPoint(x: 23.53, y: 131.02), controlPoint1: CGPoint(x: 24.32, y: 131.49), controlPoint2: CGPoint(x: 23.9, y: 131.29))
        textPath.addCurve(to: CGPoint(x: 22.66, y: 130.01), controlPoint1: CGPoint(x: 23.17, y: 130.76), controlPoint2: CGPoint(x: 22.88, y: 130.42))
        textPath.addCurve(to: CGPoint(x: 22.33, y: 128.53), controlPoint1: CGPoint(x: 22.44, y: 129.6), controlPoint2: CGPoint(x: 22.33, y: 129.11))
        textPath.addLine(to: CGPoint(x: 20.62, y: 128.53))
        textPath.addCurve(to: CGPoint(x: 21.06, y: 130.67), controlPoint1: CGPoint(x: 20.62, y: 129.36), controlPoint2: CGPoint(x: 20.77, y: 130.07))
        textPath.addCurve(to: CGPoint(x: 22.28, y: 132.15), controlPoint1: CGPoint(x: 21.36, y: 131.27), controlPoint2: CGPoint(x: 21.77, y: 131.77))
        textPath.addCurve(to: CGPoint(x: 24.07, y: 133.02), controlPoint1: CGPoint(x: 22.79, y: 132.54), controlPoint2: CGPoint(x: 23.39, y: 132.83))
        textPath.addCurve(to: CGPoint(x: 26.22, y: 133.3), controlPoint1: CGPoint(x: 24.74, y: 133.21), controlPoint2: CGPoint(x: 25.46, y: 133.3))
        textPath.addCurve(to: CGPoint(x: 28.09, y: 133.09), controlPoint1: CGPoint(x: 26.84, y: 133.3), controlPoint2: CGPoint(x: 27.47, y: 133.23))
        textPath.addCurve(to: CGPoint(x: 29.8, y: 132.38), controlPoint1: CGPoint(x: 28.72, y: 132.94), controlPoint2: CGPoint(x: 29.29, y: 132.71))
        textPath.addCurve(to: CGPoint(x: 31.04, y: 131.13), controlPoint1: CGPoint(x: 30.3, y: 132.06), controlPoint2: CGPoint(x: 30.72, y: 131.64))
        textPath.addCurve(to: CGPoint(x: 31.52, y: 129.28), controlPoint1: CGPoint(x: 31.36, y: 130.62), controlPoint2: CGPoint(x: 31.52, y: 130))
        textPath.addCurve(to: CGPoint(x: 31.15, y: 127.6), controlPoint1: CGPoint(x: 31.52, y: 128.6), controlPoint2: CGPoint(x: 31.4, y: 128.05))
        textPath.addCurve(to: CGPoint(x: 30.17, y: 126.5), controlPoint1: CGPoint(x: 30.91, y: 127.16), controlPoint2: CGPoint(x: 30.58, y: 126.79))
        textPath.addCurve(to: CGPoint(x: 28.77, y: 125.81), controlPoint1: CGPoint(x: 29.75, y: 126.21), controlPoint2: CGPoint(x: 29.29, y: 125.98))
        textPath.addCurve(to: CGPoint(x: 27.18, y: 125.36), controlPoint1: CGPoint(x: 28.25, y: 125.64), controlPoint2: CGPoint(x: 27.72, y: 125.49))
        textPath.addCurve(to: CGPoint(x: 25.6, y: 125.01), controlPoint1: CGPoint(x: 26.64, y: 125.24), controlPoint2: CGPoint(x: 26.12, y: 125.12))
        textPath.addCurve(to: CGPoint(x: 24.2, y: 124.6), controlPoint1: CGPoint(x: 25.08, y: 124.9), controlPoint2: CGPoint(x: 24.61, y: 124.77))
        textPath.addCurve(to: CGPoint(x: 23.21, y: 123.97), controlPoint1: CGPoint(x: 23.79, y: 124.44), controlPoint2: CGPoint(x: 23.46, y: 124.23))
        textPath.addCurve(to: CGPoint(x: 22.84, y: 122.95), controlPoint1: CGPoint(x: 22.96, y: 123.71), controlPoint2: CGPoint(x: 22.84, y: 123.37))
        textPath.addCurve(to: CGPoint(x: 23.1, y: 121.84), controlPoint1: CGPoint(x: 22.84, y: 122.51), controlPoint2: CGPoint(x: 22.93, y: 122.14))
        textPath.addCurve(to: CGPoint(x: 23.78, y: 121.12), controlPoint1: CGPoint(x: 23.27, y: 121.54), controlPoint2: CGPoint(x: 23.5, y: 121.3))
        textPath.addCurve(to: CGPoint(x: 24.76, y: 120.75), controlPoint1: CGPoint(x: 24.07, y: 120.95), controlPoint2: CGPoint(x: 24.39, y: 120.82))
        textPath.addCurve(to: CGPoint(x: 25.88, y: 120.63), controlPoint1: CGPoint(x: 25.13, y: 120.67), controlPoint2: CGPoint(x: 25.5, y: 120.63))
        textPath.addCurve(to: CGPoint(x: 28.19, y: 121.29), controlPoint1: CGPoint(x: 26.82, y: 120.63), controlPoint2: CGPoint(x: 27.59, y: 120.85))
        textPath.addCurve(to: CGPoint(x: 29.24, y: 123.41), controlPoint1: CGPoint(x: 28.79, y: 121.72), controlPoint2: CGPoint(x: 29.14, y: 122.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 41.58, y: 133))
        textPath.addLine(to: CGPoint(x: 41.58, y: 123.18))
        textPath.addLine(to: CGPoint(x: 39.96, y: 123.18))
        textPath.addLine(to: CGPoint(x: 39.96, y: 128.72))
        textPath.addCurve(to: CGPoint(x: 39.78, y: 129.95), controlPoint1: CGPoint(x: 39.96, y: 129.17), controlPoint2: CGPoint(x: 39.9, y: 129.58))
        textPath.addCurve(to: CGPoint(x: 39.24, y: 130.93), controlPoint1: CGPoint(x: 39.66, y: 130.32), controlPoint2: CGPoint(x: 39.48, y: 130.65))
        textPath.addCurve(to: CGPoint(x: 38.34, y: 131.57), controlPoint1: CGPoint(x: 39, y: 131.21), controlPoint2: CGPoint(x: 38.7, y: 131.42))
        textPath.addCurve(to: CGPoint(x: 37.05, y: 131.8), controlPoint1: CGPoint(x: 37.97, y: 131.73), controlPoint2: CGPoint(x: 37.55, y: 131.8))
        textPath.addCurve(to: CGPoint(x: 35.59, y: 131.27), controlPoint1: CGPoint(x: 36.43, y: 131.8), controlPoint2: CGPoint(x: 35.95, y: 131.63))
        textPath.addCurve(to: CGPoint(x: 35.06, y: 129.83), controlPoint1: CGPoint(x: 35.24, y: 130.92), controlPoint2: CGPoint(x: 35.06, y: 130.44))
        textPath.addLine(to: CGPoint(x: 35.06, y: 123.18))
        textPath.addLine(to: CGPoint(x: 33.44, y: 123.18))
        textPath.addLine(to: CGPoint(x: 33.44, y: 129.64))
        textPath.addCurve(to: CGPoint(x: 33.6, y: 131.09), controlPoint1: CGPoint(x: 33.44, y: 130.17), controlPoint2: CGPoint(x: 33.5, y: 130.65))
        textPath.addCurve(to: CGPoint(x: 34.17, y: 132.22), controlPoint1: CGPoint(x: 33.71, y: 131.53), controlPoint2: CGPoint(x: 33.9, y: 131.9))
        textPath.addCurve(to: CGPoint(x: 35.21, y: 132.95), controlPoint1: CGPoint(x: 34.43, y: 132.54), controlPoint2: CGPoint(x: 34.78, y: 132.78))
        textPath.addCurve(to: CGPoint(x: 36.83, y: 133.21), controlPoint1: CGPoint(x: 35.64, y: 133.12), controlPoint2: CGPoint(x: 36.18, y: 133.21))
        textPath.addCurve(to: CGPoint(x: 38.71, y: 132.78), controlPoint1: CGPoint(x: 37.55, y: 133.21), controlPoint2: CGPoint(x: 38.17, y: 133.07))
        textPath.addCurve(to: CGPoint(x: 40.02, y: 131.44), controlPoint1: CGPoint(x: 39.24, y: 132.5), controlPoint2: CGPoint(x: 39.68, y: 132.05))
        textPath.addLine(to: CGPoint(x: 40.06, y: 131.44))
        textPath.addLine(to: CGPoint(x: 40.06, y: 133))
        textPath.addLine(to: CGPoint(x: 41.58, y: 133))
        textPath.close()
        textPath.move(to: CGPoint(x: 44.06, y: 119.43))
        textPath.addLine(to: CGPoint(x: 44.06, y: 133))
        textPath.addLine(to: CGPoint(x: 45.68, y: 133))
        textPath.addLine(to: CGPoint(x: 45.68, y: 131.69))
        textPath.addLine(to: CGPoint(x: 45.72, y: 131.69))
        textPath.addCurve(to: CGPoint(x: 46.37, y: 132.42), controlPoint1: CGPoint(x: 45.89, y: 131.98), controlPoint2: CGPoint(x: 46.11, y: 132.22))
        textPath.addCurve(to: CGPoint(x: 47.2, y: 132.89), controlPoint1: CGPoint(x: 46.63, y: 132.62), controlPoint2: CGPoint(x: 46.91, y: 132.77))
        textPath.addCurve(to: CGPoint(x: 48.08, y: 133.13), controlPoint1: CGPoint(x: 47.49, y: 133), controlPoint2: CGPoint(x: 47.79, y: 133.08))
        textPath.addCurve(to: CGPoint(x: 48.89, y: 133.21), controlPoint1: CGPoint(x: 48.38, y: 133.18), controlPoint2: CGPoint(x: 48.65, y: 133.21))
        textPath.addCurve(to: CGPoint(x: 50.86, y: 132.81), controlPoint1: CGPoint(x: 49.64, y: 133.21), controlPoint2: CGPoint(x: 50.29, y: 133.08))
        textPath.addCurve(to: CGPoint(x: 52.26, y: 131.72), controlPoint1: CGPoint(x: 51.42, y: 132.54), controlPoint2: CGPoint(x: 51.89, y: 132.18))
        textPath.addCurve(to: CGPoint(x: 53.1, y: 130.09), controlPoint1: CGPoint(x: 52.64, y: 131.26), controlPoint2: CGPoint(x: 52.92, y: 130.71))
        textPath.addCurve(to: CGPoint(x: 53.37, y: 128.12), controlPoint1: CGPoint(x: 53.28, y: 129.47), controlPoint2: CGPoint(x: 53.37, y: 128.81))
        textPath.addCurve(to: CGPoint(x: 53.09, y: 126.14), controlPoint1: CGPoint(x: 53.37, y: 127.42), controlPoint2: CGPoint(x: 53.28, y: 126.76))
        textPath.addCurve(to: CGPoint(x: 52.24, y: 124.5), controlPoint1: CGPoint(x: 52.9, y: 125.52), controlPoint2: CGPoint(x: 52.62, y: 124.97))
        textPath.addCurve(to: CGPoint(x: 50.84, y: 123.37), controlPoint1: CGPoint(x: 51.87, y: 124.02), controlPoint2: CGPoint(x: 51.4, y: 123.65))
        textPath.addCurve(to: CGPoint(x: 48.85, y: 122.95), controlPoint1: CGPoint(x: 50.27, y: 123.09), controlPoint2: CGPoint(x: 49.61, y: 122.95))
        textPath.addCurve(to: CGPoint(x: 46.97, y: 123.32), controlPoint1: CGPoint(x: 48.17, y: 122.95), controlPoint2: CGPoint(x: 47.54, y: 123.07))
        textPath.addCurve(to: CGPoint(x: 45.72, y: 124.51), controlPoint1: CGPoint(x: 46.4, y: 123.57), controlPoint2: CGPoint(x: 45.98, y: 123.96))
        textPath.addLine(to: CGPoint(x: 45.68, y: 124.51))
        textPath.addLine(to: CGPoint(x: 45.68, y: 119.43))
        textPath.addLine(to: CGPoint(x: 44.06, y: 119.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 51.66, y: 128))
        textPath.addCurve(to: CGPoint(x: 51.51, y: 129.41), controlPoint1: CGPoint(x: 51.66, y: 128.48), controlPoint2: CGPoint(x: 51.61, y: 128.95))
        textPath.addCurve(to: CGPoint(x: 51.02, y: 130.62), controlPoint1: CGPoint(x: 51.41, y: 129.87), controlPoint2: CGPoint(x: 51.25, y: 130.27))
        textPath.addCurve(to: CGPoint(x: 50.12, y: 131.48), controlPoint1: CGPoint(x: 50.79, y: 130.98), controlPoint2: CGPoint(x: 50.49, y: 131.26))
        textPath.addCurve(to: CGPoint(x: 48.72, y: 131.8), controlPoint1: CGPoint(x: 49.74, y: 131.7), controlPoint2: CGPoint(x: 49.28, y: 131.8))
        textPath.addCurve(to: CGPoint(x: 47.29, y: 131.49), controlPoint1: CGPoint(x: 48.16, y: 131.8), controlPoint2: CGPoint(x: 47.69, y: 131.7))
        textPath.addCurve(to: CGPoint(x: 46.33, y: 130.66), controlPoint1: CGPoint(x: 46.9, y: 131.28), controlPoint2: CGPoint(x: 46.58, y: 131.01))
        textPath.addCurve(to: CGPoint(x: 45.79, y: 129.48), controlPoint1: CGPoint(x: 46.09, y: 130.32), controlPoint2: CGPoint(x: 45.91, y: 129.93))
        textPath.addCurve(to: CGPoint(x: 45.62, y: 128.08), controlPoint1: CGPoint(x: 45.68, y: 129.03), controlPoint2: CGPoint(x: 45.62, y: 128.56))
        textPath.addCurve(to: CGPoint(x: 45.78, y: 126.73), controlPoint1: CGPoint(x: 45.62, y: 127.62), controlPoint2: CGPoint(x: 45.68, y: 127.17))
        textPath.addCurve(to: CGPoint(x: 46.31, y: 125.54), controlPoint1: CGPoint(x: 45.89, y: 126.29), controlPoint2: CGPoint(x: 46.07, y: 125.89))
        textPath.addCurve(to: CGPoint(x: 47.24, y: 124.7), controlPoint1: CGPoint(x: 46.55, y: 125.19), controlPoint2: CGPoint(x: 46.86, y: 124.91))
        textPath.addCurve(to: CGPoint(x: 48.62, y: 124.37), controlPoint1: CGPoint(x: 47.62, y: 124.48), controlPoint2: CGPoint(x: 48.08, y: 124.37))
        textPath.addCurve(to: CGPoint(x: 49.98, y: 124.68), controlPoint1: CGPoint(x: 49.14, y: 124.37), controlPoint2: CGPoint(x: 49.6, y: 124.48))
        textPath.addCurve(to: CGPoint(x: 50.93, y: 125.5), controlPoint1: CGPoint(x: 50.37, y: 124.88), controlPoint2: CGPoint(x: 50.69, y: 125.15))
        textPath.addCurve(to: CGPoint(x: 51.48, y: 126.66), controlPoint1: CGPoint(x: 51.18, y: 125.84), controlPoint2: CGPoint(x: 51.36, y: 126.23))
        textPath.addCurve(to: CGPoint(x: 51.66, y: 128), controlPoint1: CGPoint(x: 51.6, y: 127.1), controlPoint2: CGPoint(x: 51.66, y: 127.55))
        textPath.close()
        textPath.move(to: CGPoint(x: 56.26, y: 129.9))
        textPath.addLine(to: CGPoint(x: 54.65, y: 129.9))
        textPath.addCurve(to: CGPoint(x: 55.03, y: 131.45), controlPoint1: CGPoint(x: 54.67, y: 130.51), controlPoint2: CGPoint(x: 54.8, y: 131.03))
        textPath.addCurve(to: CGPoint(x: 55.94, y: 132.48), controlPoint1: CGPoint(x: 55.26, y: 131.88), controlPoint2: CGPoint(x: 55.56, y: 132.22))
        textPath.addCurve(to: CGPoint(x: 57.25, y: 133.04), controlPoint1: CGPoint(x: 56.32, y: 132.74), controlPoint2: CGPoint(x: 56.76, y: 132.92))
        textPath.addCurve(to: CGPoint(x: 58.81, y: 133.21), controlPoint1: CGPoint(x: 57.74, y: 133.15), controlPoint2: CGPoint(x: 58.26, y: 133.21))
        textPath.addCurve(to: CGPoint(x: 60.3, y: 133.07), controlPoint1: CGPoint(x: 59.3, y: 133.21), controlPoint2: CGPoint(x: 59.8, y: 133.16))
        textPath.addCurve(to: CGPoint(x: 61.65, y: 132.56), controlPoint1: CGPoint(x: 60.8, y: 132.97), controlPoint2: CGPoint(x: 61.25, y: 132.8))
        textPath.addCurve(to: CGPoint(x: 62.62, y: 131.61), controlPoint1: CGPoint(x: 62.05, y: 132.32), controlPoint2: CGPoint(x: 62.37, y: 132.01))
        textPath.addCurve(to: CGPoint(x: 62.99, y: 130.13), controlPoint1: CGPoint(x: 62.87, y: 131.22), controlPoint2: CGPoint(x: 62.99, y: 130.73))
        textPath.addCurve(to: CGPoint(x: 62.71, y: 128.95), controlPoint1: CGPoint(x: 62.99, y: 129.66), controlPoint2: CGPoint(x: 62.9, y: 129.27))
        textPath.addCurve(to: CGPoint(x: 61.99, y: 128.16), controlPoint1: CGPoint(x: 62.53, y: 128.64), controlPoint2: CGPoint(x: 62.29, y: 128.37))
        textPath.addCurve(to: CGPoint(x: 60.97, y: 127.66), controlPoint1: CGPoint(x: 61.69, y: 127.96), controlPoint2: CGPoint(x: 61.35, y: 127.79))
        textPath.addCurve(to: CGPoint(x: 59.78, y: 127.34), controlPoint1: CGPoint(x: 60.58, y: 127.53), controlPoint2: CGPoint(x: 60.18, y: 127.43))
        textPath.addCurve(to: CGPoint(x: 58.64, y: 127.08), controlPoint1: CGPoint(x: 59.4, y: 127.25), controlPoint2: CGPoint(x: 59.02, y: 127.16))
        textPath.addCurve(to: CGPoint(x: 57.61, y: 126.78), controlPoint1: CGPoint(x: 58.26, y: 127), controlPoint2: CGPoint(x: 57.92, y: 126.9))
        textPath.addCurve(to: CGPoint(x: 56.86, y: 126.32), controlPoint1: CGPoint(x: 57.31, y: 126.66), controlPoint2: CGPoint(x: 57.06, y: 126.51))
        textPath.addCurve(to: CGPoint(x: 56.57, y: 125.63), controlPoint1: CGPoint(x: 56.66, y: 126.14), controlPoint2: CGPoint(x: 56.57, y: 125.91))
        textPath.addCurve(to: CGPoint(x: 56.76, y: 125.01), controlPoint1: CGPoint(x: 56.57, y: 125.37), controlPoint2: CGPoint(x: 56.63, y: 125.17))
        textPath.addCurve(to: CGPoint(x: 57.25, y: 124.63), controlPoint1: CGPoint(x: 56.88, y: 124.85), controlPoint2: CGPoint(x: 57.05, y: 124.73))
        textPath.addCurve(to: CGPoint(x: 57.92, y: 124.43), controlPoint1: CGPoint(x: 57.45, y: 124.54), controlPoint2: CGPoint(x: 57.68, y: 124.47))
        textPath.addCurve(to: CGPoint(x: 58.66, y: 124.37), controlPoint1: CGPoint(x: 58.17, y: 124.39), controlPoint2: CGPoint(x: 58.42, y: 124.37))
        textPath.addCurve(to: CGPoint(x: 59.44, y: 124.46), controlPoint1: CGPoint(x: 58.92, y: 124.37), controlPoint2: CGPoint(x: 59.19, y: 124.4))
        textPath.addCurve(to: CGPoint(x: 60.16, y: 124.74), controlPoint1: CGPoint(x: 59.7, y: 124.52), controlPoint2: CGPoint(x: 59.94, y: 124.61))
        textPath.addCurve(to: CGPoint(x: 60.69, y: 125.24), controlPoint1: CGPoint(x: 60.37, y: 124.86), controlPoint2: CGPoint(x: 60.55, y: 125.03))
        textPath.addCurve(to: CGPoint(x: 60.94, y: 126.03), controlPoint1: CGPoint(x: 60.83, y: 125.45), controlPoint2: CGPoint(x: 60.91, y: 125.71))
        textPath.addLine(to: CGPoint(x: 62.55, y: 126.03))
        textPath.addCurve(to: CGPoint(x: 62.17, y: 124.54), controlPoint1: CGPoint(x: 62.51, y: 125.43), controlPoint2: CGPoint(x: 62.39, y: 124.93))
        textPath.addCurve(to: CGPoint(x: 61.31, y: 123.59), controlPoint1: CGPoint(x: 61.96, y: 124.14), controlPoint2: CGPoint(x: 61.67, y: 123.82))
        textPath.addCurve(to: CGPoint(x: 60.06, y: 123.09), controlPoint1: CGPoint(x: 60.95, y: 123.35), controlPoint2: CGPoint(x: 60.53, y: 123.19))
        textPath.addCurve(to: CGPoint(x: 58.52, y: 122.95), controlPoint1: CGPoint(x: 59.59, y: 123), controlPoint2: CGPoint(x: 59.08, y: 122.95))
        textPath.addCurve(to: CGPoint(x: 57.22, y: 123.11), controlPoint1: CGPoint(x: 58.09, y: 122.95), controlPoint2: CGPoint(x: 57.66, y: 123))
        textPath.addCurve(to: CGPoint(x: 56.04, y: 123.6), controlPoint1: CGPoint(x: 56.78, y: 123.22), controlPoint2: CGPoint(x: 56.39, y: 123.38))
        textPath.addCurve(to: CGPoint(x: 55.19, y: 124.47), controlPoint1: CGPoint(x: 55.7, y: 123.83), controlPoint2: CGPoint(x: 55.41, y: 124.11))
        textPath.addCurve(to: CGPoint(x: 54.86, y: 125.74), controlPoint1: CGPoint(x: 54.97, y: 124.82), controlPoint2: CGPoint(x: 54.86, y: 125.25))
        textPath.addCurve(to: CGPoint(x: 55.33, y: 127.22), controlPoint1: CGPoint(x: 54.86, y: 126.38), controlPoint2: CGPoint(x: 55.01, y: 126.87))
        textPath.addCurve(to: CGPoint(x: 56.52, y: 128.05), controlPoint1: CGPoint(x: 55.65, y: 127.58), controlPoint2: CGPoint(x: 56.04, y: 127.85))
        textPath.addCurve(to: CGPoint(x: 58.07, y: 128.51), controlPoint1: CGPoint(x: 56.99, y: 128.25), controlPoint2: CGPoint(x: 57.51, y: 128.4))
        textPath.addCurve(to: CGPoint(x: 59.62, y: 128.87), controlPoint1: CGPoint(x: 58.62, y: 128.61), controlPoint2: CGPoint(x: 59.14, y: 128.73))
        textPath.addCurve(to: CGPoint(x: 60.8, y: 129.39), controlPoint1: CGPoint(x: 60.09, y: 129), controlPoint2: CGPoint(x: 60.49, y: 129.17))
        textPath.addCurve(to: CGPoint(x: 61.28, y: 130.34), controlPoint1: CGPoint(x: 61.12, y: 129.61), controlPoint2: CGPoint(x: 61.28, y: 129.92))
        textPath.addCurve(to: CGPoint(x: 61.05, y: 131.09), controlPoint1: CGPoint(x: 61.28, y: 130.64), controlPoint2: CGPoint(x: 61.2, y: 130.89))
        textPath.addCurve(to: CGPoint(x: 60.47, y: 131.54), controlPoint1: CGPoint(x: 60.9, y: 131.29), controlPoint2: CGPoint(x: 60.71, y: 131.44))
        textPath.addCurve(to: CGPoint(x: 59.7, y: 131.75), controlPoint1: CGPoint(x: 60.24, y: 131.64), controlPoint2: CGPoint(x: 59.98, y: 131.71))
        textPath.addCurve(to: CGPoint(x: 58.9, y: 131.8), controlPoint1: CGPoint(x: 59.42, y: 131.78), controlPoint2: CGPoint(x: 59.16, y: 131.8))
        textPath.addCurve(to: CGPoint(x: 57.94, y: 131.71), controlPoint1: CGPoint(x: 58.57, y: 131.8), controlPoint2: CGPoint(x: 58.25, y: 131.77))
        textPath.addCurve(to: CGPoint(x: 57.11, y: 131.39), controlPoint1: CGPoint(x: 57.63, y: 131.64), controlPoint2: CGPoint(x: 57.36, y: 131.54))
        textPath.addCurve(to: CGPoint(x: 56.51, y: 130.81), controlPoint1: CGPoint(x: 56.86, y: 131.25), controlPoint2: CGPoint(x: 56.66, y: 131.05))
        textPath.addCurve(to: CGPoint(x: 56.26, y: 129.9), controlPoint1: CGPoint(x: 56.36, y: 130.56), controlPoint2: CGPoint(x: 56.28, y: 130.26))
        textPath.close()
        textPath.move(to: CGPoint(x: 71.44, y: 126.33))
        textPath.addLine(to: CGPoint(x: 73.12, y: 126.33))
        textPath.addCurve(to: CGPoint(x: 72.66, y: 124.82), controlPoint1: CGPoint(x: 73.05, y: 125.75), controlPoint2: CGPoint(x: 72.9, y: 125.24))
        textPath.addCurve(to: CGPoint(x: 71.74, y: 123.77), controlPoint1: CGPoint(x: 72.42, y: 124.4), controlPoint2: CGPoint(x: 72.11, y: 124.04))
        textPath.addCurve(to: CGPoint(x: 70.45, y: 123.15), controlPoint1: CGPoint(x: 71.36, y: 123.49), controlPoint2: CGPoint(x: 70.93, y: 123.28))
        textPath.addCurve(to: CGPoint(x: 68.88, y: 122.95), controlPoint1: CGPoint(x: 69.96, y: 123.02), controlPoint2: CGPoint(x: 69.44, y: 122.95))
        textPath.addCurve(to: CGPoint(x: 66.85, y: 123.36), controlPoint1: CGPoint(x: 68.11, y: 122.95), controlPoint2: CGPoint(x: 67.43, y: 123.09))
        textPath.addCurve(to: CGPoint(x: 65.39, y: 124.48), controlPoint1: CGPoint(x: 66.26, y: 123.63), controlPoint2: CGPoint(x: 65.78, y: 124))
        textPath.addCurve(to: CGPoint(x: 64.53, y: 126.15), controlPoint1: CGPoint(x: 65.01, y: 124.95), controlPoint2: CGPoint(x: 64.72, y: 125.51))
        textPath.addCurve(to: CGPoint(x: 64.24, y: 128.21), controlPoint1: CGPoint(x: 64.34, y: 126.79), controlPoint2: CGPoint(x: 64.24, y: 127.48))
        textPath.addCurve(to: CGPoint(x: 64.54, y: 130.24), controlPoint1: CGPoint(x: 64.24, y: 128.95), controlPoint2: CGPoint(x: 64.34, y: 129.62))
        textPath.addCurve(to: CGPoint(x: 65.41, y: 131.82), controlPoint1: CGPoint(x: 64.73, y: 130.85), controlPoint2: CGPoint(x: 65.02, y: 131.38))
        textPath.addCurve(to: CGPoint(x: 66.85, y: 132.85), controlPoint1: CGPoint(x: 65.8, y: 132.27), controlPoint2: CGPoint(x: 66.28, y: 132.61))
        textPath.addCurve(to: CGPoint(x: 68.84, y: 133.21), controlPoint1: CGPoint(x: 67.43, y: 133.09), controlPoint2: CGPoint(x: 68.09, y: 133.21))
        textPath.addCurve(to: CGPoint(x: 71.81, y: 132.22), controlPoint1: CGPoint(x: 70.09, y: 133.21), controlPoint2: CGPoint(x: 71.09, y: 132.88))
        textPath.addCurve(to: CGPoint(x: 73.17, y: 129.41), controlPoint1: CGPoint(x: 72.54, y: 131.56), controlPoint2: CGPoint(x: 73, y: 130.63))
        textPath.addLine(to: CGPoint(x: 71.52, y: 129.41))
        textPath.addCurve(to: CGPoint(x: 70.69, y: 131.18), controlPoint1: CGPoint(x: 71.42, y: 130.17), controlPoint2: CGPoint(x: 71.14, y: 130.76))
        textPath.addCurve(to: CGPoint(x: 68.82, y: 131.8), controlPoint1: CGPoint(x: 70.24, y: 131.59), controlPoint2: CGPoint(x: 69.62, y: 131.8))
        textPath.addCurve(to: CGPoint(x: 67.51, y: 131.5), controlPoint1: CGPoint(x: 68.31, y: 131.8), controlPoint2: CGPoint(x: 67.88, y: 131.7))
        textPath.addCurve(to: CGPoint(x: 66.62, y: 130.69), controlPoint1: CGPoint(x: 67.14, y: 131.3), controlPoint2: CGPoint(x: 66.85, y: 131.03))
        textPath.addCurve(to: CGPoint(x: 66.11, y: 129.54), controlPoint1: CGPoint(x: 66.39, y: 130.36), controlPoint2: CGPoint(x: 66.22, y: 129.97))
        textPath.addCurve(to: CGPoint(x: 65.95, y: 128.21), controlPoint1: CGPoint(x: 66.01, y: 129.11), controlPoint2: CGPoint(x: 65.95, y: 128.67))
        textPath.addCurve(to: CGPoint(x: 66.1, y: 126.78), controlPoint1: CGPoint(x: 65.95, y: 127.72), controlPoint2: CGPoint(x: 66, y: 127.24))
        textPath.addCurve(to: CGPoint(x: 66.61, y: 125.55), controlPoint1: CGPoint(x: 66.21, y: 126.32), controlPoint2: CGPoint(x: 66.37, y: 125.91))
        textPath.addCurve(to: CGPoint(x: 67.55, y: 124.7), controlPoint1: CGPoint(x: 66.84, y: 125.2), controlPoint2: CGPoint(x: 67.16, y: 124.91))
        textPath.addCurve(to: CGPoint(x: 69.01, y: 124.37), controlPoint1: CGPoint(x: 67.94, y: 124.48), controlPoint2: CGPoint(x: 68.43, y: 124.37))
        textPath.addCurve(to: CGPoint(x: 70.65, y: 124.89), controlPoint1: CGPoint(x: 69.7, y: 124.37), controlPoint2: CGPoint(x: 70.24, y: 124.54))
        textPath.addCurve(to: CGPoint(x: 71.44, y: 126.33), controlPoint1: CGPoint(x: 71.05, y: 125.23), controlPoint2: CGPoint(x: 71.32, y: 125.71))
        textPath.close()
        textPath.move(to: CGPoint(x: 74.92, y: 123.18))
        textPath.addLine(to: CGPoint(x: 74.92, y: 133))
        textPath.addLine(to: CGPoint(x: 76.54, y: 133))
        textPath.addLine(to: CGPoint(x: 76.54, y: 128.63))
        textPath.addCurve(to: CGPoint(x: 76.73, y: 126.95), controlPoint1: CGPoint(x: 76.54, y: 128), controlPoint2: CGPoint(x: 76.6, y: 127.44))
        textPath.addCurve(to: CGPoint(x: 77.33, y: 125.7), controlPoint1: CGPoint(x: 76.85, y: 126.46), controlPoint2: CGPoint(x: 77.05, y: 126.05))
        textPath.addCurve(to: CGPoint(x: 78.44, y: 124.93), controlPoint1: CGPoint(x: 77.61, y: 125.36), controlPoint2: CGPoint(x: 77.98, y: 125.1))
        textPath.addCurve(to: CGPoint(x: 80.09, y: 124.66), controlPoint1: CGPoint(x: 78.89, y: 124.75), controlPoint2: CGPoint(x: 79.44, y: 124.66))
        textPath.addLine(to: CGPoint(x: 80.09, y: 122.95))
        textPath.addCurve(to: CGPoint(x: 77.92, y: 123.48), controlPoint1: CGPoint(x: 79.21, y: 122.92), controlPoint2: CGPoint(x: 78.49, y: 123.1))
        textPath.addCurve(to: CGPoint(x: 76.48, y: 125.25), controlPoint1: CGPoint(x: 77.35, y: 123.86), controlPoint2: CGPoint(x: 76.87, y: 124.45))
        textPath.addLine(to: CGPoint(x: 76.44, y: 125.25))
        textPath.addLine(to: CGPoint(x: 76.44, y: 123.18))
        textPath.addLine(to: CGPoint(x: 74.92, y: 123.18))
        textPath.close()
        textPath.move(to: CGPoint(x: 83.01, y: 121.41))
        textPath.addLine(to: CGPoint(x: 83.01, y: 119.43))
        textPath.addLine(to: CGPoint(x: 81.4, y: 119.43))
        textPath.addLine(to: CGPoint(x: 81.4, y: 121.41))
        textPath.addLine(to: CGPoint(x: 83.01, y: 121.41))
        textPath.close()
        textPath.move(to: CGPoint(x: 81.4, y: 123.18))
        textPath.addLine(to: CGPoint(x: 81.4, y: 133))
        textPath.addLine(to: CGPoint(x: 83.01, y: 133))
        textPath.addLine(to: CGPoint(x: 83.01, y: 123.18))
        textPath.addLine(to: CGPoint(x: 81.4, y: 123.18))
        textPath.close()
        textPath.move(to: CGPoint(x: 85.58, y: 119.43))
        textPath.addLine(to: CGPoint(x: 85.58, y: 133))
        textPath.addLine(to: CGPoint(x: 87.19, y: 133))
        textPath.addLine(to: CGPoint(x: 87.19, y: 131.69))
        textPath.addLine(to: CGPoint(x: 87.23, y: 131.69))
        textPath.addCurve(to: CGPoint(x: 87.89, y: 132.42), controlPoint1: CGPoint(x: 87.41, y: 131.98), controlPoint2: CGPoint(x: 87.63, y: 132.22))
        textPath.addCurve(to: CGPoint(x: 88.71, y: 132.89), controlPoint1: CGPoint(x: 88.15, y: 132.62), controlPoint2: CGPoint(x: 88.42, y: 132.77))
        textPath.addCurve(to: CGPoint(x: 89.6, y: 133.13), controlPoint1: CGPoint(x: 89.01, y: 133), controlPoint2: CGPoint(x: 89.3, y: 133.08))
        textPath.addCurve(to: CGPoint(x: 90.41, y: 133.21), controlPoint1: CGPoint(x: 89.9, y: 133.18), controlPoint2: CGPoint(x: 90.16, y: 133.21))
        textPath.addCurve(to: CGPoint(x: 92.37, y: 132.81), controlPoint1: CGPoint(x: 91.15, y: 133.21), controlPoint2: CGPoint(x: 91.81, y: 133.08))
        textPath.addCurve(to: CGPoint(x: 93.78, y: 131.72), controlPoint1: CGPoint(x: 92.94, y: 132.54), controlPoint2: CGPoint(x: 93.4, y: 132.18))
        textPath.addCurve(to: CGPoint(x: 94.61, y: 130.09), controlPoint1: CGPoint(x: 94.15, y: 131.26), controlPoint2: CGPoint(x: 94.43, y: 130.71))
        textPath.addCurve(to: CGPoint(x: 94.89, y: 128.12), controlPoint1: CGPoint(x: 94.8, y: 129.47), controlPoint2: CGPoint(x: 94.89, y: 128.81))
        textPath.addCurve(to: CGPoint(x: 94.6, y: 126.14), controlPoint1: CGPoint(x: 94.89, y: 127.42), controlPoint2: CGPoint(x: 94.79, y: 126.76))
        textPath.addCurve(to: CGPoint(x: 93.76, y: 124.5), controlPoint1: CGPoint(x: 94.41, y: 125.52), controlPoint2: CGPoint(x: 94.13, y: 124.97))
        textPath.addCurve(to: CGPoint(x: 92.35, y: 123.37), controlPoint1: CGPoint(x: 93.39, y: 124.02), controlPoint2: CGPoint(x: 92.92, y: 123.65))
        textPath.addCurve(to: CGPoint(x: 90.37, y: 122.95), controlPoint1: CGPoint(x: 91.79, y: 123.09), controlPoint2: CGPoint(x: 91.13, y: 122.95))
        textPath.addCurve(to: CGPoint(x: 88.49, y: 123.32), controlPoint1: CGPoint(x: 89.68, y: 122.95), controlPoint2: CGPoint(x: 89.06, y: 123.07))
        textPath.addCurve(to: CGPoint(x: 87.23, y: 124.51), controlPoint1: CGPoint(x: 87.92, y: 123.57), controlPoint2: CGPoint(x: 87.5, y: 123.96))
        textPath.addLine(to: CGPoint(x: 87.19, y: 124.51))
        textPath.addLine(to: CGPoint(x: 87.19, y: 119.43))
        textPath.addLine(to: CGPoint(x: 85.58, y: 119.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 93.18, y: 128))
        textPath.addCurve(to: CGPoint(x: 93.03, y: 129.41), controlPoint1: CGPoint(x: 93.18, y: 128.48), controlPoint2: CGPoint(x: 93.13, y: 128.95))
        textPath.addCurve(to: CGPoint(x: 92.53, y: 130.62), controlPoint1: CGPoint(x: 92.93, y: 129.87), controlPoint2: CGPoint(x: 92.76, y: 130.27))
        textPath.addCurve(to: CGPoint(x: 91.63, y: 131.48), controlPoint1: CGPoint(x: 92.31, y: 130.98), controlPoint2: CGPoint(x: 92, y: 131.26))
        textPath.addCurve(to: CGPoint(x: 90.23, y: 131.8), controlPoint1: CGPoint(x: 91.26, y: 131.7), controlPoint2: CGPoint(x: 90.79, y: 131.8))
        textPath.addCurve(to: CGPoint(x: 88.81, y: 131.49), controlPoint1: CGPoint(x: 89.68, y: 131.8), controlPoint2: CGPoint(x: 89.2, y: 131.7))
        textPath.addCurve(to: CGPoint(x: 87.85, y: 130.66), controlPoint1: CGPoint(x: 88.42, y: 131.28), controlPoint2: CGPoint(x: 88.1, y: 131.01))
        textPath.addCurve(to: CGPoint(x: 87.31, y: 129.48), controlPoint1: CGPoint(x: 87.6, y: 130.32), controlPoint2: CGPoint(x: 87.42, y: 129.93))
        textPath.addCurve(to: CGPoint(x: 87.14, y: 128.08), controlPoint1: CGPoint(x: 87.19, y: 129.03), controlPoint2: CGPoint(x: 87.14, y: 128.56))
        textPath.addCurve(to: CGPoint(x: 87.3, y: 126.73), controlPoint1: CGPoint(x: 87.14, y: 127.62), controlPoint2: CGPoint(x: 87.19, y: 127.17))
        textPath.addCurve(to: CGPoint(x: 87.82, y: 125.54), controlPoint1: CGPoint(x: 87.41, y: 126.29), controlPoint2: CGPoint(x: 87.58, y: 125.89))
        textPath.addCurve(to: CGPoint(x: 88.75, y: 124.7), controlPoint1: CGPoint(x: 88.06, y: 125.19), controlPoint2: CGPoint(x: 88.37, y: 124.91))
        textPath.addCurve(to: CGPoint(x: 90.14, y: 124.37), controlPoint1: CGPoint(x: 89.13, y: 124.48), controlPoint2: CGPoint(x: 89.59, y: 124.37))
        textPath.addCurve(to: CGPoint(x: 91.5, y: 124.68), controlPoint1: CGPoint(x: 90.66, y: 124.37), controlPoint2: CGPoint(x: 91.11, y: 124.48))
        textPath.addCurve(to: CGPoint(x: 92.45, y: 125.5), controlPoint1: CGPoint(x: 91.88, y: 124.88), controlPoint2: CGPoint(x: 92.2, y: 125.15))
        textPath.addCurve(to: CGPoint(x: 93, y: 126.66), controlPoint1: CGPoint(x: 92.7, y: 125.84), controlPoint2: CGPoint(x: 92.88, y: 126.23))
        textPath.addCurve(to: CGPoint(x: 93.18, y: 128), controlPoint1: CGPoint(x: 93.12, y: 127.1), controlPoint2: CGPoint(x: 93.18, y: 127.55))
        textPath.close()
        textPath.move(to: CGPoint(x: 103.61, y: 127.15))
        textPath.addLine(to: CGPoint(x: 97.97, y: 127.15))
        textPath.addCurve(to: CGPoint(x: 98.21, y: 126.07), controlPoint1: CGPoint(x: 97.99, y: 126.77), controlPoint2: CGPoint(x: 98.08, y: 126.41))
        textPath.addCurve(to: CGPoint(x: 98.78, y: 125.19), controlPoint1: CGPoint(x: 98.35, y: 125.74), controlPoint2: CGPoint(x: 98.54, y: 125.44))
        textPath.addCurve(to: CGPoint(x: 99.65, y: 124.59), controlPoint1: CGPoint(x: 99.03, y: 124.94), controlPoint2: CGPoint(x: 99.31, y: 124.74))
        textPath.addCurve(to: CGPoint(x: 100.78, y: 124.37), controlPoint1: CGPoint(x: 99.98, y: 124.45), controlPoint2: CGPoint(x: 100.36, y: 124.37))
        textPath.addCurve(to: CGPoint(x: 101.89, y: 124.59), controlPoint1: CGPoint(x: 101.18, y: 124.37), controlPoint2: CGPoint(x: 101.56, y: 124.45))
        textPath.addCurve(to: CGPoint(x: 102.77, y: 125.18), controlPoint1: CGPoint(x: 102.23, y: 124.74), controlPoint2: CGPoint(x: 102.52, y: 124.93))
        textPath.addCurve(to: CGPoint(x: 103.35, y: 126.06), controlPoint1: CGPoint(x: 103.01, y: 125.43), controlPoint2: CGPoint(x: 103.21, y: 125.72))
        textPath.addCurve(to: CGPoint(x: 103.61, y: 127.15), controlPoint1: CGPoint(x: 103.5, y: 126.41), controlPoint2: CGPoint(x: 103.59, y: 126.77))
        textPath.close()
        textPath.move(to: CGPoint(x: 105.17, y: 129.88))
        textPath.addLine(to: CGPoint(x: 103.57, y: 129.88))
        textPath.addCurve(to: CGPoint(x: 102.71, y: 131.33), controlPoint1: CGPoint(x: 103.43, y: 130.53), controlPoint2: CGPoint(x: 103.15, y: 131.01))
        textPath.addCurve(to: CGPoint(x: 101.03, y: 131.8), controlPoint1: CGPoint(x: 102.27, y: 131.64), controlPoint2: CGPoint(x: 101.71, y: 131.8))
        textPath.addCurve(to: CGPoint(x: 99.64, y: 131.54), controlPoint1: CGPoint(x: 100.49, y: 131.8), controlPoint2: CGPoint(x: 100.03, y: 131.71))
        textPath.addCurve(to: CGPoint(x: 98.67, y: 130.82), controlPoint1: CGPoint(x: 99.25, y: 131.36), controlPoint2: CGPoint(x: 98.92, y: 131.12))
        textPath.addCurve(to: CGPoint(x: 98.12, y: 129.8), controlPoint1: CGPoint(x: 98.42, y: 130.53), controlPoint2: CGPoint(x: 98.23, y: 130.18))
        textPath.addCurve(to: CGPoint(x: 97.97, y: 128.57), controlPoint1: CGPoint(x: 98.01, y: 129.41), controlPoint2: CGPoint(x: 97.95, y: 129))
        textPath.addLine(to: CGPoint(x: 105.32, y: 128.57))
        textPath.addCurve(to: CGPoint(x: 105.16, y: 126.69), controlPoint1: CGPoint(x: 105.35, y: 127.98), controlPoint2: CGPoint(x: 105.29, y: 127.35))
        textPath.addCurve(to: CGPoint(x: 104.44, y: 124.87), controlPoint1: CGPoint(x: 105.03, y: 126.03), controlPoint2: CGPoint(x: 104.79, y: 125.43))
        textPath.addCurve(to: CGPoint(x: 103.05, y: 123.49), controlPoint1: CGPoint(x: 104.09, y: 124.31), controlPoint2: CGPoint(x: 103.63, y: 123.85))
        textPath.addCurve(to: CGPoint(x: 100.87, y: 122.95), controlPoint1: CGPoint(x: 102.47, y: 123.13), controlPoint2: CGPoint(x: 101.75, y: 122.95))
        textPath.addCurve(to: CGPoint(x: 99.02, y: 123.33), controlPoint1: CGPoint(x: 100.2, y: 122.95), controlPoint2: CGPoint(x: 99.59, y: 123.08))
        textPath.addCurve(to: CGPoint(x: 97.56, y: 124.39), controlPoint1: CGPoint(x: 98.46, y: 123.58), controlPoint2: CGPoint(x: 97.97, y: 123.94))
        textPath.addCurve(to: CGPoint(x: 96.6, y: 126.01), controlPoint1: CGPoint(x: 97.15, y: 124.85), controlPoint2: CGPoint(x: 96.83, y: 125.39))
        textPath.addCurve(to: CGPoint(x: 96.26, y: 128.06), controlPoint1: CGPoint(x: 96.37, y: 126.63), controlPoint2: CGPoint(x: 96.26, y: 127.31))
        textPath.addCurve(to: CGPoint(x: 96.59, y: 130.13), controlPoint1: CGPoint(x: 96.28, y: 128.81), controlPoint2: CGPoint(x: 96.39, y: 129.5))
        textPath.addCurve(to: CGPoint(x: 97.47, y: 131.76), controlPoint1: CGPoint(x: 96.79, y: 130.76), controlPoint2: CGPoint(x: 97.08, y: 131.31))
        textPath.addCurve(to: CGPoint(x: 98.93, y: 132.83), controlPoint1: CGPoint(x: 97.87, y: 132.22), controlPoint2: CGPoint(x: 98.35, y: 132.58))
        textPath.addCurve(to: CGPoint(x: 100.97, y: 133.21), controlPoint1: CGPoint(x: 99.5, y: 133.08), controlPoint2: CGPoint(x: 100.18, y: 133.21))
        textPath.addCurve(to: CGPoint(x: 103.74, y: 132.37), controlPoint1: CGPoint(x: 102.08, y: 133.21), controlPoint2: CGPoint(x: 103.01, y: 132.93))
        textPath.addCurve(to: CGPoint(x: 105.17, y: 129.88), controlPoint1: CGPoint(x: 104.48, y: 131.82), controlPoint2: CGPoint(x: 104.95, y: 130.99))
        textPath.close()
        textPath.move(to: CGPoint(x: 112.52, y: 119.43))
        textPath.addLine(to: CGPoint(x: 112.52, y: 133))
        textPath.addLine(to: CGPoint(x: 114.23, y: 133))
        textPath.addLine(to: CGPoint(x: 114.23, y: 122.11))
        textPath.addLine(to: CGPoint(x: 114.27, y: 122.11))
        textPath.addLine(to: CGPoint(x: 121.36, y: 133))
        textPath.addLine(to: CGPoint(x: 123.33, y: 133))
        textPath.addLine(to: CGPoint(x: 123.33, y: 119.43))
        textPath.addLine(to: CGPoint(x: 121.62, y: 119.43))
        textPath.addLine(to: CGPoint(x: 121.62, y: 130.44))
        textPath.addLine(to: CGPoint(x: 121.58, y: 130.44))
        textPath.addLine(to: CGPoint(x: 114.44, y: 119.43))
        textPath.addLine(to: CGPoint(x: 112.52, y: 119.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 127.17, y: 128.1))
        textPath.addCurve(to: CGPoint(x: 127.41, y: 126.51), controlPoint1: CGPoint(x: 127.17, y: 127.5), controlPoint2: CGPoint(x: 127.25, y: 126.97))
        textPath.addCurve(to: CGPoint(x: 128.06, y: 125.34), controlPoint1: CGPoint(x: 127.57, y: 126.05), controlPoint2: CGPoint(x: 127.78, y: 125.66))
        textPath.addCurve(to: CGPoint(x: 129.04, y: 124.62), controlPoint1: CGPoint(x: 128.34, y: 125.03), controlPoint2: CGPoint(x: 128.67, y: 124.79))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 124.37), controlPoint1: CGPoint(x: 129.42, y: 124.46), controlPoint2: CGPoint(x: 129.81, y: 124.37))
        textPath.addCurve(to: CGPoint(x: 131.42, y: 124.62), controlPoint1: CGPoint(x: 130.65, y: 124.37), controlPoint2: CGPoint(x: 131.04, y: 124.46))
        textPath.addCurve(to: CGPoint(x: 132.4, y: 125.34), controlPoint1: CGPoint(x: 131.79, y: 124.79), controlPoint2: CGPoint(x: 132.12, y: 125.03))
        textPath.addCurve(to: CGPoint(x: 133.05, y: 126.51), controlPoint1: CGPoint(x: 132.67, y: 125.66), controlPoint2: CGPoint(x: 132.89, y: 126.05))
        textPath.addCurve(to: CGPoint(x: 133.29, y: 128.1), controlPoint1: CGPoint(x: 133.21, y: 126.97), controlPoint2: CGPoint(x: 133.29, y: 127.5))
        textPath.addCurve(to: CGPoint(x: 133.05, y: 129.68), controlPoint1: CGPoint(x: 133.29, y: 128.69), controlPoint2: CGPoint(x: 133.21, y: 129.22))
        textPath.addCurve(to: CGPoint(x: 132.4, y: 130.84), controlPoint1: CGPoint(x: 132.89, y: 130.15), controlPoint2: CGPoint(x: 132.67, y: 130.53))
        textPath.addCurve(to: CGPoint(x: 131.42, y: 131.56), controlPoint1: CGPoint(x: 132.12, y: 131.15), controlPoint2: CGPoint(x: 131.79, y: 131.39))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 131.8), controlPoint1: CGPoint(x: 131.04, y: 131.72), controlPoint2: CGPoint(x: 130.65, y: 131.8))
        textPath.addCurve(to: CGPoint(x: 129.04, y: 131.56), controlPoint1: CGPoint(x: 129.81, y: 131.8), controlPoint2: CGPoint(x: 129.42, y: 131.72))
        textPath.addCurve(to: CGPoint(x: 128.06, y: 130.84), controlPoint1: CGPoint(x: 128.67, y: 131.39), controlPoint2: CGPoint(x: 128.34, y: 131.15))
        textPath.addCurve(to: CGPoint(x: 127.41, y: 129.68), controlPoint1: CGPoint(x: 127.78, y: 130.53), controlPoint2: CGPoint(x: 127.57, y: 130.15))
        textPath.addCurve(to: CGPoint(x: 127.17, y: 128.1), controlPoint1: CGPoint(x: 127.25, y: 129.22), controlPoint2: CGPoint(x: 127.17, y: 128.69))
        textPath.close()
        textPath.move(to: CGPoint(x: 125.46, y: 128.1))
        textPath.addCurve(to: CGPoint(x: 125.76, y: 130.11), controlPoint1: CGPoint(x: 125.46, y: 128.82), controlPoint2: CGPoint(x: 125.56, y: 129.49))
        textPath.addCurve(to: CGPoint(x: 126.68, y: 131.74), controlPoint1: CGPoint(x: 125.97, y: 130.73), controlPoint2: CGPoint(x: 126.27, y: 131.27))
        textPath.addCurve(to: CGPoint(x: 128.18, y: 132.82), controlPoint1: CGPoint(x: 127.08, y: 132.2), controlPoint2: CGPoint(x: 127.58, y: 132.56))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 133.21), controlPoint1: CGPoint(x: 128.77, y: 133.08), controlPoint2: CGPoint(x: 129.46, y: 133.21))
        textPath.addCurve(to: CGPoint(x: 132.29, y: 132.82), controlPoint1: CGPoint(x: 131.01, y: 133.21), controlPoint2: CGPoint(x: 131.7, y: 133.08))
        textPath.addCurve(to: CGPoint(x: 133.78, y: 131.74), controlPoint1: CGPoint(x: 132.88, y: 132.56), controlPoint2: CGPoint(x: 133.38, y: 132.2))
        textPath.addCurve(to: CGPoint(x: 134.69, y: 130.11), controlPoint1: CGPoint(x: 134.19, y: 131.27), controlPoint2: CGPoint(x: 134.49, y: 130.73))
        textPath.addCurve(to: CGPoint(x: 135, y: 128.1), controlPoint1: CGPoint(x: 134.9, y: 129.49), controlPoint2: CGPoint(x: 135, y: 128.82))
        textPath.addCurve(to: CGPoint(x: 134.69, y: 126.07), controlPoint1: CGPoint(x: 135, y: 127.38), controlPoint2: CGPoint(x: 134.9, y: 126.7))
        textPath.addCurve(to: CGPoint(x: 133.78, y: 124.44), controlPoint1: CGPoint(x: 134.49, y: 125.45), controlPoint2: CGPoint(x: 134.19, y: 124.9))
        textPath.addCurve(to: CGPoint(x: 132.29, y: 123.35), controlPoint1: CGPoint(x: 133.38, y: 123.98), controlPoint2: CGPoint(x: 132.88, y: 123.61))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 122.95), controlPoint1: CGPoint(x: 131.7, y: 123.08), controlPoint2: CGPoint(x: 131.01, y: 122.95))
        textPath.addCurve(to: CGPoint(x: 128.18, y: 123.35), controlPoint1: CGPoint(x: 129.46, y: 122.95), controlPoint2: CGPoint(x: 128.77, y: 123.08))
        textPath.addCurve(to: CGPoint(x: 126.68, y: 124.44), controlPoint1: CGPoint(x: 127.58, y: 123.61), controlPoint2: CGPoint(x: 127.08, y: 123.98))
        textPath.addCurve(to: CGPoint(x: 125.76, y: 126.07), controlPoint1: CGPoint(x: 126.27, y: 124.9), controlPoint2: CGPoint(x: 125.97, y: 125.45))
        textPath.addCurve(to: CGPoint(x: 125.46, y: 128.1), controlPoint1: CGPoint(x: 125.56, y: 126.7), controlPoint2: CGPoint(x: 125.46, y: 127.38))
        textPath.close()
        textPath.move(to: CGPoint(x: 146.63, y: 133))
        textPath.addLine(to: CGPoint(x: 149.76, y: 123.18))
        textPath.addLine(to: CGPoint(x: 148.09, y: 123.18))
        textPath.addLine(to: CGPoint(x: 145.89, y: 131.21))
        textPath.addLine(to: CGPoint(x: 145.85, y: 131.21))
        textPath.addLine(to: CGPoint(x: 143.8, y: 123.18))
        textPath.addLine(to: CGPoint(x: 142.03, y: 123.18))
        textPath.addLine(to: CGPoint(x: 140.05, y: 131.21))
        textPath.addLine(to: CGPoint(x: 140.01, y: 131.21))
        textPath.addLine(to: CGPoint(x: 137.79, y: 123.18))
        textPath.addLine(to: CGPoint(x: 136.01, y: 123.18))
        textPath.addLine(to: CGPoint(x: 139.16, y: 133))
        textPath.addLine(to: CGPoint(x: 140.91, y: 133))
        textPath.addLine(to: CGPoint(x: 142.88, y: 125.19))
        textPath.addLine(to: CGPoint(x: 142.92, y: 125.19))
        textPath.addLine(to: CGPoint(x: 144.92, y: 133))
        textPath.addLine(to: CGPoint(x: 146.63, y: 133))
        textPath.close()
        UIColor.white.setFill()
        textPath.fill()
    }

    @objc dynamic public class func drawSubscribeonesmall() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!


        //// Gradient Declarations
        let gradient11 = CGGradient(colorsSpace: nil, colors: [ButtonsForFJ092018.blueGradientColor2.cgColor, ButtonsForFJ092018.gradientForBoxColor2.cgColor] as CFArray, locations: [0, 1])!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 170, height: 47))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(gradient11, start: CGPoint(x: 85, y: -0), end: CGPoint(x: 85, y: 47), options: [])
        context.restoreGState()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 0, y: 104, width: 170, height: 47))
        context.saveGState()
        rectangle2Path.addClip()
        context.drawLinearGradient(gradient11, start: CGPoint(x: 85, y: 104), end: CGPoint(x: 85, y: 151), options: [])
        context.restoreGState()


        //// Text 4 Drawing
        let text4Path = UIBezierPath()
        text4Path.move(to: CGPoint(x: 52.38, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 52.38, y: 30))
        text4Path.addLine(to: CGPoint(x: 54.09, y: 30))
        text4Path.addLine(to: CGPoint(x: 54.09, y: 18.71))
        text4Path.addLine(to: CGPoint(x: 54.12, y: 18.71))
        text4Path.addLine(to: CGPoint(x: 58.36, y: 30))
        text4Path.addLine(to: CGPoint(x: 59.9, y: 30))
        text4Path.addLine(to: CGPoint(x: 64.14, y: 18.71))
        text4Path.addLine(to: CGPoint(x: 64.18, y: 18.71))
        text4Path.addLine(to: CGPoint(x: 64.18, y: 30))
        text4Path.addLine(to: CGPoint(x: 65.89, y: 30))
        text4Path.addLine(to: CGPoint(x: 65.89, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 63.42, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 59.12, y: 27.83))
        text4Path.addLine(to: CGPoint(x: 54.85, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 52.38, y: 16.43))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 69.8, y: 25.1))
        text4Path.addCurve(to: CGPoint(x: 70.04, y: 23.51), controlPoint1: CGPoint(x: 69.8, y: 24.5), controlPoint2: CGPoint(x: 69.88, y: 23.97))
        text4Path.addCurve(to: CGPoint(x: 70.69, y: 22.34), controlPoint1: CGPoint(x: 70.2, y: 23.05), controlPoint2: CGPoint(x: 70.41, y: 22.66))
        text4Path.addCurve(to: CGPoint(x: 71.67, y: 21.62), controlPoint1: CGPoint(x: 70.97, y: 22.03), controlPoint2: CGPoint(x: 71.3, y: 21.79))
        text4Path.addCurve(to: CGPoint(x: 72.86, y: 21.37), controlPoint1: CGPoint(x: 72.05, y: 21.46), controlPoint2: CGPoint(x: 72.44, y: 21.37))
        text4Path.addCurve(to: CGPoint(x: 74.05, y: 21.62), controlPoint1: CGPoint(x: 73.28, y: 21.37), controlPoint2: CGPoint(x: 73.67, y: 21.46))
        text4Path.addCurve(to: CGPoint(x: 75.03, y: 22.34), controlPoint1: CGPoint(x: 74.42, y: 21.79), controlPoint2: CGPoint(x: 74.75, y: 22.03))
        text4Path.addCurve(to: CGPoint(x: 75.68, y: 23.51), controlPoint1: CGPoint(x: 75.3, y: 22.66), controlPoint2: CGPoint(x: 75.52, y: 23.05))
        text4Path.addCurve(to: CGPoint(x: 75.92, y: 25.1), controlPoint1: CGPoint(x: 75.84, y: 23.97), controlPoint2: CGPoint(x: 75.92, y: 24.5))
        text4Path.addCurve(to: CGPoint(x: 75.68, y: 26.68), controlPoint1: CGPoint(x: 75.92, y: 25.69), controlPoint2: CGPoint(x: 75.84, y: 26.22))
        text4Path.addCurve(to: CGPoint(x: 75.03, y: 27.84), controlPoint1: CGPoint(x: 75.52, y: 27.15), controlPoint2: CGPoint(x: 75.3, y: 27.53))
        text4Path.addCurve(to: CGPoint(x: 74.05, y: 28.56), controlPoint1: CGPoint(x: 74.75, y: 28.15), controlPoint2: CGPoint(x: 74.42, y: 28.39))
        text4Path.addCurve(to: CGPoint(x: 72.86, y: 28.8), controlPoint1: CGPoint(x: 73.67, y: 28.72), controlPoint2: CGPoint(x: 73.28, y: 28.8))
        text4Path.addCurve(to: CGPoint(x: 71.67, y: 28.56), controlPoint1: CGPoint(x: 72.44, y: 28.8), controlPoint2: CGPoint(x: 72.05, y: 28.72))
        text4Path.addCurve(to: CGPoint(x: 70.69, y: 27.84), controlPoint1: CGPoint(x: 71.3, y: 28.39), controlPoint2: CGPoint(x: 70.97, y: 28.15))
        text4Path.addCurve(to: CGPoint(x: 70.04, y: 26.68), controlPoint1: CGPoint(x: 70.41, y: 27.53), controlPoint2: CGPoint(x: 70.2, y: 27.15))
        text4Path.addCurve(to: CGPoint(x: 69.8, y: 25.1), controlPoint1: CGPoint(x: 69.88, y: 26.22), controlPoint2: CGPoint(x: 69.8, y: 25.69))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 68.09, y: 25.1))
        text4Path.addCurve(to: CGPoint(x: 68.39, y: 27.11), controlPoint1: CGPoint(x: 68.09, y: 25.82), controlPoint2: CGPoint(x: 68.19, y: 26.49))
        text4Path.addCurve(to: CGPoint(x: 69.31, y: 28.74), controlPoint1: CGPoint(x: 68.6, y: 27.73), controlPoint2: CGPoint(x: 68.9, y: 28.27))
        text4Path.addCurve(to: CGPoint(x: 70.81, y: 29.82), controlPoint1: CGPoint(x: 69.71, y: 29.2), controlPoint2: CGPoint(x: 70.21, y: 29.56))
        text4Path.addCurve(to: CGPoint(x: 72.86, y: 30.21), controlPoint1: CGPoint(x: 71.4, y: 30.08), controlPoint2: CGPoint(x: 72.09, y: 30.21))
        text4Path.addCurve(to: CGPoint(x: 74.92, y: 29.82), controlPoint1: CGPoint(x: 73.64, y: 30.21), controlPoint2: CGPoint(x: 74.33, y: 30.08))
        text4Path.addCurve(to: CGPoint(x: 76.41, y: 28.74), controlPoint1: CGPoint(x: 75.51, y: 29.56), controlPoint2: CGPoint(x: 76.01, y: 29.2))
        text4Path.addCurve(to: CGPoint(x: 77.32, y: 27.11), controlPoint1: CGPoint(x: 76.82, y: 28.27), controlPoint2: CGPoint(x: 77.12, y: 27.73))
        text4Path.addCurve(to: CGPoint(x: 77.63, y: 25.1), controlPoint1: CGPoint(x: 77.53, y: 26.49), controlPoint2: CGPoint(x: 77.63, y: 25.82))
        text4Path.addCurve(to: CGPoint(x: 77.32, y: 23.07), controlPoint1: CGPoint(x: 77.63, y: 24.38), controlPoint2: CGPoint(x: 77.53, y: 23.7))
        text4Path.addCurve(to: CGPoint(x: 76.41, y: 21.44), controlPoint1: CGPoint(x: 77.12, y: 22.45), controlPoint2: CGPoint(x: 76.82, y: 21.9))
        text4Path.addCurve(to: CGPoint(x: 74.92, y: 20.35), controlPoint1: CGPoint(x: 76.01, y: 20.98), controlPoint2: CGPoint(x: 75.51, y: 20.61))
        text4Path.addCurve(to: CGPoint(x: 72.86, y: 19.95), controlPoint1: CGPoint(x: 74.33, y: 20.08), controlPoint2: CGPoint(x: 73.64, y: 19.95))
        text4Path.addCurve(to: CGPoint(x: 70.81, y: 20.35), controlPoint1: CGPoint(x: 72.09, y: 19.95), controlPoint2: CGPoint(x: 71.4, y: 20.08))
        text4Path.addCurve(to: CGPoint(x: 69.31, y: 21.44), controlPoint1: CGPoint(x: 70.21, y: 20.61), controlPoint2: CGPoint(x: 69.71, y: 20.98))
        text4Path.addCurve(to: CGPoint(x: 68.39, y: 23.07), controlPoint1: CGPoint(x: 68.9, y: 21.9), controlPoint2: CGPoint(x: 68.6, y: 22.45))
        text4Path.addCurve(to: CGPoint(x: 68.09, y: 25.1), controlPoint1: CGPoint(x: 68.19, y: 23.7), controlPoint2: CGPoint(x: 68.09, y: 24.38))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 79.53, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 79.53, y: 30))
        text4Path.addLine(to: CGPoint(x: 81.14, y: 30))
        text4Path.addLine(to: CGPoint(x: 81.14, y: 24.45))
        text4Path.addCurve(to: CGPoint(x: 81.32, y: 23.23), controlPoint1: CGPoint(x: 81.14, y: 24.01), controlPoint2: CGPoint(x: 81.2, y: 23.6))
        text4Path.addCurve(to: CGPoint(x: 81.86, y: 22.25), controlPoint1: CGPoint(x: 81.44, y: 22.85), controlPoint2: CGPoint(x: 81.62, y: 22.53))
        text4Path.addCurve(to: CGPoint(x: 82.77, y: 21.6), controlPoint1: CGPoint(x: 82.11, y: 21.97), controlPoint2: CGPoint(x: 82.41, y: 21.75))
        text4Path.addCurve(to: CGPoint(x: 84.05, y: 21.37), controlPoint1: CGPoint(x: 83.13, y: 21.45), controlPoint2: CGPoint(x: 83.56, y: 21.37))
        text4Path.addCurve(to: CGPoint(x: 85.51, y: 21.91), controlPoint1: CGPoint(x: 84.67, y: 21.37), controlPoint2: CGPoint(x: 85.16, y: 21.55))
        text4Path.addCurve(to: CGPoint(x: 86.04, y: 23.35), controlPoint1: CGPoint(x: 85.87, y: 22.26), controlPoint2: CGPoint(x: 86.05, y: 22.74))
        text4Path.addLine(to: CGPoint(x: 86.04, y: 30))
        text4Path.addLine(to: CGPoint(x: 87.66, y: 30))
        text4Path.addLine(to: CGPoint(x: 87.66, y: 23.54))
        text4Path.addCurve(to: CGPoint(x: 87.5, y: 22.09), controlPoint1: CGPoint(x: 87.66, y: 23.01), controlPoint2: CGPoint(x: 87.61, y: 22.52))
        text4Path.addCurve(to: CGPoint(x: 86.94, y: 20.96), controlPoint1: CGPoint(x: 87.39, y: 21.65), controlPoint2: CGPoint(x: 87.2, y: 21.27))
        text4Path.addCurve(to: CGPoint(x: 85.89, y: 20.22), controlPoint1: CGPoint(x: 86.67, y: 20.64), controlPoint2: CGPoint(x: 86.32, y: 20.39))
        text4Path.addCurve(to: CGPoint(x: 84.28, y: 19.95), controlPoint1: CGPoint(x: 85.46, y: 20.04), controlPoint2: CGPoint(x: 84.92, y: 19.95))
        text4Path.addCurve(to: CGPoint(x: 81.09, y: 21.74), controlPoint1: CGPoint(x: 82.82, y: 19.95), controlPoint2: CGPoint(x: 81.76, y: 20.54))
        text4Path.addLine(to: CGPoint(x: 81.05, y: 21.74))
        text4Path.addLine(to: CGPoint(x: 81.05, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 79.53, y: 20.18))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 92.33, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 92.33, y: 17.23))
        text4Path.addLine(to: CGPoint(x: 90.72, y: 17.23))
        text4Path.addLine(to: CGPoint(x: 90.72, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 89.05, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 89.05, y: 21.6))
        text4Path.addLine(to: CGPoint(x: 90.72, y: 21.6))
        text4Path.addLine(to: CGPoint(x: 90.72, y: 27.85))
        text4Path.addCurve(to: CGPoint(x: 90.85, y: 28.95), controlPoint1: CGPoint(x: 90.72, y: 28.31), controlPoint2: CGPoint(x: 90.76, y: 28.68))
        text4Path.addCurve(to: CGPoint(x: 91.26, y: 29.6), controlPoint1: CGPoint(x: 90.94, y: 29.23), controlPoint2: CGPoint(x: 91.08, y: 29.45))
        text4Path.addCurve(to: CGPoint(x: 91.98, y: 29.91), controlPoint1: CGPoint(x: 91.44, y: 29.75), controlPoint2: CGPoint(x: 91.68, y: 29.86))
        text4Path.addCurve(to: CGPoint(x: 93.06, y: 30), controlPoint1: CGPoint(x: 92.28, y: 29.97), controlPoint2: CGPoint(x: 92.64, y: 30))
        text4Path.addLine(to: CGPoint(x: 94.29, y: 30))
        text4Path.addLine(to: CGPoint(x: 94.29, y: 28.57))
        text4Path.addLine(to: CGPoint(x: 93.55, y: 28.57))
        text4Path.addCurve(to: CGPoint(x: 92.93, y: 28.55), controlPoint1: CGPoint(x: 93.3, y: 28.57), controlPoint2: CGPoint(x: 93.09, y: 28.57))
        text4Path.addCurve(to: CGPoint(x: 92.56, y: 28.42), controlPoint1: CGPoint(x: 92.77, y: 28.53), controlPoint2: CGPoint(x: 92.65, y: 28.49))
        text4Path.addCurve(to: CGPoint(x: 92.38, y: 28.16), controlPoint1: CGPoint(x: 92.47, y: 28.36), controlPoint2: CGPoint(x: 92.41, y: 28.27))
        text4Path.addCurve(to: CGPoint(x: 92.33, y: 27.7), controlPoint1: CGPoint(x: 92.35, y: 28.04), controlPoint2: CGPoint(x: 92.33, y: 27.89))
        text4Path.addLine(to: CGPoint(x: 92.33, y: 21.6))
        text4Path.addLine(to: CGPoint(x: 94.29, y: 21.6))
        text4Path.addLine(to: CGPoint(x: 94.29, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 92.33, y: 20.18))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 96.08, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 96.08, y: 30))
        text4Path.addLine(to: CGPoint(x: 97.69, y: 30))
        text4Path.addLine(to: CGPoint(x: 97.69, y: 24.45))
        text4Path.addCurve(to: CGPoint(x: 97.87, y: 23.23), controlPoint1: CGPoint(x: 97.69, y: 24.01), controlPoint2: CGPoint(x: 97.75, y: 23.6))
        text4Path.addCurve(to: CGPoint(x: 98.41, y: 22.25), controlPoint1: CGPoint(x: 97.99, y: 22.85), controlPoint2: CGPoint(x: 98.17, y: 22.53))
        text4Path.addCurve(to: CGPoint(x: 99.32, y: 21.6), controlPoint1: CGPoint(x: 98.65, y: 21.97), controlPoint2: CGPoint(x: 98.96, y: 21.75))
        text4Path.addCurve(to: CGPoint(x: 100.6, y: 21.37), controlPoint1: CGPoint(x: 99.68, y: 21.45), controlPoint2: CGPoint(x: 100.1, y: 21.37))
        text4Path.addCurve(to: CGPoint(x: 102.06, y: 21.91), controlPoint1: CGPoint(x: 101.22, y: 21.37), controlPoint2: CGPoint(x: 101.71, y: 21.55))
        text4Path.addCurve(to: CGPoint(x: 102.59, y: 23.35), controlPoint1: CGPoint(x: 102.42, y: 22.26), controlPoint2: CGPoint(x: 102.59, y: 22.74))
        text4Path.addLine(to: CGPoint(x: 102.59, y: 30))
        text4Path.addLine(to: CGPoint(x: 104.21, y: 30))
        text4Path.addLine(to: CGPoint(x: 104.21, y: 23.54))
        text4Path.addCurve(to: CGPoint(x: 104.05, y: 22.09), controlPoint1: CGPoint(x: 104.21, y: 23.01), controlPoint2: CGPoint(x: 104.16, y: 22.52))
        text4Path.addCurve(to: CGPoint(x: 103.49, y: 20.96), controlPoint1: CGPoint(x: 103.94, y: 21.65), controlPoint2: CGPoint(x: 103.75, y: 21.27))
        text4Path.addCurve(to: CGPoint(x: 102.44, y: 20.22), controlPoint1: CGPoint(x: 103.22, y: 20.64), controlPoint2: CGPoint(x: 102.87, y: 20.39))
        text4Path.addCurve(to: CGPoint(x: 100.83, y: 19.95), controlPoint1: CGPoint(x: 102.01, y: 20.04), controlPoint2: CGPoint(x: 101.47, y: 19.95))
        text4Path.addCurve(to: CGPoint(x: 99.92, y: 20.04), controlPoint1: CGPoint(x: 100.54, y: 19.95), controlPoint2: CGPoint(x: 100.23, y: 19.98))
        text4Path.addCurve(to: CGPoint(x: 99.03, y: 20.34), controlPoint1: CGPoint(x: 99.61, y: 20.11), controlPoint2: CGPoint(x: 99.32, y: 20.21))
        text4Path.addCurve(to: CGPoint(x: 98.26, y: 20.85), controlPoint1: CGPoint(x: 98.75, y: 20.47), controlPoint2: CGPoint(x: 98.49, y: 20.64))
        text4Path.addCurve(to: CGPoint(x: 97.73, y: 21.62), controlPoint1: CGPoint(x: 98.03, y: 21.06), controlPoint2: CGPoint(x: 97.86, y: 21.32))
        text4Path.addLine(to: CGPoint(x: 97.69, y: 21.62))
        text4Path.addLine(to: CGPoint(x: 97.69, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 96.08, y: 16.43))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 106.74, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 106.74, y: 30))
        text4Path.addLine(to: CGPoint(x: 108.35, y: 30))
        text4Path.addLine(to: CGPoint(x: 108.35, y: 16.43))
        text4Path.addLine(to: CGPoint(x: 106.74, y: 16.43))
        text4Path.close()
        text4Path.move(to: CGPoint(x: 114.72, y: 31.31))
        text4Path.addCurve(to: CGPoint(x: 114.16, y: 32.53), controlPoint1: CGPoint(x: 114.53, y: 31.79), controlPoint2: CGPoint(x: 114.34, y: 32.2))
        text4Path.addCurve(to: CGPoint(x: 113.55, y: 33.33), controlPoint1: CGPoint(x: 113.97, y: 32.86), controlPoint2: CGPoint(x: 113.77, y: 33.13))
        text4Path.addCurve(to: CGPoint(x: 112.81, y: 33.79), controlPoint1: CGPoint(x: 113.33, y: 33.54), controlPoint2: CGPoint(x: 113.08, y: 33.7))
        text4Path.addCurve(to: CGPoint(x: 111.87, y: 33.93), controlPoint1: CGPoint(x: 112.53, y: 33.89), controlPoint2: CGPoint(x: 112.22, y: 33.93))
        text4Path.addCurve(to: CGPoint(x: 111.3, y: 33.89), controlPoint1: CGPoint(x: 111.68, y: 33.93), controlPoint2: CGPoint(x: 111.49, y: 33.92))
        text4Path.addCurve(to: CGPoint(x: 110.75, y: 33.76), controlPoint1: CGPoint(x: 111.11, y: 33.87), controlPoint2: CGPoint(x: 110.92, y: 33.83))
        text4Path.addLine(to: CGPoint(x: 110.75, y: 32.28))
        text4Path.addCurve(to: CGPoint(x: 111.23, y: 32.44), controlPoint1: CGPoint(x: 110.88, y: 32.34), controlPoint2: CGPoint(x: 111.05, y: 32.4))
        text4Path.addCurve(to: CGPoint(x: 111.7, y: 32.51), controlPoint1: CGPoint(x: 111.41, y: 32.49), controlPoint2: CGPoint(x: 111.57, y: 32.51))
        text4Path.addCurve(to: CGPoint(x: 112.52, y: 32.27), controlPoint1: CGPoint(x: 112.02, y: 32.51), controlPoint2: CGPoint(x: 112.3, y: 32.43))
        text4Path.addCurve(to: CGPoint(x: 113.03, y: 31.6), controlPoint1: CGPoint(x: 112.74, y: 32.11), controlPoint2: CGPoint(x: 112.91, y: 31.89))
        text4Path.addLine(to: CGPoint(x: 113.69, y: 29.94))
        text4Path.addLine(to: CGPoint(x: 109.8, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 111.62, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 114.49, y: 28.21))
        text4Path.addLine(to: CGPoint(x: 114.53, y: 28.21))
        text4Path.addLine(to: CGPoint(x: 117.28, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 118.99, y: 20.18))
        text4Path.addLine(to: CGPoint(x: 114.72, y: 31.31))
        text4Path.close()
        UIColor.white.setFill()
        text4Path.fill()


        //// Text Drawing
        let textPath = UIBezierPath()
        textPath.move(to: CGPoint(x: 29.24, y: 124.41))
        textPath.addLine(to: CGPoint(x: 30.95, y: 124.41))
        textPath.addCurve(to: CGPoint(x: 30.53, y: 122.48), controlPoint1: CGPoint(x: 30.93, y: 123.66), controlPoint2: CGPoint(x: 30.79, y: 123.01))
        textPath.addCurve(to: CGPoint(x: 29.46, y: 121.14), controlPoint1: CGPoint(x: 30.27, y: 121.94), controlPoint2: CGPoint(x: 29.91, y: 121.49))
        textPath.addCurve(to: CGPoint(x: 27.9, y: 120.36), controlPoint1: CGPoint(x: 29.01, y: 120.78), controlPoint2: CGPoint(x: 28.49, y: 120.52))
        textPath.addCurve(to: CGPoint(x: 25.96, y: 120.11), controlPoint1: CGPoint(x: 27.3, y: 120.19), controlPoint2: CGPoint(x: 26.65, y: 120.11))
        textPath.addCurve(to: CGPoint(x: 24.14, y: 120.35), controlPoint1: CGPoint(x: 25.34, y: 120.11), controlPoint2: CGPoint(x: 24.73, y: 120.19))
        textPath.addCurve(to: CGPoint(x: 22.57, y: 121.07), controlPoint1: CGPoint(x: 23.55, y: 120.51), controlPoint2: CGPoint(x: 23.03, y: 120.75))
        textPath.addCurve(to: CGPoint(x: 21.45, y: 122.31), controlPoint1: CGPoint(x: 22.1, y: 121.39), controlPoint2: CGPoint(x: 21.73, y: 121.81))
        textPath.addCurve(to: CGPoint(x: 21.04, y: 124.08), controlPoint1: CGPoint(x: 21.18, y: 122.81), controlPoint2: CGPoint(x: 21.04, y: 123.4))
        textPath.addCurve(to: CGPoint(x: 21.41, y: 125.63), controlPoint1: CGPoint(x: 21.04, y: 124.7), controlPoint2: CGPoint(x: 21.16, y: 125.22))
        textPath.addCurve(to: CGPoint(x: 22.39, y: 126.64), controlPoint1: CGPoint(x: 21.65, y: 126.04), controlPoint2: CGPoint(x: 21.98, y: 126.38))
        textPath.addCurve(to: CGPoint(x: 23.79, y: 127.26), controlPoint1: CGPoint(x: 22.81, y: 126.9), controlPoint2: CGPoint(x: 23.27, y: 127.11))
        textPath.addCurve(to: CGPoint(x: 25.38, y: 127.68), controlPoint1: CGPoint(x: 24.31, y: 127.42), controlPoint2: CGPoint(x: 24.84, y: 127.56))
        textPath.addCurve(to: CGPoint(x: 26.96, y: 128.03), controlPoint1: CGPoint(x: 25.92, y: 127.8), controlPoint2: CGPoint(x: 26.45, y: 127.92))
        textPath.addCurve(to: CGPoint(x: 28.36, y: 128.48), controlPoint1: CGPoint(x: 27.48, y: 128.15), controlPoint2: CGPoint(x: 27.95, y: 128.3))
        textPath.addCurve(to: CGPoint(x: 29.35, y: 129.19), controlPoint1: CGPoint(x: 28.77, y: 128.66), controlPoint2: CGPoint(x: 29.1, y: 128.9))
        textPath.addCurve(to: CGPoint(x: 29.72, y: 130.33), controlPoint1: CGPoint(x: 29.6, y: 129.48), controlPoint2: CGPoint(x: 29.72, y: 129.86))
        textPath.addCurve(to: CGPoint(x: 29.42, y: 131.55), controlPoint1: CGPoint(x: 29.72, y: 130.83), controlPoint2: CGPoint(x: 29.62, y: 131.23))
        textPath.addCurve(to: CGPoint(x: 28.62, y: 132.3), controlPoint1: CGPoint(x: 29.21, y: 131.87), controlPoint2: CGPoint(x: 28.95, y: 132.12))
        textPath.addCurve(to: CGPoint(x: 27.51, y: 132.69), controlPoint1: CGPoint(x: 28.29, y: 132.48), controlPoint2: CGPoint(x: 27.92, y: 132.61))
        textPath.addCurve(to: CGPoint(x: 26.28, y: 132.8), controlPoint1: CGPoint(x: 27.09, y: 132.77), controlPoint2: CGPoint(x: 26.69, y: 132.8))
        textPath.addCurve(to: CGPoint(x: 24.8, y: 132.61), controlPoint1: CGPoint(x: 25.77, y: 132.8), controlPoint2: CGPoint(x: 25.28, y: 132.74))
        textPath.addCurve(to: CGPoint(x: 23.53, y: 132.02), controlPoint1: CGPoint(x: 24.32, y: 132.49), controlPoint2: CGPoint(x: 23.9, y: 132.29))
        textPath.addCurve(to: CGPoint(x: 22.66, y: 131.01), controlPoint1: CGPoint(x: 23.17, y: 131.76), controlPoint2: CGPoint(x: 22.88, y: 131.42))
        textPath.addCurve(to: CGPoint(x: 22.33, y: 129.53), controlPoint1: CGPoint(x: 22.44, y: 130.6), controlPoint2: CGPoint(x: 22.33, y: 130.11))
        textPath.addLine(to: CGPoint(x: 20.62, y: 129.53))
        textPath.addCurve(to: CGPoint(x: 21.06, y: 131.67), controlPoint1: CGPoint(x: 20.62, y: 130.36), controlPoint2: CGPoint(x: 20.77, y: 131.07))
        textPath.addCurve(to: CGPoint(x: 22.28, y: 133.15), controlPoint1: CGPoint(x: 21.36, y: 132.27), controlPoint2: CGPoint(x: 21.77, y: 132.77))
        textPath.addCurve(to: CGPoint(x: 24.07, y: 134.02), controlPoint1: CGPoint(x: 22.79, y: 133.54), controlPoint2: CGPoint(x: 23.39, y: 133.83))
        textPath.addCurve(to: CGPoint(x: 26.22, y: 134.3), controlPoint1: CGPoint(x: 24.74, y: 134.21), controlPoint2: CGPoint(x: 25.46, y: 134.3))
        textPath.addCurve(to: CGPoint(x: 28.09, y: 134.09), controlPoint1: CGPoint(x: 26.84, y: 134.3), controlPoint2: CGPoint(x: 27.47, y: 134.23))
        textPath.addCurve(to: CGPoint(x: 29.8, y: 133.38), controlPoint1: CGPoint(x: 28.72, y: 133.94), controlPoint2: CGPoint(x: 29.29, y: 133.71))
        textPath.addCurve(to: CGPoint(x: 31.04, y: 132.13), controlPoint1: CGPoint(x: 30.3, y: 133.06), controlPoint2: CGPoint(x: 30.72, y: 132.64))
        textPath.addCurve(to: CGPoint(x: 31.52, y: 130.28), controlPoint1: CGPoint(x: 31.36, y: 131.62), controlPoint2: CGPoint(x: 31.52, y: 131))
        textPath.addCurve(to: CGPoint(x: 31.15, y: 128.6), controlPoint1: CGPoint(x: 31.52, y: 129.6), controlPoint2: CGPoint(x: 31.4, y: 129.05))
        textPath.addCurve(to: CGPoint(x: 30.17, y: 127.5), controlPoint1: CGPoint(x: 30.91, y: 128.16), controlPoint2: CGPoint(x: 30.58, y: 127.79))
        textPath.addCurve(to: CGPoint(x: 28.77, y: 126.81), controlPoint1: CGPoint(x: 29.75, y: 127.21), controlPoint2: CGPoint(x: 29.29, y: 126.98))
        textPath.addCurve(to: CGPoint(x: 27.18, y: 126.36), controlPoint1: CGPoint(x: 28.25, y: 126.64), controlPoint2: CGPoint(x: 27.72, y: 126.49))
        textPath.addCurve(to: CGPoint(x: 25.6, y: 126.01), controlPoint1: CGPoint(x: 26.64, y: 126.24), controlPoint2: CGPoint(x: 26.12, y: 126.12))
        textPath.addCurve(to: CGPoint(x: 24.2, y: 125.6), controlPoint1: CGPoint(x: 25.08, y: 125.9), controlPoint2: CGPoint(x: 24.61, y: 125.77))
        textPath.addCurve(to: CGPoint(x: 23.21, y: 124.97), controlPoint1: CGPoint(x: 23.79, y: 125.44), controlPoint2: CGPoint(x: 23.46, y: 125.23))
        textPath.addCurve(to: CGPoint(x: 22.84, y: 123.95), controlPoint1: CGPoint(x: 22.96, y: 124.71), controlPoint2: CGPoint(x: 22.84, y: 124.37))
        textPath.addCurve(to: CGPoint(x: 23.1, y: 122.84), controlPoint1: CGPoint(x: 22.84, y: 123.51), controlPoint2: CGPoint(x: 22.93, y: 123.14))
        textPath.addCurve(to: CGPoint(x: 23.78, y: 122.12), controlPoint1: CGPoint(x: 23.27, y: 122.54), controlPoint2: CGPoint(x: 23.5, y: 122.3))
        textPath.addCurve(to: CGPoint(x: 24.76, y: 121.75), controlPoint1: CGPoint(x: 24.07, y: 121.95), controlPoint2: CGPoint(x: 24.39, y: 121.82))
        textPath.addCurve(to: CGPoint(x: 25.88, y: 121.63), controlPoint1: CGPoint(x: 25.13, y: 121.67), controlPoint2: CGPoint(x: 25.5, y: 121.63))
        textPath.addCurve(to: CGPoint(x: 28.19, y: 122.29), controlPoint1: CGPoint(x: 26.82, y: 121.63), controlPoint2: CGPoint(x: 27.59, y: 121.85))
        textPath.addCurve(to: CGPoint(x: 29.24, y: 124.41), controlPoint1: CGPoint(x: 28.79, y: 122.72), controlPoint2: CGPoint(x: 29.14, y: 123.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 41.58, y: 134))
        textPath.addLine(to: CGPoint(x: 41.58, y: 124.18))
        textPath.addLine(to: CGPoint(x: 39.96, y: 124.18))
        textPath.addLine(to: CGPoint(x: 39.96, y: 129.72))
        textPath.addCurve(to: CGPoint(x: 39.78, y: 130.95), controlPoint1: CGPoint(x: 39.96, y: 130.17), controlPoint2: CGPoint(x: 39.9, y: 130.58))
        textPath.addCurve(to: CGPoint(x: 39.24, y: 131.93), controlPoint1: CGPoint(x: 39.66, y: 131.32), controlPoint2: CGPoint(x: 39.48, y: 131.65))
        textPath.addCurve(to: CGPoint(x: 38.34, y: 132.57), controlPoint1: CGPoint(x: 39, y: 132.21), controlPoint2: CGPoint(x: 38.7, y: 132.42))
        textPath.addCurve(to: CGPoint(x: 37.05, y: 132.8), controlPoint1: CGPoint(x: 37.97, y: 132.73), controlPoint2: CGPoint(x: 37.55, y: 132.8))
        textPath.addCurve(to: CGPoint(x: 35.59, y: 132.27), controlPoint1: CGPoint(x: 36.43, y: 132.8), controlPoint2: CGPoint(x: 35.95, y: 132.63))
        textPath.addCurve(to: CGPoint(x: 35.06, y: 130.83), controlPoint1: CGPoint(x: 35.24, y: 131.92), controlPoint2: CGPoint(x: 35.06, y: 131.44))
        textPath.addLine(to: CGPoint(x: 35.06, y: 124.18))
        textPath.addLine(to: CGPoint(x: 33.44, y: 124.18))
        textPath.addLine(to: CGPoint(x: 33.44, y: 130.64))
        textPath.addCurve(to: CGPoint(x: 33.6, y: 132.09), controlPoint1: CGPoint(x: 33.44, y: 131.17), controlPoint2: CGPoint(x: 33.5, y: 131.65))
        textPath.addCurve(to: CGPoint(x: 34.17, y: 133.22), controlPoint1: CGPoint(x: 33.71, y: 132.53), controlPoint2: CGPoint(x: 33.9, y: 132.9))
        textPath.addCurve(to: CGPoint(x: 35.21, y: 133.95), controlPoint1: CGPoint(x: 34.43, y: 133.54), controlPoint2: CGPoint(x: 34.78, y: 133.78))
        textPath.addCurve(to: CGPoint(x: 36.83, y: 134.21), controlPoint1: CGPoint(x: 35.64, y: 134.12), controlPoint2: CGPoint(x: 36.18, y: 134.21))
        textPath.addCurve(to: CGPoint(x: 38.71, y: 133.78), controlPoint1: CGPoint(x: 37.55, y: 134.21), controlPoint2: CGPoint(x: 38.17, y: 134.07))
        textPath.addCurve(to: CGPoint(x: 40.02, y: 132.44), controlPoint1: CGPoint(x: 39.24, y: 133.5), controlPoint2: CGPoint(x: 39.68, y: 133.05))
        textPath.addLine(to: CGPoint(x: 40.06, y: 132.44))
        textPath.addLine(to: CGPoint(x: 40.06, y: 134))
        textPath.addLine(to: CGPoint(x: 41.58, y: 134))
        textPath.close()
        textPath.move(to: CGPoint(x: 44.06, y: 120.43))
        textPath.addLine(to: CGPoint(x: 44.06, y: 134))
        textPath.addLine(to: CGPoint(x: 45.68, y: 134))
        textPath.addLine(to: CGPoint(x: 45.68, y: 132.69))
        textPath.addLine(to: CGPoint(x: 45.72, y: 132.69))
        textPath.addCurve(to: CGPoint(x: 46.37, y: 133.42), controlPoint1: CGPoint(x: 45.89, y: 132.98), controlPoint2: CGPoint(x: 46.11, y: 133.22))
        textPath.addCurve(to: CGPoint(x: 47.2, y: 133.89), controlPoint1: CGPoint(x: 46.63, y: 133.62), controlPoint2: CGPoint(x: 46.91, y: 133.77))
        textPath.addCurve(to: CGPoint(x: 48.08, y: 134.13), controlPoint1: CGPoint(x: 47.49, y: 134), controlPoint2: CGPoint(x: 47.79, y: 134.08))
        textPath.addCurve(to: CGPoint(x: 48.89, y: 134.21), controlPoint1: CGPoint(x: 48.38, y: 134.18), controlPoint2: CGPoint(x: 48.65, y: 134.21))
        textPath.addCurve(to: CGPoint(x: 50.86, y: 133.81), controlPoint1: CGPoint(x: 49.64, y: 134.21), controlPoint2: CGPoint(x: 50.29, y: 134.08))
        textPath.addCurve(to: CGPoint(x: 52.26, y: 132.72), controlPoint1: CGPoint(x: 51.42, y: 133.54), controlPoint2: CGPoint(x: 51.89, y: 133.18))
        textPath.addCurve(to: CGPoint(x: 53.1, y: 131.09), controlPoint1: CGPoint(x: 52.64, y: 132.26), controlPoint2: CGPoint(x: 52.92, y: 131.71))
        textPath.addCurve(to: CGPoint(x: 53.37, y: 129.12), controlPoint1: CGPoint(x: 53.28, y: 130.47), controlPoint2: CGPoint(x: 53.37, y: 129.81))
        textPath.addCurve(to: CGPoint(x: 53.09, y: 127.14), controlPoint1: CGPoint(x: 53.37, y: 128.42), controlPoint2: CGPoint(x: 53.28, y: 127.76))
        textPath.addCurve(to: CGPoint(x: 52.24, y: 125.5), controlPoint1: CGPoint(x: 52.9, y: 126.52), controlPoint2: CGPoint(x: 52.62, y: 125.97))
        textPath.addCurve(to: CGPoint(x: 50.84, y: 124.37), controlPoint1: CGPoint(x: 51.87, y: 125.02), controlPoint2: CGPoint(x: 51.4, y: 124.65))
        textPath.addCurve(to: CGPoint(x: 48.85, y: 123.95), controlPoint1: CGPoint(x: 50.27, y: 124.09), controlPoint2: CGPoint(x: 49.61, y: 123.95))
        textPath.addCurve(to: CGPoint(x: 46.97, y: 124.32), controlPoint1: CGPoint(x: 48.17, y: 123.95), controlPoint2: CGPoint(x: 47.54, y: 124.07))
        textPath.addCurve(to: CGPoint(x: 45.72, y: 125.51), controlPoint1: CGPoint(x: 46.4, y: 124.57), controlPoint2: CGPoint(x: 45.98, y: 124.96))
        textPath.addLine(to: CGPoint(x: 45.68, y: 125.51))
        textPath.addLine(to: CGPoint(x: 45.68, y: 120.43))
        textPath.addLine(to: CGPoint(x: 44.06, y: 120.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 51.66, y: 129))
        textPath.addCurve(to: CGPoint(x: 51.51, y: 130.41), controlPoint1: CGPoint(x: 51.66, y: 129.48), controlPoint2: CGPoint(x: 51.61, y: 129.95))
        textPath.addCurve(to: CGPoint(x: 51.02, y: 131.62), controlPoint1: CGPoint(x: 51.41, y: 130.87), controlPoint2: CGPoint(x: 51.25, y: 131.27))
        textPath.addCurve(to: CGPoint(x: 50.12, y: 132.48), controlPoint1: CGPoint(x: 50.79, y: 131.98), controlPoint2: CGPoint(x: 50.49, y: 132.26))
        textPath.addCurve(to: CGPoint(x: 48.72, y: 132.8), controlPoint1: CGPoint(x: 49.74, y: 132.7), controlPoint2: CGPoint(x: 49.28, y: 132.8))
        textPath.addCurve(to: CGPoint(x: 47.29, y: 132.49), controlPoint1: CGPoint(x: 48.16, y: 132.8), controlPoint2: CGPoint(x: 47.69, y: 132.7))
        textPath.addCurve(to: CGPoint(x: 46.33, y: 131.66), controlPoint1: CGPoint(x: 46.9, y: 132.28), controlPoint2: CGPoint(x: 46.58, y: 132.01))
        textPath.addCurve(to: CGPoint(x: 45.79, y: 130.48), controlPoint1: CGPoint(x: 46.09, y: 131.32), controlPoint2: CGPoint(x: 45.91, y: 130.93))
        textPath.addCurve(to: CGPoint(x: 45.62, y: 129.08), controlPoint1: CGPoint(x: 45.68, y: 130.03), controlPoint2: CGPoint(x: 45.62, y: 129.56))
        textPath.addCurve(to: CGPoint(x: 45.78, y: 127.73), controlPoint1: CGPoint(x: 45.62, y: 128.62), controlPoint2: CGPoint(x: 45.68, y: 128.17))
        textPath.addCurve(to: CGPoint(x: 46.31, y: 126.54), controlPoint1: CGPoint(x: 45.89, y: 127.29), controlPoint2: CGPoint(x: 46.07, y: 126.89))
        textPath.addCurve(to: CGPoint(x: 47.24, y: 125.7), controlPoint1: CGPoint(x: 46.55, y: 126.19), controlPoint2: CGPoint(x: 46.86, y: 125.91))
        textPath.addCurve(to: CGPoint(x: 48.62, y: 125.37), controlPoint1: CGPoint(x: 47.62, y: 125.48), controlPoint2: CGPoint(x: 48.08, y: 125.37))
        textPath.addCurve(to: CGPoint(x: 49.98, y: 125.68), controlPoint1: CGPoint(x: 49.14, y: 125.37), controlPoint2: CGPoint(x: 49.6, y: 125.48))
        textPath.addCurve(to: CGPoint(x: 50.93, y: 126.5), controlPoint1: CGPoint(x: 50.37, y: 125.88), controlPoint2: CGPoint(x: 50.69, y: 126.15))
        textPath.addCurve(to: CGPoint(x: 51.48, y: 127.66), controlPoint1: CGPoint(x: 51.18, y: 126.84), controlPoint2: CGPoint(x: 51.36, y: 127.23))
        textPath.addCurve(to: CGPoint(x: 51.66, y: 129), controlPoint1: CGPoint(x: 51.6, y: 128.1), controlPoint2: CGPoint(x: 51.66, y: 128.55))
        textPath.close()
        textPath.move(to: CGPoint(x: 56.26, y: 130.9))
        textPath.addLine(to: CGPoint(x: 54.65, y: 130.9))
        textPath.addCurve(to: CGPoint(x: 55.03, y: 132.45), controlPoint1: CGPoint(x: 54.67, y: 131.51), controlPoint2: CGPoint(x: 54.8, y: 132.03))
        textPath.addCurve(to: CGPoint(x: 55.94, y: 133.48), controlPoint1: CGPoint(x: 55.26, y: 132.88), controlPoint2: CGPoint(x: 55.56, y: 133.22))
        textPath.addCurve(to: CGPoint(x: 57.25, y: 134.04), controlPoint1: CGPoint(x: 56.32, y: 133.74), controlPoint2: CGPoint(x: 56.76, y: 133.92))
        textPath.addCurve(to: CGPoint(x: 58.81, y: 134.21), controlPoint1: CGPoint(x: 57.74, y: 134.15), controlPoint2: CGPoint(x: 58.26, y: 134.21))
        textPath.addCurve(to: CGPoint(x: 60.3, y: 134.07), controlPoint1: CGPoint(x: 59.3, y: 134.21), controlPoint2: CGPoint(x: 59.8, y: 134.16))
        textPath.addCurve(to: CGPoint(x: 61.65, y: 133.56), controlPoint1: CGPoint(x: 60.8, y: 133.97), controlPoint2: CGPoint(x: 61.25, y: 133.8))
        textPath.addCurve(to: CGPoint(x: 62.62, y: 132.61), controlPoint1: CGPoint(x: 62.05, y: 133.32), controlPoint2: CGPoint(x: 62.37, y: 133.01))
        textPath.addCurve(to: CGPoint(x: 62.99, y: 131.13), controlPoint1: CGPoint(x: 62.87, y: 132.22), controlPoint2: CGPoint(x: 62.99, y: 131.73))
        textPath.addCurve(to: CGPoint(x: 62.71, y: 129.95), controlPoint1: CGPoint(x: 62.99, y: 130.66), controlPoint2: CGPoint(x: 62.9, y: 130.27))
        textPath.addCurve(to: CGPoint(x: 61.99, y: 129.16), controlPoint1: CGPoint(x: 62.53, y: 129.64), controlPoint2: CGPoint(x: 62.29, y: 129.37))
        textPath.addCurve(to: CGPoint(x: 60.97, y: 128.66), controlPoint1: CGPoint(x: 61.69, y: 128.96), controlPoint2: CGPoint(x: 61.35, y: 128.79))
        textPath.addCurve(to: CGPoint(x: 59.78, y: 128.34), controlPoint1: CGPoint(x: 60.58, y: 128.53), controlPoint2: CGPoint(x: 60.18, y: 128.43))
        textPath.addCurve(to: CGPoint(x: 58.64, y: 128.08), controlPoint1: CGPoint(x: 59.4, y: 128.25), controlPoint2: CGPoint(x: 59.02, y: 128.16))
        textPath.addCurve(to: CGPoint(x: 57.61, y: 127.78), controlPoint1: CGPoint(x: 58.26, y: 128), controlPoint2: CGPoint(x: 57.92, y: 127.9))
        textPath.addCurve(to: CGPoint(x: 56.86, y: 127.32), controlPoint1: CGPoint(x: 57.31, y: 127.66), controlPoint2: CGPoint(x: 57.06, y: 127.51))
        textPath.addCurve(to: CGPoint(x: 56.57, y: 126.63), controlPoint1: CGPoint(x: 56.66, y: 127.14), controlPoint2: CGPoint(x: 56.57, y: 126.91))
        textPath.addCurve(to: CGPoint(x: 56.76, y: 126.01), controlPoint1: CGPoint(x: 56.57, y: 126.37), controlPoint2: CGPoint(x: 56.63, y: 126.17))
        textPath.addCurve(to: CGPoint(x: 57.25, y: 125.63), controlPoint1: CGPoint(x: 56.88, y: 125.85), controlPoint2: CGPoint(x: 57.05, y: 125.73))
        textPath.addCurve(to: CGPoint(x: 57.92, y: 125.43), controlPoint1: CGPoint(x: 57.45, y: 125.54), controlPoint2: CGPoint(x: 57.68, y: 125.47))
        textPath.addCurve(to: CGPoint(x: 58.66, y: 125.37), controlPoint1: CGPoint(x: 58.17, y: 125.39), controlPoint2: CGPoint(x: 58.42, y: 125.37))
        textPath.addCurve(to: CGPoint(x: 59.44, y: 125.46), controlPoint1: CGPoint(x: 58.92, y: 125.37), controlPoint2: CGPoint(x: 59.19, y: 125.4))
        textPath.addCurve(to: CGPoint(x: 60.16, y: 125.74), controlPoint1: CGPoint(x: 59.7, y: 125.52), controlPoint2: CGPoint(x: 59.94, y: 125.61))
        textPath.addCurve(to: CGPoint(x: 60.69, y: 126.24), controlPoint1: CGPoint(x: 60.37, y: 125.86), controlPoint2: CGPoint(x: 60.55, y: 126.03))
        textPath.addCurve(to: CGPoint(x: 60.94, y: 127.03), controlPoint1: CGPoint(x: 60.83, y: 126.45), controlPoint2: CGPoint(x: 60.91, y: 126.71))
        textPath.addLine(to: CGPoint(x: 62.55, y: 127.03))
        textPath.addCurve(to: CGPoint(x: 62.17, y: 125.54), controlPoint1: CGPoint(x: 62.51, y: 126.43), controlPoint2: CGPoint(x: 62.39, y: 125.93))
        textPath.addCurve(to: CGPoint(x: 61.31, y: 124.59), controlPoint1: CGPoint(x: 61.96, y: 125.14), controlPoint2: CGPoint(x: 61.67, y: 124.82))
        textPath.addCurve(to: CGPoint(x: 60.06, y: 124.09), controlPoint1: CGPoint(x: 60.95, y: 124.35), controlPoint2: CGPoint(x: 60.53, y: 124.19))
        textPath.addCurve(to: CGPoint(x: 58.52, y: 123.95), controlPoint1: CGPoint(x: 59.59, y: 124), controlPoint2: CGPoint(x: 59.08, y: 123.95))
        textPath.addCurve(to: CGPoint(x: 57.22, y: 124.11), controlPoint1: CGPoint(x: 58.09, y: 123.95), controlPoint2: CGPoint(x: 57.66, y: 124))
        textPath.addCurve(to: CGPoint(x: 56.04, y: 124.6), controlPoint1: CGPoint(x: 56.78, y: 124.22), controlPoint2: CGPoint(x: 56.39, y: 124.38))
        textPath.addCurve(to: CGPoint(x: 55.19, y: 125.47), controlPoint1: CGPoint(x: 55.7, y: 124.83), controlPoint2: CGPoint(x: 55.41, y: 125.11))
        textPath.addCurve(to: CGPoint(x: 54.86, y: 126.74), controlPoint1: CGPoint(x: 54.97, y: 125.82), controlPoint2: CGPoint(x: 54.86, y: 126.25))
        textPath.addCurve(to: CGPoint(x: 55.33, y: 128.22), controlPoint1: CGPoint(x: 54.86, y: 127.38), controlPoint2: CGPoint(x: 55.01, y: 127.87))
        textPath.addCurve(to: CGPoint(x: 56.52, y: 129.05), controlPoint1: CGPoint(x: 55.65, y: 128.58), controlPoint2: CGPoint(x: 56.04, y: 128.85))
        textPath.addCurve(to: CGPoint(x: 58.07, y: 129.51), controlPoint1: CGPoint(x: 56.99, y: 129.25), controlPoint2: CGPoint(x: 57.51, y: 129.4))
        textPath.addCurve(to: CGPoint(x: 59.62, y: 129.87), controlPoint1: CGPoint(x: 58.62, y: 129.61), controlPoint2: CGPoint(x: 59.14, y: 129.73))
        textPath.addCurve(to: CGPoint(x: 60.8, y: 130.39), controlPoint1: CGPoint(x: 60.09, y: 130), controlPoint2: CGPoint(x: 60.49, y: 130.17))
        textPath.addCurve(to: CGPoint(x: 61.28, y: 131.34), controlPoint1: CGPoint(x: 61.12, y: 130.61), controlPoint2: CGPoint(x: 61.28, y: 130.92))
        textPath.addCurve(to: CGPoint(x: 61.05, y: 132.09), controlPoint1: CGPoint(x: 61.28, y: 131.64), controlPoint2: CGPoint(x: 61.2, y: 131.89))
        textPath.addCurve(to: CGPoint(x: 60.47, y: 132.54), controlPoint1: CGPoint(x: 60.9, y: 132.29), controlPoint2: CGPoint(x: 60.71, y: 132.44))
        textPath.addCurve(to: CGPoint(x: 59.7, y: 132.75), controlPoint1: CGPoint(x: 60.24, y: 132.64), controlPoint2: CGPoint(x: 59.98, y: 132.71))
        textPath.addCurve(to: CGPoint(x: 58.9, y: 132.8), controlPoint1: CGPoint(x: 59.42, y: 132.78), controlPoint2: CGPoint(x: 59.16, y: 132.8))
        textPath.addCurve(to: CGPoint(x: 57.94, y: 132.71), controlPoint1: CGPoint(x: 58.57, y: 132.8), controlPoint2: CGPoint(x: 58.25, y: 132.77))
        textPath.addCurve(to: CGPoint(x: 57.11, y: 132.39), controlPoint1: CGPoint(x: 57.63, y: 132.64), controlPoint2: CGPoint(x: 57.36, y: 132.54))
        textPath.addCurve(to: CGPoint(x: 56.51, y: 131.81), controlPoint1: CGPoint(x: 56.86, y: 132.25), controlPoint2: CGPoint(x: 56.66, y: 132.05))
        textPath.addCurve(to: CGPoint(x: 56.26, y: 130.9), controlPoint1: CGPoint(x: 56.36, y: 131.56), controlPoint2: CGPoint(x: 56.28, y: 131.26))
        textPath.close()
        textPath.move(to: CGPoint(x: 71.44, y: 127.33))
        textPath.addLine(to: CGPoint(x: 73.12, y: 127.33))
        textPath.addCurve(to: CGPoint(x: 72.66, y: 125.82), controlPoint1: CGPoint(x: 73.05, y: 126.75), controlPoint2: CGPoint(x: 72.9, y: 126.24))
        textPath.addCurve(to: CGPoint(x: 71.74, y: 124.77), controlPoint1: CGPoint(x: 72.42, y: 125.4), controlPoint2: CGPoint(x: 72.11, y: 125.04))
        textPath.addCurve(to: CGPoint(x: 70.45, y: 124.15), controlPoint1: CGPoint(x: 71.36, y: 124.49), controlPoint2: CGPoint(x: 70.93, y: 124.28))
        textPath.addCurve(to: CGPoint(x: 68.88, y: 123.95), controlPoint1: CGPoint(x: 69.96, y: 124.02), controlPoint2: CGPoint(x: 69.44, y: 123.95))
        textPath.addCurve(to: CGPoint(x: 66.85, y: 124.36), controlPoint1: CGPoint(x: 68.11, y: 123.95), controlPoint2: CGPoint(x: 67.43, y: 124.09))
        textPath.addCurve(to: CGPoint(x: 65.39, y: 125.48), controlPoint1: CGPoint(x: 66.26, y: 124.63), controlPoint2: CGPoint(x: 65.78, y: 125))
        textPath.addCurve(to: CGPoint(x: 64.53, y: 127.15), controlPoint1: CGPoint(x: 65.01, y: 125.95), controlPoint2: CGPoint(x: 64.72, y: 126.51))
        textPath.addCurve(to: CGPoint(x: 64.24, y: 129.21), controlPoint1: CGPoint(x: 64.34, y: 127.79), controlPoint2: CGPoint(x: 64.24, y: 128.48))
        textPath.addCurve(to: CGPoint(x: 64.54, y: 131.24), controlPoint1: CGPoint(x: 64.24, y: 129.95), controlPoint2: CGPoint(x: 64.34, y: 130.62))
        textPath.addCurve(to: CGPoint(x: 65.41, y: 132.82), controlPoint1: CGPoint(x: 64.73, y: 131.85), controlPoint2: CGPoint(x: 65.02, y: 132.38))
        textPath.addCurve(to: CGPoint(x: 66.85, y: 133.85), controlPoint1: CGPoint(x: 65.8, y: 133.27), controlPoint2: CGPoint(x: 66.28, y: 133.61))
        textPath.addCurve(to: CGPoint(x: 68.84, y: 134.21), controlPoint1: CGPoint(x: 67.43, y: 134.09), controlPoint2: CGPoint(x: 68.09, y: 134.21))
        textPath.addCurve(to: CGPoint(x: 71.81, y: 133.22), controlPoint1: CGPoint(x: 70.09, y: 134.21), controlPoint2: CGPoint(x: 71.09, y: 133.88))
        textPath.addCurve(to: CGPoint(x: 73.17, y: 130.41), controlPoint1: CGPoint(x: 72.54, y: 132.56), controlPoint2: CGPoint(x: 73, y: 131.63))
        textPath.addLine(to: CGPoint(x: 71.52, y: 130.41))
        textPath.addCurve(to: CGPoint(x: 70.69, y: 132.18), controlPoint1: CGPoint(x: 71.42, y: 131.17), controlPoint2: CGPoint(x: 71.14, y: 131.76))
        textPath.addCurve(to: CGPoint(x: 68.82, y: 132.8), controlPoint1: CGPoint(x: 70.24, y: 132.59), controlPoint2: CGPoint(x: 69.62, y: 132.8))
        textPath.addCurve(to: CGPoint(x: 67.51, y: 132.5), controlPoint1: CGPoint(x: 68.31, y: 132.8), controlPoint2: CGPoint(x: 67.88, y: 132.7))
        textPath.addCurve(to: CGPoint(x: 66.62, y: 131.69), controlPoint1: CGPoint(x: 67.14, y: 132.3), controlPoint2: CGPoint(x: 66.85, y: 132.03))
        textPath.addCurve(to: CGPoint(x: 66.11, y: 130.54), controlPoint1: CGPoint(x: 66.39, y: 131.36), controlPoint2: CGPoint(x: 66.22, y: 130.97))
        textPath.addCurve(to: CGPoint(x: 65.95, y: 129.21), controlPoint1: CGPoint(x: 66.01, y: 130.11), controlPoint2: CGPoint(x: 65.95, y: 129.67))
        textPath.addCurve(to: CGPoint(x: 66.1, y: 127.78), controlPoint1: CGPoint(x: 65.95, y: 128.72), controlPoint2: CGPoint(x: 66, y: 128.24))
        textPath.addCurve(to: CGPoint(x: 66.61, y: 126.55), controlPoint1: CGPoint(x: 66.21, y: 127.32), controlPoint2: CGPoint(x: 66.37, y: 126.91))
        textPath.addCurve(to: CGPoint(x: 67.55, y: 125.7), controlPoint1: CGPoint(x: 66.84, y: 126.2), controlPoint2: CGPoint(x: 67.16, y: 125.91))
        textPath.addCurve(to: CGPoint(x: 69.01, y: 125.37), controlPoint1: CGPoint(x: 67.94, y: 125.48), controlPoint2: CGPoint(x: 68.43, y: 125.37))
        textPath.addCurve(to: CGPoint(x: 70.65, y: 125.89), controlPoint1: CGPoint(x: 69.7, y: 125.37), controlPoint2: CGPoint(x: 70.24, y: 125.54))
        textPath.addCurve(to: CGPoint(x: 71.44, y: 127.33), controlPoint1: CGPoint(x: 71.05, y: 126.23), controlPoint2: CGPoint(x: 71.32, y: 126.71))
        textPath.close()
        textPath.move(to: CGPoint(x: 74.92, y: 124.18))
        textPath.addLine(to: CGPoint(x: 74.92, y: 134))
        textPath.addLine(to: CGPoint(x: 76.54, y: 134))
        textPath.addLine(to: CGPoint(x: 76.54, y: 129.63))
        textPath.addCurve(to: CGPoint(x: 76.73, y: 127.95), controlPoint1: CGPoint(x: 76.54, y: 129), controlPoint2: CGPoint(x: 76.6, y: 128.44))
        textPath.addCurve(to: CGPoint(x: 77.33, y: 126.7), controlPoint1: CGPoint(x: 76.85, y: 127.46), controlPoint2: CGPoint(x: 77.05, y: 127.05))
        textPath.addCurve(to: CGPoint(x: 78.44, y: 125.93), controlPoint1: CGPoint(x: 77.61, y: 126.36), controlPoint2: CGPoint(x: 77.98, y: 126.1))
        textPath.addCurve(to: CGPoint(x: 80.09, y: 125.66), controlPoint1: CGPoint(x: 78.89, y: 125.75), controlPoint2: CGPoint(x: 79.44, y: 125.66))
        textPath.addLine(to: CGPoint(x: 80.09, y: 123.95))
        textPath.addCurve(to: CGPoint(x: 77.92, y: 124.48), controlPoint1: CGPoint(x: 79.21, y: 123.92), controlPoint2: CGPoint(x: 78.49, y: 124.1))
        textPath.addCurve(to: CGPoint(x: 76.48, y: 126.25), controlPoint1: CGPoint(x: 77.35, y: 124.86), controlPoint2: CGPoint(x: 76.87, y: 125.45))
        textPath.addLine(to: CGPoint(x: 76.44, y: 126.25))
        textPath.addLine(to: CGPoint(x: 76.44, y: 124.18))
        textPath.addLine(to: CGPoint(x: 74.92, y: 124.18))
        textPath.close()
        textPath.move(to: CGPoint(x: 83.01, y: 122.41))
        textPath.addLine(to: CGPoint(x: 83.01, y: 120.43))
        textPath.addLine(to: CGPoint(x: 81.4, y: 120.43))
        textPath.addLine(to: CGPoint(x: 81.4, y: 122.41))
        textPath.addLine(to: CGPoint(x: 83.01, y: 122.41))
        textPath.close()
        textPath.move(to: CGPoint(x: 81.4, y: 124.18))
        textPath.addLine(to: CGPoint(x: 81.4, y: 134))
        textPath.addLine(to: CGPoint(x: 83.01, y: 134))
        textPath.addLine(to: CGPoint(x: 83.01, y: 124.18))
        textPath.addLine(to: CGPoint(x: 81.4, y: 124.18))
        textPath.close()
        textPath.move(to: CGPoint(x: 85.58, y: 120.43))
        textPath.addLine(to: CGPoint(x: 85.58, y: 134))
        textPath.addLine(to: CGPoint(x: 87.19, y: 134))
        textPath.addLine(to: CGPoint(x: 87.19, y: 132.69))
        textPath.addLine(to: CGPoint(x: 87.23, y: 132.69))
        textPath.addCurve(to: CGPoint(x: 87.89, y: 133.42), controlPoint1: CGPoint(x: 87.41, y: 132.98), controlPoint2: CGPoint(x: 87.63, y: 133.22))
        textPath.addCurve(to: CGPoint(x: 88.71, y: 133.89), controlPoint1: CGPoint(x: 88.15, y: 133.62), controlPoint2: CGPoint(x: 88.42, y: 133.77))
        textPath.addCurve(to: CGPoint(x: 89.6, y: 134.13), controlPoint1: CGPoint(x: 89.01, y: 134), controlPoint2: CGPoint(x: 89.3, y: 134.08))
        textPath.addCurve(to: CGPoint(x: 90.41, y: 134.21), controlPoint1: CGPoint(x: 89.9, y: 134.18), controlPoint2: CGPoint(x: 90.16, y: 134.21))
        textPath.addCurve(to: CGPoint(x: 92.37, y: 133.81), controlPoint1: CGPoint(x: 91.15, y: 134.21), controlPoint2: CGPoint(x: 91.81, y: 134.08))
        textPath.addCurve(to: CGPoint(x: 93.78, y: 132.72), controlPoint1: CGPoint(x: 92.94, y: 133.54), controlPoint2: CGPoint(x: 93.4, y: 133.18))
        textPath.addCurve(to: CGPoint(x: 94.61, y: 131.09), controlPoint1: CGPoint(x: 94.15, y: 132.26), controlPoint2: CGPoint(x: 94.43, y: 131.71))
        textPath.addCurve(to: CGPoint(x: 94.89, y: 129.12), controlPoint1: CGPoint(x: 94.8, y: 130.47), controlPoint2: CGPoint(x: 94.89, y: 129.81))
        textPath.addCurve(to: CGPoint(x: 94.6, y: 127.14), controlPoint1: CGPoint(x: 94.89, y: 128.42), controlPoint2: CGPoint(x: 94.79, y: 127.76))
        textPath.addCurve(to: CGPoint(x: 93.76, y: 125.5), controlPoint1: CGPoint(x: 94.41, y: 126.52), controlPoint2: CGPoint(x: 94.13, y: 125.97))
        textPath.addCurve(to: CGPoint(x: 92.35, y: 124.37), controlPoint1: CGPoint(x: 93.39, y: 125.02), controlPoint2: CGPoint(x: 92.92, y: 124.65))
        textPath.addCurve(to: CGPoint(x: 90.37, y: 123.95), controlPoint1: CGPoint(x: 91.79, y: 124.09), controlPoint2: CGPoint(x: 91.13, y: 123.95))
        textPath.addCurve(to: CGPoint(x: 88.49, y: 124.32), controlPoint1: CGPoint(x: 89.68, y: 123.95), controlPoint2: CGPoint(x: 89.06, y: 124.07))
        textPath.addCurve(to: CGPoint(x: 87.23, y: 125.51), controlPoint1: CGPoint(x: 87.92, y: 124.57), controlPoint2: CGPoint(x: 87.5, y: 124.96))
        textPath.addLine(to: CGPoint(x: 87.19, y: 125.51))
        textPath.addLine(to: CGPoint(x: 87.19, y: 120.43))
        textPath.addLine(to: CGPoint(x: 85.58, y: 120.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 93.18, y: 129))
        textPath.addCurve(to: CGPoint(x: 93.03, y: 130.41), controlPoint1: CGPoint(x: 93.18, y: 129.48), controlPoint2: CGPoint(x: 93.13, y: 129.95))
        textPath.addCurve(to: CGPoint(x: 92.53, y: 131.62), controlPoint1: CGPoint(x: 92.93, y: 130.87), controlPoint2: CGPoint(x: 92.76, y: 131.27))
        textPath.addCurve(to: CGPoint(x: 91.63, y: 132.48), controlPoint1: CGPoint(x: 92.31, y: 131.98), controlPoint2: CGPoint(x: 92, y: 132.26))
        textPath.addCurve(to: CGPoint(x: 90.23, y: 132.8), controlPoint1: CGPoint(x: 91.26, y: 132.7), controlPoint2: CGPoint(x: 90.79, y: 132.8))
        textPath.addCurve(to: CGPoint(x: 88.81, y: 132.49), controlPoint1: CGPoint(x: 89.68, y: 132.8), controlPoint2: CGPoint(x: 89.2, y: 132.7))
        textPath.addCurve(to: CGPoint(x: 87.85, y: 131.66), controlPoint1: CGPoint(x: 88.42, y: 132.28), controlPoint2: CGPoint(x: 88.1, y: 132.01))
        textPath.addCurve(to: CGPoint(x: 87.31, y: 130.48), controlPoint1: CGPoint(x: 87.6, y: 131.32), controlPoint2: CGPoint(x: 87.42, y: 130.93))
        textPath.addCurve(to: CGPoint(x: 87.14, y: 129.08), controlPoint1: CGPoint(x: 87.19, y: 130.03), controlPoint2: CGPoint(x: 87.14, y: 129.56))
        textPath.addCurve(to: CGPoint(x: 87.3, y: 127.73), controlPoint1: CGPoint(x: 87.14, y: 128.62), controlPoint2: CGPoint(x: 87.19, y: 128.17))
        textPath.addCurve(to: CGPoint(x: 87.82, y: 126.54), controlPoint1: CGPoint(x: 87.41, y: 127.29), controlPoint2: CGPoint(x: 87.58, y: 126.89))
        textPath.addCurve(to: CGPoint(x: 88.75, y: 125.7), controlPoint1: CGPoint(x: 88.06, y: 126.19), controlPoint2: CGPoint(x: 88.37, y: 125.91))
        textPath.addCurve(to: CGPoint(x: 90.14, y: 125.37), controlPoint1: CGPoint(x: 89.13, y: 125.48), controlPoint2: CGPoint(x: 89.59, y: 125.37))
        textPath.addCurve(to: CGPoint(x: 91.5, y: 125.68), controlPoint1: CGPoint(x: 90.66, y: 125.37), controlPoint2: CGPoint(x: 91.11, y: 125.48))
        textPath.addCurve(to: CGPoint(x: 92.45, y: 126.5), controlPoint1: CGPoint(x: 91.88, y: 125.88), controlPoint2: CGPoint(x: 92.2, y: 126.15))
        textPath.addCurve(to: CGPoint(x: 93, y: 127.66), controlPoint1: CGPoint(x: 92.7, y: 126.84), controlPoint2: CGPoint(x: 92.88, y: 127.23))
        textPath.addCurve(to: CGPoint(x: 93.18, y: 129), controlPoint1: CGPoint(x: 93.12, y: 128.1), controlPoint2: CGPoint(x: 93.18, y: 128.55))
        textPath.close()
        textPath.move(to: CGPoint(x: 103.61, y: 128.15))
        textPath.addLine(to: CGPoint(x: 97.97, y: 128.15))
        textPath.addCurve(to: CGPoint(x: 98.21, y: 127.07), controlPoint1: CGPoint(x: 97.99, y: 127.77), controlPoint2: CGPoint(x: 98.08, y: 127.41))
        textPath.addCurve(to: CGPoint(x: 98.78, y: 126.19), controlPoint1: CGPoint(x: 98.35, y: 126.74), controlPoint2: CGPoint(x: 98.54, y: 126.44))
        textPath.addCurve(to: CGPoint(x: 99.65, y: 125.59), controlPoint1: CGPoint(x: 99.03, y: 125.94), controlPoint2: CGPoint(x: 99.31, y: 125.74))
        textPath.addCurve(to: CGPoint(x: 100.78, y: 125.37), controlPoint1: CGPoint(x: 99.98, y: 125.45), controlPoint2: CGPoint(x: 100.36, y: 125.37))
        textPath.addCurve(to: CGPoint(x: 101.89, y: 125.59), controlPoint1: CGPoint(x: 101.18, y: 125.37), controlPoint2: CGPoint(x: 101.56, y: 125.45))
        textPath.addCurve(to: CGPoint(x: 102.77, y: 126.18), controlPoint1: CGPoint(x: 102.23, y: 125.74), controlPoint2: CGPoint(x: 102.52, y: 125.93))
        textPath.addCurve(to: CGPoint(x: 103.35, y: 127.06), controlPoint1: CGPoint(x: 103.01, y: 126.43), controlPoint2: CGPoint(x: 103.21, y: 126.72))
        textPath.addCurve(to: CGPoint(x: 103.61, y: 128.15), controlPoint1: CGPoint(x: 103.5, y: 127.41), controlPoint2: CGPoint(x: 103.59, y: 127.77))
        textPath.close()
        textPath.move(to: CGPoint(x: 105.17, y: 130.88))
        textPath.addLine(to: CGPoint(x: 103.57, y: 130.88))
        textPath.addCurve(to: CGPoint(x: 102.71, y: 132.33), controlPoint1: CGPoint(x: 103.43, y: 131.53), controlPoint2: CGPoint(x: 103.15, y: 132.01))
        textPath.addCurve(to: CGPoint(x: 101.03, y: 132.8), controlPoint1: CGPoint(x: 102.27, y: 132.64), controlPoint2: CGPoint(x: 101.71, y: 132.8))
        textPath.addCurve(to: CGPoint(x: 99.64, y: 132.54), controlPoint1: CGPoint(x: 100.49, y: 132.8), controlPoint2: CGPoint(x: 100.03, y: 132.71))
        textPath.addCurve(to: CGPoint(x: 98.67, y: 131.82), controlPoint1: CGPoint(x: 99.25, y: 132.36), controlPoint2: CGPoint(x: 98.92, y: 132.12))
        textPath.addCurve(to: CGPoint(x: 98.12, y: 130.8), controlPoint1: CGPoint(x: 98.42, y: 131.53), controlPoint2: CGPoint(x: 98.23, y: 131.18))
        textPath.addCurve(to: CGPoint(x: 97.97, y: 129.57), controlPoint1: CGPoint(x: 98.01, y: 130.41), controlPoint2: CGPoint(x: 97.95, y: 130))
        textPath.addLine(to: CGPoint(x: 105.32, y: 129.57))
        textPath.addCurve(to: CGPoint(x: 105.16, y: 127.69), controlPoint1: CGPoint(x: 105.35, y: 128.98), controlPoint2: CGPoint(x: 105.29, y: 128.35))
        textPath.addCurve(to: CGPoint(x: 104.44, y: 125.87), controlPoint1: CGPoint(x: 105.03, y: 127.03), controlPoint2: CGPoint(x: 104.79, y: 126.43))
        textPath.addCurve(to: CGPoint(x: 103.05, y: 124.49), controlPoint1: CGPoint(x: 104.09, y: 125.31), controlPoint2: CGPoint(x: 103.63, y: 124.85))
        textPath.addCurve(to: CGPoint(x: 100.87, y: 123.95), controlPoint1: CGPoint(x: 102.47, y: 124.13), controlPoint2: CGPoint(x: 101.75, y: 123.95))
        textPath.addCurve(to: CGPoint(x: 99.02, y: 124.33), controlPoint1: CGPoint(x: 100.2, y: 123.95), controlPoint2: CGPoint(x: 99.59, y: 124.08))
        textPath.addCurve(to: CGPoint(x: 97.56, y: 125.39), controlPoint1: CGPoint(x: 98.46, y: 124.58), controlPoint2: CGPoint(x: 97.97, y: 124.94))
        textPath.addCurve(to: CGPoint(x: 96.6, y: 127.01), controlPoint1: CGPoint(x: 97.15, y: 125.85), controlPoint2: CGPoint(x: 96.83, y: 126.39))
        textPath.addCurve(to: CGPoint(x: 96.26, y: 129.06), controlPoint1: CGPoint(x: 96.37, y: 127.63), controlPoint2: CGPoint(x: 96.26, y: 128.31))
        textPath.addCurve(to: CGPoint(x: 96.59, y: 131.13), controlPoint1: CGPoint(x: 96.28, y: 129.81), controlPoint2: CGPoint(x: 96.39, y: 130.5))
        textPath.addCurve(to: CGPoint(x: 97.47, y: 132.76), controlPoint1: CGPoint(x: 96.79, y: 131.76), controlPoint2: CGPoint(x: 97.08, y: 132.31))
        textPath.addCurve(to: CGPoint(x: 98.93, y: 133.83), controlPoint1: CGPoint(x: 97.87, y: 133.22), controlPoint2: CGPoint(x: 98.35, y: 133.58))
        textPath.addCurve(to: CGPoint(x: 100.97, y: 134.21), controlPoint1: CGPoint(x: 99.5, y: 134.08), controlPoint2: CGPoint(x: 100.18, y: 134.21))
        textPath.addCurve(to: CGPoint(x: 103.74, y: 133.37), controlPoint1: CGPoint(x: 102.08, y: 134.21), controlPoint2: CGPoint(x: 103.01, y: 133.93))
        textPath.addCurve(to: CGPoint(x: 105.17, y: 130.88), controlPoint1: CGPoint(x: 104.48, y: 132.82), controlPoint2: CGPoint(x: 104.95, y: 131.99))
        textPath.close()
        textPath.move(to: CGPoint(x: 112.52, y: 120.43))
        textPath.addLine(to: CGPoint(x: 112.52, y: 134))
        textPath.addLine(to: CGPoint(x: 114.23, y: 134))
        textPath.addLine(to: CGPoint(x: 114.23, y: 123.11))
        textPath.addLine(to: CGPoint(x: 114.27, y: 123.11))
        textPath.addLine(to: CGPoint(x: 121.36, y: 134))
        textPath.addLine(to: CGPoint(x: 123.33, y: 134))
        textPath.addLine(to: CGPoint(x: 123.33, y: 120.43))
        textPath.addLine(to: CGPoint(x: 121.62, y: 120.43))
        textPath.addLine(to: CGPoint(x: 121.62, y: 131.44))
        textPath.addLine(to: CGPoint(x: 121.58, y: 131.44))
        textPath.addLine(to: CGPoint(x: 114.44, y: 120.43))
        textPath.addLine(to: CGPoint(x: 112.52, y: 120.43))
        textPath.close()
        textPath.move(to: CGPoint(x: 127.17, y: 129.1))
        textPath.addCurve(to: CGPoint(x: 127.41, y: 127.51), controlPoint1: CGPoint(x: 127.17, y: 128.5), controlPoint2: CGPoint(x: 127.25, y: 127.97))
        textPath.addCurve(to: CGPoint(x: 128.06, y: 126.34), controlPoint1: CGPoint(x: 127.57, y: 127.05), controlPoint2: CGPoint(x: 127.78, y: 126.66))
        textPath.addCurve(to: CGPoint(x: 129.04, y: 125.62), controlPoint1: CGPoint(x: 128.34, y: 126.03), controlPoint2: CGPoint(x: 128.67, y: 125.79))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 125.37), controlPoint1: CGPoint(x: 129.42, y: 125.46), controlPoint2: CGPoint(x: 129.81, y: 125.37))
        textPath.addCurve(to: CGPoint(x: 131.42, y: 125.62), controlPoint1: CGPoint(x: 130.65, y: 125.37), controlPoint2: CGPoint(x: 131.04, y: 125.46))
        textPath.addCurve(to: CGPoint(x: 132.4, y: 126.34), controlPoint1: CGPoint(x: 131.79, y: 125.79), controlPoint2: CGPoint(x: 132.12, y: 126.03))
        textPath.addCurve(to: CGPoint(x: 133.05, y: 127.51), controlPoint1: CGPoint(x: 132.67, y: 126.66), controlPoint2: CGPoint(x: 132.89, y: 127.05))
        textPath.addCurve(to: CGPoint(x: 133.29, y: 129.1), controlPoint1: CGPoint(x: 133.21, y: 127.97), controlPoint2: CGPoint(x: 133.29, y: 128.5))
        textPath.addCurve(to: CGPoint(x: 133.05, y: 130.68), controlPoint1: CGPoint(x: 133.29, y: 129.69), controlPoint2: CGPoint(x: 133.21, y: 130.22))
        textPath.addCurve(to: CGPoint(x: 132.4, y: 131.84), controlPoint1: CGPoint(x: 132.89, y: 131.15), controlPoint2: CGPoint(x: 132.67, y: 131.53))
        textPath.addCurve(to: CGPoint(x: 131.42, y: 132.56), controlPoint1: CGPoint(x: 132.12, y: 132.15), controlPoint2: CGPoint(x: 131.79, y: 132.39))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 132.8), controlPoint1: CGPoint(x: 131.04, y: 132.72), controlPoint2: CGPoint(x: 130.65, y: 132.8))
        textPath.addCurve(to: CGPoint(x: 129.04, y: 132.56), controlPoint1: CGPoint(x: 129.81, y: 132.8), controlPoint2: CGPoint(x: 129.42, y: 132.72))
        textPath.addCurve(to: CGPoint(x: 128.06, y: 131.84), controlPoint1: CGPoint(x: 128.67, y: 132.39), controlPoint2: CGPoint(x: 128.34, y: 132.15))
        textPath.addCurve(to: CGPoint(x: 127.41, y: 130.68), controlPoint1: CGPoint(x: 127.78, y: 131.53), controlPoint2: CGPoint(x: 127.57, y: 131.15))
        textPath.addCurve(to: CGPoint(x: 127.17, y: 129.1), controlPoint1: CGPoint(x: 127.25, y: 130.22), controlPoint2: CGPoint(x: 127.17, y: 129.69))
        textPath.close()
        textPath.move(to: CGPoint(x: 125.46, y: 129.1))
        textPath.addCurve(to: CGPoint(x: 125.76, y: 131.11), controlPoint1: CGPoint(x: 125.46, y: 129.82), controlPoint2: CGPoint(x: 125.56, y: 130.49))
        textPath.addCurve(to: CGPoint(x: 126.68, y: 132.74), controlPoint1: CGPoint(x: 125.97, y: 131.73), controlPoint2: CGPoint(x: 126.27, y: 132.27))
        textPath.addCurve(to: CGPoint(x: 128.18, y: 133.82), controlPoint1: CGPoint(x: 127.08, y: 133.2), controlPoint2: CGPoint(x: 127.58, y: 133.56))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 134.21), controlPoint1: CGPoint(x: 128.77, y: 134.08), controlPoint2: CGPoint(x: 129.46, y: 134.21))
        textPath.addCurve(to: CGPoint(x: 132.29, y: 133.82), controlPoint1: CGPoint(x: 131.01, y: 134.21), controlPoint2: CGPoint(x: 131.7, y: 134.08))
        textPath.addCurve(to: CGPoint(x: 133.78, y: 132.74), controlPoint1: CGPoint(x: 132.88, y: 133.56), controlPoint2: CGPoint(x: 133.38, y: 133.2))
        textPath.addCurve(to: CGPoint(x: 134.69, y: 131.11), controlPoint1: CGPoint(x: 134.19, y: 132.27), controlPoint2: CGPoint(x: 134.49, y: 131.73))
        textPath.addCurve(to: CGPoint(x: 135, y: 129.1), controlPoint1: CGPoint(x: 134.9, y: 130.49), controlPoint2: CGPoint(x: 135, y: 129.82))
        textPath.addCurve(to: CGPoint(x: 134.69, y: 127.07), controlPoint1: CGPoint(x: 135, y: 128.38), controlPoint2: CGPoint(x: 134.9, y: 127.7))
        textPath.addCurve(to: CGPoint(x: 133.78, y: 125.44), controlPoint1: CGPoint(x: 134.49, y: 126.45), controlPoint2: CGPoint(x: 134.19, y: 125.9))
        textPath.addCurve(to: CGPoint(x: 132.29, y: 124.35), controlPoint1: CGPoint(x: 133.38, y: 124.98), controlPoint2: CGPoint(x: 132.88, y: 124.61))
        textPath.addCurve(to: CGPoint(x: 130.23, y: 123.95), controlPoint1: CGPoint(x: 131.7, y: 124.08), controlPoint2: CGPoint(x: 131.01, y: 123.95))
        textPath.addCurve(to: CGPoint(x: 128.18, y: 124.35), controlPoint1: CGPoint(x: 129.46, y: 123.95), controlPoint2: CGPoint(x: 128.77, y: 124.08))
        textPath.addCurve(to: CGPoint(x: 126.68, y: 125.44), controlPoint1: CGPoint(x: 127.58, y: 124.61), controlPoint2: CGPoint(x: 127.08, y: 124.98))
        textPath.addCurve(to: CGPoint(x: 125.76, y: 127.07), controlPoint1: CGPoint(x: 126.27, y: 125.9), controlPoint2: CGPoint(x: 125.97, y: 126.45))
        textPath.addCurve(to: CGPoint(x: 125.46, y: 129.1), controlPoint1: CGPoint(x: 125.56, y: 127.7), controlPoint2: CGPoint(x: 125.46, y: 128.38))
        textPath.close()
        textPath.move(to: CGPoint(x: 146.63, y: 134))
        textPath.addLine(to: CGPoint(x: 149.76, y: 124.18))
        textPath.addLine(to: CGPoint(x: 148.09, y: 124.18))
        textPath.addLine(to: CGPoint(x: 145.89, y: 132.21))
        textPath.addLine(to: CGPoint(x: 145.85, y: 132.21))
        textPath.addLine(to: CGPoint(x: 143.8, y: 124.18))
        textPath.addLine(to: CGPoint(x: 142.03, y: 124.18))
        textPath.addLine(to: CGPoint(x: 140.05, y: 132.21))
        textPath.addLine(to: CGPoint(x: 140.01, y: 132.21))
        textPath.addLine(to: CGPoint(x: 137.79, y: 124.18))
        textPath.addLine(to: CGPoint(x: 136.01, y: 124.18))
        textPath.addLine(to: CGPoint(x: 139.16, y: 134))
        textPath.addLine(to: CGPoint(x: 140.91, y: 134))
        textPath.addLine(to: CGPoint(x: 142.88, y: 126.19))
        textPath.addLine(to: CGPoint(x: 142.92, y: 126.19))
        textPath.addLine(to: CGPoint(x: 144.92, y: 134))
        textPath.addLine(to: CGPoint(x: 146.63, y: 134))
        textPath.close()
        UIColor.white.setFill()
        textPath.fill()
    }

    @objc dynamic public class func drawStartShiftUp() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 80, height: 30))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(ButtonsForFJ092018.gradientForBox, start: CGPoint(x: 40, y: -0), end: CGPoint(x: 40, y: 30), options: [])
        context.restoreGState()


        //// StartShiftText Drawing
        let startShiftTextPath = UIBezierPath()
        startShiftTextPath.move(to: CGPoint(x: 7.79, y: 16.43))
        startShiftTextPath.addCurve(to: CGPoint(x: 8, y: 17.48), controlPoint1: CGPoint(x: 7.79, y: 16.84), controlPoint2: CGPoint(x: 7.86, y: 17.19))
        startShiftTextPath.addCurve(to: CGPoint(x: 8.58, y: 18.19), controlPoint1: CGPoint(x: 8.14, y: 17.77), controlPoint2: CGPoint(x: 8.33, y: 18.01))
        startShiftTextPath.addCurve(to: CGPoint(x: 9.44, y: 18.6), controlPoint1: CGPoint(x: 8.83, y: 18.38), controlPoint2: CGPoint(x: 9.12, y: 18.51))
        startShiftTextPath.addCurve(to: CGPoint(x: 10.5, y: 18.72), controlPoint1: CGPoint(x: 9.77, y: 18.68), controlPoint2: CGPoint(x: 10.12, y: 18.72))
        startShiftTextPath.addCurve(to: CGPoint(x: 11.55, y: 18.58), controlPoint1: CGPoint(x: 10.91, y: 18.72), controlPoint2: CGPoint(x: 11.26, y: 18.68))
        startShiftTextPath.addCurve(to: CGPoint(x: 12.26, y: 18.22), controlPoint1: CGPoint(x: 11.84, y: 18.49), controlPoint2: CGPoint(x: 12.08, y: 18.37))
        startShiftTextPath.addCurve(to: CGPoint(x: 12.65, y: 17.7), controlPoint1: CGPoint(x: 12.44, y: 18.06), controlPoint2: CGPoint(x: 12.57, y: 17.89))
        startShiftTextPath.addCurve(to: CGPoint(x: 12.77, y: 17.11), controlPoint1: CGPoint(x: 12.73, y: 17.5), controlPoint2: CGPoint(x: 12.77, y: 17.31))
        startShiftTextPath.addCurve(to: CGPoint(x: 12.49, y: 16.2), controlPoint1: CGPoint(x: 12.77, y: 16.69), controlPoint2: CGPoint(x: 12.68, y: 16.39))
        startShiftTextPath.addCurve(to: CGPoint(x: 11.88, y: 15.78), controlPoint1: CGPoint(x: 12.3, y: 16), controlPoint2: CGPoint(x: 12.1, y: 15.87))
        startShiftTextPath.addCurve(to: CGPoint(x: 10.55, y: 15.39), controlPoint1: CGPoint(x: 11.5, y: 15.64), controlPoint2: CGPoint(x: 11.06, y: 15.51))
        startShiftTextPath.addCurve(to: CGPoint(x: 8.69, y: 14.9), controlPoint1: CGPoint(x: 10.05, y: 15.26), controlPoint2: CGPoint(x: 9.43, y: 15.1))
        startShiftTextPath.addCurve(to: CGPoint(x: 7.54, y: 14.43), controlPoint1: CGPoint(x: 8.23, y: 14.78), controlPoint2: CGPoint(x: 7.85, y: 14.62))
        startShiftTextPath.addCurve(to: CGPoint(x: 6.81, y: 13.78), controlPoint1: CGPoint(x: 7.23, y: 14.23), controlPoint2: CGPoint(x: 6.99, y: 14.02))
        startShiftTextPath.addCurve(to: CGPoint(x: 6.43, y: 13.01), controlPoint1: CGPoint(x: 6.63, y: 13.53), controlPoint2: CGPoint(x: 6.51, y: 13.28))
        startShiftTextPath.addCurve(to: CGPoint(x: 6.32, y: 12.19), controlPoint1: CGPoint(x: 6.35, y: 12.74), controlPoint2: CGPoint(x: 6.32, y: 12.47))
        startShiftTextPath.addCurve(to: CGPoint(x: 6.65, y: 10.78), controlPoint1: CGPoint(x: 6.32, y: 11.64), controlPoint2: CGPoint(x: 6.43, y: 11.18))
        startShiftTextPath.addCurve(to: CGPoint(x: 7.55, y: 9.8), controlPoint1: CGPoint(x: 6.88, y: 10.39), controlPoint2: CGPoint(x: 7.18, y: 10.06))
        startShiftTextPath.addCurve(to: CGPoint(x: 8.81, y: 9.22), controlPoint1: CGPoint(x: 7.92, y: 9.54), controlPoint2: CGPoint(x: 8.34, y: 9.35))
        startShiftTextPath.addCurve(to: CGPoint(x: 10.23, y: 9.03), controlPoint1: CGPoint(x: 9.28, y: 9.1), controlPoint2: CGPoint(x: 9.75, y: 9.03))
        startShiftTextPath.addCurve(to: CGPoint(x: 11.81, y: 9.25), controlPoint1: CGPoint(x: 10.79, y: 9.03), controlPoint2: CGPoint(x: 11.32, y: 9.11))
        startShiftTextPath.addCurve(to: CGPoint(x: 13.12, y: 9.91), controlPoint1: CGPoint(x: 12.31, y: 9.4), controlPoint2: CGPoint(x: 12.74, y: 9.61))
        startShiftTextPath.addCurve(to: CGPoint(x: 14.01, y: 10.98), controlPoint1: CGPoint(x: 13.5, y: 10.2), controlPoint2: CGPoint(x: 13.79, y: 10.55))
        startShiftTextPath.addCurve(to: CGPoint(x: 14.34, y: 12.45), controlPoint1: CGPoint(x: 14.23, y: 11.4), controlPoint2: CGPoint(x: 14.34, y: 11.89))
        startShiftTextPath.addLine(to: CGPoint(x: 12.47, y: 12.45))
        startShiftTextPath.addCurve(to: CGPoint(x: 11.76, y: 10.99), controlPoint1: CGPoint(x: 12.42, y: 11.76), controlPoint2: CGPoint(x: 12.18, y: 11.28))
        startShiftTextPath.addCurve(to: CGPoint(x: 10.16, y: 10.56), controlPoint1: CGPoint(x: 11.34, y: 10.71), controlPoint2: CGPoint(x: 10.81, y: 10.56))
        startShiftTextPath.addCurve(to: CGPoint(x: 9.48, y: 10.63), controlPoint1: CGPoint(x: 9.94, y: 10.56), controlPoint2: CGPoint(x: 9.71, y: 10.59))
        startShiftTextPath.addCurve(to: CGPoint(x: 8.85, y: 10.86), controlPoint1: CGPoint(x: 9.25, y: 10.68), controlPoint2: CGPoint(x: 9.04, y: 10.75))
        startShiftTextPath.addCurve(to: CGPoint(x: 8.38, y: 11.28), controlPoint1: CGPoint(x: 8.66, y: 10.96), controlPoint2: CGPoint(x: 8.51, y: 11.1))
        startShiftTextPath.addCurve(to: CGPoint(x: 8.19, y: 11.96), controlPoint1: CGPoint(x: 8.25, y: 11.47), controlPoint2: CGPoint(x: 8.19, y: 11.69))
        startShiftTextPath.addCurve(to: CGPoint(x: 8.54, y: 12.85), controlPoint1: CGPoint(x: 8.19, y: 12.34), controlPoint2: CGPoint(x: 8.31, y: 12.64))
        startShiftTextPath.addCurve(to: CGPoint(x: 9.47, y: 13.34), controlPoint1: CGPoint(x: 8.78, y: 13.07), controlPoint2: CGPoint(x: 9.09, y: 13.23))
        startShiftTextPath.addCurve(to: CGPoint(x: 9.94, y: 13.47), controlPoint1: CGPoint(x: 9.51, y: 13.35), controlPoint2: CGPoint(x: 9.66, y: 13.39))
        startShiftTextPath.addCurve(to: CGPoint(x: 10.86, y: 13.72), controlPoint1: CGPoint(x: 10.22, y: 13.54), controlPoint2: CGPoint(x: 10.52, y: 13.62))
        startShiftTextPath.addCurve(to: CGPoint(x: 11.86, y: 13.98), controlPoint1: CGPoint(x: 11.2, y: 13.81), controlPoint2: CGPoint(x: 11.53, y: 13.89))
        startShiftTextPath.addCurve(to: CGPoint(x: 12.56, y: 14.16), controlPoint1: CGPoint(x: 12.19, y: 14.06), controlPoint2: CGPoint(x: 12.42, y: 14.12))
        startShiftTextPath.addCurve(to: CGPoint(x: 13.47, y: 14.61), controlPoint1: CGPoint(x: 12.91, y: 14.28), controlPoint2: CGPoint(x: 13.21, y: 14.42))
        startShiftTextPath.addCurve(to: CGPoint(x: 14.12, y: 15.27), controlPoint1: CGPoint(x: 13.73, y: 14.81), controlPoint2: CGPoint(x: 13.95, y: 15.02))
        startShiftTextPath.addCurve(to: CGPoint(x: 14.51, y: 16.06), controlPoint1: CGPoint(x: 14.3, y: 15.51), controlPoint2: CGPoint(x: 14.43, y: 15.77))
        startShiftTextPath.addCurve(to: CGPoint(x: 14.64, y: 16.89), controlPoint1: CGPoint(x: 14.6, y: 16.34), controlPoint2: CGPoint(x: 14.64, y: 16.61))
        startShiftTextPath.addCurve(to: CGPoint(x: 14.27, y: 18.43), controlPoint1: CGPoint(x: 14.64, y: 17.5), controlPoint2: CGPoint(x: 14.52, y: 18.01))
        startShiftTextPath.addCurve(to: CGPoint(x: 13.31, y: 19.47), controlPoint1: CGPoint(x: 14.03, y: 18.86), controlPoint2: CGPoint(x: 13.71, y: 19.2))
        startShiftTextPath.addCurve(to: CGPoint(x: 11.94, y: 20.07), controlPoint1: CGPoint(x: 12.91, y: 19.75), controlPoint2: CGPoint(x: 12.45, y: 19.94))
        startShiftTextPath.addCurve(to: CGPoint(x: 10.38, y: 20.25), controlPoint1: CGPoint(x: 11.43, y: 20.19), controlPoint2: CGPoint(x: 10.91, y: 20.25))
        startShiftTextPath.addCurve(to: CGPoint(x: 8.66, y: 20.03), controlPoint1: CGPoint(x: 9.77, y: 20.25), controlPoint2: CGPoint(x: 9.2, y: 20.18))
        startShiftTextPath.addCurve(to: CGPoint(x: 7.25, y: 19.34), controlPoint1: CGPoint(x: 8.12, y: 19.88), controlPoint2: CGPoint(x: 7.65, y: 19.65))
        startShiftTextPath.addCurve(to: CGPoint(x: 6.29, y: 18.15), controlPoint1: CGPoint(x: 6.85, y: 19.03), controlPoint2: CGPoint(x: 6.53, y: 18.63))
        startShiftTextPath.addCurve(to: CGPoint(x: 5.91, y: 16.43), controlPoint1: CGPoint(x: 6.05, y: 17.66), controlPoint2: CGPoint(x: 5.92, y: 17.09))
        startShiftTextPath.addLine(to: CGPoint(x: 7.79, y: 16.43))
        startShiftTextPath.close()
        startShiftTextPath.move(to: CGPoint(x: 15.26, y: 12.25))
        startShiftTextPath.addLine(to: CGPoint(x: 16.55, y: 12.25))
        startShiftTextPath.addLine(to: CGPoint(x: 16.55, y: 9.92))
        startShiftTextPath.addLine(to: CGPoint(x: 18.26, y: 9.92))
        startShiftTextPath.addLine(to: CGPoint(x: 18.26, y: 12.25))
        startShiftTextPath.addLine(to: CGPoint(x: 19.8, y: 12.25))
        startShiftTextPath.addLine(to: CGPoint(x: 19.8, y: 13.52))
        startShiftTextPath.addLine(to: CGPoint(x: 18.26, y: 13.52))
        startShiftTextPath.addLine(to: CGPoint(x: 18.26, y: 17.66))
        startShiftTextPath.addCurve(to: CGPoint(x: 18.28, y: 18.12), controlPoint1: CGPoint(x: 18.26, y: 17.84), controlPoint2: CGPoint(x: 18.26, y: 17.99))
        startShiftTextPath.addCurve(to: CGPoint(x: 18.38, y: 18.45), controlPoint1: CGPoint(x: 18.3, y: 18.26), controlPoint2: CGPoint(x: 18.33, y: 18.36))
        startShiftTextPath.addCurve(to: CGPoint(x: 18.63, y: 18.66), controlPoint1: CGPoint(x: 18.44, y: 18.55), controlPoint2: CGPoint(x: 18.52, y: 18.61))
        startShiftTextPath.addCurve(to: CGPoint(x: 19.08, y: 18.72), controlPoint1: CGPoint(x: 18.74, y: 18.7), controlPoint2: CGPoint(x: 18.89, y: 18.72))
        startShiftTextPath.addCurve(to: CGPoint(x: 19.44, y: 18.72), controlPoint1: CGPoint(x: 19.2, y: 18.72), controlPoint2: CGPoint(x: 19.32, y: 18.72))
        startShiftTextPath.addCurve(to: CGPoint(x: 19.8, y: 18.66), controlPoint1: CGPoint(x: 19.56, y: 18.71), controlPoint2: CGPoint(x: 19.68, y: 18.7))
        startShiftTextPath.addLine(to: CGPoint(x: 19.8, y: 19.98))
        startShiftTextPath.addCurve(to: CGPoint(x: 19.25, y: 20.05), controlPoint1: CGPoint(x: 19.61, y: 20.01), controlPoint2: CGPoint(x: 19.43, y: 20.02))
        startShiftTextPath.addCurve(to: CGPoint(x: 18.69, y: 20.08), controlPoint1: CGPoint(x: 19.07, y: 20.07), controlPoint2: CGPoint(x: 18.88, y: 20.08))
        startShiftTextPath.addCurve(to: CGPoint(x: 17.6, y: 19.95), controlPoint1: CGPoint(x: 18.24, y: 20.08), controlPoint2: CGPoint(x: 17.88, y: 20.03))
        startShiftTextPath.addCurve(to: CGPoint(x: 16.96, y: 19.57), controlPoint1: CGPoint(x: 17.33, y: 19.86), controlPoint2: CGPoint(x: 17.12, y: 19.74))
        startShiftTextPath.addCurve(to: CGPoint(x: 16.64, y: 18.95), controlPoint1: CGPoint(x: 16.8, y: 19.41), controlPoint2: CGPoint(x: 16.7, y: 19.2))
        startShiftTextPath.addCurve(to: CGPoint(x: 16.55, y: 18.09), controlPoint1: CGPoint(x: 16.59, y: 18.7), controlPoint2: CGPoint(x: 16.56, y: 18.42))
        startShiftTextPath.addLine(to: CGPoint(x: 16.55, y: 13.52))
        startShiftTextPath.addLine(to: CGPoint(x: 15.26, y: 13.52))
        startShiftTextPath.addLine(to: CGPoint(x: 15.26, y: 12.25))
        startShiftTextPath.close()
        startShiftTextPath.move(to: CGPoint(x: 27.53, y: 18.28))
        startShiftTextPath.addCurve(to: CGPoint(x: 27.61, y: 18.72), controlPoint1: CGPoint(x: 27.53, y: 18.49), controlPoint2: CGPoint(x: 27.55, y: 18.63))
        startShiftTextPath.addCurve(to: CGPoint(x: 27.93, y: 18.86), controlPoint1: CGPoint(x: 27.67, y: 18.82), controlPoint2: CGPoint(x: 27.77, y: 18.86))
        startShiftTextPath.addCurve(to: CGPoint(x: 28.11, y: 18.86), controlPoint1: CGPoint(x: 27.98, y: 18.86), controlPoint2: CGPoint(x: 28.04, y: 18.86))
        startShiftTextPath.addCurve(to: CGPoint(x: 28.35, y: 18.83), controlPoint1: CGPoint(x: 28.18, y: 18.86), controlPoint2: CGPoint(x: 28.26, y: 18.85))
        startShiftTextPath.addLine(to: CGPoint(x: 28.35, y: 20.02))
        startShiftTextPath.addCurve(to: CGPoint(x: 28.12, y: 20.08), controlPoint1: CGPoint(x: 28.29, y: 20.04), controlPoint2: CGPoint(x: 28.22, y: 20.06))
        startShiftTextPath.addCurve(to: CGPoint(x: 27.83, y: 20.15), controlPoint1: CGPoint(x: 28.02, y: 20.11), controlPoint2: CGPoint(x: 27.93, y: 20.13))
        startShiftTextPath.addCurve(to: CGPoint(x: 27.53, y: 20.19), controlPoint1: CGPoint(x: 27.73, y: 20.17), controlPoint2: CGPoint(x: 27.63, y: 20.18))
        startShiftTextPath.addCurve(to: CGPoint(x: 27.27, y: 20.21), controlPoint1: CGPoint(x: 27.43, y: 20.21), controlPoint2: CGPoint(x: 27.34, y: 20.21))
        startShiftTextPath.addCurve(to: CGPoint(x: 26.4, y: 20), controlPoint1: CGPoint(x: 26.92, y: 20.21), controlPoint2: CGPoint(x: 26.63, y: 20.14))
        startShiftTextPath.addCurve(to: CGPoint(x: 25.95, y: 19.27), controlPoint1: CGPoint(x: 26.17, y: 19.86), controlPoint2: CGPoint(x: 26.02, y: 19.62))
        startShiftTextPath.addCurve(to: CGPoint(x: 24.7, y: 19.98), controlPoint1: CGPoint(x: 25.61, y: 19.6), controlPoint2: CGPoint(x: 25.2, y: 19.83))
        startShiftTextPath.addCurve(to: CGPoint(x: 23.27, y: 20.21), controlPoint1: CGPoint(x: 24.2, y: 20.14), controlPoint2: CGPoint(x: 23.73, y: 20.21))
        startShiftTextPath.addCurve(to: CGPoint(x: 22.26, y: 20.07), controlPoint1: CGPoint(x: 22.92, y: 20.21), controlPoint2: CGPoint(x: 22.58, y: 20.16))
        startShiftTextPath.addCurve(to: CGPoint(x: 21.41, y: 19.65), controlPoint1: CGPoint(x: 21.94, y: 19.97), controlPoint2: CGPoint(x: 21.66, y: 19.83))
        startShiftTextPath.addCurve(to: CGPoint(x: 20.83, y: 18.94), controlPoint1: CGPoint(x: 21.17, y: 19.46), controlPoint2: CGPoint(x: 20.98, y: 19.23))
        startShiftTextPath.addCurve(to: CGPoint(x: 20.61, y: 17.94), controlPoint1: CGPoint(x: 20.68, y: 18.66), controlPoint2: CGPoint(x: 20.61, y: 18.33))
        startShiftTextPath.addCurve(to: CGPoint(x: 20.87, y: 16.78), controlPoint1: CGPoint(x: 20.61, y: 17.46), controlPoint2: CGPoint(x: 20.7, y: 17.08))
        startShiftTextPath.addCurve(to: CGPoint(x: 21.56, y: 16.07), controlPoint1: CGPoint(x: 21.05, y: 16.47), controlPoint2: CGPoint(x: 21.28, y: 16.24))
        startShiftTextPath.addCurve(to: CGPoint(x: 22.52, y: 15.7), controlPoint1: CGPoint(x: 21.85, y: 15.9), controlPoint2: CGPoint(x: 22.17, y: 15.78))
        startShiftTextPath.addCurve(to: CGPoint(x: 23.6, y: 15.53), controlPoint1: CGPoint(x: 22.88, y: 15.63), controlPoint2: CGPoint(x: 23.24, y: 15.57))
        startShiftTextPath.addCurve(to: CGPoint(x: 24.48, y: 15.4), controlPoint1: CGPoint(x: 23.91, y: 15.47), controlPoint2: CGPoint(x: 24.2, y: 15.43))
        startShiftTextPath.addCurve(to: CGPoint(x: 25.22, y: 15.28), controlPoint1: CGPoint(x: 24.76, y: 15.38), controlPoint2: CGPoint(x: 25.01, y: 15.34))
        startShiftTextPath.addCurve(to: CGPoint(x: 25.73, y: 15), controlPoint1: CGPoint(x: 25.44, y: 15.21), controlPoint2: CGPoint(x: 25.61, y: 15.12))
        startShiftTextPath.addCurve(to: CGPoint(x: 25.92, y: 14.44), controlPoint1: CGPoint(x: 25.86, y: 14.87), controlPoint2: CGPoint(x: 25.92, y: 14.69))
        startShiftTextPath.addCurve(to: CGPoint(x: 25.76, y: 13.89), controlPoint1: CGPoint(x: 25.92, y: 14.21), controlPoint2: CGPoint(x: 25.87, y: 14.04))
        startShiftTextPath.addCurve(to: CGPoint(x: 25.37, y: 13.57), controlPoint1: CGPoint(x: 25.66, y: 13.75), controlPoint2: CGPoint(x: 25.53, y: 13.65))
        startShiftTextPath.addCurve(to: CGPoint(x: 24.86, y: 13.42), controlPoint1: CGPoint(x: 25.22, y: 13.5), controlPoint2: CGPoint(x: 25.05, y: 13.45))
        startShiftTextPath.addCurve(to: CGPoint(x: 24.32, y: 13.39), controlPoint1: CGPoint(x: 24.67, y: 13.4), controlPoint2: CGPoint(x: 24.49, y: 13.39))
        startShiftTextPath.addCurve(to: CGPoint(x: 23.13, y: 13.69), controlPoint1: CGPoint(x: 23.84, y: 13.39), controlPoint2: CGPoint(x: 23.44, y: 13.48))
        startShiftTextPath.addCurve(to: CGPoint(x: 22.61, y: 14.61), controlPoint1: CGPoint(x: 22.82, y: 13.89), controlPoint2: CGPoint(x: 22.65, y: 14.19))
        startShiftTextPath.addLine(to: CGPoint(x: 20.9, y: 14.61))
        startShiftTextPath.addCurve(to: CGPoint(x: 21.26, y: 13.37), controlPoint1: CGPoint(x: 20.93, y: 14.11), controlPoint2: CGPoint(x: 21.05, y: 13.7))
        startShiftTextPath.addCurve(to: CGPoint(x: 22.06, y: 12.58), controlPoint1: CGPoint(x: 21.47, y: 13.04), controlPoint2: CGPoint(x: 21.73, y: 12.78))
        startShiftTextPath.addCurve(to: CGPoint(x: 23.16, y: 12.16), controlPoint1: CGPoint(x: 22.39, y: 12.37), controlPoint2: CGPoint(x: 22.75, y: 12.24))
        startShiftTextPath.addCurve(to: CGPoint(x: 24.42, y: 12.03), controlPoint1: CGPoint(x: 23.57, y: 12.07), controlPoint2: CGPoint(x: 23.99, y: 12.03))
        startShiftTextPath.addCurve(to: CGPoint(x: 25.55, y: 12.16), controlPoint1: CGPoint(x: 24.8, y: 12.03), controlPoint2: CGPoint(x: 25.18, y: 12.07))
        startShiftTextPath.addCurve(to: CGPoint(x: 26.54, y: 12.55), controlPoint1: CGPoint(x: 25.92, y: 12.24), controlPoint2: CGPoint(x: 26.25, y: 12.36))
        startShiftTextPath.addCurve(to: CGPoint(x: 27.26, y: 13.24), controlPoint1: CGPoint(x: 26.84, y: 12.73), controlPoint2: CGPoint(x: 27.08, y: 12.96))
        startShiftTextPath.addCurve(to: CGPoint(x: 27.53, y: 14.28), controlPoint1: CGPoint(x: 27.44, y: 13.53), controlPoint2: CGPoint(x: 27.53, y: 13.87))
        startShiftTextPath.addLine(to: CGPoint(x: 27.53, y: 18.28))
        startShiftTextPath.close()
        startShiftTextPath.move(to: CGPoint(x: 25.82, y: 16.12))
        startShiftTextPath.addCurve(to: CGPoint(x: 24.86, y: 16.42), controlPoint1: CGPoint(x: 25.56, y: 16.29), controlPoint2: CGPoint(x: 25.24, y: 16.39))
        startShiftTextPath.addCurve(to: CGPoint(x: 23.72, y: 16.58), controlPoint1: CGPoint(x: 24.48, y: 16.46), controlPoint2: CGPoint(x: 24.1, y: 16.51))
        startShiftTextPath.addCurve(to: CGPoint(x: 23.19, y: 16.71), controlPoint1: CGPoint(x: 23.54, y: 16.61), controlPoint2: CGPoint(x: 23.36, y: 16.65))
        startShiftTextPath.addCurve(to: CGPoint(x: 22.74, y: 16.93), controlPoint1: CGPoint(x: 23.02, y: 16.76), controlPoint2: CGPoint(x: 22.87, y: 16.84))
        startShiftTextPath.addCurve(to: CGPoint(x: 22.43, y: 17.31), controlPoint1: CGPoint(x: 22.61, y: 17.03), controlPoint2: CGPoint(x: 22.51, y: 17.15))
        startShiftTextPath.addCurve(to: CGPoint(x: 22.32, y: 17.87), controlPoint1: CGPoint(x: 22.36, y: 17.46), controlPoint2: CGPoint(x: 22.32, y: 17.65))
        startShiftTextPath.addCurve(to: CGPoint(x: 22.49, y: 18.35), controlPoint1: CGPoint(x: 22.32, y: 18.06), controlPoint2: CGPoint(x: 22.38, y: 18.22))
        startShiftTextPath.addCurve(to: CGPoint(x: 22.88, y: 18.66), controlPoint1: CGPoint(x: 22.6, y: 18.48), controlPoint2: CGPoint(x: 22.73, y: 18.58))
        startShiftTextPath.addCurve(to: CGPoint(x: 23.39, y: 18.81), controlPoint1: CGPoint(x: 23.04, y: 18.73), controlPoint2: CGPoint(x: 23.21, y: 18.78))
        startShiftTextPath.addCurve(to: CGPoint(x: 23.9, y: 18.86), controlPoint1: CGPoint(x: 23.58, y: 18.85), controlPoint2: CGPoint(x: 23.75, y: 18.86))
        startShiftTextPath.addCurve(to: CGPoint(x: 24.51, y: 18.78), controlPoint1: CGPoint(x: 24.09, y: 18.86), controlPoint2: CGPoint(x: 24.29, y: 18.84))
        startShiftTextPath.addCurve(to: CGPoint(x: 25.13, y: 18.53), controlPoint1: CGPoint(x: 24.73, y: 18.73), controlPoint2: CGPoint(x: 24.94, y: 18.65))
        startShiftTextPath.addCurve(to: CGPoint(x: 25.62, y: 18.07), controlPoint1: CGPoint(x: 25.33, y: 18.41), controlPoint2: CGPoint(x: 25.49, y: 18.26))
        startShiftTextPath.addCurve(to: CGPoint(x: 25.82, y: 17.39), controlPoint1: CGPoint(x: 25.75, y: 17.89), controlPoint2: CGPoint(x: 25.82, y: 17.66))
        startShiftTextPath.addLine(to: CGPoint(x: 25.82, y: 16.12))
        startShiftTextPath.close()
        startShiftTextPath.move(to: CGPoint(x: 29.37, y: 12.25))
        startShiftTextPath.addLine(to: CGPoint(x: 30.98, y: 12.25))
        startShiftTextPath.addLine(to: CGPoint(x: 30.98, y: 13.75))
        startShiftTextPath.addLine(to: CGPoint(x: 31.01, y: 13.75))
        startShiftTextPath.addCurve(to: CGPoint(x: 31.3, y: 13.13), controlPoint1: CGPoint(x: 31.06, y: 13.53), controlPoint2: CGPoint(x: 31.15, y: 13.33))
        startShiftTextPath.addCurve(to: CGPoint(x: 31.82, y: 12.58), controlPoint1: CGPoint(x: 31.45, y: 12.93), controlPoint2: CGPoint(x: 31.62, y: 12.75))
        startShiftTextPath.addCurve(to: CGPoint(x: 32.51, y: 12.19), controlPoint1: CGPoint(x: 32.03, y: 12.42), controlPoint2: CGPoint(x: 32.26, y: 12.29))
        startShiftTextPath.addCurve(to: CGPoint(x: 33.27, y: 12.03), controlPoint1: CGPoint(x: 32.76, y: 12.08), controlPoint2: CGPoint(x: 33.01, y: 12.03))
        startShiftTextPath.addCurve(to: CGPoint(x: 33.68, y: 12.05), controlPoint1: CGPoint(x: 33.47, y: 12.03), controlPoint2: CGPoint(x: 33.61, y: 12.04))
        startShiftTextPath.addCurve(to: CGPoint(x: 33.92, y: 12.08), controlPoint1: CGPoint(x: 33.76, y: 12.06), controlPoint2: CGPoint(x: 33.84, y: 12.07))
        startShiftTextPath.addLine(to: CGPoint(x: 33.92, y: 13.73))
        startShiftTextPath.addCurve(to: CGPoint(x: 33.55, y: 13.68), controlPoint1: CGPoint(x: 33.8, y: 13.71), controlPoint2: CGPoint(x: 33.68, y: 13.69))
        startShiftTextPath.addCurve(to: CGPoint(x: 33.18, y: 13.66), controlPoint1: CGPoint(x: 33.42, y: 13.66), controlPoint2: CGPoint(x: 33.3, y: 13.66))
        startShiftTextPath.addCurve(to: CGPoint(x: 32.36, y: 13.83), controlPoint1: CGPoint(x: 32.89, y: 13.66), controlPoint2: CGPoint(x: 32.62, y: 13.71))
        startShiftTextPath.addCurve(to: CGPoint(x: 31.7, y: 14.34), controlPoint1: CGPoint(x: 32.11, y: 13.94), controlPoint2: CGPoint(x: 31.89, y: 14.11))
        startShiftTextPath.addCurve(to: CGPoint(x: 31.25, y: 15.17), controlPoint1: CGPoint(x: 31.51, y: 14.56), controlPoint2: CGPoint(x: 31.36, y: 14.84))
        startShiftTextPath.addCurve(to: CGPoint(x: 31.08, y: 16.31), controlPoint1: CGPoint(x: 31.14, y: 15.5), controlPoint2: CGPoint(x: 31.08, y: 15.88))
        startShiftTextPath.addLine(to: CGPoint(x: 31.08, y: 20))
        startShiftTextPath.addLine(to: CGPoint(x: 29.37, y: 20))
        startShiftTextPath.addLine(to: CGPoint(x: 29.37, y: 12.25))
        startShiftTextPath.close()
        startShiftTextPath.move(to: CGPoint(x: 33.87, y: 12.25))
        startShiftTextPath.addLine(to: CGPoint(x: 35.16, y: 12.25))
        startShiftTextPath.addLine(to: CGPoint(x: 35.16, y: 9.92))
        startShiftTextPath.addLine(to: CGPoint(x: 36.87, y: 9.92))
        startShiftTextPath.addLine(to: CGPoint(x: 36.87, y: 12.25))
        startShiftTextPath.addLine(to: CGPoint(x: 38.42, y: 12.25))
        startShiftTextPath.addLine(to: CGPoint(x: 38.42, y: 13.52))
        startShiftTextPath.addLine(to: CGPoint(x: 36.87, y: 13.52))
        startShiftTextPath.addLine(to: CGPoint(x: 36.87, y: 17.66))
        startShiftTextPath.addCurve(to: CGPoint(x: 36.89, y: 18.12), controlPoint1: CGPoint(x: 36.87, y: 17.84), controlPoint2: CGPoint(x: 36.88, y: 17.99))
        startShiftTextPath.addCurve(to: CGPoint(x: 37, y: 18.45), controlPoint1: CGPoint(x: 36.91, y: 18.26), controlPoint2: CGPoint(x: 36.94, y: 18.36))
        startShiftTextPath.addCurve(to: CGPoint(x: 37.25, y: 18.66), controlPoint1: CGPoint(x: 37.06, y: 18.55), controlPoint2: CGPoint(x: 37.14, y: 18.61))
        startShiftTextPath.addCurve(to: CGPoint(x: 37.7, y: 18.72), controlPoint1: CGPoint(x: 37.36, y: 18.7), controlPoint2: CGPoint(x: 37.51, y: 18.72))
        startShiftTextPath.addCurve(to: CGPoint(x: 38.06, y: 18.72), controlPoint1: CGPoint(x: 37.82, y: 18.72), controlPoint2: CGPoint(x: 37.94, y: 18.72))
        startShiftTextPath.addCurve(to: CGPoint(x: 38.42, y: 18.66), controlPoint1: CGPoint(x: 38.18, y: 18.71), controlPoint2: CGPoint(x: 38.3, y: 18.7))
        startShiftTextPath.addLine(to: CGPoint(x: 38.42, y: 19.98))
        startShiftTextPath.addCurve(to: CGPoint(x: 37.86, y: 20.05), controlPoint1: CGPoint(x: 38.23, y: 20.01), controlPoint2: CGPoint(x: 38.04, y: 20.02))
        startShiftTextPath.addCurve(to: CGPoint(x: 37.31, y: 20.08), controlPoint1: CGPoint(x: 37.68, y: 20.07), controlPoint2: CGPoint(x: 37.5, y: 20.08))
        startShiftTextPath.addCurve(to: CGPoint(x: 36.22, y: 19.95), controlPoint1: CGPoint(x: 36.86, y: 20.08), controlPoint2: CGPoint(x: 36.5, y: 20.03))
        startShiftTextPath.addCurve(to: CGPoint(x: 35.57, y: 19.57), controlPoint1: CGPoint(x: 35.94, y: 19.86), controlPoint2: CGPoint(x: 35.73, y: 19.74))
        startShiftTextPath.addCurve(to: CGPoint(x: 35.26, y: 18.95), controlPoint1: CGPoint(x: 35.42, y: 19.41), controlPoint2: CGPoint(x: 35.32, y: 19.2))
        startShiftTextPath.addCurve(to: CGPoint(x: 35.16, y: 18.09), controlPoint1: CGPoint(x: 35.2, y: 18.7), controlPoint2: CGPoint(x: 35.17, y: 18.42))
        startShiftTextPath.addLine(to: CGPoint(x: 35.16, y: 13.52))
        startShiftTextPath.addLine(to: CGPoint(x: 33.87, y: 13.52))
        startShiftTextPath.addLine(to: CGPoint(x: 33.87, y: 12.25))
        startShiftTextPath.close()
        startShiftTextPath.move(to: CGPoint(x: 45.29, y: 16.43))
        startShiftTextPath.addCurve(to: CGPoint(x: 45.5, y: 17.48), controlPoint1: CGPoint(x: 45.29, y: 16.84), controlPoint2: CGPoint(x: 45.36, y: 17.19))
        startShiftTextPath.addCurve(to: CGPoint(x: 46.08, y: 18.19), controlPoint1: CGPoint(x: 45.64, y: 17.77), controlPoint2: CGPoint(x: 45.83, y: 18.01))
        startShiftTextPath.addCurve(to: CGPoint(x: 46.94, y: 18.6), controlPoint1: CGPoint(x: 46.33, y: 18.38), controlPoint2: CGPoint(x: 46.62, y: 18.51))
        startShiftTextPath.addCurve(to: CGPoint(x: 48, y: 18.72), controlPoint1: CGPoint(x: 47.27, y: 18.68), controlPoint2: CGPoint(x: 47.62, y: 18.72))
        startShiftTextPath.addCurve(to: CGPoint(x: 49.05, y: 18.58), controlPoint1: CGPoint(x: 48.41, y: 18.72), controlPoint2: CGPoint(x: 48.76, y: 18.68))
        startShiftTextPath.addCurve(to: CGPoint(x: 49.76, y: 18.22), controlPoint1: CGPoint(x: 49.34, y: 18.49), controlPoint2: CGPoint(x: 49.58, y: 18.37))
        startShiftTextPath.addCurve(to: CGPoint(x: 50.15, y: 17.7), controlPoint1: CGPoint(x: 49.94, y: 18.06), controlPoint2: CGPoint(x: 50.07, y: 17.89))
        startShiftTextPath.addCurve(to: CGPoint(x: 50.27, y: 17.11), controlPoint1: CGPoint(x: 50.23, y: 17.5), controlPoint2: CGPoint(x: 50.27, y: 17.31))
        startShiftTextPath.addCurve(to: CGPoint(x: 49.99, y: 16.2), controlPoint1: CGPoint(x: 50.27, y: 16.69), controlPoint2: CGPoint(x: 50.18, y: 16.39))
        startShiftTextPath.addCurve(to: CGPoint(x: 49.38, y: 15.78), controlPoint1: CGPoint(x: 49.8, y: 16), controlPoint2: CGPoint(x: 49.6, y: 15.87))
        startShiftTextPath.addCurve(to: CGPoint(x: 48.05, y: 15.39), controlPoint1: CGPoint(x: 49, y: 15.64), controlPoint2: CGPoint(x: 48.56, y: 15.51))
        startShiftTextPath.addCurve(to: CGPoint(x: 46.19, y: 14.9), controlPoint1: CGPoint(x: 47.55, y: 15.26), controlPoint2: CGPoint(x: 46.93, y: 15.1))
        startShiftTextPath.addCurve(to: CGPoint(x: 45.04, y: 14.43), controlPoint1: CGPoint(x: 45.73, y: 14.78), controlPoint2: CGPoint(x: 45.35, y: 14.62))
        startShiftTextPath.addCurve(to: CGPoint(x: 44.31, y: 13.78), controlPoint1: CGPoint(x: 44.73, y: 14.23), controlPoint2: CGPoint(x: 44.49, y: 14.02))
        startShiftTextPath.addCurve(to: CGPoint(x: 43.93, y: 13.01), controlPoint1: CGPoint(x: 44.13, y: 13.53), controlPoint2: CGPoint(x: 44.01, y: 13.28))
        startShiftTextPath.addCurve(to: CGPoint(x: 43.82, y: 12.19), controlPoint1: CGPoint(x: 43.85, y: 12.74), controlPoint2: CGPoint(x: 43.82, y: 12.47))
        startShiftTextPath.addCurve(to: CGPoint(x: 44.15, y: 10.78), controlPoint1: CGPoint(x: 43.82, y: 11.64), controlPoint2: CGPoint(x: 43.93, y: 11.18))
        startShiftTextPath.addCurve(to: CGPoint(x: 45.05, y: 9.8), controlPoint1: CGPoint(x: 44.38, y: 10.39), controlPoint2: CGPoint(x: 44.68, y: 10.06))
        startShiftTextPath.addCurve(to: CGPoint(x: 46.31, y: 9.22), controlPoint1: CGPoint(x: 45.42, y: 9.54), controlPoint2: CGPoint(x: 45.84, y: 9.35))
        startShiftTextPath.addCurve(to: CGPoint(x: 47.73, y: 9.03), controlPoint1: CGPoint(x: 46.78, y: 9.1), controlPoint2: CGPoint(x: 47.25, y: 9.03))
        startShiftTextPath.addCurve(to: CGPoint(x: 49.31, y: 9.25), controlPoint1: CGPoint(x: 48.29, y: 9.03), controlPoint2: CGPoint(x: 48.82, y: 9.11))
        startShiftTextPath.addCurve(to: CGPoint(x: 50.62, y: 9.91), controlPoint1: CGPoint(x: 49.81, y: 9.4), controlPoint2: CGPoint(x: 50.24, y: 9.61))
        startShiftTextPath.addCurve(to: CGPoint(x: 51.51, y: 10.98), controlPoint1: CGPoint(x: 51, y: 10.2), controlPoint2: CGPoint(x: 51.29, y: 10.55))
        startShiftTextPath.addCurve(to: CGPoint(x: 51.84, y: 12.45), controlPoint1: CGPoint(x: 51.73, y: 11.4), controlPoint2: CGPoint(x: 51.84, y: 11.89))
        startShiftTextPath.addLine(to: CGPoint(x: 49.97, y: 12.45))
        startShiftTextPath.addCurve(to: CGPoint(x: 49.26, y: 10.99), controlPoint1: CGPoint(x: 49.92, y: 11.76), controlPoint2: CGPoint(x: 49.68, y: 11.28))
        startShiftTextPath.addCurve(to: CGPoint(x: 47.66, y: 10.56), controlPoint1: CGPoint(x: 48.84, y: 10.71), controlPoint2: CGPoint(x: 48.31, y: 10.56))
        startShiftTextPath.addCurve(to: CGPoint(x: 46.98, y: 10.63), controlPoint1: CGPoint(x: 47.44, y: 10.56), controlPoint2: CGPoint(x: 47.21, y: 10.59))
        startShiftTextPath.addCurve(to: CGPoint(x: 46.35, y: 10.86), controlPoint1: CGPoint(x: 46.75, y: 10.68), controlPoint2: CGPoint(x: 46.54, y: 10.75))
        startShiftTextPath.addCurve(to: CGPoint(x: 45.88, y: 11.28), controlPoint1: CGPoint(x: 46.16, y: 10.96), controlPoint2: CGPoint(x: 46.01, y: 11.1))
        startShiftTextPath.addCurve(to: CGPoint(x: 45.69, y: 11.96), controlPoint1: CGPoint(x: 45.75, y: 11.47), controlPoint2: CGPoint(x: 45.69, y: 11.69))
        startShiftTextPath.addCurve(to: CGPoint(x: 46.04, y: 12.85), controlPoint1: CGPoint(x: 45.69, y: 12.34), controlPoint2: CGPoint(x: 45.81, y: 12.64))
        startShiftTextPath.addCurve(to: CGPoint(x: 46.97, y: 13.34), controlPoint1: CGPoint(x: 46.28, y: 13.07), controlPoint2: CGPoint(x: 46.59, y: 13.23))
        startShiftTextPath.addCurve(to: CGPoint(x: 47.44, y: 13.47), controlPoint1: CGPoint(x: 47.01, y: 13.35), controlPoint2: CGPoint(x: 47.16, y: 13.39))
        startShiftTextPath.addCurve(to: CGPoint(x: 48.36, y: 13.72), controlPoint1: CGPoint(x: 47.72, y: 13.54), controlPoint2: CGPoint(x: 48.02, y: 13.62))
        startShiftTextPath.addCurve(to: CGPoint(x: 49.36, y: 13.98), controlPoint1: CGPoint(x: 48.7, y: 13.81), controlPoint2: CGPoint(x: 49.03, y: 13.89))
        startShiftTextPath.addCurve(to: CGPoint(x: 50.06, y: 14.16), controlPoint1: CGPoint(x: 49.69, y: 14.06), controlPoint2: CGPoint(x: 49.92, y: 14.12))
        startShiftTextPath.addCurve(to: CGPoint(x: 50.97, y: 14.61), controlPoint1: CGPoint(x: 50.41, y: 14.28), controlPoint2: CGPoint(x: 50.71, y: 14.42))
        startShiftTextPath.addCurve(to: CGPoint(x: 51.62, y: 15.27), controlPoint1: CGPoint(x: 51.23, y: 14.81), controlPoint2: CGPoint(x: 51.45, y: 15.02))
        startShiftTextPath.addCurve(to: CGPoint(x: 52.02, y: 16.06), controlPoint1: CGPoint(x: 51.8, y: 15.51), controlPoint2: CGPoint(x: 51.93, y: 15.77))
        startShiftTextPath.addCurve(to: CGPoint(x: 52.14, y: 16.89), controlPoint1: CGPoint(x: 52.1, y: 16.34), controlPoint2: CGPoint(x: 52.14, y: 16.61))
        startShiftTextPath.addCurve(to: CGPoint(x: 51.77, y: 18.43), controlPoint1: CGPoint(x: 52.14, y: 17.5), controlPoint2: CGPoint(x: 52.02, y: 18.01))
        startShiftTextPath.addCurve(to: CGPoint(x: 50.81, y: 19.47), controlPoint1: CGPoint(x: 51.53, y: 18.86), controlPoint2: CGPoint(x: 51.21, y: 19.2))
        startShiftTextPath.addCurve(to: CGPoint(x: 49.44, y: 20.07), controlPoint1: CGPoint(x: 50.41, y: 19.75), controlPoint2: CGPoint(x: 49.95, y: 19.94))
        startShiftTextPath.addCurve(to: CGPoint(x: 47.88, y: 20.25), controlPoint1: CGPoint(x: 48.93, y: 20.19), controlPoint2: CGPoint(x: 48.41, y: 20.25))
        startShiftTextPath.addCurve(to: CGPoint(x: 46.16, y: 20.03), controlPoint1: CGPoint(x: 47.27, y: 20.25), controlPoint2: CGPoint(x: 46.7, y: 20.18))
        startShiftTextPath.addCurve(to: CGPoint(x: 44.75, y: 19.34), controlPoint1: CGPoint(x: 45.62, y: 19.88), controlPoint2: CGPoint(x: 45.15, y: 19.65))
        startShiftTextPath.addCurve(to: CGPoint(x: 43.79, y: 18.15), controlPoint1: CGPoint(x: 44.35, y: 19.03), controlPoint2: CGPoint(x: 44.03, y: 18.63))
        startShiftTextPath.addCurve(to: CGPoint(x: 43.41, y: 16.43), controlPoint1: CGPoint(x: 43.55, y: 17.66), controlPoint2: CGPoint(x: 43.42, y: 17.09))
        startShiftTextPath.addLine(to: CGPoint(x: 45.29, y: 16.43))
        startShiftTextPath.close()
        startShiftTextPath.move(to: CGPoint(x: 53.54, y: 9.29))
        startShiftTextPath.addLine(to: CGPoint(x: 55.25, y: 9.29))
        startShiftTextPath.addLine(to: CGPoint(x: 55.25, y: 13.27))
        startShiftTextPath.addLine(to: CGPoint(x: 55.28, y: 13.27))
        startShiftTextPath.addCurve(to: CGPoint(x: 56.21, y: 12.39), controlPoint1: CGPoint(x: 55.49, y: 12.91), controlPoint2: CGPoint(x: 55.8, y: 12.62))
        startShiftTextPath.addCurve(to: CGPoint(x: 57.6, y: 12.03), controlPoint1: CGPoint(x: 56.63, y: 12.15), controlPoint2: CGPoint(x: 57.09, y: 12.03))
        startShiftTextPath.addCurve(to: CGPoint(x: 59.61, y: 12.69), controlPoint1: CGPoint(x: 58.45, y: 12.03), controlPoint2: CGPoint(x: 59.12, y: 12.25))
        startShiftTextPath.addCurve(to: CGPoint(x: 60.35, y: 14.67), controlPoint1: CGPoint(x: 60.1, y: 13.14), controlPoint2: CGPoint(x: 60.35, y: 13.79))
        startShiftTextPath.addLine(to: CGPoint(x: 60.35, y: 20))
        startShiftTextPath.addLine(to: CGPoint(x: 58.64, y: 20))
        startShiftTextPath.addLine(to: CGPoint(x: 58.64, y: 15.12))
        startShiftTextPath.addCurve(to: CGPoint(x: 58.25, y: 13.8), controlPoint1: CGPoint(x: 58.62, y: 14.51), controlPoint2: CGPoint(x: 58.49, y: 14.07))
        startShiftTextPath.addCurve(to: CGPoint(x: 57.12, y: 13.39), controlPoint1: CGPoint(x: 58.01, y: 13.52), controlPoint2: CGPoint(x: 57.63, y: 13.39))
        startShiftTextPath.addCurve(to: CGPoint(x: 56.34, y: 13.54), controlPoint1: CGPoint(x: 56.83, y: 13.39), controlPoint2: CGPoint(x: 56.57, y: 13.44))
        startShiftTextPath.addCurve(to: CGPoint(x: 55.76, y: 13.98), controlPoint1: CGPoint(x: 56.11, y: 13.65), controlPoint2: CGPoint(x: 55.92, y: 13.79))
        startShiftTextPath.addCurve(to: CGPoint(x: 55.38, y: 14.63), controlPoint1: CGPoint(x: 55.6, y: 14.16), controlPoint2: CGPoint(x: 55.47, y: 14.38))
        startShiftTextPath.addCurve(to: CGPoint(x: 55.25, y: 15.42), controlPoint1: CGPoint(x: 55.29, y: 14.88), controlPoint2: CGPoint(x: 55.25, y: 15.14))
        startShiftTextPath.addLine(to: CGPoint(x: 55.25, y: 20))
        startShiftTextPath.addLine(to: CGPoint(x: 53.54, y: 20))
        startShiftTextPath.addLine(to: CGPoint(x: 53.54, y: 9.29))
        startShiftTextPath.close()
        startShiftTextPath.move(to: CGPoint(x: 62.19, y: 9.29))
        startShiftTextPath.addLine(to: CGPoint(x: 63.9, y: 9.29))
        startShiftTextPath.addLine(to: CGPoint(x: 63.9, y: 10.91))
        startShiftTextPath.addLine(to: CGPoint(x: 62.19, y: 10.91))
        startShiftTextPath.addLine(to: CGPoint(x: 62.19, y: 9.29))
        startShiftTextPath.close()
        startShiftTextPath.move(to: CGPoint(x: 62.19, y: 12.25))
        startShiftTextPath.addLine(to: CGPoint(x: 63.9, y: 12.25))
        startShiftTextPath.addLine(to: CGPoint(x: 63.9, y: 20))
        startShiftTextPath.addLine(to: CGPoint(x: 62.19, y: 20))
        startShiftTextPath.addLine(to: CGPoint(x: 62.19, y: 12.25))
        startShiftTextPath.close()
        startShiftTextPath.move(to: CGPoint(x: 65, y: 12.25))
        startShiftTextPath.addLine(to: CGPoint(x: 66.27, y: 12.25))
        startShiftTextPath.addLine(to: CGPoint(x: 66.27, y: 11.6))
        startShiftTextPath.addCurve(to: CGPoint(x: 66.45, y: 10.41), controlPoint1: CGPoint(x: 66.27, y: 11.11), controlPoint2: CGPoint(x: 66.33, y: 10.71))
        startShiftTextPath.addCurve(to: CGPoint(x: 66.93, y: 9.7), controlPoint1: CGPoint(x: 66.57, y: 10.1), controlPoint2: CGPoint(x: 66.73, y: 9.87))
        startShiftTextPath.addCurve(to: CGPoint(x: 67.61, y: 9.37), controlPoint1: CGPoint(x: 67.13, y: 9.54), controlPoint2: CGPoint(x: 67.36, y: 9.43))
        startShiftTextPath.addCurve(to: CGPoint(x: 68.42, y: 9.29), controlPoint1: CGPoint(x: 67.87, y: 9.32), controlPoint2: CGPoint(x: 68.14, y: 9.29))
        startShiftTextPath.addCurve(to: CGPoint(x: 69.62, y: 9.39), controlPoint1: CGPoint(x: 68.97, y: 9.29), controlPoint2: CGPoint(x: 69.37, y: 9.32))
        startShiftTextPath.addLine(to: CGPoint(x: 69.62, y: 10.73))
        startShiftTextPath.addCurve(to: CGPoint(x: 69.26, y: 10.66), controlPoint1: CGPoint(x: 69.51, y: 10.7), controlPoint2: CGPoint(x: 69.39, y: 10.68))
        startShiftTextPath.addCurve(to: CGPoint(x: 68.82, y: 10.64), controlPoint1: CGPoint(x: 69.14, y: 10.65), controlPoint2: CGPoint(x: 68.99, y: 10.64))
        startShiftTextPath.addCurve(to: CGPoint(x: 68.23, y: 10.81), controlPoint1: CGPoint(x: 68.59, y: 10.64), controlPoint2: CGPoint(x: 68.4, y: 10.69))
        startShiftTextPath.addCurve(to: CGPoint(x: 67.98, y: 11.45), controlPoint1: CGPoint(x: 68.06, y: 10.92), controlPoint2: CGPoint(x: 67.98, y: 11.13))
        startShiftTextPath.addLine(to: CGPoint(x: 67.98, y: 12.25))
        startShiftTextPath.addLine(to: CGPoint(x: 69.44, y: 12.25))
        startShiftTextPath.addLine(to: CGPoint(x: 69.44, y: 13.52))
        startShiftTextPath.addLine(to: CGPoint(x: 67.98, y: 13.52))
        startShiftTextPath.addLine(to: CGPoint(x: 67.98, y: 20))
        startShiftTextPath.addLine(to: CGPoint(x: 66.27, y: 20))
        startShiftTextPath.addLine(to: CGPoint(x: 66.27, y: 13.52))
        startShiftTextPath.addLine(to: CGPoint(x: 65, y: 13.52))
        startShiftTextPath.addLine(to: CGPoint(x: 65, y: 12.25))
        startShiftTextPath.close()
        startShiftTextPath.move(to: CGPoint(x: 69.71, y: 12.25))
        startShiftTextPath.addLine(to: CGPoint(x: 71, y: 12.25))
        startShiftTextPath.addLine(to: CGPoint(x: 71, y: 9.92))
        startShiftTextPath.addLine(to: CGPoint(x: 72.71, y: 9.92))
        startShiftTextPath.addLine(to: CGPoint(x: 72.71, y: 12.25))
        startShiftTextPath.addLine(to: CGPoint(x: 74.25, y: 12.25))
        startShiftTextPath.addLine(to: CGPoint(x: 74.25, y: 13.52))
        startShiftTextPath.addLine(to: CGPoint(x: 72.71, y: 13.52))
        startShiftTextPath.addLine(to: CGPoint(x: 72.71, y: 17.66))
        startShiftTextPath.addCurve(to: CGPoint(x: 72.73, y: 18.12), controlPoint1: CGPoint(x: 72.71, y: 17.84), controlPoint2: CGPoint(x: 72.71, y: 17.99))
        startShiftTextPath.addCurve(to: CGPoint(x: 72.83, y: 18.45), controlPoint1: CGPoint(x: 72.75, y: 18.26), controlPoint2: CGPoint(x: 72.78, y: 18.36))
        startShiftTextPath.addCurve(to: CGPoint(x: 73.08, y: 18.66), controlPoint1: CGPoint(x: 72.89, y: 18.55), controlPoint2: CGPoint(x: 72.97, y: 18.61))
        startShiftTextPath.addCurve(to: CGPoint(x: 73.53, y: 18.72), controlPoint1: CGPoint(x: 73.19, y: 18.7), controlPoint2: CGPoint(x: 73.34, y: 18.72))
        startShiftTextPath.addCurve(to: CGPoint(x: 73.89, y: 18.72), controlPoint1: CGPoint(x: 73.65, y: 18.72), controlPoint2: CGPoint(x: 73.77, y: 18.72))
        startShiftTextPath.addCurve(to: CGPoint(x: 74.25, y: 18.66), controlPoint1: CGPoint(x: 74.01, y: 18.71), controlPoint2: CGPoint(x: 74.13, y: 18.7))
        startShiftTextPath.addLine(to: CGPoint(x: 74.25, y: 19.98))
        startShiftTextPath.addCurve(to: CGPoint(x: 73.7, y: 20.05), controlPoint1: CGPoint(x: 74.06, y: 20.01), controlPoint2: CGPoint(x: 73.88, y: 20.02))
        startShiftTextPath.addCurve(to: CGPoint(x: 73.14, y: 20.08), controlPoint1: CGPoint(x: 73.52, y: 20.07), controlPoint2: CGPoint(x: 73.33, y: 20.08))
        startShiftTextPath.addCurve(to: CGPoint(x: 72.05, y: 19.95), controlPoint1: CGPoint(x: 72.69, y: 20.08), controlPoint2: CGPoint(x: 72.33, y: 20.03))
        startShiftTextPath.addCurve(to: CGPoint(x: 71.41, y: 19.57), controlPoint1: CGPoint(x: 71.78, y: 19.86), controlPoint2: CGPoint(x: 71.57, y: 19.74))
        startShiftTextPath.addCurve(to: CGPoint(x: 71.09, y: 18.95), controlPoint1: CGPoint(x: 71.25, y: 19.41), controlPoint2: CGPoint(x: 71.15, y: 19.2))
        startShiftTextPath.addCurve(to: CGPoint(x: 71, y: 18.09), controlPoint1: CGPoint(x: 71.04, y: 18.7), controlPoint2: CGPoint(x: 71.01, y: 18.42))
        startShiftTextPath.addLine(to: CGPoint(x: 71, y: 13.52))
        startShiftTextPath.addLine(to: CGPoint(x: 69.71, y: 13.52))
        startShiftTextPath.addLine(to: CGPoint(x: 69.71, y: 12.25))
        startShiftTextPath.close()
        UIColor.white.setFill()
        startShiftTextPath.fill()
    }

    @objc dynamic public class func drawStartShiftDown() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!


        //// Gradient Declarations
        let gradient11 = CGGradient(colorsSpace: nil, colors: [ButtonsForFJ092018.blueGradientColor2.cgColor, ButtonsForFJ092018.gradientForBoxColor2.cgColor] as CFArray, locations: [0, 1])!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 80, height: 30))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(gradient11, start: CGPoint(x: 40, y: -0), end: CGPoint(x: 40, y: 30), options: [])
        context.restoreGState()


        //// StartShiftText 2 Drawing
        let startShiftText2Path = UIBezierPath()
        startShiftText2Path.move(to: CGPoint(x: 7.79, y: 16.43))
        startShiftText2Path.addCurve(to: CGPoint(x: 8, y: 17.48), controlPoint1: CGPoint(x: 7.79, y: 16.84), controlPoint2: CGPoint(x: 7.86, y: 17.19))
        startShiftText2Path.addCurve(to: CGPoint(x: 8.58, y: 18.19), controlPoint1: CGPoint(x: 8.14, y: 17.77), controlPoint2: CGPoint(x: 8.33, y: 18.01))
        startShiftText2Path.addCurve(to: CGPoint(x: 9.44, y: 18.6), controlPoint1: CGPoint(x: 8.83, y: 18.38), controlPoint2: CGPoint(x: 9.12, y: 18.51))
        startShiftText2Path.addCurve(to: CGPoint(x: 10.5, y: 18.72), controlPoint1: CGPoint(x: 9.77, y: 18.68), controlPoint2: CGPoint(x: 10.12, y: 18.72))
        startShiftText2Path.addCurve(to: CGPoint(x: 11.55, y: 18.58), controlPoint1: CGPoint(x: 10.91, y: 18.72), controlPoint2: CGPoint(x: 11.26, y: 18.68))
        startShiftText2Path.addCurve(to: CGPoint(x: 12.26, y: 18.22), controlPoint1: CGPoint(x: 11.84, y: 18.49), controlPoint2: CGPoint(x: 12.08, y: 18.37))
        startShiftText2Path.addCurve(to: CGPoint(x: 12.65, y: 17.7), controlPoint1: CGPoint(x: 12.44, y: 18.06), controlPoint2: CGPoint(x: 12.57, y: 17.89))
        startShiftText2Path.addCurve(to: CGPoint(x: 12.77, y: 17.11), controlPoint1: CGPoint(x: 12.73, y: 17.5), controlPoint2: CGPoint(x: 12.77, y: 17.31))
        startShiftText2Path.addCurve(to: CGPoint(x: 12.49, y: 16.2), controlPoint1: CGPoint(x: 12.77, y: 16.69), controlPoint2: CGPoint(x: 12.68, y: 16.39))
        startShiftText2Path.addCurve(to: CGPoint(x: 11.88, y: 15.78), controlPoint1: CGPoint(x: 12.3, y: 16), controlPoint2: CGPoint(x: 12.1, y: 15.87))
        startShiftText2Path.addCurve(to: CGPoint(x: 10.55, y: 15.39), controlPoint1: CGPoint(x: 11.5, y: 15.64), controlPoint2: CGPoint(x: 11.06, y: 15.51))
        startShiftText2Path.addCurve(to: CGPoint(x: 8.69, y: 14.9), controlPoint1: CGPoint(x: 10.05, y: 15.26), controlPoint2: CGPoint(x: 9.43, y: 15.1))
        startShiftText2Path.addCurve(to: CGPoint(x: 7.54, y: 14.43), controlPoint1: CGPoint(x: 8.23, y: 14.78), controlPoint2: CGPoint(x: 7.85, y: 14.62))
        startShiftText2Path.addCurve(to: CGPoint(x: 6.81, y: 13.78), controlPoint1: CGPoint(x: 7.23, y: 14.23), controlPoint2: CGPoint(x: 6.99, y: 14.02))
        startShiftText2Path.addCurve(to: CGPoint(x: 6.43, y: 13.01), controlPoint1: CGPoint(x: 6.63, y: 13.53), controlPoint2: CGPoint(x: 6.51, y: 13.28))
        startShiftText2Path.addCurve(to: CGPoint(x: 6.32, y: 12.19), controlPoint1: CGPoint(x: 6.35, y: 12.74), controlPoint2: CGPoint(x: 6.32, y: 12.47))
        startShiftText2Path.addCurve(to: CGPoint(x: 6.65, y: 10.78), controlPoint1: CGPoint(x: 6.32, y: 11.64), controlPoint2: CGPoint(x: 6.43, y: 11.18))
        startShiftText2Path.addCurve(to: CGPoint(x: 7.55, y: 9.8), controlPoint1: CGPoint(x: 6.88, y: 10.39), controlPoint2: CGPoint(x: 7.18, y: 10.06))
        startShiftText2Path.addCurve(to: CGPoint(x: 8.81, y: 9.22), controlPoint1: CGPoint(x: 7.92, y: 9.54), controlPoint2: CGPoint(x: 8.34, y: 9.35))
        startShiftText2Path.addCurve(to: CGPoint(x: 10.23, y: 9.03), controlPoint1: CGPoint(x: 9.28, y: 9.1), controlPoint2: CGPoint(x: 9.75, y: 9.03))
        startShiftText2Path.addCurve(to: CGPoint(x: 11.81, y: 9.25), controlPoint1: CGPoint(x: 10.79, y: 9.03), controlPoint2: CGPoint(x: 11.32, y: 9.11))
        startShiftText2Path.addCurve(to: CGPoint(x: 13.12, y: 9.91), controlPoint1: CGPoint(x: 12.31, y: 9.4), controlPoint2: CGPoint(x: 12.74, y: 9.61))
        startShiftText2Path.addCurve(to: CGPoint(x: 14.01, y: 10.98), controlPoint1: CGPoint(x: 13.5, y: 10.2), controlPoint2: CGPoint(x: 13.79, y: 10.55))
        startShiftText2Path.addCurve(to: CGPoint(x: 14.34, y: 12.45), controlPoint1: CGPoint(x: 14.23, y: 11.4), controlPoint2: CGPoint(x: 14.34, y: 11.89))
        startShiftText2Path.addLine(to: CGPoint(x: 12.47, y: 12.45))
        startShiftText2Path.addCurve(to: CGPoint(x: 11.76, y: 10.99), controlPoint1: CGPoint(x: 12.42, y: 11.76), controlPoint2: CGPoint(x: 12.18, y: 11.28))
        startShiftText2Path.addCurve(to: CGPoint(x: 10.16, y: 10.56), controlPoint1: CGPoint(x: 11.34, y: 10.71), controlPoint2: CGPoint(x: 10.81, y: 10.56))
        startShiftText2Path.addCurve(to: CGPoint(x: 9.48, y: 10.63), controlPoint1: CGPoint(x: 9.94, y: 10.56), controlPoint2: CGPoint(x: 9.71, y: 10.59))
        startShiftText2Path.addCurve(to: CGPoint(x: 8.85, y: 10.86), controlPoint1: CGPoint(x: 9.25, y: 10.68), controlPoint2: CGPoint(x: 9.04, y: 10.75))
        startShiftText2Path.addCurve(to: CGPoint(x: 8.38, y: 11.28), controlPoint1: CGPoint(x: 8.66, y: 10.96), controlPoint2: CGPoint(x: 8.51, y: 11.1))
        startShiftText2Path.addCurve(to: CGPoint(x: 8.19, y: 11.96), controlPoint1: CGPoint(x: 8.25, y: 11.47), controlPoint2: CGPoint(x: 8.19, y: 11.69))
        startShiftText2Path.addCurve(to: CGPoint(x: 8.54, y: 12.85), controlPoint1: CGPoint(x: 8.19, y: 12.34), controlPoint2: CGPoint(x: 8.31, y: 12.64))
        startShiftText2Path.addCurve(to: CGPoint(x: 9.47, y: 13.34), controlPoint1: CGPoint(x: 8.78, y: 13.07), controlPoint2: CGPoint(x: 9.09, y: 13.23))
        startShiftText2Path.addCurve(to: CGPoint(x: 9.94, y: 13.47), controlPoint1: CGPoint(x: 9.51, y: 13.35), controlPoint2: CGPoint(x: 9.66, y: 13.39))
        startShiftText2Path.addCurve(to: CGPoint(x: 10.86, y: 13.72), controlPoint1: CGPoint(x: 10.22, y: 13.54), controlPoint2: CGPoint(x: 10.52, y: 13.62))
        startShiftText2Path.addCurve(to: CGPoint(x: 11.86, y: 13.98), controlPoint1: CGPoint(x: 11.2, y: 13.81), controlPoint2: CGPoint(x: 11.53, y: 13.89))
        startShiftText2Path.addCurve(to: CGPoint(x: 12.56, y: 14.16), controlPoint1: CGPoint(x: 12.19, y: 14.06), controlPoint2: CGPoint(x: 12.42, y: 14.12))
        startShiftText2Path.addCurve(to: CGPoint(x: 13.47, y: 14.61), controlPoint1: CGPoint(x: 12.91, y: 14.28), controlPoint2: CGPoint(x: 13.21, y: 14.42))
        startShiftText2Path.addCurve(to: CGPoint(x: 14.12, y: 15.27), controlPoint1: CGPoint(x: 13.73, y: 14.81), controlPoint2: CGPoint(x: 13.95, y: 15.02))
        startShiftText2Path.addCurve(to: CGPoint(x: 14.51, y: 16.06), controlPoint1: CGPoint(x: 14.3, y: 15.51), controlPoint2: CGPoint(x: 14.43, y: 15.77))
        startShiftText2Path.addCurve(to: CGPoint(x: 14.64, y: 16.89), controlPoint1: CGPoint(x: 14.6, y: 16.34), controlPoint2: CGPoint(x: 14.64, y: 16.61))
        startShiftText2Path.addCurve(to: CGPoint(x: 14.27, y: 18.43), controlPoint1: CGPoint(x: 14.64, y: 17.5), controlPoint2: CGPoint(x: 14.52, y: 18.01))
        startShiftText2Path.addCurve(to: CGPoint(x: 13.31, y: 19.47), controlPoint1: CGPoint(x: 14.03, y: 18.86), controlPoint2: CGPoint(x: 13.71, y: 19.2))
        startShiftText2Path.addCurve(to: CGPoint(x: 11.94, y: 20.07), controlPoint1: CGPoint(x: 12.91, y: 19.75), controlPoint2: CGPoint(x: 12.45, y: 19.94))
        startShiftText2Path.addCurve(to: CGPoint(x: 10.38, y: 20.25), controlPoint1: CGPoint(x: 11.43, y: 20.19), controlPoint2: CGPoint(x: 10.91, y: 20.25))
        startShiftText2Path.addCurve(to: CGPoint(x: 8.66, y: 20.03), controlPoint1: CGPoint(x: 9.77, y: 20.25), controlPoint2: CGPoint(x: 9.2, y: 20.18))
        startShiftText2Path.addCurve(to: CGPoint(x: 7.25, y: 19.34), controlPoint1: CGPoint(x: 8.12, y: 19.88), controlPoint2: CGPoint(x: 7.65, y: 19.65))
        startShiftText2Path.addCurve(to: CGPoint(x: 6.29, y: 18.15), controlPoint1: CGPoint(x: 6.85, y: 19.03), controlPoint2: CGPoint(x: 6.53, y: 18.63))
        startShiftText2Path.addCurve(to: CGPoint(x: 5.91, y: 16.43), controlPoint1: CGPoint(x: 6.05, y: 17.66), controlPoint2: CGPoint(x: 5.92, y: 17.09))
        startShiftText2Path.addLine(to: CGPoint(x: 7.79, y: 16.43))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 15.26, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 16.55, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 16.55, y: 9.92))
        startShiftText2Path.addLine(to: CGPoint(x: 18.26, y: 9.92))
        startShiftText2Path.addLine(to: CGPoint(x: 18.26, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 19.8, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 19.8, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 18.26, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 18.26, y: 17.66))
        startShiftText2Path.addCurve(to: CGPoint(x: 18.28, y: 18.12), controlPoint1: CGPoint(x: 18.26, y: 17.84), controlPoint2: CGPoint(x: 18.26, y: 17.99))
        startShiftText2Path.addCurve(to: CGPoint(x: 18.38, y: 18.45), controlPoint1: CGPoint(x: 18.3, y: 18.26), controlPoint2: CGPoint(x: 18.33, y: 18.36))
        startShiftText2Path.addCurve(to: CGPoint(x: 18.63, y: 18.66), controlPoint1: CGPoint(x: 18.44, y: 18.55), controlPoint2: CGPoint(x: 18.52, y: 18.61))
        startShiftText2Path.addCurve(to: CGPoint(x: 19.08, y: 18.72), controlPoint1: CGPoint(x: 18.74, y: 18.7), controlPoint2: CGPoint(x: 18.89, y: 18.72))
        startShiftText2Path.addCurve(to: CGPoint(x: 19.44, y: 18.72), controlPoint1: CGPoint(x: 19.2, y: 18.72), controlPoint2: CGPoint(x: 19.32, y: 18.72))
        startShiftText2Path.addCurve(to: CGPoint(x: 19.8, y: 18.66), controlPoint1: CGPoint(x: 19.56, y: 18.71), controlPoint2: CGPoint(x: 19.68, y: 18.7))
        startShiftText2Path.addLine(to: CGPoint(x: 19.8, y: 19.98))
        startShiftText2Path.addCurve(to: CGPoint(x: 19.25, y: 20.05), controlPoint1: CGPoint(x: 19.61, y: 20.01), controlPoint2: CGPoint(x: 19.43, y: 20.02))
        startShiftText2Path.addCurve(to: CGPoint(x: 18.69, y: 20.08), controlPoint1: CGPoint(x: 19.07, y: 20.07), controlPoint2: CGPoint(x: 18.88, y: 20.08))
        startShiftText2Path.addCurve(to: CGPoint(x: 17.6, y: 19.95), controlPoint1: CGPoint(x: 18.24, y: 20.08), controlPoint2: CGPoint(x: 17.88, y: 20.03))
        startShiftText2Path.addCurve(to: CGPoint(x: 16.96, y: 19.57), controlPoint1: CGPoint(x: 17.33, y: 19.86), controlPoint2: CGPoint(x: 17.12, y: 19.74))
        startShiftText2Path.addCurve(to: CGPoint(x: 16.64, y: 18.95), controlPoint1: CGPoint(x: 16.8, y: 19.41), controlPoint2: CGPoint(x: 16.7, y: 19.2))
        startShiftText2Path.addCurve(to: CGPoint(x: 16.55, y: 18.09), controlPoint1: CGPoint(x: 16.59, y: 18.7), controlPoint2: CGPoint(x: 16.56, y: 18.42))
        startShiftText2Path.addLine(to: CGPoint(x: 16.55, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 15.26, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 15.26, y: 12.25))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 27.53, y: 18.28))
        startShiftText2Path.addCurve(to: CGPoint(x: 27.61, y: 18.72), controlPoint1: CGPoint(x: 27.53, y: 18.49), controlPoint2: CGPoint(x: 27.55, y: 18.63))
        startShiftText2Path.addCurve(to: CGPoint(x: 27.93, y: 18.86), controlPoint1: CGPoint(x: 27.67, y: 18.82), controlPoint2: CGPoint(x: 27.77, y: 18.86))
        startShiftText2Path.addCurve(to: CGPoint(x: 28.11, y: 18.86), controlPoint1: CGPoint(x: 27.98, y: 18.86), controlPoint2: CGPoint(x: 28.04, y: 18.86))
        startShiftText2Path.addCurve(to: CGPoint(x: 28.35, y: 18.83), controlPoint1: CGPoint(x: 28.18, y: 18.86), controlPoint2: CGPoint(x: 28.26, y: 18.85))
        startShiftText2Path.addLine(to: CGPoint(x: 28.35, y: 20.02))
        startShiftText2Path.addCurve(to: CGPoint(x: 28.12, y: 20.08), controlPoint1: CGPoint(x: 28.29, y: 20.04), controlPoint2: CGPoint(x: 28.22, y: 20.06))
        startShiftText2Path.addCurve(to: CGPoint(x: 27.83, y: 20.15), controlPoint1: CGPoint(x: 28.02, y: 20.11), controlPoint2: CGPoint(x: 27.93, y: 20.13))
        startShiftText2Path.addCurve(to: CGPoint(x: 27.53, y: 20.19), controlPoint1: CGPoint(x: 27.73, y: 20.17), controlPoint2: CGPoint(x: 27.63, y: 20.18))
        startShiftText2Path.addCurve(to: CGPoint(x: 27.27, y: 20.21), controlPoint1: CGPoint(x: 27.43, y: 20.21), controlPoint2: CGPoint(x: 27.34, y: 20.21))
        startShiftText2Path.addCurve(to: CGPoint(x: 26.4, y: 20), controlPoint1: CGPoint(x: 26.92, y: 20.21), controlPoint2: CGPoint(x: 26.63, y: 20.14))
        startShiftText2Path.addCurve(to: CGPoint(x: 25.95, y: 19.27), controlPoint1: CGPoint(x: 26.17, y: 19.86), controlPoint2: CGPoint(x: 26.02, y: 19.62))
        startShiftText2Path.addCurve(to: CGPoint(x: 24.7, y: 19.98), controlPoint1: CGPoint(x: 25.61, y: 19.6), controlPoint2: CGPoint(x: 25.2, y: 19.83))
        startShiftText2Path.addCurve(to: CGPoint(x: 23.27, y: 20.21), controlPoint1: CGPoint(x: 24.2, y: 20.14), controlPoint2: CGPoint(x: 23.73, y: 20.21))
        startShiftText2Path.addCurve(to: CGPoint(x: 22.26, y: 20.07), controlPoint1: CGPoint(x: 22.92, y: 20.21), controlPoint2: CGPoint(x: 22.58, y: 20.16))
        startShiftText2Path.addCurve(to: CGPoint(x: 21.41, y: 19.65), controlPoint1: CGPoint(x: 21.94, y: 19.97), controlPoint2: CGPoint(x: 21.66, y: 19.83))
        startShiftText2Path.addCurve(to: CGPoint(x: 20.83, y: 18.94), controlPoint1: CGPoint(x: 21.17, y: 19.46), controlPoint2: CGPoint(x: 20.98, y: 19.23))
        startShiftText2Path.addCurve(to: CGPoint(x: 20.61, y: 17.94), controlPoint1: CGPoint(x: 20.68, y: 18.66), controlPoint2: CGPoint(x: 20.61, y: 18.33))
        startShiftText2Path.addCurve(to: CGPoint(x: 20.87, y: 16.78), controlPoint1: CGPoint(x: 20.61, y: 17.46), controlPoint2: CGPoint(x: 20.7, y: 17.08))
        startShiftText2Path.addCurve(to: CGPoint(x: 21.56, y: 16.07), controlPoint1: CGPoint(x: 21.05, y: 16.47), controlPoint2: CGPoint(x: 21.28, y: 16.24))
        startShiftText2Path.addCurve(to: CGPoint(x: 22.52, y: 15.7), controlPoint1: CGPoint(x: 21.85, y: 15.9), controlPoint2: CGPoint(x: 22.17, y: 15.78))
        startShiftText2Path.addCurve(to: CGPoint(x: 23.6, y: 15.53), controlPoint1: CGPoint(x: 22.88, y: 15.63), controlPoint2: CGPoint(x: 23.24, y: 15.57))
        startShiftText2Path.addCurve(to: CGPoint(x: 24.48, y: 15.4), controlPoint1: CGPoint(x: 23.91, y: 15.47), controlPoint2: CGPoint(x: 24.2, y: 15.43))
        startShiftText2Path.addCurve(to: CGPoint(x: 25.22, y: 15.28), controlPoint1: CGPoint(x: 24.76, y: 15.38), controlPoint2: CGPoint(x: 25.01, y: 15.34))
        startShiftText2Path.addCurve(to: CGPoint(x: 25.73, y: 15), controlPoint1: CGPoint(x: 25.44, y: 15.21), controlPoint2: CGPoint(x: 25.61, y: 15.12))
        startShiftText2Path.addCurve(to: CGPoint(x: 25.92, y: 14.44), controlPoint1: CGPoint(x: 25.86, y: 14.87), controlPoint2: CGPoint(x: 25.92, y: 14.69))
        startShiftText2Path.addCurve(to: CGPoint(x: 25.76, y: 13.89), controlPoint1: CGPoint(x: 25.92, y: 14.21), controlPoint2: CGPoint(x: 25.87, y: 14.04))
        startShiftText2Path.addCurve(to: CGPoint(x: 25.37, y: 13.57), controlPoint1: CGPoint(x: 25.66, y: 13.75), controlPoint2: CGPoint(x: 25.53, y: 13.65))
        startShiftText2Path.addCurve(to: CGPoint(x: 24.86, y: 13.42), controlPoint1: CGPoint(x: 25.22, y: 13.5), controlPoint2: CGPoint(x: 25.05, y: 13.45))
        startShiftText2Path.addCurve(to: CGPoint(x: 24.32, y: 13.39), controlPoint1: CGPoint(x: 24.67, y: 13.4), controlPoint2: CGPoint(x: 24.49, y: 13.39))
        startShiftText2Path.addCurve(to: CGPoint(x: 23.13, y: 13.69), controlPoint1: CGPoint(x: 23.84, y: 13.39), controlPoint2: CGPoint(x: 23.44, y: 13.48))
        startShiftText2Path.addCurve(to: CGPoint(x: 22.61, y: 14.61), controlPoint1: CGPoint(x: 22.82, y: 13.89), controlPoint2: CGPoint(x: 22.65, y: 14.19))
        startShiftText2Path.addLine(to: CGPoint(x: 20.9, y: 14.61))
        startShiftText2Path.addCurve(to: CGPoint(x: 21.26, y: 13.37), controlPoint1: CGPoint(x: 20.93, y: 14.11), controlPoint2: CGPoint(x: 21.05, y: 13.7))
        startShiftText2Path.addCurve(to: CGPoint(x: 22.06, y: 12.58), controlPoint1: CGPoint(x: 21.47, y: 13.04), controlPoint2: CGPoint(x: 21.73, y: 12.78))
        startShiftText2Path.addCurve(to: CGPoint(x: 23.16, y: 12.16), controlPoint1: CGPoint(x: 22.39, y: 12.37), controlPoint2: CGPoint(x: 22.75, y: 12.24))
        startShiftText2Path.addCurve(to: CGPoint(x: 24.42, y: 12.03), controlPoint1: CGPoint(x: 23.57, y: 12.07), controlPoint2: CGPoint(x: 23.99, y: 12.03))
        startShiftText2Path.addCurve(to: CGPoint(x: 25.55, y: 12.16), controlPoint1: CGPoint(x: 24.8, y: 12.03), controlPoint2: CGPoint(x: 25.18, y: 12.07))
        startShiftText2Path.addCurve(to: CGPoint(x: 26.54, y: 12.55), controlPoint1: CGPoint(x: 25.92, y: 12.24), controlPoint2: CGPoint(x: 26.25, y: 12.36))
        startShiftText2Path.addCurve(to: CGPoint(x: 27.26, y: 13.24), controlPoint1: CGPoint(x: 26.84, y: 12.73), controlPoint2: CGPoint(x: 27.08, y: 12.96))
        startShiftText2Path.addCurve(to: CGPoint(x: 27.53, y: 14.28), controlPoint1: CGPoint(x: 27.44, y: 13.53), controlPoint2: CGPoint(x: 27.53, y: 13.87))
        startShiftText2Path.addLine(to: CGPoint(x: 27.53, y: 18.28))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 25.82, y: 16.12))
        startShiftText2Path.addCurve(to: CGPoint(x: 24.86, y: 16.42), controlPoint1: CGPoint(x: 25.56, y: 16.29), controlPoint2: CGPoint(x: 25.24, y: 16.39))
        startShiftText2Path.addCurve(to: CGPoint(x: 23.72, y: 16.58), controlPoint1: CGPoint(x: 24.48, y: 16.46), controlPoint2: CGPoint(x: 24.1, y: 16.51))
        startShiftText2Path.addCurve(to: CGPoint(x: 23.19, y: 16.71), controlPoint1: CGPoint(x: 23.54, y: 16.61), controlPoint2: CGPoint(x: 23.36, y: 16.65))
        startShiftText2Path.addCurve(to: CGPoint(x: 22.74, y: 16.93), controlPoint1: CGPoint(x: 23.02, y: 16.76), controlPoint2: CGPoint(x: 22.87, y: 16.84))
        startShiftText2Path.addCurve(to: CGPoint(x: 22.43, y: 17.31), controlPoint1: CGPoint(x: 22.61, y: 17.03), controlPoint2: CGPoint(x: 22.51, y: 17.15))
        startShiftText2Path.addCurve(to: CGPoint(x: 22.32, y: 17.87), controlPoint1: CGPoint(x: 22.36, y: 17.46), controlPoint2: CGPoint(x: 22.32, y: 17.65))
        startShiftText2Path.addCurve(to: CGPoint(x: 22.49, y: 18.35), controlPoint1: CGPoint(x: 22.32, y: 18.06), controlPoint2: CGPoint(x: 22.38, y: 18.22))
        startShiftText2Path.addCurve(to: CGPoint(x: 22.88, y: 18.66), controlPoint1: CGPoint(x: 22.6, y: 18.48), controlPoint2: CGPoint(x: 22.73, y: 18.58))
        startShiftText2Path.addCurve(to: CGPoint(x: 23.39, y: 18.81), controlPoint1: CGPoint(x: 23.04, y: 18.73), controlPoint2: CGPoint(x: 23.21, y: 18.78))
        startShiftText2Path.addCurve(to: CGPoint(x: 23.9, y: 18.86), controlPoint1: CGPoint(x: 23.58, y: 18.85), controlPoint2: CGPoint(x: 23.75, y: 18.86))
        startShiftText2Path.addCurve(to: CGPoint(x: 24.51, y: 18.78), controlPoint1: CGPoint(x: 24.09, y: 18.86), controlPoint2: CGPoint(x: 24.29, y: 18.84))
        startShiftText2Path.addCurve(to: CGPoint(x: 25.13, y: 18.53), controlPoint1: CGPoint(x: 24.73, y: 18.73), controlPoint2: CGPoint(x: 24.94, y: 18.65))
        startShiftText2Path.addCurve(to: CGPoint(x: 25.62, y: 18.07), controlPoint1: CGPoint(x: 25.33, y: 18.41), controlPoint2: CGPoint(x: 25.49, y: 18.26))
        startShiftText2Path.addCurve(to: CGPoint(x: 25.82, y: 17.39), controlPoint1: CGPoint(x: 25.75, y: 17.89), controlPoint2: CGPoint(x: 25.82, y: 17.66))
        startShiftText2Path.addLine(to: CGPoint(x: 25.82, y: 16.12))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 29.37, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 30.98, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 30.98, y: 13.75))
        startShiftText2Path.addLine(to: CGPoint(x: 31.01, y: 13.75))
        startShiftText2Path.addCurve(to: CGPoint(x: 31.3, y: 13.13), controlPoint1: CGPoint(x: 31.06, y: 13.53), controlPoint2: CGPoint(x: 31.15, y: 13.33))
        startShiftText2Path.addCurve(to: CGPoint(x: 31.82, y: 12.58), controlPoint1: CGPoint(x: 31.45, y: 12.93), controlPoint2: CGPoint(x: 31.62, y: 12.75))
        startShiftText2Path.addCurve(to: CGPoint(x: 32.51, y: 12.19), controlPoint1: CGPoint(x: 32.03, y: 12.42), controlPoint2: CGPoint(x: 32.26, y: 12.29))
        startShiftText2Path.addCurve(to: CGPoint(x: 33.27, y: 12.03), controlPoint1: CGPoint(x: 32.76, y: 12.08), controlPoint2: CGPoint(x: 33.01, y: 12.03))
        startShiftText2Path.addCurve(to: CGPoint(x: 33.68, y: 12.05), controlPoint1: CGPoint(x: 33.47, y: 12.03), controlPoint2: CGPoint(x: 33.61, y: 12.04))
        startShiftText2Path.addCurve(to: CGPoint(x: 33.92, y: 12.08), controlPoint1: CGPoint(x: 33.76, y: 12.06), controlPoint2: CGPoint(x: 33.84, y: 12.07))
        startShiftText2Path.addLine(to: CGPoint(x: 33.92, y: 13.73))
        startShiftText2Path.addCurve(to: CGPoint(x: 33.55, y: 13.68), controlPoint1: CGPoint(x: 33.8, y: 13.71), controlPoint2: CGPoint(x: 33.68, y: 13.69))
        startShiftText2Path.addCurve(to: CGPoint(x: 33.18, y: 13.66), controlPoint1: CGPoint(x: 33.42, y: 13.66), controlPoint2: CGPoint(x: 33.3, y: 13.66))
        startShiftText2Path.addCurve(to: CGPoint(x: 32.36, y: 13.83), controlPoint1: CGPoint(x: 32.89, y: 13.66), controlPoint2: CGPoint(x: 32.62, y: 13.71))
        startShiftText2Path.addCurve(to: CGPoint(x: 31.7, y: 14.34), controlPoint1: CGPoint(x: 32.11, y: 13.94), controlPoint2: CGPoint(x: 31.89, y: 14.11))
        startShiftText2Path.addCurve(to: CGPoint(x: 31.25, y: 15.17), controlPoint1: CGPoint(x: 31.51, y: 14.56), controlPoint2: CGPoint(x: 31.36, y: 14.84))
        startShiftText2Path.addCurve(to: CGPoint(x: 31.08, y: 16.31), controlPoint1: CGPoint(x: 31.14, y: 15.5), controlPoint2: CGPoint(x: 31.08, y: 15.88))
        startShiftText2Path.addLine(to: CGPoint(x: 31.08, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 29.37, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 29.37, y: 12.25))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 33.87, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 35.16, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 35.16, y: 9.92))
        startShiftText2Path.addLine(to: CGPoint(x: 36.87, y: 9.92))
        startShiftText2Path.addLine(to: CGPoint(x: 36.87, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 38.42, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 38.42, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 36.87, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 36.87, y: 17.66))
        startShiftText2Path.addCurve(to: CGPoint(x: 36.89, y: 18.12), controlPoint1: CGPoint(x: 36.87, y: 17.84), controlPoint2: CGPoint(x: 36.88, y: 17.99))
        startShiftText2Path.addCurve(to: CGPoint(x: 37, y: 18.45), controlPoint1: CGPoint(x: 36.91, y: 18.26), controlPoint2: CGPoint(x: 36.94, y: 18.36))
        startShiftText2Path.addCurve(to: CGPoint(x: 37.25, y: 18.66), controlPoint1: CGPoint(x: 37.06, y: 18.55), controlPoint2: CGPoint(x: 37.14, y: 18.61))
        startShiftText2Path.addCurve(to: CGPoint(x: 37.7, y: 18.72), controlPoint1: CGPoint(x: 37.36, y: 18.7), controlPoint2: CGPoint(x: 37.51, y: 18.72))
        startShiftText2Path.addCurve(to: CGPoint(x: 38.06, y: 18.72), controlPoint1: CGPoint(x: 37.82, y: 18.72), controlPoint2: CGPoint(x: 37.94, y: 18.72))
        startShiftText2Path.addCurve(to: CGPoint(x: 38.42, y: 18.66), controlPoint1: CGPoint(x: 38.18, y: 18.71), controlPoint2: CGPoint(x: 38.3, y: 18.7))
        startShiftText2Path.addLine(to: CGPoint(x: 38.42, y: 19.98))
        startShiftText2Path.addCurve(to: CGPoint(x: 37.86, y: 20.05), controlPoint1: CGPoint(x: 38.23, y: 20.01), controlPoint2: CGPoint(x: 38.04, y: 20.02))
        startShiftText2Path.addCurve(to: CGPoint(x: 37.31, y: 20.08), controlPoint1: CGPoint(x: 37.68, y: 20.07), controlPoint2: CGPoint(x: 37.5, y: 20.08))
        startShiftText2Path.addCurve(to: CGPoint(x: 36.22, y: 19.95), controlPoint1: CGPoint(x: 36.86, y: 20.08), controlPoint2: CGPoint(x: 36.5, y: 20.03))
        startShiftText2Path.addCurve(to: CGPoint(x: 35.57, y: 19.57), controlPoint1: CGPoint(x: 35.94, y: 19.86), controlPoint2: CGPoint(x: 35.73, y: 19.74))
        startShiftText2Path.addCurve(to: CGPoint(x: 35.26, y: 18.95), controlPoint1: CGPoint(x: 35.42, y: 19.41), controlPoint2: CGPoint(x: 35.32, y: 19.2))
        startShiftText2Path.addCurve(to: CGPoint(x: 35.16, y: 18.09), controlPoint1: CGPoint(x: 35.2, y: 18.7), controlPoint2: CGPoint(x: 35.17, y: 18.42))
        startShiftText2Path.addLine(to: CGPoint(x: 35.16, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 33.87, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 33.87, y: 12.25))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 45.29, y: 16.43))
        startShiftText2Path.addCurve(to: CGPoint(x: 45.5, y: 17.48), controlPoint1: CGPoint(x: 45.29, y: 16.84), controlPoint2: CGPoint(x: 45.36, y: 17.19))
        startShiftText2Path.addCurve(to: CGPoint(x: 46.08, y: 18.19), controlPoint1: CGPoint(x: 45.64, y: 17.77), controlPoint2: CGPoint(x: 45.83, y: 18.01))
        startShiftText2Path.addCurve(to: CGPoint(x: 46.94, y: 18.6), controlPoint1: CGPoint(x: 46.33, y: 18.38), controlPoint2: CGPoint(x: 46.62, y: 18.51))
        startShiftText2Path.addCurve(to: CGPoint(x: 48, y: 18.72), controlPoint1: CGPoint(x: 47.27, y: 18.68), controlPoint2: CGPoint(x: 47.62, y: 18.72))
        startShiftText2Path.addCurve(to: CGPoint(x: 49.05, y: 18.58), controlPoint1: CGPoint(x: 48.41, y: 18.72), controlPoint2: CGPoint(x: 48.76, y: 18.68))
        startShiftText2Path.addCurve(to: CGPoint(x: 49.76, y: 18.22), controlPoint1: CGPoint(x: 49.34, y: 18.49), controlPoint2: CGPoint(x: 49.58, y: 18.37))
        startShiftText2Path.addCurve(to: CGPoint(x: 50.15, y: 17.7), controlPoint1: CGPoint(x: 49.94, y: 18.06), controlPoint2: CGPoint(x: 50.07, y: 17.89))
        startShiftText2Path.addCurve(to: CGPoint(x: 50.27, y: 17.11), controlPoint1: CGPoint(x: 50.23, y: 17.5), controlPoint2: CGPoint(x: 50.27, y: 17.31))
        startShiftText2Path.addCurve(to: CGPoint(x: 49.99, y: 16.2), controlPoint1: CGPoint(x: 50.27, y: 16.69), controlPoint2: CGPoint(x: 50.18, y: 16.39))
        startShiftText2Path.addCurve(to: CGPoint(x: 49.38, y: 15.78), controlPoint1: CGPoint(x: 49.8, y: 16), controlPoint2: CGPoint(x: 49.6, y: 15.87))
        startShiftText2Path.addCurve(to: CGPoint(x: 48.05, y: 15.39), controlPoint1: CGPoint(x: 49, y: 15.64), controlPoint2: CGPoint(x: 48.56, y: 15.51))
        startShiftText2Path.addCurve(to: CGPoint(x: 46.19, y: 14.9), controlPoint1: CGPoint(x: 47.55, y: 15.26), controlPoint2: CGPoint(x: 46.93, y: 15.1))
        startShiftText2Path.addCurve(to: CGPoint(x: 45.04, y: 14.43), controlPoint1: CGPoint(x: 45.73, y: 14.78), controlPoint2: CGPoint(x: 45.35, y: 14.62))
        startShiftText2Path.addCurve(to: CGPoint(x: 44.31, y: 13.78), controlPoint1: CGPoint(x: 44.73, y: 14.23), controlPoint2: CGPoint(x: 44.49, y: 14.02))
        startShiftText2Path.addCurve(to: CGPoint(x: 43.93, y: 13.01), controlPoint1: CGPoint(x: 44.13, y: 13.53), controlPoint2: CGPoint(x: 44.01, y: 13.28))
        startShiftText2Path.addCurve(to: CGPoint(x: 43.82, y: 12.19), controlPoint1: CGPoint(x: 43.85, y: 12.74), controlPoint2: CGPoint(x: 43.82, y: 12.47))
        startShiftText2Path.addCurve(to: CGPoint(x: 44.15, y: 10.78), controlPoint1: CGPoint(x: 43.82, y: 11.64), controlPoint2: CGPoint(x: 43.93, y: 11.18))
        startShiftText2Path.addCurve(to: CGPoint(x: 45.05, y: 9.8), controlPoint1: CGPoint(x: 44.38, y: 10.39), controlPoint2: CGPoint(x: 44.68, y: 10.06))
        startShiftText2Path.addCurve(to: CGPoint(x: 46.31, y: 9.22), controlPoint1: CGPoint(x: 45.42, y: 9.54), controlPoint2: CGPoint(x: 45.84, y: 9.35))
        startShiftText2Path.addCurve(to: CGPoint(x: 47.73, y: 9.03), controlPoint1: CGPoint(x: 46.78, y: 9.1), controlPoint2: CGPoint(x: 47.25, y: 9.03))
        startShiftText2Path.addCurve(to: CGPoint(x: 49.31, y: 9.25), controlPoint1: CGPoint(x: 48.29, y: 9.03), controlPoint2: CGPoint(x: 48.82, y: 9.11))
        startShiftText2Path.addCurve(to: CGPoint(x: 50.62, y: 9.91), controlPoint1: CGPoint(x: 49.81, y: 9.4), controlPoint2: CGPoint(x: 50.24, y: 9.61))
        startShiftText2Path.addCurve(to: CGPoint(x: 51.51, y: 10.98), controlPoint1: CGPoint(x: 51, y: 10.2), controlPoint2: CGPoint(x: 51.29, y: 10.55))
        startShiftText2Path.addCurve(to: CGPoint(x: 51.84, y: 12.45), controlPoint1: CGPoint(x: 51.73, y: 11.4), controlPoint2: CGPoint(x: 51.84, y: 11.89))
        startShiftText2Path.addLine(to: CGPoint(x: 49.97, y: 12.45))
        startShiftText2Path.addCurve(to: CGPoint(x: 49.26, y: 10.99), controlPoint1: CGPoint(x: 49.92, y: 11.76), controlPoint2: CGPoint(x: 49.68, y: 11.28))
        startShiftText2Path.addCurve(to: CGPoint(x: 47.66, y: 10.56), controlPoint1: CGPoint(x: 48.84, y: 10.71), controlPoint2: CGPoint(x: 48.31, y: 10.56))
        startShiftText2Path.addCurve(to: CGPoint(x: 46.98, y: 10.63), controlPoint1: CGPoint(x: 47.44, y: 10.56), controlPoint2: CGPoint(x: 47.21, y: 10.59))
        startShiftText2Path.addCurve(to: CGPoint(x: 46.35, y: 10.86), controlPoint1: CGPoint(x: 46.75, y: 10.68), controlPoint2: CGPoint(x: 46.54, y: 10.75))
        startShiftText2Path.addCurve(to: CGPoint(x: 45.88, y: 11.28), controlPoint1: CGPoint(x: 46.16, y: 10.96), controlPoint2: CGPoint(x: 46.01, y: 11.1))
        startShiftText2Path.addCurve(to: CGPoint(x: 45.69, y: 11.96), controlPoint1: CGPoint(x: 45.75, y: 11.47), controlPoint2: CGPoint(x: 45.69, y: 11.69))
        startShiftText2Path.addCurve(to: CGPoint(x: 46.04, y: 12.85), controlPoint1: CGPoint(x: 45.69, y: 12.34), controlPoint2: CGPoint(x: 45.81, y: 12.64))
        startShiftText2Path.addCurve(to: CGPoint(x: 46.97, y: 13.34), controlPoint1: CGPoint(x: 46.28, y: 13.07), controlPoint2: CGPoint(x: 46.59, y: 13.23))
        startShiftText2Path.addCurve(to: CGPoint(x: 47.44, y: 13.47), controlPoint1: CGPoint(x: 47.01, y: 13.35), controlPoint2: CGPoint(x: 47.16, y: 13.39))
        startShiftText2Path.addCurve(to: CGPoint(x: 48.36, y: 13.72), controlPoint1: CGPoint(x: 47.72, y: 13.54), controlPoint2: CGPoint(x: 48.02, y: 13.62))
        startShiftText2Path.addCurve(to: CGPoint(x: 49.36, y: 13.98), controlPoint1: CGPoint(x: 48.7, y: 13.81), controlPoint2: CGPoint(x: 49.03, y: 13.89))
        startShiftText2Path.addCurve(to: CGPoint(x: 50.06, y: 14.16), controlPoint1: CGPoint(x: 49.69, y: 14.06), controlPoint2: CGPoint(x: 49.92, y: 14.12))
        startShiftText2Path.addCurve(to: CGPoint(x: 50.97, y: 14.61), controlPoint1: CGPoint(x: 50.41, y: 14.28), controlPoint2: CGPoint(x: 50.71, y: 14.42))
        startShiftText2Path.addCurve(to: CGPoint(x: 51.62, y: 15.27), controlPoint1: CGPoint(x: 51.23, y: 14.81), controlPoint2: CGPoint(x: 51.45, y: 15.02))
        startShiftText2Path.addCurve(to: CGPoint(x: 52.02, y: 16.06), controlPoint1: CGPoint(x: 51.8, y: 15.51), controlPoint2: CGPoint(x: 51.93, y: 15.77))
        startShiftText2Path.addCurve(to: CGPoint(x: 52.14, y: 16.89), controlPoint1: CGPoint(x: 52.1, y: 16.34), controlPoint2: CGPoint(x: 52.14, y: 16.61))
        startShiftText2Path.addCurve(to: CGPoint(x: 51.77, y: 18.43), controlPoint1: CGPoint(x: 52.14, y: 17.5), controlPoint2: CGPoint(x: 52.02, y: 18.01))
        startShiftText2Path.addCurve(to: CGPoint(x: 50.81, y: 19.47), controlPoint1: CGPoint(x: 51.53, y: 18.86), controlPoint2: CGPoint(x: 51.21, y: 19.2))
        startShiftText2Path.addCurve(to: CGPoint(x: 49.44, y: 20.07), controlPoint1: CGPoint(x: 50.41, y: 19.75), controlPoint2: CGPoint(x: 49.95, y: 19.94))
        startShiftText2Path.addCurve(to: CGPoint(x: 47.88, y: 20.25), controlPoint1: CGPoint(x: 48.93, y: 20.19), controlPoint2: CGPoint(x: 48.41, y: 20.25))
        startShiftText2Path.addCurve(to: CGPoint(x: 46.16, y: 20.03), controlPoint1: CGPoint(x: 47.27, y: 20.25), controlPoint2: CGPoint(x: 46.7, y: 20.18))
        startShiftText2Path.addCurve(to: CGPoint(x: 44.75, y: 19.34), controlPoint1: CGPoint(x: 45.62, y: 19.88), controlPoint2: CGPoint(x: 45.15, y: 19.65))
        startShiftText2Path.addCurve(to: CGPoint(x: 43.79, y: 18.15), controlPoint1: CGPoint(x: 44.35, y: 19.03), controlPoint2: CGPoint(x: 44.03, y: 18.63))
        startShiftText2Path.addCurve(to: CGPoint(x: 43.41, y: 16.43), controlPoint1: CGPoint(x: 43.55, y: 17.66), controlPoint2: CGPoint(x: 43.42, y: 17.09))
        startShiftText2Path.addLine(to: CGPoint(x: 45.29, y: 16.43))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 53.54, y: 9.29))
        startShiftText2Path.addLine(to: CGPoint(x: 55.25, y: 9.29))
        startShiftText2Path.addLine(to: CGPoint(x: 55.25, y: 13.27))
        startShiftText2Path.addLine(to: CGPoint(x: 55.28, y: 13.27))
        startShiftText2Path.addCurve(to: CGPoint(x: 56.21, y: 12.39), controlPoint1: CGPoint(x: 55.49, y: 12.91), controlPoint2: CGPoint(x: 55.8, y: 12.62))
        startShiftText2Path.addCurve(to: CGPoint(x: 57.6, y: 12.03), controlPoint1: CGPoint(x: 56.63, y: 12.15), controlPoint2: CGPoint(x: 57.09, y: 12.03))
        startShiftText2Path.addCurve(to: CGPoint(x: 59.61, y: 12.69), controlPoint1: CGPoint(x: 58.45, y: 12.03), controlPoint2: CGPoint(x: 59.12, y: 12.25))
        startShiftText2Path.addCurve(to: CGPoint(x: 60.35, y: 14.67), controlPoint1: CGPoint(x: 60.1, y: 13.14), controlPoint2: CGPoint(x: 60.35, y: 13.79))
        startShiftText2Path.addLine(to: CGPoint(x: 60.35, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 58.64, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 58.64, y: 15.12))
        startShiftText2Path.addCurve(to: CGPoint(x: 58.25, y: 13.8), controlPoint1: CGPoint(x: 58.62, y: 14.51), controlPoint2: CGPoint(x: 58.49, y: 14.07))
        startShiftText2Path.addCurve(to: CGPoint(x: 57.12, y: 13.39), controlPoint1: CGPoint(x: 58.01, y: 13.52), controlPoint2: CGPoint(x: 57.63, y: 13.39))
        startShiftText2Path.addCurve(to: CGPoint(x: 56.34, y: 13.54), controlPoint1: CGPoint(x: 56.83, y: 13.39), controlPoint2: CGPoint(x: 56.57, y: 13.44))
        startShiftText2Path.addCurve(to: CGPoint(x: 55.76, y: 13.98), controlPoint1: CGPoint(x: 56.11, y: 13.65), controlPoint2: CGPoint(x: 55.92, y: 13.79))
        startShiftText2Path.addCurve(to: CGPoint(x: 55.38, y: 14.63), controlPoint1: CGPoint(x: 55.6, y: 14.16), controlPoint2: CGPoint(x: 55.47, y: 14.38))
        startShiftText2Path.addCurve(to: CGPoint(x: 55.25, y: 15.42), controlPoint1: CGPoint(x: 55.29, y: 14.88), controlPoint2: CGPoint(x: 55.25, y: 15.14))
        startShiftText2Path.addLine(to: CGPoint(x: 55.25, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 53.54, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 53.54, y: 9.29))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 62.19, y: 9.29))
        startShiftText2Path.addLine(to: CGPoint(x: 63.9, y: 9.29))
        startShiftText2Path.addLine(to: CGPoint(x: 63.9, y: 10.91))
        startShiftText2Path.addLine(to: CGPoint(x: 62.19, y: 10.91))
        startShiftText2Path.addLine(to: CGPoint(x: 62.19, y: 9.29))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 62.19, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 63.9, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 63.9, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 62.19, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 62.19, y: 12.25))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 65, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 66.27, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 66.27, y: 11.6))
        startShiftText2Path.addCurve(to: CGPoint(x: 66.45, y: 10.41), controlPoint1: CGPoint(x: 66.27, y: 11.11), controlPoint2: CGPoint(x: 66.33, y: 10.71))
        startShiftText2Path.addCurve(to: CGPoint(x: 66.93, y: 9.7), controlPoint1: CGPoint(x: 66.57, y: 10.1), controlPoint2: CGPoint(x: 66.73, y: 9.87))
        startShiftText2Path.addCurve(to: CGPoint(x: 67.61, y: 9.37), controlPoint1: CGPoint(x: 67.13, y: 9.54), controlPoint2: CGPoint(x: 67.36, y: 9.43))
        startShiftText2Path.addCurve(to: CGPoint(x: 68.42, y: 9.29), controlPoint1: CGPoint(x: 67.87, y: 9.32), controlPoint2: CGPoint(x: 68.14, y: 9.29))
        startShiftText2Path.addCurve(to: CGPoint(x: 69.62, y: 9.39), controlPoint1: CGPoint(x: 68.97, y: 9.29), controlPoint2: CGPoint(x: 69.37, y: 9.32))
        startShiftText2Path.addLine(to: CGPoint(x: 69.62, y: 10.73))
        startShiftText2Path.addCurve(to: CGPoint(x: 69.26, y: 10.66), controlPoint1: CGPoint(x: 69.51, y: 10.7), controlPoint2: CGPoint(x: 69.39, y: 10.68))
        startShiftText2Path.addCurve(to: CGPoint(x: 68.82, y: 10.64), controlPoint1: CGPoint(x: 69.14, y: 10.65), controlPoint2: CGPoint(x: 68.99, y: 10.64))
        startShiftText2Path.addCurve(to: CGPoint(x: 68.23, y: 10.81), controlPoint1: CGPoint(x: 68.59, y: 10.64), controlPoint2: CGPoint(x: 68.4, y: 10.69))
        startShiftText2Path.addCurve(to: CGPoint(x: 67.98, y: 11.45), controlPoint1: CGPoint(x: 68.06, y: 10.92), controlPoint2: CGPoint(x: 67.98, y: 11.13))
        startShiftText2Path.addLine(to: CGPoint(x: 67.98, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 69.44, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 69.44, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 67.98, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 67.98, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 66.27, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 66.27, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 65, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 65, y: 12.25))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 69.71, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 71, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 71, y: 9.92))
        startShiftText2Path.addLine(to: CGPoint(x: 72.71, y: 9.92))
        startShiftText2Path.addLine(to: CGPoint(x: 72.71, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 74.25, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 74.25, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 72.71, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 72.71, y: 17.66))
        startShiftText2Path.addCurve(to: CGPoint(x: 72.73, y: 18.12), controlPoint1: CGPoint(x: 72.71, y: 17.84), controlPoint2: CGPoint(x: 72.71, y: 17.99))
        startShiftText2Path.addCurve(to: CGPoint(x: 72.83, y: 18.45), controlPoint1: CGPoint(x: 72.75, y: 18.26), controlPoint2: CGPoint(x: 72.78, y: 18.36))
        startShiftText2Path.addCurve(to: CGPoint(x: 73.08, y: 18.66), controlPoint1: CGPoint(x: 72.89, y: 18.55), controlPoint2: CGPoint(x: 72.97, y: 18.61))
        startShiftText2Path.addCurve(to: CGPoint(x: 73.53, y: 18.72), controlPoint1: CGPoint(x: 73.19, y: 18.7), controlPoint2: CGPoint(x: 73.34, y: 18.72))
        startShiftText2Path.addCurve(to: CGPoint(x: 73.89, y: 18.72), controlPoint1: CGPoint(x: 73.65, y: 18.72), controlPoint2: CGPoint(x: 73.77, y: 18.72))
        startShiftText2Path.addCurve(to: CGPoint(x: 74.25, y: 18.66), controlPoint1: CGPoint(x: 74.01, y: 18.71), controlPoint2: CGPoint(x: 74.13, y: 18.7))
        startShiftText2Path.addLine(to: CGPoint(x: 74.25, y: 19.98))
        startShiftText2Path.addCurve(to: CGPoint(x: 73.7, y: 20.05), controlPoint1: CGPoint(x: 74.06, y: 20.01), controlPoint2: CGPoint(x: 73.88, y: 20.02))
        startShiftText2Path.addCurve(to: CGPoint(x: 73.14, y: 20.08), controlPoint1: CGPoint(x: 73.52, y: 20.07), controlPoint2: CGPoint(x: 73.33, y: 20.08))
        startShiftText2Path.addCurve(to: CGPoint(x: 72.05, y: 19.95), controlPoint1: CGPoint(x: 72.69, y: 20.08), controlPoint2: CGPoint(x: 72.33, y: 20.03))
        startShiftText2Path.addCurve(to: CGPoint(x: 71.41, y: 19.57), controlPoint1: CGPoint(x: 71.78, y: 19.86), controlPoint2: CGPoint(x: 71.57, y: 19.74))
        startShiftText2Path.addCurve(to: CGPoint(x: 71.09, y: 18.95), controlPoint1: CGPoint(x: 71.25, y: 19.41), controlPoint2: CGPoint(x: 71.15, y: 19.2))
        startShiftText2Path.addCurve(to: CGPoint(x: 71, y: 18.09), controlPoint1: CGPoint(x: 71.04, y: 18.7), controlPoint2: CGPoint(x: 71.01, y: 18.42))
        startShiftText2Path.addLine(to: CGPoint(x: 71, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 69.71, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 69.71, y: 12.25))
        startShiftText2Path.close()
        UIColor.white.setFill()
        startShiftText2Path.fill()
    }

    @objc dynamic public class func drawEndShiftUp() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 80, height: 30))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(ButtonsForFJ092018.gradient9, start: CGPoint(x: 40, y: -0), end: CGPoint(x: 40, y: 30), options: [])
        context.restoreGState()


        //// StartShiftText 2 Drawing
        let startShiftText2Path = UIBezierPath()
        startShiftText2Path.move(to: CGPoint(x: 9.61, y: 9.29))
        startShiftText2Path.addLine(to: CGPoint(x: 17.32, y: 9.29))
        startShiftText2Path.addLine(to: CGPoint(x: 17.32, y: 10.91))
        startShiftText2Path.addLine(to: CGPoint(x: 11.49, y: 10.91))
        startShiftText2Path.addLine(to: CGPoint(x: 11.49, y: 13.72))
        startShiftText2Path.addLine(to: CGPoint(x: 16.89, y: 13.72))
        startShiftText2Path.addLine(to: CGPoint(x: 16.89, y: 15.25))
        startShiftText2Path.addLine(to: CGPoint(x: 11.49, y: 15.25))
        startShiftText2Path.addLine(to: CGPoint(x: 11.49, y: 18.38))
        startShiftText2Path.addLine(to: CGPoint(x: 17.43, y: 18.38))
        startShiftText2Path.addLine(to: CGPoint(x: 17.43, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 9.61, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 9.61, y: 9.29))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 18.82, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 20.44, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 20.44, y: 13.39))
        startShiftText2Path.addLine(to: CGPoint(x: 20.47, y: 13.41))
        startShiftText2Path.addCurve(to: CGPoint(x: 21.49, y: 12.4), controlPoint1: CGPoint(x: 20.73, y: 12.98), controlPoint2: CGPoint(x: 21.07, y: 12.65))
        startShiftText2Path.addCurve(to: CGPoint(x: 22.89, y: 12.03), controlPoint1: CGPoint(x: 21.91, y: 12.16), controlPoint2: CGPoint(x: 22.37, y: 12.03))
        startShiftText2Path.addCurve(to: CGPoint(x: 24.9, y: 12.69), controlPoint1: CGPoint(x: 23.74, y: 12.03), controlPoint2: CGPoint(x: 24.4, y: 12.25))
        startShiftText2Path.addCurve(to: CGPoint(x: 25.63, y: 14.67), controlPoint1: CGPoint(x: 25.39, y: 13.14), controlPoint2: CGPoint(x: 25.63, y: 13.79))
        startShiftText2Path.addLine(to: CGPoint(x: 25.63, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 23.92, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 23.92, y: 15.12))
        startShiftText2Path.addCurve(to: CGPoint(x: 23.53, y: 13.8), controlPoint1: CGPoint(x: 23.9, y: 14.51), controlPoint2: CGPoint(x: 23.77, y: 14.07))
        startShiftText2Path.addCurve(to: CGPoint(x: 22.41, y: 13.39), controlPoint1: CGPoint(x: 23.29, y: 13.52), controlPoint2: CGPoint(x: 22.92, y: 13.39))
        startShiftText2Path.addCurve(to: CGPoint(x: 21.62, y: 13.54), controlPoint1: CGPoint(x: 22.11, y: 13.39), controlPoint2: CGPoint(x: 21.86, y: 13.44))
        startShiftText2Path.addCurve(to: CGPoint(x: 21.04, y: 13.98), controlPoint1: CGPoint(x: 21.39, y: 13.65), controlPoint2: CGPoint(x: 21.2, y: 13.79))
        startShiftText2Path.addCurve(to: CGPoint(x: 20.66, y: 14.63), controlPoint1: CGPoint(x: 20.88, y: 14.16), controlPoint2: CGPoint(x: 20.76, y: 14.38))
        startShiftText2Path.addCurve(to: CGPoint(x: 20.53, y: 15.42), controlPoint1: CGPoint(x: 20.57, y: 14.88), controlPoint2: CGPoint(x: 20.53, y: 15.14))
        startShiftText2Path.addLine(to: CGPoint(x: 20.53, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 18.82, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 18.82, y: 12.25))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 34.73, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 33.12, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 33.12, y: 18.95))
        startShiftText2Path.addLine(to: CGPoint(x: 33.09, y: 18.95))
        startShiftText2Path.addCurve(to: CGPoint(x: 32.08, y: 19.92), controlPoint1: CGPoint(x: 32.85, y: 19.4), controlPoint2: CGPoint(x: 32.52, y: 19.72))
        startShiftText2Path.addCurve(to: CGPoint(x: 30.69, y: 20.21), controlPoint1: CGPoint(x: 31.64, y: 20.11), controlPoint2: CGPoint(x: 31.18, y: 20.21))
        startShiftText2Path.addCurve(to: CGPoint(x: 29.09, y: 19.89), controlPoint1: CGPoint(x: 30.07, y: 20.21), controlPoint2: CGPoint(x: 29.54, y: 20.1))
        startShiftText2Path.addCurve(to: CGPoint(x: 27.95, y: 19.01), controlPoint1: CGPoint(x: 28.63, y: 19.67), controlPoint2: CGPoint(x: 28.26, y: 19.38))
        startShiftText2Path.addCurve(to: CGPoint(x: 27.28, y: 17.7), controlPoint1: CGPoint(x: 27.65, y: 18.64), controlPoint2: CGPoint(x: 27.43, y: 18.2))
        startShiftText2Path.addCurve(to: CGPoint(x: 27.05, y: 16.07), controlPoint1: CGPoint(x: 27.13, y: 17.19), controlPoint2: CGPoint(x: 27.05, y: 16.65))
        startShiftText2Path.addCurve(to: CGPoint(x: 27.34, y: 14.25), controlPoint1: CGPoint(x: 27.05, y: 15.37), controlPoint2: CGPoint(x: 27.15, y: 14.77))
        startShiftText2Path.addCurve(to: CGPoint(x: 28.1, y: 13), controlPoint1: CGPoint(x: 27.53, y: 13.74), controlPoint2: CGPoint(x: 27.78, y: 13.33))
        startShiftText2Path.addCurve(to: CGPoint(x: 29.18, y: 12.27), controlPoint1: CGPoint(x: 28.41, y: 12.66), controlPoint2: CGPoint(x: 28.77, y: 12.42))
        startShiftText2Path.addCurve(to: CGPoint(x: 30.41, y: 12.03), controlPoint1: CGPoint(x: 29.58, y: 12.11), controlPoint2: CGPoint(x: 29.99, y: 12.03))
        startShiftText2Path.addCurve(to: CGPoint(x: 31.15, y: 12.1), controlPoint1: CGPoint(x: 30.66, y: 12.03), controlPoint2: CGPoint(x: 30.9, y: 12.06))
        startShiftText2Path.addCurve(to: CGPoint(x: 31.87, y: 12.32), controlPoint1: CGPoint(x: 31.4, y: 12.15), controlPoint2: CGPoint(x: 31.64, y: 12.22))
        startShiftText2Path.addCurve(to: CGPoint(x: 32.51, y: 12.7), controlPoint1: CGPoint(x: 32.1, y: 12.42), controlPoint2: CGPoint(x: 32.31, y: 12.55))
        startShiftText2Path.addCurve(to: CGPoint(x: 33, y: 13.25), controlPoint1: CGPoint(x: 32.7, y: 12.86), controlPoint2: CGPoint(x: 32.86, y: 13.04))
        startShiftText2Path.addLine(to: CGPoint(x: 33.02, y: 13.25))
        startShiftText2Path.addLine(to: CGPoint(x: 33.02, y: 9.29))
        startShiftText2Path.addLine(to: CGPoint(x: 34.73, y: 9.29))
        startShiftText2Path.addLine(to: CGPoint(x: 34.73, y: 20))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 28.77, y: 16.2))
        startShiftText2Path.addCurve(to: CGPoint(x: 28.89, y: 17.18), controlPoint1: CGPoint(x: 28.77, y: 16.54), controlPoint2: CGPoint(x: 28.81, y: 16.86))
        startShiftText2Path.addCurve(to: CGPoint(x: 29.28, y: 18.03), controlPoint1: CGPoint(x: 28.98, y: 17.5), controlPoint2: CGPoint(x: 29.11, y: 17.78))
        startShiftText2Path.addCurve(to: CGPoint(x: 29.95, y: 18.63), controlPoint1: CGPoint(x: 29.46, y: 18.29), controlPoint2: CGPoint(x: 29.68, y: 18.48))
        startShiftText2Path.addCurve(to: CGPoint(x: 30.91, y: 18.86), controlPoint1: CGPoint(x: 30.22, y: 18.79), controlPoint2: CGPoint(x: 30.54, y: 18.86))
        startShiftText2Path.addCurve(to: CGPoint(x: 31.89, y: 18.62), controlPoint1: CGPoint(x: 31.29, y: 18.86), controlPoint2: CGPoint(x: 31.62, y: 18.78))
        startShiftText2Path.addCurve(to: CGPoint(x: 32.57, y: 17.99), controlPoint1: CGPoint(x: 32.17, y: 18.46), controlPoint2: CGPoint(x: 32.39, y: 18.25))
        startShiftText2Path.addCurve(to: CGPoint(x: 32.96, y: 17.11), controlPoint1: CGPoint(x: 32.74, y: 17.73), controlPoint2: CGPoint(x: 32.87, y: 17.44))
        startShiftText2Path.addCurve(to: CGPoint(x: 33.09, y: 16.12), controlPoint1: CGPoint(x: 33.04, y: 16.79), controlPoint2: CGPoint(x: 33.09, y: 16.46))
        startShiftText2Path.addCurve(to: CGPoint(x: 32.51, y: 14.11), controlPoint1: CGPoint(x: 33.09, y: 15.25), controlPoint2: CGPoint(x: 32.89, y: 14.59))
        startShiftText2Path.addCurve(to: CGPoint(x: 30.94, y: 13.39), controlPoint1: CGPoint(x: 32.12, y: 13.62), controlPoint2: CGPoint(x: 31.6, y: 13.39))
        startShiftText2Path.addCurve(to: CGPoint(x: 29.93, y: 13.63), controlPoint1: CGPoint(x: 30.54, y: 13.39), controlPoint2: CGPoint(x: 30.2, y: 13.47))
        startShiftText2Path.addCurve(to: CGPoint(x: 29.25, y: 14.28), controlPoint1: CGPoint(x: 29.65, y: 13.8), controlPoint2: CGPoint(x: 29.43, y: 14.01))
        startShiftText2Path.addCurve(to: CGPoint(x: 28.88, y: 15.18), controlPoint1: CGPoint(x: 29.08, y: 14.54), controlPoint2: CGPoint(x: 28.95, y: 14.84))
        startShiftText2Path.addCurve(to: CGPoint(x: 28.77, y: 16.2), controlPoint1: CGPoint(x: 28.8, y: 15.51), controlPoint2: CGPoint(x: 28.77, y: 15.85))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 42.23, y: 16.43))
        startShiftText2Path.addCurve(to: CGPoint(x: 42.44, y: 17.48), controlPoint1: CGPoint(x: 42.23, y: 16.84), controlPoint2: CGPoint(x: 42.3, y: 17.19))
        startShiftText2Path.addCurve(to: CGPoint(x: 43.03, y: 18.19), controlPoint1: CGPoint(x: 42.59, y: 17.77), controlPoint2: CGPoint(x: 42.78, y: 18.01))
        startShiftText2Path.addCurve(to: CGPoint(x: 43.89, y: 18.6), controlPoint1: CGPoint(x: 43.28, y: 18.38), controlPoint2: CGPoint(x: 43.57, y: 18.51))
        startShiftText2Path.addCurve(to: CGPoint(x: 44.95, y: 18.72), controlPoint1: CGPoint(x: 44.22, y: 18.68), controlPoint2: CGPoint(x: 44.57, y: 18.72))
        startShiftText2Path.addCurve(to: CGPoint(x: 46, y: 18.58), controlPoint1: CGPoint(x: 45.36, y: 18.72), controlPoint2: CGPoint(x: 45.71, y: 18.68))
        startShiftText2Path.addCurve(to: CGPoint(x: 46.7, y: 18.22), controlPoint1: CGPoint(x: 46.29, y: 18.49), controlPoint2: CGPoint(x: 46.52, y: 18.37))
        startShiftText2Path.addCurve(to: CGPoint(x: 47.09, y: 17.7), controlPoint1: CGPoint(x: 46.89, y: 18.06), controlPoint2: CGPoint(x: 47.01, y: 17.89))
        startShiftText2Path.addCurve(to: CGPoint(x: 47.22, y: 17.11), controlPoint1: CGPoint(x: 47.18, y: 17.5), controlPoint2: CGPoint(x: 47.22, y: 17.31))
        startShiftText2Path.addCurve(to: CGPoint(x: 46.94, y: 16.2), controlPoint1: CGPoint(x: 47.22, y: 16.69), controlPoint2: CGPoint(x: 47.12, y: 16.39))
        startShiftText2Path.addCurve(to: CGPoint(x: 46.33, y: 15.78), controlPoint1: CGPoint(x: 46.75, y: 16), controlPoint2: CGPoint(x: 46.55, y: 15.87))
        startShiftText2Path.addCurve(to: CGPoint(x: 45, y: 15.39), controlPoint1: CGPoint(x: 45.95, y: 15.64), controlPoint2: CGPoint(x: 45.51, y: 15.51))
        startShiftText2Path.addCurve(to: CGPoint(x: 43.14, y: 14.9), controlPoint1: CGPoint(x: 44.5, y: 15.26), controlPoint2: CGPoint(x: 43.88, y: 15.1))
        startShiftText2Path.addCurve(to: CGPoint(x: 41.99, y: 14.43), controlPoint1: CGPoint(x: 42.67, y: 14.78), controlPoint2: CGPoint(x: 42.29, y: 14.62))
        startShiftText2Path.addCurve(to: CGPoint(x: 41.26, y: 13.78), controlPoint1: CGPoint(x: 41.68, y: 14.23), controlPoint2: CGPoint(x: 41.44, y: 14.02))
        startShiftText2Path.addCurve(to: CGPoint(x: 40.88, y: 13.01), controlPoint1: CGPoint(x: 41.08, y: 13.53), controlPoint2: CGPoint(x: 40.95, y: 13.28))
        startShiftText2Path.addCurve(to: CGPoint(x: 40.77, y: 12.19), controlPoint1: CGPoint(x: 40.8, y: 12.74), controlPoint2: CGPoint(x: 40.77, y: 12.47))
        startShiftText2Path.addCurve(to: CGPoint(x: 41.1, y: 10.78), controlPoint1: CGPoint(x: 40.77, y: 11.64), controlPoint2: CGPoint(x: 40.88, y: 11.18))
        startShiftText2Path.addCurve(to: CGPoint(x: 42, y: 9.8), controlPoint1: CGPoint(x: 41.33, y: 10.39), controlPoint2: CGPoint(x: 41.62, y: 10.06))
        startShiftText2Path.addCurve(to: CGPoint(x: 43.25, y: 9.22), controlPoint1: CGPoint(x: 42.37, y: 9.54), controlPoint2: CGPoint(x: 42.78, y: 9.35))
        startShiftText2Path.addCurve(to: CGPoint(x: 44.68, y: 9.03), controlPoint1: CGPoint(x: 43.73, y: 9.1), controlPoint2: CGPoint(x: 44.2, y: 9.03))
        startShiftText2Path.addCurve(to: CGPoint(x: 46.26, y: 9.25), controlPoint1: CGPoint(x: 45.24, y: 9.03), controlPoint2: CGPoint(x: 45.77, y: 9.11))
        startShiftText2Path.addCurve(to: CGPoint(x: 47.57, y: 9.91), controlPoint1: CGPoint(x: 46.76, y: 9.4), controlPoint2: CGPoint(x: 47.19, y: 9.61))
        startShiftText2Path.addCurve(to: CGPoint(x: 48.46, y: 10.98), controlPoint1: CGPoint(x: 47.94, y: 10.2), controlPoint2: CGPoint(x: 48.24, y: 10.55))
        startShiftText2Path.addCurve(to: CGPoint(x: 48.79, y: 12.45), controlPoint1: CGPoint(x: 48.68, y: 11.4), controlPoint2: CGPoint(x: 48.79, y: 11.89))
        startShiftText2Path.addLine(to: CGPoint(x: 46.91, y: 12.45))
        startShiftText2Path.addCurve(to: CGPoint(x: 46.21, y: 10.99), controlPoint1: CGPoint(x: 46.86, y: 11.76), controlPoint2: CGPoint(x: 46.63, y: 11.28))
        startShiftText2Path.addCurve(to: CGPoint(x: 44.61, y: 10.56), controlPoint1: CGPoint(x: 45.79, y: 10.71), controlPoint2: CGPoint(x: 45.26, y: 10.56))
        startShiftText2Path.addCurve(to: CGPoint(x: 43.93, y: 10.63), controlPoint1: CGPoint(x: 44.38, y: 10.56), controlPoint2: CGPoint(x: 44.16, y: 10.59))
        startShiftText2Path.addCurve(to: CGPoint(x: 43.3, y: 10.86), controlPoint1: CGPoint(x: 43.7, y: 10.68), controlPoint2: CGPoint(x: 43.49, y: 10.75))
        startShiftText2Path.addCurve(to: CGPoint(x: 42.83, y: 11.28), controlPoint1: CGPoint(x: 43.11, y: 10.96), controlPoint2: CGPoint(x: 42.95, y: 11.1))
        startShiftText2Path.addCurve(to: CGPoint(x: 42.64, y: 11.96), controlPoint1: CGPoint(x: 42.7, y: 11.47), controlPoint2: CGPoint(x: 42.64, y: 11.69))
        startShiftText2Path.addCurve(to: CGPoint(x: 42.99, y: 12.85), controlPoint1: CGPoint(x: 42.64, y: 12.34), controlPoint2: CGPoint(x: 42.76, y: 12.64))
        startShiftText2Path.addCurve(to: CGPoint(x: 43.91, y: 13.34), controlPoint1: CGPoint(x: 43.23, y: 13.07), controlPoint2: CGPoint(x: 43.53, y: 13.23))
        startShiftText2Path.addCurve(to: CGPoint(x: 44.39, y: 13.47), controlPoint1: CGPoint(x: 43.96, y: 13.35), controlPoint2: CGPoint(x: 44.11, y: 13.39))
        startShiftText2Path.addCurve(to: CGPoint(x: 45.31, y: 13.72), controlPoint1: CGPoint(x: 44.66, y: 13.54), controlPoint2: CGPoint(x: 44.97, y: 13.62))
        startShiftText2Path.addCurve(to: CGPoint(x: 46.31, y: 13.98), controlPoint1: CGPoint(x: 45.65, y: 13.81), controlPoint2: CGPoint(x: 45.98, y: 13.89))
        startShiftText2Path.addCurve(to: CGPoint(x: 47, y: 14.16), controlPoint1: CGPoint(x: 46.63, y: 14.06), controlPoint2: CGPoint(x: 46.86, y: 14.12))
        startShiftText2Path.addCurve(to: CGPoint(x: 47.92, y: 14.61), controlPoint1: CGPoint(x: 47.36, y: 14.28), controlPoint2: CGPoint(x: 47.66, y: 14.42))
        startShiftText2Path.addCurve(to: CGPoint(x: 48.57, y: 15.27), controlPoint1: CGPoint(x: 48.18, y: 14.81), controlPoint2: CGPoint(x: 48.4, y: 15.02))
        startShiftText2Path.addCurve(to: CGPoint(x: 48.96, y: 16.06), controlPoint1: CGPoint(x: 48.75, y: 15.51), controlPoint2: CGPoint(x: 48.88, y: 15.77))
        startShiftText2Path.addCurve(to: CGPoint(x: 49.09, y: 16.89), controlPoint1: CGPoint(x: 49.05, y: 16.34), controlPoint2: CGPoint(x: 49.09, y: 16.61))
        startShiftText2Path.addCurve(to: CGPoint(x: 48.72, y: 18.43), controlPoint1: CGPoint(x: 49.09, y: 17.5), controlPoint2: CGPoint(x: 48.97, y: 18.01))
        startShiftText2Path.addCurve(to: CGPoint(x: 47.75, y: 19.47), controlPoint1: CGPoint(x: 48.48, y: 18.86), controlPoint2: CGPoint(x: 48.16, y: 19.2))
        startShiftText2Path.addCurve(to: CGPoint(x: 46.39, y: 20.07), controlPoint1: CGPoint(x: 47.35, y: 19.75), controlPoint2: CGPoint(x: 46.9, y: 19.94))
        startShiftText2Path.addCurve(to: CGPoint(x: 44.83, y: 20.25), controlPoint1: CGPoint(x: 45.88, y: 20.19), controlPoint2: CGPoint(x: 45.36, y: 20.25))
        startShiftText2Path.addCurve(to: CGPoint(x: 43.11, y: 20.03), controlPoint1: CGPoint(x: 44.22, y: 20.25), controlPoint2: CGPoint(x: 43.65, y: 20.18))
        startShiftText2Path.addCurve(to: CGPoint(x: 41.69, y: 19.34), controlPoint1: CGPoint(x: 42.56, y: 19.88), controlPoint2: CGPoint(x: 42.1, y: 19.65))
        startShiftText2Path.addCurve(to: CGPoint(x: 40.73, y: 18.15), controlPoint1: CGPoint(x: 41.29, y: 19.03), controlPoint2: CGPoint(x: 40.98, y: 18.63))
        startShiftText2Path.addCurve(to: CGPoint(x: 40.36, y: 16.43), controlPoint1: CGPoint(x: 40.49, y: 17.66), controlPoint2: CGPoint(x: 40.37, y: 17.09))
        startShiftText2Path.addLine(to: CGPoint(x: 42.23, y: 16.43))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 50.48, y: 9.29))
        startShiftText2Path.addLine(to: CGPoint(x: 52.2, y: 9.29))
        startShiftText2Path.addLine(to: CGPoint(x: 52.2, y: 13.27))
        startShiftText2Path.addLine(to: CGPoint(x: 52.22, y: 13.27))
        startShiftText2Path.addCurve(to: CGPoint(x: 53.16, y: 12.39), controlPoint1: CGPoint(x: 52.44, y: 12.91), controlPoint2: CGPoint(x: 52.75, y: 12.62))
        startShiftText2Path.addCurve(to: CGPoint(x: 54.55, y: 12.03), controlPoint1: CGPoint(x: 53.58, y: 12.15), controlPoint2: CGPoint(x: 54.04, y: 12.03))
        startShiftText2Path.addCurve(to: CGPoint(x: 56.56, y: 12.69), controlPoint1: CGPoint(x: 55.4, y: 12.03), controlPoint2: CGPoint(x: 56.07, y: 12.25))
        startShiftText2Path.addCurve(to: CGPoint(x: 57.3, y: 14.67), controlPoint1: CGPoint(x: 57.05, y: 13.14), controlPoint2: CGPoint(x: 57.3, y: 13.79))
        startShiftText2Path.addLine(to: CGPoint(x: 57.3, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 55.59, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 55.59, y: 15.12))
        startShiftText2Path.addCurve(to: CGPoint(x: 55.19, y: 13.8), controlPoint1: CGPoint(x: 55.56, y: 14.51), controlPoint2: CGPoint(x: 55.44, y: 14.07))
        startShiftText2Path.addCurve(to: CGPoint(x: 54.07, y: 13.39), controlPoint1: CGPoint(x: 54.95, y: 13.52), controlPoint2: CGPoint(x: 54.58, y: 13.39))
        startShiftText2Path.addCurve(to: CGPoint(x: 53.29, y: 13.54), controlPoint1: CGPoint(x: 53.78, y: 13.39), controlPoint2: CGPoint(x: 53.52, y: 13.44))
        startShiftText2Path.addCurve(to: CGPoint(x: 52.7, y: 13.98), controlPoint1: CGPoint(x: 53.06, y: 13.65), controlPoint2: CGPoint(x: 52.87, y: 13.79))
        startShiftText2Path.addCurve(to: CGPoint(x: 52.33, y: 14.63), controlPoint1: CGPoint(x: 52.54, y: 14.16), controlPoint2: CGPoint(x: 52.42, y: 14.38))
        startShiftText2Path.addCurve(to: CGPoint(x: 52.2, y: 15.42), controlPoint1: CGPoint(x: 52.24, y: 14.88), controlPoint2: CGPoint(x: 52.2, y: 15.14))
        startShiftText2Path.addLine(to: CGPoint(x: 52.2, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 50.48, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 50.48, y: 9.29))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 59.14, y: 9.29))
        startShiftText2Path.addLine(to: CGPoint(x: 60.85, y: 9.29))
        startShiftText2Path.addLine(to: CGPoint(x: 60.85, y: 10.91))
        startShiftText2Path.addLine(to: CGPoint(x: 59.14, y: 10.91))
        startShiftText2Path.addLine(to: CGPoint(x: 59.14, y: 9.29))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 59.14, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 60.85, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 60.85, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 59.14, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 59.14, y: 12.25))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 61.94, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 63.22, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 63.22, y: 11.6))
        startShiftText2Path.addCurve(to: CGPoint(x: 63.4, y: 10.41), controlPoint1: CGPoint(x: 63.22, y: 11.11), controlPoint2: CGPoint(x: 63.28, y: 10.71))
        startShiftText2Path.addCurve(to: CGPoint(x: 63.88, y: 9.7), controlPoint1: CGPoint(x: 63.52, y: 10.1), controlPoint2: CGPoint(x: 63.68, y: 9.87))
        startShiftText2Path.addCurve(to: CGPoint(x: 64.56, y: 9.37), controlPoint1: CGPoint(x: 64.08, y: 9.54), controlPoint2: CGPoint(x: 64.31, y: 9.43))
        startShiftText2Path.addCurve(to: CGPoint(x: 65.36, y: 9.29), controlPoint1: CGPoint(x: 64.82, y: 9.32), controlPoint2: CGPoint(x: 65.08, y: 9.29))
        startShiftText2Path.addCurve(to: CGPoint(x: 66.56, y: 9.39), controlPoint1: CGPoint(x: 65.92, y: 9.29), controlPoint2: CGPoint(x: 66.31, y: 9.32))
        startShiftText2Path.addLine(to: CGPoint(x: 66.56, y: 10.73))
        startShiftText2Path.addCurve(to: CGPoint(x: 66.21, y: 10.66), controlPoint1: CGPoint(x: 66.45, y: 10.7), controlPoint2: CGPoint(x: 66.34, y: 10.68))
        startShiftText2Path.addCurve(to: CGPoint(x: 65.77, y: 10.64), controlPoint1: CGPoint(x: 66.09, y: 10.65), controlPoint2: CGPoint(x: 65.94, y: 10.64))
        startShiftText2Path.addCurve(to: CGPoint(x: 65.18, y: 10.81), controlPoint1: CGPoint(x: 65.54, y: 10.64), controlPoint2: CGPoint(x: 65.34, y: 10.69))
        startShiftText2Path.addCurve(to: CGPoint(x: 64.93, y: 11.45), controlPoint1: CGPoint(x: 65.01, y: 10.92), controlPoint2: CGPoint(x: 64.93, y: 11.13))
        startShiftText2Path.addLine(to: CGPoint(x: 64.93, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 66.38, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 66.38, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 64.93, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 64.93, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 63.22, y: 20))
        startShiftText2Path.addLine(to: CGPoint(x: 63.22, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 61.94, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 61.94, y: 12.25))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 66.65, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 67.94, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 67.94, y: 9.92))
        startShiftText2Path.addLine(to: CGPoint(x: 69.65, y: 9.92))
        startShiftText2Path.addLine(to: CGPoint(x: 69.65, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 71.2, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 71.2, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 69.65, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 69.65, y: 17.66))
        startShiftText2Path.addCurve(to: CGPoint(x: 69.68, y: 18.12), controlPoint1: CGPoint(x: 69.65, y: 17.84), controlPoint2: CGPoint(x: 69.66, y: 17.99))
        startShiftText2Path.addCurve(to: CGPoint(x: 69.78, y: 18.45), controlPoint1: CGPoint(x: 69.69, y: 18.26), controlPoint2: CGPoint(x: 69.73, y: 18.36))
        startShiftText2Path.addCurve(to: CGPoint(x: 70.03, y: 18.66), controlPoint1: CGPoint(x: 69.84, y: 18.55), controlPoint2: CGPoint(x: 69.92, y: 18.61))
        startShiftText2Path.addCurve(to: CGPoint(x: 70.48, y: 18.72), controlPoint1: CGPoint(x: 70.14, y: 18.7), controlPoint2: CGPoint(x: 70.29, y: 18.72))
        startShiftText2Path.addCurve(to: CGPoint(x: 70.84, y: 18.72), controlPoint1: CGPoint(x: 70.6, y: 18.72), controlPoint2: CGPoint(x: 70.72, y: 18.72))
        startShiftText2Path.addCurve(to: CGPoint(x: 71.2, y: 18.66), controlPoint1: CGPoint(x: 70.96, y: 18.71), controlPoint2: CGPoint(x: 71.08, y: 18.7))
        startShiftText2Path.addLine(to: CGPoint(x: 71.2, y: 19.98))
        startShiftText2Path.addCurve(to: CGPoint(x: 70.64, y: 20.05), controlPoint1: CGPoint(x: 71.01, y: 20.01), controlPoint2: CGPoint(x: 70.83, y: 20.02))
        startShiftText2Path.addCurve(to: CGPoint(x: 70.09, y: 20.08), controlPoint1: CGPoint(x: 70.46, y: 20.07), controlPoint2: CGPoint(x: 70.28, y: 20.08))
        startShiftText2Path.addCurve(to: CGPoint(x: 69, y: 19.95), controlPoint1: CGPoint(x: 69.64, y: 20.08), controlPoint2: CGPoint(x: 69.28, y: 20.03))
        startShiftText2Path.addCurve(to: CGPoint(x: 68.36, y: 19.57), controlPoint1: CGPoint(x: 68.73, y: 19.86), controlPoint2: CGPoint(x: 68.51, y: 19.74))
        startShiftText2Path.addCurve(to: CGPoint(x: 68.04, y: 18.95), controlPoint1: CGPoint(x: 68.2, y: 19.41), controlPoint2: CGPoint(x: 68.1, y: 19.2))
        startShiftText2Path.addCurve(to: CGPoint(x: 67.94, y: 18.09), controlPoint1: CGPoint(x: 67.99, y: 18.7), controlPoint2: CGPoint(x: 67.96, y: 18.42))
        startShiftText2Path.addLine(to: CGPoint(x: 67.94, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 66.65, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 66.65, y: 12.25))
        startShiftText2Path.close()
        UIColor.white.setFill()
        startShiftText2Path.fill()
    }

    @objc dynamic public class func drawEndShiftDown() {

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 80, height: 30))
        ButtonsForFJ092018.gradient9Color2.setFill()
        rectanglePath.fill()


        //// StartShiftText 2 Drawing
        let startShiftText2Path = UIBezierPath()
        startShiftText2Path.move(to: CGPoint(x: 11.61, y: 9.3))
        startShiftText2Path.addLine(to: CGPoint(x: 19.32, y: 9.3))
        startShiftText2Path.addLine(to: CGPoint(x: 19.32, y: 10.91))
        startShiftText2Path.addLine(to: CGPoint(x: 13.48, y: 10.91))
        startShiftText2Path.addLine(to: CGPoint(x: 13.48, y: 13.72))
        startShiftText2Path.addLine(to: CGPoint(x: 18.88, y: 13.72))
        startShiftText2Path.addLine(to: CGPoint(x: 18.88, y: 15.25))
        startShiftText2Path.addLine(to: CGPoint(x: 13.48, y: 15.25))
        startShiftText2Path.addLine(to: CGPoint(x: 13.48, y: 18.38))
        startShiftText2Path.addLine(to: CGPoint(x: 19.43, y: 18.38))
        startShiftText2Path.addLine(to: CGPoint(x: 19.43, y: 20.01))
        startShiftText2Path.addLine(to: CGPoint(x: 11.61, y: 20.01))
        startShiftText2Path.addLine(to: CGPoint(x: 11.61, y: 9.3))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 20.82, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 22.44, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 22.44, y: 13.39))
        startShiftText2Path.addLine(to: CGPoint(x: 22.47, y: 13.42))
        startShiftText2Path.addCurve(to: CGPoint(x: 23.49, y: 12.41), controlPoint1: CGPoint(x: 22.73, y: 12.99), controlPoint2: CGPoint(x: 23.07, y: 12.65))
        startShiftText2Path.addCurve(to: CGPoint(x: 24.89, y: 12.04), controlPoint1: CGPoint(x: 23.91, y: 12.16), controlPoint2: CGPoint(x: 24.37, y: 12.04))
        startShiftText2Path.addCurve(to: CGPoint(x: 26.89, y: 12.7), controlPoint1: CGPoint(x: 25.74, y: 12.04), controlPoint2: CGPoint(x: 26.4, y: 12.26))
        startShiftText2Path.addCurve(to: CGPoint(x: 27.63, y: 14.68), controlPoint1: CGPoint(x: 27.39, y: 13.14), controlPoint2: CGPoint(x: 27.63, y: 13.8))
        startShiftText2Path.addLine(to: CGPoint(x: 27.63, y: 20.01))
        startShiftText2Path.addLine(to: CGPoint(x: 25.92, y: 20.01))
        startShiftText2Path.addLine(to: CGPoint(x: 25.92, y: 15.13))
        startShiftText2Path.addCurve(to: CGPoint(x: 25.53, y: 13.8), controlPoint1: CGPoint(x: 25.9, y: 14.52), controlPoint2: CGPoint(x: 25.77, y: 14.08))
        startShiftText2Path.addCurve(to: CGPoint(x: 24.4, y: 13.39), controlPoint1: CGPoint(x: 25.29, y: 13.53), controlPoint2: CGPoint(x: 24.92, y: 13.39))
        startShiftText2Path.addCurve(to: CGPoint(x: 23.62, y: 13.55), controlPoint1: CGPoint(x: 24.11, y: 13.39), controlPoint2: CGPoint(x: 23.86, y: 13.44))
        startShiftText2Path.addCurve(to: CGPoint(x: 23.04, y: 13.98), controlPoint1: CGPoint(x: 23.39, y: 13.65), controlPoint2: CGPoint(x: 23.2, y: 13.8))
        startShiftText2Path.addCurve(to: CGPoint(x: 22.66, y: 14.63), controlPoint1: CGPoint(x: 22.88, y: 14.17), controlPoint2: CGPoint(x: 22.76, y: 14.38))
        startShiftText2Path.addCurve(to: CGPoint(x: 22.53, y: 15.43), controlPoint1: CGPoint(x: 22.57, y: 14.89), controlPoint2: CGPoint(x: 22.53, y: 15.15))
        startShiftText2Path.addLine(to: CGPoint(x: 22.53, y: 20.01))
        startShiftText2Path.addLine(to: CGPoint(x: 20.82, y: 20.01))
        startShiftText2Path.addLine(to: CGPoint(x: 20.82, y: 12.25))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 36.73, y: 20.01))
        startShiftText2Path.addLine(to: CGPoint(x: 35.11, y: 20.01))
        startShiftText2Path.addLine(to: CGPoint(x: 35.11, y: 18.96))
        startShiftText2Path.addLine(to: CGPoint(x: 35.08, y: 18.96))
        startShiftText2Path.addCurve(to: CGPoint(x: 34.08, y: 19.92), controlPoint1: CGPoint(x: 34.85, y: 19.41), controlPoint2: CGPoint(x: 34.52, y: 19.73))
        startShiftText2Path.addCurve(to: CGPoint(x: 32.69, y: 20.22), controlPoint1: CGPoint(x: 33.64, y: 20.12), controlPoint2: CGPoint(x: 33.18, y: 20.22))
        startShiftText2Path.addCurve(to: CGPoint(x: 31.09, y: 19.89), controlPoint1: CGPoint(x: 32.07, y: 20.22), controlPoint2: CGPoint(x: 31.54, y: 20.11))
        startShiftText2Path.addCurve(to: CGPoint(x: 29.95, y: 19.01), controlPoint1: CGPoint(x: 30.63, y: 19.68), controlPoint2: CGPoint(x: 30.26, y: 19.39))
        startShiftText2Path.addCurve(to: CGPoint(x: 29.28, y: 17.7), controlPoint1: CGPoint(x: 29.65, y: 18.64), controlPoint2: CGPoint(x: 29.43, y: 18.21))
        startShiftText2Path.addCurve(to: CGPoint(x: 29.05, y: 16.07), controlPoint1: CGPoint(x: 29.13, y: 17.2), controlPoint2: CGPoint(x: 29.05, y: 16.66))
        startShiftText2Path.addCurve(to: CGPoint(x: 29.34, y: 14.26), controlPoint1: CGPoint(x: 29.05, y: 15.37), controlPoint2: CGPoint(x: 29.15, y: 14.77))
        startShiftText2Path.addCurve(to: CGPoint(x: 30.1, y: 13), controlPoint1: CGPoint(x: 29.53, y: 13.75), controlPoint2: CGPoint(x: 29.78, y: 13.33))
        startShiftText2Path.addCurve(to: CGPoint(x: 31.18, y: 12.27), controlPoint1: CGPoint(x: 30.41, y: 12.67), controlPoint2: CGPoint(x: 30.77, y: 12.43))
        startShiftText2Path.addCurve(to: CGPoint(x: 32.41, y: 12.04), controlPoint1: CGPoint(x: 31.58, y: 12.12), controlPoint2: CGPoint(x: 31.99, y: 12.04))
        startShiftText2Path.addCurve(to: CGPoint(x: 33.15, y: 12.11), controlPoint1: CGPoint(x: 32.66, y: 12.04), controlPoint2: CGPoint(x: 32.9, y: 12.06))
        startShiftText2Path.addCurve(to: CGPoint(x: 33.87, y: 12.32), controlPoint1: CGPoint(x: 33.4, y: 12.15), controlPoint2: CGPoint(x: 33.64, y: 12.22))
        startShiftText2Path.addCurve(to: CGPoint(x: 34.51, y: 12.71), controlPoint1: CGPoint(x: 34.1, y: 12.43), controlPoint2: CGPoint(x: 34.31, y: 12.55))
        startShiftText2Path.addCurve(to: CGPoint(x: 35, y: 13.26), controlPoint1: CGPoint(x: 34.7, y: 12.86), controlPoint2: CGPoint(x: 34.86, y: 13.04))
        startShiftText2Path.addLine(to: CGPoint(x: 35.02, y: 13.26))
        startShiftText2Path.addLine(to: CGPoint(x: 35.02, y: 9.3))
        startShiftText2Path.addLine(to: CGPoint(x: 36.73, y: 9.3))
        startShiftText2Path.addLine(to: CGPoint(x: 36.73, y: 20.01))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 30.76, y: 16.21))
        startShiftText2Path.addCurve(to: CGPoint(x: 30.89, y: 17.19), controlPoint1: CGPoint(x: 30.76, y: 16.54), controlPoint2: CGPoint(x: 30.81, y: 16.86))
        startShiftText2Path.addCurve(to: CGPoint(x: 31.28, y: 18.04), controlPoint1: CGPoint(x: 30.98, y: 17.51), controlPoint2: CGPoint(x: 31.11, y: 17.79))
        startShiftText2Path.addCurve(to: CGPoint(x: 31.95, y: 18.64), controlPoint1: CGPoint(x: 31.46, y: 18.29), controlPoint2: CGPoint(x: 31.68, y: 18.49))
        startShiftText2Path.addCurve(to: CGPoint(x: 32.91, y: 18.87), controlPoint1: CGPoint(x: 32.22, y: 18.79), controlPoint2: CGPoint(x: 32.54, y: 18.87))
        startShiftText2Path.addCurve(to: CGPoint(x: 33.89, y: 18.63), controlPoint1: CGPoint(x: 33.29, y: 18.87), controlPoint2: CGPoint(x: 33.62, y: 18.79))
        startShiftText2Path.addCurve(to: CGPoint(x: 34.57, y: 18), controlPoint1: CGPoint(x: 34.17, y: 18.46), controlPoint2: CGPoint(x: 34.39, y: 18.26))
        startShiftText2Path.addCurve(to: CGPoint(x: 34.96, y: 17.12), controlPoint1: CGPoint(x: 34.74, y: 17.73), controlPoint2: CGPoint(x: 34.87, y: 17.44))
        startShiftText2Path.addCurve(to: CGPoint(x: 35.08, y: 16.12), controlPoint1: CGPoint(x: 35.04, y: 16.79), controlPoint2: CGPoint(x: 35.08, y: 16.46))
        startShiftText2Path.addCurve(to: CGPoint(x: 34.51, y: 14.11), controlPoint1: CGPoint(x: 35.08, y: 15.26), controlPoint2: CGPoint(x: 34.89, y: 14.59))
        startShiftText2Path.addCurve(to: CGPoint(x: 32.94, y: 13.39), controlPoint1: CGPoint(x: 34.12, y: 13.63), controlPoint2: CGPoint(x: 33.6, y: 13.39))
        startShiftText2Path.addCurve(to: CGPoint(x: 31.93, y: 13.64), controlPoint1: CGPoint(x: 32.54, y: 13.39), controlPoint2: CGPoint(x: 32.2, y: 13.47))
        startShiftText2Path.addCurve(to: CGPoint(x: 31.25, y: 14.28), controlPoint1: CGPoint(x: 31.65, y: 13.8), controlPoint2: CGPoint(x: 31.43, y: 14.02))
        startShiftText2Path.addCurve(to: CGPoint(x: 30.88, y: 15.18), controlPoint1: CGPoint(x: 31.08, y: 14.55), controlPoint2: CGPoint(x: 30.95, y: 14.85))
        startShiftText2Path.addCurve(to: CGPoint(x: 30.76, y: 16.21), controlPoint1: CGPoint(x: 30.8, y: 15.52), controlPoint2: CGPoint(x: 30.76, y: 15.86))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 44.23, y: 16.44))
        startShiftText2Path.addCurve(to: CGPoint(x: 44.44, y: 17.49), controlPoint1: CGPoint(x: 44.23, y: 16.85), controlPoint2: CGPoint(x: 44.3, y: 17.19))
        startShiftText2Path.addCurve(to: CGPoint(x: 45.03, y: 18.2), controlPoint1: CGPoint(x: 44.59, y: 17.78), controlPoint2: CGPoint(x: 44.78, y: 18.01))
        startShiftText2Path.addCurve(to: CGPoint(x: 45.89, y: 18.6), controlPoint1: CGPoint(x: 45.28, y: 18.38), controlPoint2: CGPoint(x: 45.57, y: 18.52))
        startShiftText2Path.addCurve(to: CGPoint(x: 46.95, y: 18.73), controlPoint1: CGPoint(x: 46.22, y: 18.69), controlPoint2: CGPoint(x: 46.57, y: 18.73))
        startShiftText2Path.addCurve(to: CGPoint(x: 48, y: 18.59), controlPoint1: CGPoint(x: 47.36, y: 18.73), controlPoint2: CGPoint(x: 47.71, y: 18.68))
        startShiftText2Path.addCurve(to: CGPoint(x: 48.7, y: 18.22), controlPoint1: CGPoint(x: 48.29, y: 18.49), controlPoint2: CGPoint(x: 48.52, y: 18.37))
        startShiftText2Path.addCurve(to: CGPoint(x: 49.09, y: 17.7), controlPoint1: CGPoint(x: 48.89, y: 18.07), controlPoint2: CGPoint(x: 49.01, y: 17.9))
        startShiftText2Path.addCurve(to: CGPoint(x: 49.22, y: 17.11), controlPoint1: CGPoint(x: 49.18, y: 17.51), controlPoint2: CGPoint(x: 49.22, y: 17.31))
        startShiftText2Path.addCurve(to: CGPoint(x: 48.94, y: 16.2), controlPoint1: CGPoint(x: 49.22, y: 16.7), controlPoint2: CGPoint(x: 49.12, y: 16.4))
        startShiftText2Path.addCurve(to: CGPoint(x: 48.33, y: 15.79), controlPoint1: CGPoint(x: 48.75, y: 16.01), controlPoint2: CGPoint(x: 48.55, y: 15.87))
        startShiftText2Path.addCurve(to: CGPoint(x: 47, y: 15.39), controlPoint1: CGPoint(x: 47.95, y: 15.65), controlPoint2: CGPoint(x: 47.51, y: 15.52))
        startShiftText2Path.addCurve(to: CGPoint(x: 45.14, y: 14.91), controlPoint1: CGPoint(x: 46.5, y: 15.27), controlPoint2: CGPoint(x: 45.88, y: 15.11))
        startShiftText2Path.addCurve(to: CGPoint(x: 43.99, y: 14.43), controlPoint1: CGPoint(x: 44.67, y: 14.78), controlPoint2: CGPoint(x: 44.29, y: 14.63))
        startShiftText2Path.addCurve(to: CGPoint(x: 43.26, y: 13.78), controlPoint1: CGPoint(x: 43.68, y: 14.24), controlPoint2: CGPoint(x: 43.44, y: 14.02))
        startShiftText2Path.addCurve(to: CGPoint(x: 42.88, y: 13.02), controlPoint1: CGPoint(x: 43.08, y: 13.54), controlPoint2: CGPoint(x: 42.95, y: 13.29))
        startShiftText2Path.addCurve(to: CGPoint(x: 42.77, y: 12.19), controlPoint1: CGPoint(x: 42.8, y: 12.74), controlPoint2: CGPoint(x: 42.77, y: 12.47))
        startShiftText2Path.addCurve(to: CGPoint(x: 43.1, y: 10.79), controlPoint1: CGPoint(x: 42.77, y: 11.65), controlPoint2: CGPoint(x: 42.88, y: 11.18))
        startShiftText2Path.addCurve(to: CGPoint(x: 44, y: 9.8), controlPoint1: CGPoint(x: 43.33, y: 10.39), controlPoint2: CGPoint(x: 43.62, y: 10.07))
        startShiftText2Path.addCurve(to: CGPoint(x: 45.25, y: 9.23), controlPoint1: CGPoint(x: 44.37, y: 9.54), controlPoint2: CGPoint(x: 44.78, y: 9.35))
        startShiftText2Path.addCurve(to: CGPoint(x: 46.68, y: 9.04), controlPoint1: CGPoint(x: 45.73, y: 9.1), controlPoint2: CGPoint(x: 46.2, y: 9.04))
        startShiftText2Path.addCurve(to: CGPoint(x: 48.26, y: 9.26), controlPoint1: CGPoint(x: 47.24, y: 9.04), controlPoint2: CGPoint(x: 47.77, y: 9.11))
        startShiftText2Path.addCurve(to: CGPoint(x: 49.57, y: 9.91), controlPoint1: CGPoint(x: 48.76, y: 9.4), controlPoint2: CGPoint(x: 49.19, y: 9.62))
        startShiftText2Path.addCurve(to: CGPoint(x: 50.46, y: 10.98), controlPoint1: CGPoint(x: 49.94, y: 10.2), controlPoint2: CGPoint(x: 50.24, y: 10.56))
        startShiftText2Path.addCurve(to: CGPoint(x: 50.79, y: 12.46), controlPoint1: CGPoint(x: 50.68, y: 11.41), controlPoint2: CGPoint(x: 50.79, y: 11.9))
        startShiftText2Path.addLine(to: CGPoint(x: 48.91, y: 12.46))
        startShiftText2Path.addCurve(to: CGPoint(x: 48.21, y: 11), controlPoint1: CGPoint(x: 48.86, y: 11.77), controlPoint2: CGPoint(x: 48.63, y: 11.28))
        startShiftText2Path.addCurve(to: CGPoint(x: 46.61, y: 10.57), controlPoint1: CGPoint(x: 47.79, y: 10.71), controlPoint2: CGPoint(x: 47.26, y: 10.57))
        startShiftText2Path.addCurve(to: CGPoint(x: 45.93, y: 10.64), controlPoint1: CGPoint(x: 46.38, y: 10.57), controlPoint2: CGPoint(x: 46.16, y: 10.59))
        startShiftText2Path.addCurve(to: CGPoint(x: 45.3, y: 10.86), controlPoint1: CGPoint(x: 45.7, y: 10.68), controlPoint2: CGPoint(x: 45.49, y: 10.76))
        startShiftText2Path.addCurve(to: CGPoint(x: 44.83, y: 11.29), controlPoint1: CGPoint(x: 45.11, y: 10.97), controlPoint2: CGPoint(x: 44.95, y: 11.11))
        startShiftText2Path.addCurve(to: CGPoint(x: 44.64, y: 11.97), controlPoint1: CGPoint(x: 44.7, y: 11.47), controlPoint2: CGPoint(x: 44.64, y: 11.69))
        startShiftText2Path.addCurve(to: CGPoint(x: 44.99, y: 12.86), controlPoint1: CGPoint(x: 44.64, y: 12.35), controlPoint2: CGPoint(x: 44.76, y: 12.64))
        startShiftText2Path.addCurve(to: CGPoint(x: 45.91, y: 13.35), controlPoint1: CGPoint(x: 45.23, y: 13.07), controlPoint2: CGPoint(x: 45.53, y: 13.23))
        startShiftText2Path.addCurve(to: CGPoint(x: 46.39, y: 13.47), controlPoint1: CGPoint(x: 45.96, y: 13.36), controlPoint2: CGPoint(x: 46.11, y: 13.4))
        startShiftText2Path.addCurve(to: CGPoint(x: 47.31, y: 13.72), controlPoint1: CGPoint(x: 46.66, y: 13.55), controlPoint2: CGPoint(x: 46.97, y: 13.63))
        startShiftText2Path.addCurve(to: CGPoint(x: 48.31, y: 13.98), controlPoint1: CGPoint(x: 47.65, y: 13.81), controlPoint2: CGPoint(x: 47.98, y: 13.9))
        startShiftText2Path.addCurve(to: CGPoint(x: 49, y: 14.17), controlPoint1: CGPoint(x: 48.63, y: 14.07), controlPoint2: CGPoint(x: 48.86, y: 14.13))
        startShiftText2Path.addCurve(to: CGPoint(x: 49.92, y: 14.62), controlPoint1: CGPoint(x: 49.36, y: 14.28), controlPoint2: CGPoint(x: 49.66, y: 14.43))
        startShiftText2Path.addCurve(to: CGPoint(x: 50.57, y: 15.27), controlPoint1: CGPoint(x: 50.18, y: 14.81), controlPoint2: CGPoint(x: 50.4, y: 15.03))
        startShiftText2Path.addCurve(to: CGPoint(x: 50.96, y: 16.06), controlPoint1: CGPoint(x: 50.75, y: 15.52), controlPoint2: CGPoint(x: 50.88, y: 15.78))
        startShiftText2Path.addCurve(to: CGPoint(x: 51.09, y: 16.9), controlPoint1: CGPoint(x: 51.05, y: 16.34), controlPoint2: CGPoint(x: 51.09, y: 16.62))
        startShiftText2Path.addCurve(to: CGPoint(x: 50.72, y: 18.44), controlPoint1: CGPoint(x: 51.09, y: 17.5), controlPoint2: CGPoint(x: 50.97, y: 18.01))
        startShiftText2Path.addCurve(to: CGPoint(x: 49.75, y: 19.48), controlPoint1: CGPoint(x: 50.48, y: 18.86), controlPoint2: CGPoint(x: 50.16, y: 19.21))
        startShiftText2Path.addCurve(to: CGPoint(x: 48.39, y: 20.07), controlPoint1: CGPoint(x: 49.35, y: 19.75), controlPoint2: CGPoint(x: 48.9, y: 19.95))
        startShiftText2Path.addCurve(to: CGPoint(x: 46.83, y: 20.26), controlPoint1: CGPoint(x: 47.88, y: 20.2), controlPoint2: CGPoint(x: 47.36, y: 20.26))
        startShiftText2Path.addCurve(to: CGPoint(x: 45.11, y: 20.04), controlPoint1: CGPoint(x: 46.22, y: 20.26), controlPoint2: CGPoint(x: 45.65, y: 20.19))
        startShiftText2Path.addCurve(to: CGPoint(x: 43.69, y: 19.35), controlPoint1: CGPoint(x: 44.56, y: 19.88), controlPoint2: CGPoint(x: 44.1, y: 19.66))
        startShiftText2Path.addCurve(to: CGPoint(x: 42.73, y: 18.15), controlPoint1: CGPoint(x: 43.29, y: 19.03), controlPoint2: CGPoint(x: 42.98, y: 18.64))
        startShiftText2Path.addCurve(to: CGPoint(x: 42.36, y: 16.44), controlPoint1: CGPoint(x: 42.49, y: 17.67), controlPoint2: CGPoint(x: 42.37, y: 17.1))
        startShiftText2Path.addLine(to: CGPoint(x: 44.23, y: 16.44))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 52.48, y: 9.3))
        startShiftText2Path.addLine(to: CGPoint(x: 54.2, y: 9.3))
        startShiftText2Path.addLine(to: CGPoint(x: 54.2, y: 13.27))
        startShiftText2Path.addLine(to: CGPoint(x: 54.22, y: 13.27))
        startShiftText2Path.addCurve(to: CGPoint(x: 55.16, y: 12.39), controlPoint1: CGPoint(x: 54.44, y: 12.92), controlPoint2: CGPoint(x: 54.75, y: 12.63))
        startShiftText2Path.addCurve(to: CGPoint(x: 56.55, y: 12.04), controlPoint1: CGPoint(x: 55.58, y: 12.16), controlPoint2: CGPoint(x: 56.04, y: 12.04))
        startShiftText2Path.addCurve(to: CGPoint(x: 58.56, y: 12.7), controlPoint1: CGPoint(x: 57.4, y: 12.04), controlPoint2: CGPoint(x: 58.07, y: 12.26))
        startShiftText2Path.addCurve(to: CGPoint(x: 59.3, y: 14.68), controlPoint1: CGPoint(x: 59.05, y: 13.14), controlPoint2: CGPoint(x: 59.3, y: 13.8))
        startShiftText2Path.addLine(to: CGPoint(x: 59.3, y: 20.01))
        startShiftText2Path.addLine(to: CGPoint(x: 57.59, y: 20.01))
        startShiftText2Path.addLine(to: CGPoint(x: 57.59, y: 15.13))
        startShiftText2Path.addCurve(to: CGPoint(x: 57.19, y: 13.8), controlPoint1: CGPoint(x: 57.56, y: 14.52), controlPoint2: CGPoint(x: 57.44, y: 14.08))
        startShiftText2Path.addCurve(to: CGPoint(x: 56.07, y: 13.39), controlPoint1: CGPoint(x: 56.95, y: 13.53), controlPoint2: CGPoint(x: 56.58, y: 13.39))
        startShiftText2Path.addCurve(to: CGPoint(x: 55.29, y: 13.55), controlPoint1: CGPoint(x: 55.78, y: 13.39), controlPoint2: CGPoint(x: 55.52, y: 13.44))
        startShiftText2Path.addCurve(to: CGPoint(x: 54.7, y: 13.98), controlPoint1: CGPoint(x: 55.06, y: 13.65), controlPoint2: CGPoint(x: 54.87, y: 13.8))
        startShiftText2Path.addCurve(to: CGPoint(x: 54.33, y: 14.63), controlPoint1: CGPoint(x: 54.54, y: 14.17), controlPoint2: CGPoint(x: 54.42, y: 14.38))
        startShiftText2Path.addCurve(to: CGPoint(x: 54.2, y: 15.43), controlPoint1: CGPoint(x: 54.24, y: 14.89), controlPoint2: CGPoint(x: 54.2, y: 15.15))
        startShiftText2Path.addLine(to: CGPoint(x: 54.2, y: 20.01))
        startShiftText2Path.addLine(to: CGPoint(x: 52.48, y: 20.01))
        startShiftText2Path.addLine(to: CGPoint(x: 52.48, y: 9.3))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 61.14, y: 9.3))
        startShiftText2Path.addLine(to: CGPoint(x: 62.85, y: 9.3))
        startShiftText2Path.addLine(to: CGPoint(x: 62.85, y: 10.91))
        startShiftText2Path.addLine(to: CGPoint(x: 61.14, y: 10.91))
        startShiftText2Path.addLine(to: CGPoint(x: 61.14, y: 9.3))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 61.14, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 62.85, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 62.85, y: 20.01))
        startShiftText2Path.addLine(to: CGPoint(x: 61.14, y: 20.01))
        startShiftText2Path.addLine(to: CGPoint(x: 61.14, y: 12.25))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 63.94, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 65.22, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 65.22, y: 11.6))
        startShiftText2Path.addCurve(to: CGPoint(x: 65.4, y: 10.41), controlPoint1: CGPoint(x: 65.22, y: 11.11), controlPoint2: CGPoint(x: 65.28, y: 10.72))
        startShiftText2Path.addCurve(to: CGPoint(x: 65.88, y: 9.71), controlPoint1: CGPoint(x: 65.52, y: 10.11), controlPoint2: CGPoint(x: 65.68, y: 9.87))
        startShiftText2Path.addCurve(to: CGPoint(x: 66.56, y: 9.38), controlPoint1: CGPoint(x: 66.08, y: 9.54), controlPoint2: CGPoint(x: 66.31, y: 9.43))
        startShiftText2Path.addCurve(to: CGPoint(x: 67.36, y: 9.3), controlPoint1: CGPoint(x: 66.82, y: 9.32), controlPoint2: CGPoint(x: 67.08, y: 9.3))
        startShiftText2Path.addCurve(to: CGPoint(x: 68.56, y: 9.4), controlPoint1: CGPoint(x: 67.92, y: 9.3), controlPoint2: CGPoint(x: 68.31, y: 9.33))
        startShiftText2Path.addLine(to: CGPoint(x: 68.56, y: 10.74))
        startShiftText2Path.addCurve(to: CGPoint(x: 68.21, y: 10.67), controlPoint1: CGPoint(x: 68.45, y: 10.7), controlPoint2: CGPoint(x: 68.34, y: 10.68))
        startShiftText2Path.addCurve(to: CGPoint(x: 67.77, y: 10.65), controlPoint1: CGPoint(x: 68.09, y: 10.65), controlPoint2: CGPoint(x: 67.94, y: 10.65))
        startShiftText2Path.addCurve(to: CGPoint(x: 67.18, y: 10.81), controlPoint1: CGPoint(x: 67.54, y: 10.65), controlPoint2: CGPoint(x: 67.34, y: 10.7))
        startShiftText2Path.addCurve(to: CGPoint(x: 66.93, y: 11.46), controlPoint1: CGPoint(x: 67.01, y: 10.92), controlPoint2: CGPoint(x: 66.93, y: 11.13))
        startShiftText2Path.addLine(to: CGPoint(x: 66.93, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 68.38, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 68.38, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 66.93, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 66.93, y: 20.01))
        startShiftText2Path.addLine(to: CGPoint(x: 65.22, y: 20.01))
        startShiftText2Path.addLine(to: CGPoint(x: 65.22, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 63.94, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 63.94, y: 12.25))
        startShiftText2Path.close()
        startShiftText2Path.move(to: CGPoint(x: 68.65, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 69.94, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 69.94, y: 9.93))
        startShiftText2Path.addLine(to: CGPoint(x: 71.65, y: 9.93))
        startShiftText2Path.addLine(to: CGPoint(x: 71.65, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 73.2, y: 12.25))
        startShiftText2Path.addLine(to: CGPoint(x: 73.2, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 71.65, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 71.65, y: 17.66))
        startShiftText2Path.addCurve(to: CGPoint(x: 71.68, y: 18.13), controlPoint1: CGPoint(x: 71.65, y: 17.85), controlPoint2: CGPoint(x: 71.66, y: 18))
        startShiftText2Path.addCurve(to: CGPoint(x: 71.78, y: 18.46), controlPoint1: CGPoint(x: 71.69, y: 18.26), controlPoint2: CGPoint(x: 71.73, y: 18.37))
        startShiftText2Path.addCurve(to: CGPoint(x: 72.03, y: 18.66), controlPoint1: CGPoint(x: 71.84, y: 18.55), controlPoint2: CGPoint(x: 71.92, y: 18.62))
        startShiftText2Path.addCurve(to: CGPoint(x: 72.48, y: 18.73), controlPoint1: CGPoint(x: 72.14, y: 18.71), controlPoint2: CGPoint(x: 72.29, y: 18.73))
        startShiftText2Path.addCurve(to: CGPoint(x: 72.84, y: 18.72), controlPoint1: CGPoint(x: 72.6, y: 18.73), controlPoint2: CGPoint(x: 72.72, y: 18.73))
        startShiftText2Path.addCurve(to: CGPoint(x: 73.2, y: 18.67), controlPoint1: CGPoint(x: 72.96, y: 18.72), controlPoint2: CGPoint(x: 73.08, y: 18.7))
        startShiftText2Path.addLine(to: CGPoint(x: 73.2, y: 19.99))
        startShiftText2Path.addCurve(to: CGPoint(x: 72.64, y: 20.05), controlPoint1: CGPoint(x: 73.01, y: 20.01), controlPoint2: CGPoint(x: 72.83, y: 20.03))
        startShiftText2Path.addCurve(to: CGPoint(x: 72.09, y: 20.08), controlPoint1: CGPoint(x: 72.46, y: 20.07), controlPoint2: CGPoint(x: 72.28, y: 20.08))
        startShiftText2Path.addCurve(to: CGPoint(x: 71, y: 19.95), controlPoint1: CGPoint(x: 71.64, y: 20.08), controlPoint2: CGPoint(x: 71.28, y: 20.04))
        startShiftText2Path.addCurve(to: CGPoint(x: 70.36, y: 19.58), controlPoint1: CGPoint(x: 70.73, y: 19.87), controlPoint2: CGPoint(x: 70.51, y: 19.74))
        startShiftText2Path.addCurve(to: CGPoint(x: 70.04, y: 18.96), controlPoint1: CGPoint(x: 70.2, y: 19.41), controlPoint2: CGPoint(x: 70.1, y: 19.21))
        startShiftText2Path.addCurve(to: CGPoint(x: 69.94, y: 18.1), controlPoint1: CGPoint(x: 69.99, y: 18.7), controlPoint2: CGPoint(x: 69.96, y: 18.42))
        startShiftText2Path.addLine(to: CGPoint(x: 69.94, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 68.65, y: 13.52))
        startShiftText2Path.addLine(to: CGPoint(x: 68.65, y: 12.25))
        startShiftText2Path.close()
        UIColor.white.setFill()
        startShiftText2Path.fill()
    }

    @objc dynamic public class func drawIcs214(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor35 = UIColor(red: 1.000, green: 0.998, blue: 0.995, alpha: 1.000)
        let fillColor36 = UIColor(red: 0.195, green: 0.275, blue: 0.461, alpha: 1.000)
        let fillColor37 = UIColor(red: 0.927, green: 0.610, blue: 0.258, alpha: 1.000)
        let fillColor41 = UIColor(red: 0.799, green: 0.133, blue: 0.174, alpha: 1.000)

        //// Group 2
        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 28.83, y: 25.35, width: 142.15, height: 166.3))
        fillColor35.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 70.25, y: 9.45, width: 64.3, height: 31.8))
        fillColor35.setFill()
        rectangle2Path.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 155.34, y: 12.77))
        bezierPath.addLine(to: CGPoint(x: 144.11, y: 12.77))
        bezierPath.addLine(to: CGPoint(x: 144.11, y: 26.08))
        bezierPath.addLine(to: CGPoint(x: 145.09, y: 26.08))
        bezierPath.addCurve(to: CGPoint(x: 167.08, y: 47.97), controlPoint1: CGPoint(x: 157.24, y: 26.08), controlPoint2: CGPoint(x: 167.08, y: 35.88))
        bezierPath.addLine(to: CGPoint(x: 167.08, y: 164.52))
        bezierPath.addCurve(to: CGPoint(x: 145.09, y: 186.41), controlPoint1: CGPoint(x: 167.08, y: 176.61), controlPoint2: CGPoint(x: 157.24, y: 186.41))
        bezierPath.addLine(to: CGPoint(x: 54.91, y: 186.41))
        bezierPath.addCurve(to: CGPoint(x: 32.92, y: 164.52), controlPoint1: CGPoint(x: 42.76, y: 186.41), controlPoint2: CGPoint(x: 32.92, y: 176.61))
        bezierPath.addLine(to: CGPoint(x: 32.92, y: 47.97))
        bezierPath.addCurve(to: CGPoint(x: 54.91, y: 26.08), controlPoint1: CGPoint(x: 32.92, y: 35.88), controlPoint2: CGPoint(x: 42.76, y: 26.08))
        bezierPath.addLine(to: CGPoint(x: 57.05, y: 26.08))
        bezierPath.addLine(to: CGPoint(x: 57.05, y: 12.77))
        bezierPath.addLine(to: CGPoint(x: 44.66, y: 12.77))
        bezierPath.addCurve(to: CGPoint(x: 22.77, y: 34.66), controlPoint1: CGPoint(x: 32.57, y: 12.77), controlPoint2: CGPoint(x: 22.77, y: 22.58))
        bezierPath.addLine(to: CGPoint(x: 22.77, y: 176.24))
        bezierPath.addCurve(to: CGPoint(x: 44.66, y: 198.13), controlPoint1: CGPoint(x: 22.77, y: 188.33), controlPoint2: CGPoint(x: 32.57, y: 198.13))
        bezierPath.addLine(to: CGPoint(x: 155.34, y: 198.13))
        bezierPath.addCurve(to: CGPoint(x: 177.23, y: 176.24), controlPoint1: CGPoint(x: 167.43, y: 198.13), controlPoint2: CGPoint(x: 177.23, y: 188.33))
        bezierPath.addLine(to: CGPoint(x: 177.23, y: 34.66))
        bezierPath.addCurve(to: CGPoint(x: 155.34, y: 12.77), controlPoint1: CGPoint(x: 177.23, y: 22.58), controlPoint2: CGPoint(x: 167.43, y: 12.77))
        bezierPath.close()
        fillColor36.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 125.28, y: 30.32))
        bezier2Path.addCurve(to: CGPoint(x: 120.54, y: 36.86), controlPoint1: CGPoint(x: 125.28, y: 33.93), controlPoint2: CGPoint(x: 123.16, y: 36.86))
        bezier2Path.addLine(to: CGPoint(x: 82.45, y: 36.86))
        bezier2Path.addCurve(to: CGPoint(x: 77.71, y: 30.32), controlPoint1: CGPoint(x: 79.83, y: 36.86), controlPoint2: CGPoint(x: 77.71, y: 33.93))
        bezier2Path.addLine(to: CGPoint(x: 77.71, y: 15.83))
        bezier2Path.addCurve(to: CGPoint(x: 82.45, y: 9.29), controlPoint1: CGPoint(x: 77.71, y: 12.21), controlPoint2: CGPoint(x: 79.83, y: 9.29))
        bezier2Path.addLine(to: CGPoint(x: 120.54, y: 9.29))
        bezier2Path.addCurve(to: CGPoint(x: 125.28, y: 15.83), controlPoint1: CGPoint(x: 123.16, y: 9.29), controlPoint2: CGPoint(x: 125.28, y: 12.21))
        bezier2Path.addLine(to: CGPoint(x: 125.28, y: 30.32))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 130.79, y: 1.87))
        bezier2Path.addLine(to: CGPoint(x: 72.2, y: 1.87))
        bezier2Path.addCurve(to: CGPoint(x: 64.9, y: 11.92), controlPoint1: CGPoint(x: 68.17, y: 1.87), controlPoint2: CGPoint(x: 64.9, y: 6.37))
        bezier2Path.addLine(to: CGPoint(x: 64.9, y: 34.22))
        bezier2Path.addCurve(to: CGPoint(x: 72.2, y: 44.28), controlPoint1: CGPoint(x: 64.9, y: 39.78), controlPoint2: CGPoint(x: 68.17, y: 44.28))
        bezier2Path.addLine(to: CGPoint(x: 130.79, y: 44.28))
        bezier2Path.addCurve(to: CGPoint(x: 138.09, y: 34.22), controlPoint1: CGPoint(x: 134.82, y: 44.28), controlPoint2: CGPoint(x: 138.09, y: 39.78))
        bezier2Path.addLine(to: CGPoint(x: 138.09, y: 11.92))
        bezier2Path.addCurve(to: CGPoint(x: 130.79, y: 1.87), controlPoint1: CGPoint(x: 138.09, y: 6.37), controlPoint2: CGPoint(x: 134.82, y: 1.87))
        bezier2Path.close()
        fillColor37.setFill()
        bezier2Path.fill()


        //// Rectangle 3 Drawing
        let rectangle3Path = UIBezierPath(rect: CGRect(x: 69.9, y: 64.88, width: 7.7, height: 41.25))
        fillColor41.setFill()
        rectangle3Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 106.83, y: 91.42))
        bezier3Path.addCurve(to: CGPoint(x: 106.66, y: 93.79), controlPoint1: CGPoint(x: 106.77, y: 92.19), controlPoint2: CGPoint(x: 106.72, y: 93.02))
        bezier3Path.addCurve(to: CGPoint(x: 95.17, y: 107.09), controlPoint1: CGPoint(x: 106.28, y: 101.32), controlPoint2: CGPoint(x: 103.75, y: 107.09))
        bezier3Path.addCurve(to: CGPoint(x: 81.7, y: 88.07), controlPoint1: CGPoint(x: 82.53, y: 107.09), controlPoint2: CGPoint(x: 81.7, y: 99.07))
        bezier3Path.addLine(to: CGPoint(x: 81.7, y: 82.19))
        bezier3Path.addCurve(to: CGPoint(x: 95.17, y: 63.88), controlPoint1: CGPoint(x: 82.03, y: 71.69), controlPoint2: CGPoint(x: 82.86, y: 63.88))
        bezier3Path.addCurve(to: CGPoint(x: 106.44, y: 74.55), controlPoint1: CGPoint(x: 102.05, y: 63.99), controlPoint2: CGPoint(x: 105.89, y: 67.51))
        bezier3Path.addCurve(to: CGPoint(x: 106.61, y: 77.68), controlPoint1: CGPoint(x: 106.56, y: 75.59), controlPoint2: CGPoint(x: 106.66, y: 76.64))
        bezier3Path.addLine(to: CGPoint(x: 99.02, y: 77.68))
        bezier3Path.addCurve(to: CGPoint(x: 95.17, y: 70.09), controlPoint1: CGPoint(x: 98.69, y: 75.04), controlPoint2: CGPoint(x: 98.97, y: 70.09))
        bezier3Path.addCurve(to: CGPoint(x: 89.62, y: 80.48), controlPoint1: CGPoint(x: 89.13, y: 70.09), controlPoint2: CGPoint(x: 89.62, y: 77.3))
        bezier3Path.addLine(to: CGPoint(x: 89.62, y: 91.92))
        bezier3Path.addCurve(to: CGPoint(x: 95.17, y: 100.88), controlPoint1: CGPoint(x: 89.62, y: 95.33), controlPoint2: CGPoint(x: 89.9, y: 100.88))
        bezier3Path.addCurve(to: CGPoint(x: 99.08, y: 91.42), controlPoint1: CGPoint(x: 99.41, y: 100.88), controlPoint2: CGPoint(x: 98.91, y: 94.06))
        bezier3Path.addLine(to: CGPoint(x: 106.83, y: 91.42))
        bezier3Path.close()
        fillColor41.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 126.02, y: 77.41))
        bezier4Path.addCurve(to: CGPoint(x: 121.51, y: 70.09), controlPoint1: CGPoint(x: 126.07, y: 73.72), controlPoint2: CGPoint(x: 125.74, y: 70.09))
        bezier4Path.addCurve(to: CGPoint(x: 117.27, y: 73.94), controlPoint1: CGPoint(x: 118.92, y: 70.09), controlPoint2: CGPoint(x: 117.27, y: 71.14))
        bezier4Path.addCurve(to: CGPoint(x: 121.67, y: 79.82), controlPoint1: CGPoint(x: 117.27, y: 77.08), controlPoint2: CGPoint(x: 119.25, y: 78.28))
        bezier4Path.addCurve(to: CGPoint(x: 131.02, y: 86.59), controlPoint1: CGPoint(x: 124.2, y: 81.42), controlPoint2: CGPoint(x: 128.87, y: 84.5))
        bezier4Path.addCurve(to: CGPoint(x: 134.48, y: 95.22), controlPoint1: CGPoint(x: 133.66, y: 89.17), controlPoint2: CGPoint(x: 134.48, y: 91.64))
        bezier4Path.addCurve(to: CGPoint(x: 121.78, y: 107.09), controlPoint1: CGPoint(x: 134.48, y: 103.02), controlPoint2: CGPoint(x: 129.31, y: 107.09))
        bezier4Path.addCurve(to: CGPoint(x: 109.25, y: 94.56), controlPoint1: CGPoint(x: 112.55, y: 107.09), controlPoint2: CGPoint(x: 109.25, y: 101.93))
        bezier4Path.addLine(to: CGPoint(x: 109.25, y: 91.53))
        bezier4Path.addLine(to: CGPoint(x: 116.94, y: 91.53))
        bezier4Path.addLine(to: CGPoint(x: 116.94, y: 93.95))
        bezier4Path.addCurve(to: CGPoint(x: 121.78, y: 100.88), controlPoint1: CGPoint(x: 116.78, y: 97.97), controlPoint2: CGPoint(x: 117.99, y: 100.88))
        bezier4Path.addCurve(to: CGPoint(x: 126.56, y: 96.04), controlPoint1: CGPoint(x: 125.03, y: 100.88), controlPoint2: CGPoint(x: 126.56, y: 99.18))
        bezier4Path.addCurve(to: CGPoint(x: 123.48, y: 90.6), controlPoint1: CGPoint(x: 126.56, y: 93.62), controlPoint2: CGPoint(x: 125.47, y: 91.97))
        bezier4Path.addCurve(to: CGPoint(x: 111.34, y: 81.09), controlPoint1: CGPoint(x: 119.47, y: 87.47), controlPoint2: CGPoint(x: 114.47, y: 85.21))
        bezier4Path.addCurve(to: CGPoint(x: 109.36, y: 74.77), controlPoint1: CGPoint(x: 110.07, y: 79.22), controlPoint2: CGPoint(x: 109.36, y: 76.97))
        bezier4Path.addCurve(to: CGPoint(x: 121.45, y: 63.88), controlPoint1: CGPoint(x: 109.36, y: 67.73), controlPoint2: CGPoint(x: 113.31, y: 63.88))
        bezier4Path.addCurve(to: CGPoint(x: 133.44, y: 77.41), controlPoint1: CGPoint(x: 133.71, y: 63.88), controlPoint2: CGPoint(x: 133.38, y: 73.34))
        bezier4Path.addLine(to: CGPoint(x: 126.02, y: 77.41))
        bezier4Path.close()
        fillColor41.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 65.57, y: 155.1))
        bezier5Path.addCurve(to: CGPoint(x: 66.23, y: 148.12), controlPoint1: CGPoint(x: 65.62, y: 153.34), controlPoint2: CGPoint(x: 65.84, y: 150.48))
        bezier5Path.addCurve(to: CGPoint(x: 73.48, y: 136.52), controlPoint1: CGPoint(x: 66.72, y: 145.26), controlPoint2: CGPoint(x: 68.76, y: 141.52))
        bezier5Path.addLine(to: CGPoint(x: 77.22, y: 132.56))
        bezier5Path.addCurve(to: CGPoint(x: 81.02, y: 124.65), controlPoint1: CGPoint(x: 79.7, y: 129.87), controlPoint2: CGPoint(x: 81.02, y: 128.55))
        bezier5Path.addCurve(to: CGPoint(x: 77.33, y: 119.75), controlPoint1: CGPoint(x: 81.02, y: 120.91), controlPoint2: CGPoint(x: 79.53, y: 119.75))
        bezier5Path.addCurve(to: CGPoint(x: 73.76, y: 121.79), controlPoint1: CGPoint(x: 75.74, y: 119.75), controlPoint2: CGPoint(x: 74.31, y: 120.25))
        bezier5Path.addCurve(to: CGPoint(x: 73.15, y: 127.61), controlPoint1: CGPoint(x: 72.99, y: 123.6), controlPoint2: CGPoint(x: 73.21, y: 125.69))
        bezier5Path.addLine(to: CGPoint(x: 65.95, y: 127.61))
        bezier5Path.addLine(to: CGPoint(x: 65.95, y: 126.46))
        bezier5Path.addCurve(to: CGPoint(x: 77.66, y: 113.7), controlPoint1: CGPoint(x: 65.95, y: 122.83), controlPoint2: CGPoint(x: 65.79, y: 113.6))
        bezier5Path.addCurve(to: CGPoint(x: 88.71, y: 124.37), controlPoint1: CGPoint(x: 84.15, y: 113.76), controlPoint2: CGPoint(x: 88.71, y: 117.77))
        bezier5Path.addCurve(to: CGPoint(x: 83.82, y: 135.64), controlPoint1: CGPoint(x: 88.71, y: 128.93), controlPoint2: CGPoint(x: 87.01, y: 132.4))
        bezier5Path.addLine(to: CGPoint(x: 77.77, y: 141.91))
        bezier5Path.addCurve(to: CGPoint(x: 73.76, y: 149.06), controlPoint1: CGPoint(x: 76.18, y: 143.56), controlPoint2: CGPoint(x: 73.81, y: 146.25))
        bezier5Path.addLine(to: CGPoint(x: 88.11, y: 149.06))
        bezier5Path.addLine(to: CGPoint(x: 88.11, y: 155.1))
        bezier5Path.addLine(to: CGPoint(x: 65.57, y: 155.1))
        bezier5Path.close()
        fillColor41.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 101.63, y: 126.52))
        bezier6Path.addLine(to: CGPoint(x: 92.34, y: 126.52))
        bezier6Path.addLine(to: CGPoint(x: 92.34, y: 121.02))
        bezier6Path.addCurve(to: CGPoint(x: 103.67, y: 113.87), controlPoint1: CGPoint(x: 97.67, y: 120.96), controlPoint2: CGPoint(x: 102.13, y: 119.53))
        bezier6Path.addLine(to: CGPoint(x: 109.33, y: 113.87))
        bezier6Path.addLine(to: CGPoint(x: 109.33, y: 155.1))
        bezier6Path.addLine(to: CGPoint(x: 101.63, y: 155.1))
        bezier6Path.addLine(to: CGPoint(x: 101.63, y: 126.52))
        bezier6Path.close()
        fillColor41.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: 126.54, y: 140.7))
        bezier7Path.addLine(to: CGPoint(x: 126.54, y: 123.99))
        bezier7Path.addLine(to: CGPoint(x: 126.43, y: 123.99))
        bezier7Path.addLine(to: CGPoint(x: 118.84, y: 140.7))
        bezier7Path.addLine(to: CGPoint(x: 126.54, y: 140.7))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 134.23, y: 114.53))
        bezier7Path.addLine(to: CGPoint(x: 134.23, y: 140.7))
        bezier7Path.addLine(to: CGPoint(x: 137.75, y: 140.7))
        bezier7Path.addLine(to: CGPoint(x: 137.75, y: 146.75))
        bezier7Path.addLine(to: CGPoint(x: 134.23, y: 146.75))
        bezier7Path.addLine(to: CGPoint(x: 134.23, y: 155.1))
        bezier7Path.addLine(to: CGPoint(x: 126.54, y: 155.1))
        bezier7Path.addLine(to: CGPoint(x: 126.54, y: 146.75))
        bezier7Path.addLine(to: CGPoint(x: 113.18, y: 146.75))
        bezier7Path.addLine(to: CGPoint(x: 113.18, y: 140.7))
        bezier7Path.addLine(to: CGPoint(x: 125.66, y: 114.53))
        bezier7Path.addLine(to: CGPoint(x: 134.23, y: 114.53))
        bezier7Path.close()
        fillColor41.setFill()
        bezier7Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawIcs21480x80(number80: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: number80, height: number80)


        //// Symbol Drawing
        let symbolRect = CGRect(x: frame.minX, y: frame.minY, width: fastFloor((frame.width) * 1.00000 + 0.5), height: fastFloor((frame.height) * 1.00000 + 0.5))
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawIcs214(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawCloudWhite2Arrow(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let _75percentWhite = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.750)

        //// Group 2
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 157.2, y: 10.99))
        bezierPath.addLine(to: CGPoint(x: 145.99, y: 10.99))
        bezierPath.addLine(to: CGPoint(x: 145.99, y: 24.27))
        bezierPath.addLine(to: CGPoint(x: 146.97, y: 24.27))
        bezierPath.addCurve(to: CGPoint(x: 168.91, y: 46.1), controlPoint1: CGPoint(x: 159.09, y: 24.27), controlPoint2: CGPoint(x: 168.91, y: 34.04))
        bezierPath.addLine(to: CGPoint(x: 168.91, y: 162.35))
        bezierPath.addCurve(to: CGPoint(x: 146.97, y: 184.19), controlPoint1: CGPoint(x: 168.91, y: 174.42), controlPoint2: CGPoint(x: 159.09, y: 184.19))
        bezierPath.addLine(to: CGPoint(x: 57.02, y: 184.19))
        bezierPath.addCurve(to: CGPoint(x: 35.09, y: 162.35), controlPoint1: CGPoint(x: 44.91, y: 184.19), controlPoint2: CGPoint(x: 35.09, y: 174.42))
        bezierPath.addLine(to: CGPoint(x: 35.09, y: 46.1))
        bezierPath.addCurve(to: CGPoint(x: 57.02, y: 24.27), controlPoint1: CGPoint(x: 35.09, y: 34.04), controlPoint2: CGPoint(x: 44.91, y: 24.27))
        bezierPath.addLine(to: CGPoint(x: 59.16, y: 24.27))
        bezierPath.addLine(to: CGPoint(x: 59.16, y: 10.99))
        bezierPath.addLine(to: CGPoint(x: 46.8, y: 10.99))
        bezierPath.addCurve(to: CGPoint(x: 24.96, y: 32.83), controlPoint1: CGPoint(x: 34.74, y: 10.99), controlPoint2: CGPoint(x: 24.96, y: 20.77))
        bezierPath.addLine(to: CGPoint(x: 24.96, y: 174.05))
        bezierPath.addCurve(to: CGPoint(x: 46.8, y: 195.88), controlPoint1: CGPoint(x: 24.96, y: 186.1), controlPoint2: CGPoint(x: 34.74, y: 195.88))
        bezierPath.addLine(to: CGPoint(x: 157.2, y: 195.88))
        bezierPath.addCurve(to: CGPoint(x: 179.04, y: 174.05), controlPoint1: CGPoint(x: 169.26, y: 195.88), controlPoint2: CGPoint(x: 179.04, y: 186.1))
        bezierPath.addLine(to: CGPoint(x: 179.04, y: 32.83))
        bezierPath.addCurve(to: CGPoint(x: 157.2, y: 10.99), controlPoint1: CGPoint(x: 179.04, y: 20.77), controlPoint2: CGPoint(x: 169.26, y: 10.99))
        bezierPath.close()
        _75percentWhite.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 127.21, y: 28.49))
        bezier2Path.addCurve(to: CGPoint(x: 122.48, y: 35.02), controlPoint1: CGPoint(x: 127.21, y: 32.09), controlPoint2: CGPoint(x: 125.1, y: 35.02))
        bezier2Path.addLine(to: CGPoint(x: 84.49, y: 35.02))
        bezier2Path.addCurve(to: CGPoint(x: 79.76, y: 28.49), controlPoint1: CGPoint(x: 81.88, y: 35.02), controlPoint2: CGPoint(x: 79.76, y: 32.09))
        bezier2Path.addLine(to: CGPoint(x: 79.76, y: 14.03))
        bezier2Path.addCurve(to: CGPoint(x: 84.49, y: 7.51), controlPoint1: CGPoint(x: 79.76, y: 10.43), controlPoint2: CGPoint(x: 81.88, y: 7.51))
        bezier2Path.addLine(to: CGPoint(x: 122.48, y: 7.51))
        bezier2Path.addCurve(to: CGPoint(x: 127.21, y: 14.03), controlPoint1: CGPoint(x: 125.1, y: 7.51), controlPoint2: CGPoint(x: 127.21, y: 10.43))
        bezier2Path.addLine(to: CGPoint(x: 127.21, y: 28.49))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 132.71, y: 0.11))
        bezier2Path.addLine(to: CGPoint(x: 74.26, y: 0.11))
        bezier2Path.addCurve(to: CGPoint(x: 66.98, y: 10.14), controlPoint1: CGPoint(x: 70.24, y: 0.11), controlPoint2: CGPoint(x: 66.98, y: 4.6))
        bezier2Path.addLine(to: CGPoint(x: 66.98, y: 32.39))
        bezier2Path.addCurve(to: CGPoint(x: 74.26, y: 42.42), controlPoint1: CGPoint(x: 66.98, y: 37.93), controlPoint2: CGPoint(x: 70.24, y: 42.42))
        bezier2Path.addLine(to: CGPoint(x: 132.71, y: 42.42))
        bezier2Path.addCurve(to: CGPoint(x: 139.99, y: 32.39), controlPoint1: CGPoint(x: 136.73, y: 42.42), controlPoint2: CGPoint(x: 139.99, y: 37.93))
        bezier2Path.addLine(to: CGPoint(x: 139.99, y: 10.14))
        bezier2Path.addCurve(to: CGPoint(x: 132.71, y: 0.11), controlPoint1: CGPoint(x: 139.99, y: 4.6), controlPoint2: CGPoint(x: 136.73, y: 0.11))
        bezier2Path.close()
        _75percentWhite.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 139.97, y: 75.38))
        bezier3Path.addLine(to: CGPoint(x: 140.97, y: 75.45))
        bezier3Path.addLine(to: CGPoint(x: 140.98, y: 75.33))
        bezier3Path.addLine(to: CGPoint(x: 140.98, y: 75.29))
        bezier3Path.addLine(to: CGPoint(x: 140.98, y: 75.26))
        bezier3Path.addCurve(to: CGPoint(x: 132.14, y: 53.39), controlPoint1: CGPoint(x: 140.98, y: 66.72), controlPoint2: CGPoint(x: 137.6, y: 58.99))
        bezier3Path.addCurve(to: CGPoint(x: 110.78, y: 44.32), controlPoint1: CGPoint(x: 126.68, y: 47.79), controlPoint2: CGPoint(x: 119.12, y: 44.32))
        bezier3Path.addCurve(to: CGPoint(x: 81.99, y: 65.9), controlPoint1: CGPoint(x: 97.28, y: 44.32), controlPoint2: CGPoint(x: 85.86, y: 53.4))
        bezier3Path.addLine(to: CGPoint(x: 82.95, y: 66.2))
        bezier3Path.addLine(to: CGPoint(x: 83.16, y: 65.22))
        bezier3Path.addCurve(to: CGPoint(x: 78.48, y: 64.72), controlPoint1: CGPoint(x: 81.65, y: 64.89), controlPoint2: CGPoint(x: 80.08, y: 64.72))
        bezier3Path.addCurve(to: CGPoint(x: 62.3, y: 72.23), controlPoint1: CGPoint(x: 72.13, y: 64.72), controlPoint2: CGPoint(x: 66.41, y: 67.69))
        bezier3Path.addCurve(to: CGPoint(x: 55.64, y: 89.36), controlPoint1: CGPoint(x: 58.19, y: 76.77), controlPoint2: CGPoint(x: 55.64, y: 82.91))
        bezier3Path.addCurve(to: CGPoint(x: 55.66, y: 89.79), controlPoint1: CGPoint(x: 55.64, y: 89.56), controlPoint2: CGPoint(x: 55.64, y: 89.62))
        bezier3Path.addLine(to: CGPoint(x: 55.67, y: 89.84))
        bezier3Path.addLine(to: CGPoint(x: 55.68, y: 89.84))
        bezier3Path.addLine(to: CGPoint(x: 55.67, y: 89.84))
        bezier3Path.addLine(to: CGPoint(x: 55.67, y: 89.84))
        bezier3Path.addLine(to: CGPoint(x: 55.68, y: 89.84))
        bezier3Path.addLine(to: CGPoint(x: 55.67, y: 89.84))
        bezier3Path.addCurve(to: CGPoint(x: 55.76, y: 92.92), controlPoint1: CGPoint(x: 55.68, y: 89.98), controlPoint2: CGPoint(x: 55.72, y: 90.64))
        bezier3Path.addLine(to: CGPoint(x: 56.76, y: 92.9))
        bezier3Path.addLine(to: CGPoint(x: 56.76, y: 91.9))
        bezier3Path.addLine(to: CGPoint(x: 56.66, y: 91.9))
        bezier3Path.addCurve(to: CGPoint(x: 46.83, y: 96.04), controlPoint1: CGPoint(x: 52.82, y: 91.9), controlPoint2: CGPoint(x: 49.34, y: 93.48))
        bezier3Path.addCurve(to: CGPoint(x: 42.77, y: 106.05), controlPoint1: CGPoint(x: 44.32, y: 98.59), controlPoint2: CGPoint(x: 42.77, y: 102.14))
        bezier3Path.addCurve(to: CGPoint(x: 45.84, y: 115.56), controlPoint1: CGPoint(x: 42.77, y: 109.51), controlPoint2: CGPoint(x: 43.85, y: 112.94))
        bezier3Path.addCurve(to: CGPoint(x: 54.33, y: 119.98), controlPoint1: CGPoint(x: 47.81, y: 118.17), controlPoint2: CGPoint(x: 50.77, y: 119.99))
        bezier3Path.addCurve(to: CGPoint(x: 147.52, y: 119.98), controlPoint1: CGPoint(x: 60.77, y: 119.98), controlPoint2: CGPoint(x: 147.52, y: 119.98))
        bezier3Path.addLine(to: CGPoint(x: 147.79, y: 119.98))
        bezier3Path.addLine(to: CGPoint(x: 148.02, y: 119.84))
        bezier3Path.addCurve(to: CGPoint(x: 157.52, y: 110.74), controlPoint1: CGPoint(x: 151.89, y: 117.59), controlPoint2: CGPoint(x: 155.19, y: 114.47))
        bezier3Path.addCurve(to: CGPoint(x: 161.23, y: 98.04), controlPoint1: CGPoint(x: 159.86, y: 107.01), controlPoint2: CGPoint(x: 161.23, y: 102.67))
        bezier3Path.addCurve(to: CGPoint(x: 155.07, y: 81.84), controlPoint1: CGPoint(x: 161.23, y: 91.96), controlPoint2: CGPoint(x: 158.88, y: 86.18))
        bezier3Path.addCurve(to: CGPoint(x: 140.01, y: 74.38), controlPoint1: CGPoint(x: 151.26, y: 77.51), controlPoint2: CGPoint(x: 145.94, y: 74.6))
        bezier3Path.addLine(to: CGPoint(x: 139.97, y: 75.38))
        bezier3Path.addLine(to: CGPoint(x: 140.97, y: 75.45))
        bezier3Path.addLine(to: CGPoint(x: 139.97, y: 75.38))
        bezier3Path.addLine(to: CGPoint(x: 139.94, y: 76.38))
        bezier3Path.addCurve(to: CGPoint(x: 153.57, y: 83.16), controlPoint1: CGPoint(x: 145.25, y: 76.57), controlPoint2: CGPoint(x: 150.06, y: 79.18))
        bezier3Path.addCurve(to: CGPoint(x: 159.23, y: 98.04), controlPoint1: CGPoint(x: 157.07, y: 87.14), controlPoint2: CGPoint(x: 159.23, y: 92.49))
        bezier3Path.addCurve(to: CGPoint(x: 155.83, y: 109.68), controlPoint1: CGPoint(x: 159.23, y: 102.28), controlPoint2: CGPoint(x: 157.98, y: 106.24))
        bezier3Path.addCurve(to: CGPoint(x: 147.02, y: 118.12), controlPoint1: CGPoint(x: 153.68, y: 113.11), controlPoint2: CGPoint(x: 150.62, y: 116.02))
        bezier3Path.addLine(to: CGPoint(x: 147.52, y: 118.98))
        bezier3Path.addLine(to: CGPoint(x: 147.52, y: 117.98))
        bezier3Path.addCurve(to: CGPoint(x: 103.34, y: 117.98), controlPoint1: CGPoint(x: 147.52, y: 117.98), controlPoint2: CGPoint(x: 125.83, y: 117.98))
        bezier3Path.addCurve(to: CGPoint(x: 54.33, y: 117.98), controlPoint1: CGPoint(x: 80.85, y: 117.98), controlPoint2: CGPoint(x: 57.55, y: 117.98))
        bezier3Path.addCurve(to: CGPoint(x: 47.43, y: 114.35), controlPoint1: CGPoint(x: 51.46, y: 117.97), controlPoint2: CGPoint(x: 49.13, y: 116.57))
        bezier3Path.addCurve(to: CGPoint(x: 44.77, y: 106.05), controlPoint1: CGPoint(x: 45.74, y: 112.13), controlPoint2: CGPoint(x: 44.76, y: 109.09))
        bezier3Path.addCurve(to: CGPoint(x: 48.26, y: 97.44), controlPoint1: CGPoint(x: 44.77, y: 102.67), controlPoint2: CGPoint(x: 46.1, y: 99.64))
        bezier3Path.addCurve(to: CGPoint(x: 56.66, y: 93.9), controlPoint1: CGPoint(x: 50.41, y: 95.25), controlPoint2: CGPoint(x: 53.38, y: 93.9))
        bezier3Path.addLine(to: CGPoint(x: 57.77, y: 93.9))
        bezier3Path.addLine(to: CGPoint(x: 57.76, y: 92.89))
        bezier3Path.addCurve(to: CGPoint(x: 57.67, y: 89.71), controlPoint1: CGPoint(x: 57.72, y: 90.7), controlPoint2: CGPoint(x: 57.69, y: 90.02))
        bezier3Path.addLine(to: CGPoint(x: 57.65, y: 89.51))
        bezier3Path.addLine(to: CGPoint(x: 57.63, y: 89.46))
        bezier3Path.addLine(to: CGPoint(x: 57.63, y: 89.44))
        bezier3Path.addLine(to: CGPoint(x: 56.94, y: 89.58))
        bezier3Path.addLine(to: CGPoint(x: 57.64, y: 89.5))
        bezier3Path.addLine(to: CGPoint(x: 57.63, y: 89.44))
        bezier3Path.addLine(to: CGPoint(x: 56.94, y: 89.58))
        bezier3Path.addLine(to: CGPoint(x: 57.64, y: 89.5))
        bezier3Path.addLine(to: CGPoint(x: 57.17, y: 89.56))
        bezier3Path.addLine(to: CGPoint(x: 57.64, y: 89.53))
        bezier3Path.addLine(to: CGPoint(x: 57.64, y: 89.5))
        bezier3Path.addLine(to: CGPoint(x: 57.17, y: 89.56))
        bezier3Path.addLine(to: CGPoint(x: 57.64, y: 89.53))
        bezier3Path.addCurve(to: CGPoint(x: 57.64, y: 89.36), controlPoint1: CGPoint(x: 57.64, y: 89.53), controlPoint2: CGPoint(x: 57.64, y: 89.47))
        bezier3Path.addCurve(to: CGPoint(x: 63.78, y: 73.57), controlPoint1: CGPoint(x: 57.64, y: 83.44), controlPoint2: CGPoint(x: 59.99, y: 77.75))
        bezier3Path.addCurve(to: CGPoint(x: 78.48, y: 66.72), controlPoint1: CGPoint(x: 67.57, y: 69.39), controlPoint2: CGPoint(x: 72.77, y: 66.72))
        bezier3Path.addCurve(to: CGPoint(x: 82.74, y: 67.17), controlPoint1: CGPoint(x: 79.94, y: 66.72), controlPoint2: CGPoint(x: 81.36, y: 66.88))
        bezier3Path.addLine(to: CGPoint(x: 83.63, y: 67.37))
        bezier3Path.addLine(to: CGPoint(x: 83.9, y: 66.49))
        bezier3Path.addCurve(to: CGPoint(x: 110.78, y: 46.32), controlPoint1: CGPoint(x: 87.53, y: 54.78), controlPoint2: CGPoint(x: 98.2, y: 46.32))
        bezier3Path.addCurve(to: CGPoint(x: 130.71, y: 54.79), controlPoint1: CGPoint(x: 118.56, y: 46.32), controlPoint2: CGPoint(x: 125.6, y: 49.55))
        bezier3Path.addCurve(to: CGPoint(x: 138.98, y: 75.26), controlPoint1: CGPoint(x: 135.82, y: 60.02), controlPoint2: CGPoint(x: 138.98, y: 67.25))
        bezier3Path.addLine(to: CGPoint(x: 139.98, y: 75.26))
        bezier3Path.addLine(to: CGPoint(x: 138.98, y: 75.19))
        bezier3Path.addLine(to: CGPoint(x: 138.97, y: 75.32))
        bezier3Path.addLine(to: CGPoint(x: 138.9, y: 76.35))
        bezier3Path.addLine(to: CGPoint(x: 139.94, y: 76.38))
        bezier3Path.addLine(to: CGPoint(x: 139.97, y: 75.38))
        bezier3Path.close()
        _75percentWhite.setFill()
        bezier3Path.fill()


        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 90.72, y: 156.05, width: 21.55, height: 1.8))
        _75percentWhite.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        context.saveGState()
        context.translateBy(x: 101.55, y: 140.8)
        context.rotate(by: 0.15 * CGFloat.pi/180)

        let rectangle2Path = UIBezierPath(rect: CGRect(x: -10.78, y: -7.15, width: 21.55, height: 14.3))
        _75percentWhite.setFill()
        rectangle2Path.fill()

        context.restoreGState()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 90.8, y: 121.05))
        bezier4Path.addLine(to: CGPoint(x: 112.35, y: 121.05))
        bezier4Path.addLine(to: CGPoint(x: 112.35, y: 120.02))
        bezier4Path.addLine(to: CGPoint(x: 122.75, y: 120.02))
        bezier4Path.addLine(to: CGPoint(x: 101, y: 98.55))
        bezier4Path.addCurve(to: CGPoint(x: 80.3, y: 120.02), controlPoint1: CGPoint(x: 100.87, y: 98.36), controlPoint2: CGPoint(x: 80.3, y: 120.02))
        bezier4Path.addLine(to: CGPoint(x: 90.8, y: 120.02))
        bezier4Path.addLine(to: CGPoint(x: 90.8, y: 121.05))
        bezier4Path.close()
        _75percentWhite.setFill()
        bezier4Path.fill()


        //// Rectangle 3 Drawing
        let rectangle3Path = UIBezierPath(rect: CGRect(x: 90.77, y: 128.25, width: 21.55, height: 2.7))
        _75percentWhite.setFill()
        rectangle3Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 112.25, y: 160.52))
        bezier5Path.addLine(to: CGPoint(x: 90.7, y: 160.52))
        bezier5Path.addLine(to: CGPoint(x: 90.7, y: 161.55))
        bezier5Path.addLine(to: CGPoint(x: 80.3, y: 161.55))
        bezier5Path.addLine(to: CGPoint(x: 102.05, y: 183.02))
        bezier5Path.addCurve(to: CGPoint(x: 122.75, y: 161.55), controlPoint1: CGPoint(x: 102.18, y: 183.2), controlPoint2: CGPoint(x: 122.75, y: 161.55))
        bezier5Path.addLine(to: CGPoint(x: 112.25, y: 161.55))
        bezier5Path.addLine(to: CGPoint(x: 112.25, y: 160.52))
        bezier5Path.close()
        _75percentWhite.setFill()
        bezier5Path.fill()


        //// Rectangle 4 Drawing
        let rectangle4Path = UIBezierPath(rect: CGRect(x: 90.77, y: 123.75, width: 21.55, height: 1.8))
        _75percentWhite.setFill()
        rectangle4Path.fill()


        //// Rectangle 5 Drawing
        let rectangle5Path = UIBezierPath(rect: CGRect(x: 90.72, y: 150.65, width: 21.55, height: 2.7))
        _75percentWhite.setFill()
        rectangle5Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawConnectButtonWhite2Arrow80() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 5, y: 5, width: 70, height: 70)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawCloudWhite2Arrow(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawIcs214LocalIncident(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor35 = UIColor(red: 1.000, green: 0.998, blue: 0.995, alpha: 1.000)
        let fillColor36 = UIColor(red: 0.195, green: 0.275, blue: 0.461, alpha: 1.000)
        let fillColor37 = UIColor(red: 0.927, green: 0.610, blue: 0.258, alpha: 1.000)
        let fillColor41 = UIColor(red: 0.799, green: 0.133, blue: 0.174, alpha: 1.000)

        //// Group 2
        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 28.83, y: 25.35, width: 142.15, height: 166.3))
        fillColor35.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 70.25, y: 9.45, width: 64.3, height: 31.8))
        fillColor35.setFill()
        rectangle2Path.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 155.34, y: 12.77))
        bezierPath.addLine(to: CGPoint(x: 144.11, y: 12.77))
        bezierPath.addLine(to: CGPoint(x: 144.11, y: 26.08))
        bezierPath.addLine(to: CGPoint(x: 145.09, y: 26.08))
        bezierPath.addCurve(to: CGPoint(x: 167.08, y: 47.97), controlPoint1: CGPoint(x: 157.24, y: 26.08), controlPoint2: CGPoint(x: 167.08, y: 35.88))
        bezierPath.addLine(to: CGPoint(x: 167.08, y: 164.52))
        bezierPath.addCurve(to: CGPoint(x: 145.09, y: 186.41), controlPoint1: CGPoint(x: 167.08, y: 176.61), controlPoint2: CGPoint(x: 157.24, y: 186.41))
        bezierPath.addLine(to: CGPoint(x: 54.91, y: 186.41))
        bezierPath.addCurve(to: CGPoint(x: 32.92, y: 164.52), controlPoint1: CGPoint(x: 42.76, y: 186.41), controlPoint2: CGPoint(x: 32.92, y: 176.61))
        bezierPath.addLine(to: CGPoint(x: 32.92, y: 47.97))
        bezierPath.addCurve(to: CGPoint(x: 54.91, y: 26.08), controlPoint1: CGPoint(x: 32.92, y: 35.88), controlPoint2: CGPoint(x: 42.76, y: 26.08))
        bezierPath.addLine(to: CGPoint(x: 57.05, y: 26.08))
        bezierPath.addLine(to: CGPoint(x: 57.05, y: 12.77))
        bezierPath.addLine(to: CGPoint(x: 44.66, y: 12.77))
        bezierPath.addCurve(to: CGPoint(x: 22.77, y: 34.66), controlPoint1: CGPoint(x: 32.57, y: 12.77), controlPoint2: CGPoint(x: 22.77, y: 22.58))
        bezierPath.addLine(to: CGPoint(x: 22.77, y: 176.24))
        bezierPath.addCurve(to: CGPoint(x: 44.66, y: 198.13), controlPoint1: CGPoint(x: 22.77, y: 188.33), controlPoint2: CGPoint(x: 32.57, y: 198.13))
        bezierPath.addLine(to: CGPoint(x: 155.34, y: 198.13))
        bezierPath.addCurve(to: CGPoint(x: 177.23, y: 176.24), controlPoint1: CGPoint(x: 167.43, y: 198.13), controlPoint2: CGPoint(x: 177.23, y: 188.33))
        bezierPath.addLine(to: CGPoint(x: 177.23, y: 34.66))
        bezierPath.addCurve(to: CGPoint(x: 155.34, y: 12.77), controlPoint1: CGPoint(x: 177.23, y: 22.58), controlPoint2: CGPoint(x: 167.43, y: 12.77))
        bezierPath.close()
        fillColor36.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 125.28, y: 30.32))
        bezier2Path.addCurve(to: CGPoint(x: 120.54, y: 36.86), controlPoint1: CGPoint(x: 125.28, y: 33.93), controlPoint2: CGPoint(x: 123.16, y: 36.86))
        bezier2Path.addLine(to: CGPoint(x: 82.45, y: 36.86))
        bezier2Path.addCurve(to: CGPoint(x: 77.71, y: 30.32), controlPoint1: CGPoint(x: 79.83, y: 36.86), controlPoint2: CGPoint(x: 77.71, y: 33.93))
        bezier2Path.addLine(to: CGPoint(x: 77.71, y: 15.83))
        bezier2Path.addCurve(to: CGPoint(x: 82.45, y: 9.29), controlPoint1: CGPoint(x: 77.71, y: 12.21), controlPoint2: CGPoint(x: 79.83, y: 9.29))
        bezier2Path.addLine(to: CGPoint(x: 120.54, y: 9.29))
        bezier2Path.addCurve(to: CGPoint(x: 125.28, y: 15.83), controlPoint1: CGPoint(x: 123.16, y: 9.29), controlPoint2: CGPoint(x: 125.28, y: 12.21))
        bezier2Path.addLine(to: CGPoint(x: 125.28, y: 30.32))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 130.79, y: 1.87))
        bezier2Path.addLine(to: CGPoint(x: 72.2, y: 1.87))
        bezier2Path.addCurve(to: CGPoint(x: 64.9, y: 11.92), controlPoint1: CGPoint(x: 68.17, y: 1.87), controlPoint2: CGPoint(x: 64.9, y: 6.37))
        bezier2Path.addLine(to: CGPoint(x: 64.9, y: 34.22))
        bezier2Path.addCurve(to: CGPoint(x: 72.2, y: 44.28), controlPoint1: CGPoint(x: 64.9, y: 39.78), controlPoint2: CGPoint(x: 68.17, y: 44.28))
        bezier2Path.addLine(to: CGPoint(x: 130.79, y: 44.28))
        bezier2Path.addCurve(to: CGPoint(x: 138.09, y: 34.22), controlPoint1: CGPoint(x: 134.82, y: 44.28), controlPoint2: CGPoint(x: 138.09, y: 39.78))
        bezier2Path.addLine(to: CGPoint(x: 138.09, y: 11.92))
        bezier2Path.addCurve(to: CGPoint(x: 130.79, y: 1.87), controlPoint1: CGPoint(x: 138.09, y: 6.37), controlPoint2: CGPoint(x: 134.82, y: 1.87))
        bezier2Path.close()
        fillColor37.setFill()
        bezier2Path.fill()


        //// Rectangle 3 Drawing
        let rectangle3Path = UIBezierPath(rect: CGRect(x: 69.9, y: 55.88, width: 7.7, height: 41.25))
        fillColor41.setFill()
        rectangle3Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 106.83, y: 82.42))
        bezier3Path.addCurve(to: CGPoint(x: 106.66, y: 84.79), controlPoint1: CGPoint(x: 106.77, y: 83.19), controlPoint2: CGPoint(x: 106.72, y: 84.02))
        bezier3Path.addCurve(to: CGPoint(x: 95.17, y: 98.09), controlPoint1: CGPoint(x: 106.28, y: 92.32), controlPoint2: CGPoint(x: 103.75, y: 98.09))
        bezier3Path.addCurve(to: CGPoint(x: 81.7, y: 79.07), controlPoint1: CGPoint(x: 82.53, y: 98.09), controlPoint2: CGPoint(x: 81.7, y: 90.07))
        bezier3Path.addLine(to: CGPoint(x: 81.7, y: 73.19))
        bezier3Path.addCurve(to: CGPoint(x: 95.17, y: 54.88), controlPoint1: CGPoint(x: 82.03, y: 62.69), controlPoint2: CGPoint(x: 82.86, y: 54.88))
        bezier3Path.addCurve(to: CGPoint(x: 106.44, y: 65.55), controlPoint1: CGPoint(x: 102.05, y: 54.99), controlPoint2: CGPoint(x: 105.89, y: 58.51))
        bezier3Path.addCurve(to: CGPoint(x: 106.61, y: 68.68), controlPoint1: CGPoint(x: 106.56, y: 66.59), controlPoint2: CGPoint(x: 106.66, y: 67.64))
        bezier3Path.addLine(to: CGPoint(x: 99.02, y: 68.68))
        bezier3Path.addCurve(to: CGPoint(x: 95.17, y: 61.09), controlPoint1: CGPoint(x: 98.69, y: 66.04), controlPoint2: CGPoint(x: 98.97, y: 61.09))
        bezier3Path.addCurve(to: CGPoint(x: 89.62, y: 71.48), controlPoint1: CGPoint(x: 89.13, y: 61.09), controlPoint2: CGPoint(x: 89.62, y: 68.29))
        bezier3Path.addLine(to: CGPoint(x: 89.62, y: 82.92))
        bezier3Path.addCurve(to: CGPoint(x: 95.17, y: 91.88), controlPoint1: CGPoint(x: 89.62, y: 86.33), controlPoint2: CGPoint(x: 89.9, y: 91.88))
        bezier3Path.addCurve(to: CGPoint(x: 99.08, y: 82.42), controlPoint1: CGPoint(x: 99.41, y: 91.88), controlPoint2: CGPoint(x: 98.91, y: 85.06))
        bezier3Path.addLine(to: CGPoint(x: 106.83, y: 82.42))
        bezier3Path.close()
        fillColor41.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 126.02, y: 68.41))
        bezier4Path.addCurve(to: CGPoint(x: 121.51, y: 61.09), controlPoint1: CGPoint(x: 126.07, y: 64.72), controlPoint2: CGPoint(x: 125.74, y: 61.09))
        bezier4Path.addCurve(to: CGPoint(x: 117.27, y: 64.94), controlPoint1: CGPoint(x: 118.92, y: 61.09), controlPoint2: CGPoint(x: 117.27, y: 62.14))
        bezier4Path.addCurve(to: CGPoint(x: 121.67, y: 70.82), controlPoint1: CGPoint(x: 117.27, y: 68.07), controlPoint2: CGPoint(x: 119.25, y: 69.28))
        bezier4Path.addCurve(to: CGPoint(x: 131.02, y: 77.59), controlPoint1: CGPoint(x: 124.2, y: 72.42), controlPoint2: CGPoint(x: 128.87, y: 75.5))
        bezier4Path.addCurve(to: CGPoint(x: 134.48, y: 86.22), controlPoint1: CGPoint(x: 133.66, y: 80.17), controlPoint2: CGPoint(x: 134.48, y: 82.64))
        bezier4Path.addCurve(to: CGPoint(x: 121.78, y: 98.09), controlPoint1: CGPoint(x: 134.48, y: 94.02), controlPoint2: CGPoint(x: 129.31, y: 98.09))
        bezier4Path.addCurve(to: CGPoint(x: 109.25, y: 85.56), controlPoint1: CGPoint(x: 112.55, y: 98.09), controlPoint2: CGPoint(x: 109.25, y: 92.93))
        bezier4Path.addLine(to: CGPoint(x: 109.25, y: 82.53))
        bezier4Path.addLine(to: CGPoint(x: 116.94, y: 82.53))
        bezier4Path.addLine(to: CGPoint(x: 116.94, y: 84.95))
        bezier4Path.addCurve(to: CGPoint(x: 121.78, y: 91.88), controlPoint1: CGPoint(x: 116.78, y: 88.97), controlPoint2: CGPoint(x: 117.99, y: 91.88))
        bezier4Path.addCurve(to: CGPoint(x: 126.56, y: 87.04), controlPoint1: CGPoint(x: 125.03, y: 91.88), controlPoint2: CGPoint(x: 126.56, y: 90.18))
        bezier4Path.addCurve(to: CGPoint(x: 123.48, y: 81.6), controlPoint1: CGPoint(x: 126.56, y: 84.62), controlPoint2: CGPoint(x: 125.47, y: 82.97))
        bezier4Path.addCurve(to: CGPoint(x: 111.34, y: 72.09), controlPoint1: CGPoint(x: 119.47, y: 78.47), controlPoint2: CGPoint(x: 114.47, y: 76.21))
        bezier4Path.addCurve(to: CGPoint(x: 109.36, y: 65.77), controlPoint1: CGPoint(x: 110.07, y: 70.22), controlPoint2: CGPoint(x: 109.36, y: 67.97))
        bezier4Path.addCurve(to: CGPoint(x: 121.45, y: 54.88), controlPoint1: CGPoint(x: 109.36, y: 58.73), controlPoint2: CGPoint(x: 113.31, y: 54.88))
        bezier4Path.addCurve(to: CGPoint(x: 133.44, y: 68.41), controlPoint1: CGPoint(x: 133.71, y: 54.88), controlPoint2: CGPoint(x: 133.38, y: 64.34))
        bezier4Path.addLine(to: CGPoint(x: 126.02, y: 68.41))
        bezier4Path.close()
        fillColor41.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 65.57, y: 146.1))
        bezier5Path.addCurve(to: CGPoint(x: 66.23, y: 139.12), controlPoint1: CGPoint(x: 65.62, y: 144.34), controlPoint2: CGPoint(x: 65.84, y: 141.48))
        bezier5Path.addCurve(to: CGPoint(x: 73.48, y: 127.52), controlPoint1: CGPoint(x: 66.72, y: 136.26), controlPoint2: CGPoint(x: 68.76, y: 132.52))
        bezier5Path.addLine(to: CGPoint(x: 77.22, y: 123.56))
        bezier5Path.addCurve(to: CGPoint(x: 81.02, y: 115.65), controlPoint1: CGPoint(x: 79.7, y: 120.87), controlPoint2: CGPoint(x: 81.02, y: 119.55))
        bezier5Path.addCurve(to: CGPoint(x: 77.33, y: 110.75), controlPoint1: CGPoint(x: 81.02, y: 111.91), controlPoint2: CGPoint(x: 79.53, y: 110.75))
        bezier5Path.addCurve(to: CGPoint(x: 73.76, y: 112.79), controlPoint1: CGPoint(x: 75.74, y: 110.75), controlPoint2: CGPoint(x: 74.31, y: 111.25))
        bezier5Path.addCurve(to: CGPoint(x: 73.15, y: 118.61), controlPoint1: CGPoint(x: 72.99, y: 114.6), controlPoint2: CGPoint(x: 73.21, y: 116.69))
        bezier5Path.addLine(to: CGPoint(x: 65.95, y: 118.61))
        bezier5Path.addLine(to: CGPoint(x: 65.95, y: 117.46))
        bezier5Path.addCurve(to: CGPoint(x: 77.66, y: 104.7), controlPoint1: CGPoint(x: 65.95, y: 113.83), controlPoint2: CGPoint(x: 65.79, y: 104.6))
        bezier5Path.addCurve(to: CGPoint(x: 88.71, y: 115.37), controlPoint1: CGPoint(x: 84.15, y: 104.76), controlPoint2: CGPoint(x: 88.71, y: 108.77))
        bezier5Path.addCurve(to: CGPoint(x: 83.82, y: 126.64), controlPoint1: CGPoint(x: 88.71, y: 119.93), controlPoint2: CGPoint(x: 87.01, y: 123.4))
        bezier5Path.addLine(to: CGPoint(x: 77.77, y: 132.91))
        bezier5Path.addCurve(to: CGPoint(x: 73.76, y: 140.06), controlPoint1: CGPoint(x: 76.18, y: 134.56), controlPoint2: CGPoint(x: 73.81, y: 137.25))
        bezier5Path.addLine(to: CGPoint(x: 88.11, y: 140.06))
        bezier5Path.addLine(to: CGPoint(x: 88.11, y: 146.1))
        bezier5Path.addLine(to: CGPoint(x: 65.57, y: 146.1))
        bezier5Path.close()
        fillColor41.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 101.63, y: 117.52))
        bezier6Path.addLine(to: CGPoint(x: 92.34, y: 117.52))
        bezier6Path.addLine(to: CGPoint(x: 92.34, y: 112.02))
        bezier6Path.addCurve(to: CGPoint(x: 103.67, y: 104.87), controlPoint1: CGPoint(x: 97.67, y: 111.96), controlPoint2: CGPoint(x: 102.13, y: 110.53))
        bezier6Path.addLine(to: CGPoint(x: 109.33, y: 104.87))
        bezier6Path.addLine(to: CGPoint(x: 109.33, y: 146.1))
        bezier6Path.addLine(to: CGPoint(x: 101.63, y: 146.1))
        bezier6Path.addLine(to: CGPoint(x: 101.63, y: 117.52))
        bezier6Path.close()
        fillColor41.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: 126.53, y: 131.7))
        bezier7Path.addLine(to: CGPoint(x: 126.53, y: 114.99))
        bezier7Path.addLine(to: CGPoint(x: 126.42, y: 114.99))
        bezier7Path.addLine(to: CGPoint(x: 118.84, y: 131.7))
        bezier7Path.addLine(to: CGPoint(x: 126.53, y: 131.7))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 134.23, y: 105.53))
        bezier7Path.addLine(to: CGPoint(x: 134.23, y: 131.7))
        bezier7Path.addLine(to: CGPoint(x: 137.75, y: 131.7))
        bezier7Path.addLine(to: CGPoint(x: 137.75, y: 137.75))
        bezier7Path.addLine(to: CGPoint(x: 134.23, y: 137.75))
        bezier7Path.addLine(to: CGPoint(x: 134.23, y: 146.1))
        bezier7Path.addLine(to: CGPoint(x: 126.53, y: 146.1))
        bezier7Path.addLine(to: CGPoint(x: 126.53, y: 137.75))
        bezier7Path.addLine(to: CGPoint(x: 113.18, y: 137.75))
        bezier7Path.addLine(to: CGPoint(x: 113.18, y: 131.7))
        bezier7Path.addLine(to: CGPoint(x: 125.66, y: 105.53))
        bezier7Path.addLine(to: CGPoint(x: 134.23, y: 105.53))
        bezier7Path.close()
        fillColor41.setFill()
        bezier7Path.fill()


        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: 43.49, y: 171.1))
        bezier8Path.addLine(to: CGPoint(x: 43.49, y: 157.6))
        bezier8Path.addLine(to: CGPoint(x: 46.01, y: 157.6))
        bezier8Path.addLine(to: CGPoint(x: 46.01, y: 169.12))
        bezier8Path.addLine(to: CGPoint(x: 50.69, y: 169.12))
        bezier8Path.addLine(to: CGPoint(x: 50.69, y: 171.1))
        bezier8Path.addLine(to: CGPoint(x: 43.49, y: 171.1))
        bezier8Path.close()
        fillColor41.setFill()
        bezier8Path.fill()


        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.move(to: CGPoint(x: 54.51, y: 166.46))
        bezier9Path.addCurve(to: CGPoint(x: 56.33, y: 169.39), controlPoint1: CGPoint(x: 54.51, y: 167.57), controlPoint2: CGPoint(x: 54.6, y: 169.39))
        bezier9Path.addCurve(to: CGPoint(x: 58.15, y: 166.24), controlPoint1: CGPoint(x: 58.13, y: 169.39), controlPoint2: CGPoint(x: 58.15, y: 167.54))
        bezier9Path.addLine(to: CGPoint(x: 58.15, y: 162.78))
        bezier9Path.addCurve(to: CGPoint(x: 56.33, y: 159.31), controlPoint1: CGPoint(x: 58.15, y: 161.7), controlPoint2: CGPoint(x: 58.2, y: 159.31))
        bezier9Path.addCurve(to: CGPoint(x: 54.51, y: 162.71), controlPoint1: CGPoint(x: 54.35, y: 159.31), controlPoint2: CGPoint(x: 54.51, y: 161.67))
        bezier9Path.addLine(to: CGPoint(x: 54.51, y: 166.46))
        bezier9Path.close()
        bezier9Path.move(to: CGPoint(x: 51.92, y: 163.27))
        bezier9Path.addCurve(to: CGPoint(x: 56.33, y: 157.27), controlPoint1: CGPoint(x: 52.02, y: 159.83), controlPoint2: CGPoint(x: 52.29, y: 157.27))
        bezier9Path.addCurve(to: CGPoint(x: 60.74, y: 163.27), controlPoint1: CGPoint(x: 60.36, y: 157.27), controlPoint2: CGPoint(x: 60.63, y: 159.83))
        bezier9Path.addLine(to: CGPoint(x: 60.74, y: 165.2))
        bezier9Path.addCurve(to: CGPoint(x: 56.33, y: 171.43), controlPoint1: CGPoint(x: 60.74, y: 168.8), controlPoint2: CGPoint(x: 60.47, y: 171.43))
        bezier9Path.addCurve(to: CGPoint(x: 51.92, y: 165.2), controlPoint1: CGPoint(x: 52.19, y: 171.43), controlPoint2: CGPoint(x: 51.92, y: 168.8))
        bezier9Path.addLine(to: CGPoint(x: 51.92, y: 163.27))
        bezier9Path.close()
        fillColor41.setFill()
        bezier9Path.fill()


        //// Bezier 10 Drawing
        let bezier10Path = UIBezierPath()
        bezier10Path.move(to: CGPoint(x: 70.58, y: 166.3))
        bezier10Path.addCurve(to: CGPoint(x: 70.53, y: 167.07), controlPoint1: CGPoint(x: 70.57, y: 166.55), controlPoint2: CGPoint(x: 70.55, y: 166.82))
        bezier10Path.addCurve(to: CGPoint(x: 66.77, y: 171.43), controlPoint1: CGPoint(x: 70.4, y: 169.54), controlPoint2: CGPoint(x: 69.58, y: 171.43))
        bezier10Path.addCurve(to: CGPoint(x: 62.36, y: 165.2), controlPoint1: CGPoint(x: 62.63, y: 171.43), controlPoint2: CGPoint(x: 62.36, y: 168.8))
        bezier10Path.addLine(to: CGPoint(x: 62.36, y: 163.27))
        bezier10Path.addCurve(to: CGPoint(x: 66.77, y: 157.27), controlPoint1: CGPoint(x: 62.46, y: 159.83), controlPoint2: CGPoint(x: 62.73, y: 157.27))
        bezier10Path.addCurve(to: CGPoint(x: 70.46, y: 160.77), controlPoint1: CGPoint(x: 69.02, y: 157.31), controlPoint2: CGPoint(x: 70.28, y: 158.46))
        bezier10Path.addCurve(to: CGPoint(x: 70.51, y: 161.79), controlPoint1: CGPoint(x: 70.49, y: 161.11), controlPoint2: CGPoint(x: 70.53, y: 161.45))
        bezier10Path.addLine(to: CGPoint(x: 68.03, y: 161.79))
        bezier10Path.addCurve(to: CGPoint(x: 66.77, y: 159.31), controlPoint1: CGPoint(x: 67.92, y: 160.93), controlPoint2: CGPoint(x: 68.01, y: 159.31))
        bezier10Path.addCurve(to: CGPoint(x: 64.95, y: 162.71), controlPoint1: CGPoint(x: 64.79, y: 159.31), controlPoint2: CGPoint(x: 64.95, y: 161.67))
        bezier10Path.addLine(to: CGPoint(x: 64.95, y: 166.46))
        bezier10Path.addCurve(to: CGPoint(x: 66.77, y: 169.39), controlPoint1: CGPoint(x: 64.95, y: 167.57), controlPoint2: CGPoint(x: 65.04, y: 169.39))
        bezier10Path.addCurve(to: CGPoint(x: 68.05, y: 166.3), controlPoint1: CGPoint(x: 68.15, y: 169.39), controlPoint2: CGPoint(x: 67.99, y: 167.16))
        bezier10Path.addLine(to: CGPoint(x: 70.58, y: 166.3))
        bezier10Path.close()
        fillColor41.setFill()
        bezier10Path.fill()


        //// Bezier 11 Drawing
        let bezier11Path = UIBezierPath()
        bezier11Path.move(to: CGPoint(x: 74.85, y: 165.7))
        bezier11Path.addLine(to: CGPoint(x: 77.01, y: 165.7))
        bezier11Path.addLine(to: CGPoint(x: 76.33, y: 161.87))
        bezier11Path.addCurve(to: CGPoint(x: 76.07, y: 159.99), controlPoint1: CGPoint(x: 76.2, y: 161.24), controlPoint2: CGPoint(x: 76.15, y: 160.62))
        bezier11Path.addCurve(to: CGPoint(x: 75.98, y: 159.09), controlPoint1: CGPoint(x: 76.06, y: 159.69), controlPoint2: CGPoint(x: 76.02, y: 159.38))
        bezier11Path.addLine(to: CGPoint(x: 75.95, y: 159.09))
        bezier11Path.addCurve(to: CGPoint(x: 75.86, y: 159.99), controlPoint1: CGPoint(x: 75.91, y: 159.38), controlPoint2: CGPoint(x: 75.88, y: 159.69))
        bezier11Path.addCurve(to: CGPoint(x: 75.61, y: 161.87), controlPoint1: CGPoint(x: 75.78, y: 160.62), controlPoint2: CGPoint(x: 75.73, y: 161.24))
        bezier11Path.addLine(to: CGPoint(x: 74.85, y: 165.7))
        bezier11Path.close()
        bezier11Path.move(to: CGPoint(x: 71.09, y: 171.1))
        bezier11Path.addLine(to: CGPoint(x: 74.31, y: 157.6))
        bezier11Path.addLine(to: CGPoint(x: 77.71, y: 157.6))
        bezier11Path.addLine(to: CGPoint(x: 80.77, y: 171.1))
        bezier11Path.addLine(to: CGPoint(x: 78.07, y: 171.1))
        bezier11Path.addLine(to: CGPoint(x: 77.41, y: 167.68))
        bezier11Path.addLine(to: CGPoint(x: 74.45, y: 167.68))
        bezier11Path.addLine(to: CGPoint(x: 73.79, y: 171.1))
        bezier11Path.addLine(to: CGPoint(x: 71.09, y: 171.1))
        bezier11Path.close()
        fillColor41.setFill()
        bezier11Path.fill()


        //// Bezier 12 Drawing
        let bezier12Path = UIBezierPath()
        bezier12Path.move(to: CGPoint(x: 81.71, y: 171.1))
        bezier12Path.addLine(to: CGPoint(x: 81.71, y: 157.6))
        bezier12Path.addLine(to: CGPoint(x: 84.23, y: 157.6))
        bezier12Path.addLine(to: CGPoint(x: 84.23, y: 169.12))
        bezier12Path.addLine(to: CGPoint(x: 88.91, y: 169.12))
        bezier12Path.addLine(to: CGPoint(x: 88.91, y: 171.1))
        bezier12Path.addLine(to: CGPoint(x: 81.71, y: 171.1))
        bezier12Path.close()
        fillColor41.setFill()
        bezier12Path.fill()


        //// Rectangle 4 Drawing
        let rectangle4Path = UIBezierPath(rect: CGRect(x: 94.35, y: 157.6, width: 2.5, height: 13.5))
        fillColor41.setFill()
        rectangle4Path.fill()


        //// Bezier 13 Drawing
        let bezier13Path = UIBezierPath()
        bezier13Path.move(to: CGPoint(x: 104.89, y: 157.6))
        bezier13Path.addLine(to: CGPoint(x: 107.41, y: 157.6))
        bezier13Path.addLine(to: CGPoint(x: 107.41, y: 171.1))
        bezier13Path.addLine(to: CGPoint(x: 104.78, y: 171.1))
        bezier13Path.addLine(to: CGPoint(x: 102.82, y: 166.3))
        bezier13Path.addCurve(to: CGPoint(x: 101.02, y: 160.93), controlPoint1: CGPoint(x: 102.15, y: 164.69), controlPoint2: CGPoint(x: 101.61, y: 163.05))
        bezier13Path.addLine(to: CGPoint(x: 100.98, y: 160.93))
        bezier13Path.addCurve(to: CGPoint(x: 101.25, y: 164.78), controlPoint1: CGPoint(x: 101.07, y: 162.05), controlPoint2: CGPoint(x: 101.18, y: 163.41))
        bezier13Path.addCurve(to: CGPoint(x: 101.38, y: 168.56), controlPoint1: CGPoint(x: 101.33, y: 166.13), controlPoint2: CGPoint(x: 101.38, y: 167.48))
        bezier13Path.addLine(to: CGPoint(x: 101.38, y: 171.1))
        bezier13Path.addLine(to: CGPoint(x: 98.86, y: 171.1))
        bezier13Path.addLine(to: CGPoint(x: 98.86, y: 157.6))
        bezier13Path.addLine(to: CGPoint(x: 101.47, y: 157.6))
        bezier13Path.addLine(to: CGPoint(x: 103.43, y: 162.52))
        bezier13Path.addCurve(to: CGPoint(x: 105.23, y: 167.88), controlPoint1: CGPoint(x: 104.08, y: 164.08), controlPoint2: CGPoint(x: 104.62, y: 165.68))
        bezier13Path.addLine(to: CGPoint(x: 105.27, y: 167.88))
        bezier13Path.addCurve(to: CGPoint(x: 105.02, y: 164.04), controlPoint1: CGPoint(x: 105.18, y: 166.66), controlPoint2: CGPoint(x: 105.09, y: 165.34))
        bezier13Path.addCurve(to: CGPoint(x: 104.89, y: 160.25), controlPoint1: CGPoint(x: 104.95, y: 162.75), controlPoint2: CGPoint(x: 104.89, y: 161.45))
        bezier13Path.addLine(to: CGPoint(x: 104.89, y: 157.6))
        bezier13Path.close()
        fillColor41.setFill()
        bezier13Path.fill()


        //// Bezier 14 Drawing
        let bezier14Path = UIBezierPath()
        bezier14Path.move(to: CGPoint(x: 117.4, y: 166.3))
        bezier14Path.addCurve(to: CGPoint(x: 117.35, y: 167.07), controlPoint1: CGPoint(x: 117.39, y: 166.55), controlPoint2: CGPoint(x: 117.37, y: 166.82))
        bezier14Path.addCurve(to: CGPoint(x: 113.59, y: 171.43), controlPoint1: CGPoint(x: 117.22, y: 169.54), controlPoint2: CGPoint(x: 116.39, y: 171.43))
        bezier14Path.addCurve(to: CGPoint(x: 109.17, y: 165.2), controlPoint1: CGPoint(x: 109.44, y: 171.43), controlPoint2: CGPoint(x: 109.17, y: 168.8))
        bezier14Path.addLine(to: CGPoint(x: 109.17, y: 163.27))
        bezier14Path.addCurve(to: CGPoint(x: 113.59, y: 157.27), controlPoint1: CGPoint(x: 109.28, y: 159.83), controlPoint2: CGPoint(x: 109.55, y: 157.27))
        bezier14Path.addCurve(to: CGPoint(x: 117.28, y: 160.77), controlPoint1: CGPoint(x: 115.84, y: 157.31), controlPoint2: CGPoint(x: 117.1, y: 158.46))
        bezier14Path.addCurve(to: CGPoint(x: 117.33, y: 161.79), controlPoint1: CGPoint(x: 117.31, y: 161.11), controlPoint2: CGPoint(x: 117.35, y: 161.45))
        bezier14Path.addLine(to: CGPoint(x: 114.85, y: 161.79))
        bezier14Path.addCurve(to: CGPoint(x: 113.59, y: 159.31), controlPoint1: CGPoint(x: 114.74, y: 160.93), controlPoint2: CGPoint(x: 114.83, y: 159.31))
        bezier14Path.addCurve(to: CGPoint(x: 111.77, y: 162.71), controlPoint1: CGPoint(x: 111.6, y: 159.31), controlPoint2: CGPoint(x: 111.77, y: 161.67))
        bezier14Path.addLine(to: CGPoint(x: 111.77, y: 166.46))
        bezier14Path.addCurve(to: CGPoint(x: 113.59, y: 169.39), controlPoint1: CGPoint(x: 111.77, y: 167.57), controlPoint2: CGPoint(x: 111.86, y: 169.39))
        bezier14Path.addCurve(to: CGPoint(x: 114.86, y: 166.3), controlPoint1: CGPoint(x: 114.97, y: 169.39), controlPoint2: CGPoint(x: 114.81, y: 167.16))
        bezier14Path.addLine(to: CGPoint(x: 117.4, y: 166.3))
        bezier14Path.close()
        fillColor41.setFill()
        bezier14Path.fill()


        //// Rectangle 5 Drawing
        let rectangle5Path = UIBezierPath(rect: CGRect(x: 119, y: 157.6, width: 2.5, height: 13.5))
        fillColor41.setFill()
        rectangle5Path.fill()


        //// Bezier 15 Drawing
        let bezier15Path = UIBezierPath()
        bezier15Path.move(to: CGPoint(x: 127.21, y: 169.12))
        bezier15Path.addCurve(to: CGPoint(x: 129.6, y: 164.03), controlPoint1: CGPoint(x: 129.46, y: 169.12), controlPoint2: CGPoint(x: 129.6, y: 167.93))
        bezier15Path.addCurve(to: CGPoint(x: 127.77, y: 159.58), controlPoint1: CGPoint(x: 129.6, y: 160.84), controlPoint2: CGPoint(x: 129.28, y: 159.58))
        bezier15Path.addLine(to: CGPoint(x: 126.11, y: 159.58))
        bezier15Path.addLine(to: CGPoint(x: 126.11, y: 169.12))
        bezier15Path.addLine(to: CGPoint(x: 127.21, y: 169.12))
        bezier15Path.close()
        bezier15Path.move(to: CGPoint(x: 123.59, y: 171.1))
        bezier15Path.addLine(to: CGPoint(x: 123.59, y: 157.6))
        bezier15Path.addLine(to: CGPoint(x: 128.85, y: 157.6))
        bezier15Path.addCurve(to: CGPoint(x: 131.46, y: 159.13), controlPoint1: CGPoint(x: 129.46, y: 157.6), controlPoint2: CGPoint(x: 130.69, y: 157.87))
        bezier15Path.addCurve(to: CGPoint(x: 132.2, y: 163.79), controlPoint1: CGPoint(x: 132.04, y: 160.07), controlPoint2: CGPoint(x: 132.2, y: 161.56))
        bezier15Path.addCurve(to: CGPoint(x: 130.13, y: 170.74), controlPoint1: CGPoint(x: 132.2, y: 166.46), controlPoint2: CGPoint(x: 132.2, y: 169.54))
        bezier15Path.addCurve(to: CGPoint(x: 128.25, y: 171.1), controlPoint1: CGPoint(x: 129.57, y: 171.07), controlPoint2: CGPoint(x: 128.88, y: 171.1))
        bezier15Path.addLine(to: CGPoint(x: 123.59, y: 171.1))
        bezier15Path.close()
        fillColor41.setFill()
        bezier15Path.fill()


        //// Bezier 16 Drawing
        let bezier16Path = UIBezierPath()
        bezier16Path.move(to: CGPoint(x: 134, y: 171.1))
        bezier16Path.addLine(to: CGPoint(x: 134, y: 157.6))
        bezier16Path.addLine(to: CGPoint(x: 141.09, y: 157.6))
        bezier16Path.addLine(to: CGPoint(x: 141.09, y: 159.58))
        bezier16Path.addLine(to: CGPoint(x: 136.52, y: 159.58))
        bezier16Path.addLine(to: CGPoint(x: 136.52, y: 162.98))
        bezier16Path.addLine(to: CGPoint(x: 140.73, y: 162.98))
        bezier16Path.addLine(to: CGPoint(x: 140.73, y: 164.96))
        bezier16Path.addLine(to: CGPoint(x: 136.52, y: 164.96))
        bezier16Path.addLine(to: CGPoint(x: 136.52, y: 169.12))
        bezier16Path.addLine(to: CGPoint(x: 141.09, y: 169.12))
        bezier16Path.addLine(to: CGPoint(x: 141.09, y: 171.1))
        bezier16Path.addLine(to: CGPoint(x: 134, y: 171.1))
        bezier16Path.close()
        fillColor41.setFill()
        bezier16Path.fill()


        //// Bezier 17 Drawing
        let bezier17Path = UIBezierPath()
        bezier17Path.move(to: CGPoint(x: 148.65, y: 157.6))
        bezier17Path.addLine(to: CGPoint(x: 151.17, y: 157.6))
        bezier17Path.addLine(to: CGPoint(x: 151.17, y: 171.1))
        bezier17Path.addLine(to: CGPoint(x: 148.54, y: 171.1))
        bezier17Path.addLine(to: CGPoint(x: 146.58, y: 166.3))
        bezier17Path.addCurve(to: CGPoint(x: 144.78, y: 160.93), controlPoint1: CGPoint(x: 145.91, y: 164.69), controlPoint2: CGPoint(x: 145.37, y: 163.05))
        bezier17Path.addLine(to: CGPoint(x: 144.74, y: 160.93))
        bezier17Path.addCurve(to: CGPoint(x: 145.01, y: 164.78), controlPoint1: CGPoint(x: 144.83, y: 162.05), controlPoint2: CGPoint(x: 144.94, y: 163.41))
        bezier17Path.addCurve(to: CGPoint(x: 145.14, y: 168.56), controlPoint1: CGPoint(x: 145.08, y: 166.13), controlPoint2: CGPoint(x: 145.14, y: 167.48))
        bezier17Path.addLine(to: CGPoint(x: 145.14, y: 171.1))
        bezier17Path.addLine(to: CGPoint(x: 142.62, y: 171.1))
        bezier17Path.addLine(to: CGPoint(x: 142.62, y: 157.6))
        bezier17Path.addLine(to: CGPoint(x: 145.23, y: 157.6))
        bezier17Path.addLine(to: CGPoint(x: 147.19, y: 162.52))
        bezier17Path.addCurve(to: CGPoint(x: 148.99, y: 167.88), controlPoint1: CGPoint(x: 147.84, y: 164.08), controlPoint2: CGPoint(x: 148.38, y: 165.68))
        bezier17Path.addLine(to: CGPoint(x: 149.03, y: 167.88))
        bezier17Path.addCurve(to: CGPoint(x: 148.77, y: 164.04), controlPoint1: CGPoint(x: 148.94, y: 166.66), controlPoint2: CGPoint(x: 148.85, y: 165.34))
        bezier17Path.addCurve(to: CGPoint(x: 148.65, y: 160.25), controlPoint1: CGPoint(x: 148.7, y: 162.75), controlPoint2: CGPoint(x: 148.65, y: 161.45))
        bezier17Path.addLine(to: CGPoint(x: 148.65, y: 157.6))
        bezier17Path.close()
        fillColor41.setFill()
        bezier17Path.fill()


        //// Bezier 18 Drawing
        let bezier18Path = UIBezierPath()
        bezier18Path.move(to: CGPoint(x: 152.25, y: 157.6))
        bezier18Path.addLine(to: CGPoint(x: 160.66, y: 157.6))
        bezier18Path.addLine(to: CGPoint(x: 160.66, y: 159.58))
        bezier18Path.addLine(to: CGPoint(x: 157.72, y: 159.58))
        bezier18Path.addLine(to: CGPoint(x: 157.72, y: 171.1))
        bezier18Path.addLine(to: CGPoint(x: 155.2, y: 171.1))
        bezier18Path.addLine(to: CGPoint(x: 155.2, y: 159.58))
        bezier18Path.addLine(to: CGPoint(x: 152.25, y: 159.58))
        bezier18Path.addLine(to: CGPoint(x: 152.25, y: 157.6))
        bezier18Path.close()
        fillColor41.setFill()
        bezier18Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawIcs214LocalIncidentSM(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)


        //// Symbol Drawing
        let symbolRect = CGRect(x: frame.minX, y: frame.minY, width: 80, height: 80)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawIcs214LocalIncident(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawIcs214Fema(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor35 = UIColor(red: 1.000, green: 0.998, blue: 0.995, alpha: 1.000)
        let fillColor36 = UIColor(red: 0.195, green: 0.275, blue: 0.461, alpha: 1.000)
        let fillColor37 = UIColor(red: 0.927, green: 0.610, blue: 0.258, alpha: 1.000)
        let fillColor41 = UIColor(red: 0.799, green: 0.133, blue: 0.174, alpha: 1.000)

        //// Group 2
        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 28.83, y: 25.35, width: 142.15, height: 166.3))
        fillColor35.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 70.25, y: 9.45, width: 64.3, height: 31.8))
        fillColor35.setFill()
        rectangle2Path.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 155.35, y: 12.77))
        bezierPath.addLine(to: CGPoint(x: 144.11, y: 12.77))
        bezierPath.addLine(to: CGPoint(x: 144.11, y: 26.08))
        bezierPath.addLine(to: CGPoint(x: 145.09, y: 26.08))
        bezierPath.addCurve(to: CGPoint(x: 167.09, y: 47.97), controlPoint1: CGPoint(x: 157.24, y: 26.08), controlPoint2: CGPoint(x: 167.09, y: 35.88))
        bezierPath.addLine(to: CGPoint(x: 167.09, y: 164.52))
        bezierPath.addCurve(to: CGPoint(x: 145.09, y: 186.41), controlPoint1: CGPoint(x: 167.09, y: 176.61), controlPoint2: CGPoint(x: 157.24, y: 186.41))
        bezierPath.addLine(to: CGPoint(x: 54.91, y: 186.41))
        bezierPath.addCurve(to: CGPoint(x: 32.92, y: 164.52), controlPoint1: CGPoint(x: 42.77, y: 186.41), controlPoint2: CGPoint(x: 32.92, y: 176.61))
        bezierPath.addLine(to: CGPoint(x: 32.92, y: 47.97))
        bezierPath.addCurve(to: CGPoint(x: 54.91, y: 26.08), controlPoint1: CGPoint(x: 32.92, y: 35.88), controlPoint2: CGPoint(x: 42.77, y: 26.08))
        bezierPath.addLine(to: CGPoint(x: 57.06, y: 26.08))
        bezierPath.addLine(to: CGPoint(x: 57.06, y: 12.77))
        bezierPath.addLine(to: CGPoint(x: 44.66, y: 12.77))
        bezierPath.addCurve(to: CGPoint(x: 22.77, y: 34.66), controlPoint1: CGPoint(x: 32.57, y: 12.77), controlPoint2: CGPoint(x: 22.77, y: 22.58))
        bezierPath.addLine(to: CGPoint(x: 22.77, y: 176.24))
        bezierPath.addCurve(to: CGPoint(x: 44.66, y: 198.13), controlPoint1: CGPoint(x: 22.77, y: 188.33), controlPoint2: CGPoint(x: 32.57, y: 198.13))
        bezierPath.addLine(to: CGPoint(x: 155.35, y: 198.13))
        bezierPath.addCurve(to: CGPoint(x: 177.24, y: 176.24), controlPoint1: CGPoint(x: 167.44, y: 198.13), controlPoint2: CGPoint(x: 177.24, y: 188.33))
        bezierPath.addLine(to: CGPoint(x: 177.24, y: 34.66))
        bezierPath.addCurve(to: CGPoint(x: 155.35, y: 12.77), controlPoint1: CGPoint(x: 177.24, y: 22.58), controlPoint2: CGPoint(x: 167.44, y: 12.77))
        bezierPath.close()
        fillColor36.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 125.28, y: 30.32))
        bezier2Path.addCurve(to: CGPoint(x: 120.54, y: 36.86), controlPoint1: CGPoint(x: 125.28, y: 33.93), controlPoint2: CGPoint(x: 123.16, y: 36.86))
        bezier2Path.addLine(to: CGPoint(x: 82.45, y: 36.86))
        bezier2Path.addCurve(to: CGPoint(x: 77.71, y: 30.32), controlPoint1: CGPoint(x: 79.83, y: 36.86), controlPoint2: CGPoint(x: 77.71, y: 33.93))
        bezier2Path.addLine(to: CGPoint(x: 77.71, y: 15.83))
        bezier2Path.addCurve(to: CGPoint(x: 82.45, y: 9.29), controlPoint1: CGPoint(x: 77.71, y: 12.21), controlPoint2: CGPoint(x: 79.83, y: 9.29))
        bezier2Path.addLine(to: CGPoint(x: 120.54, y: 9.29))
        bezier2Path.addCurve(to: CGPoint(x: 125.28, y: 15.83), controlPoint1: CGPoint(x: 123.16, y: 9.29), controlPoint2: CGPoint(x: 125.28, y: 12.21))
        bezier2Path.addLine(to: CGPoint(x: 125.28, y: 30.32))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 130.79, y: 1.87))
        bezier2Path.addLine(to: CGPoint(x: 72.2, y: 1.87))
        bezier2Path.addCurve(to: CGPoint(x: 64.9, y: 11.92), controlPoint1: CGPoint(x: 68.17, y: 1.87), controlPoint2: CGPoint(x: 64.9, y: 6.37))
        bezier2Path.addLine(to: CGPoint(x: 64.9, y: 34.22))
        bezier2Path.addCurve(to: CGPoint(x: 72.2, y: 44.28), controlPoint1: CGPoint(x: 64.9, y: 39.78), controlPoint2: CGPoint(x: 68.17, y: 44.28))
        bezier2Path.addLine(to: CGPoint(x: 130.79, y: 44.28))
        bezier2Path.addCurve(to: CGPoint(x: 138.09, y: 34.22), controlPoint1: CGPoint(x: 134.82, y: 44.28), controlPoint2: CGPoint(x: 138.09, y: 39.78))
        bezier2Path.addLine(to: CGPoint(x: 138.09, y: 11.92))
        bezier2Path.addCurve(to: CGPoint(x: 130.79, y: 1.87), controlPoint1: CGPoint(x: 138.09, y: 6.37), controlPoint2: CGPoint(x: 134.82, y: 1.87))
        bezier2Path.close()
        fillColor37.setFill()
        bezier2Path.fill()


        //// Rectangle 3 Drawing
        let rectangle3Path = UIBezierPath(rect: CGRect(x: 69.9, y: 55.88, width: 7.7, height: 41.25))
        fillColor41.setFill()
        rectangle3Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 106.83, y: 82.42))
        bezier3Path.addCurve(to: CGPoint(x: 106.67, y: 84.79), controlPoint1: CGPoint(x: 106.78, y: 83.19), controlPoint2: CGPoint(x: 106.72, y: 84.02))
        bezier3Path.addCurve(to: CGPoint(x: 95.18, y: 98.09), controlPoint1: CGPoint(x: 106.28, y: 92.32), controlPoint2: CGPoint(x: 103.75, y: 98.09))
        bezier3Path.addCurve(to: CGPoint(x: 81.71, y: 79.07), controlPoint1: CGPoint(x: 82.53, y: 98.09), controlPoint2: CGPoint(x: 81.71, y: 90.07))
        bezier3Path.addLine(to: CGPoint(x: 81.71, y: 73.19))
        bezier3Path.addCurve(to: CGPoint(x: 95.18, y: 54.88), controlPoint1: CGPoint(x: 82.04, y: 62.69), controlPoint2: CGPoint(x: 82.86, y: 54.88))
        bezier3Path.addCurve(to: CGPoint(x: 106.45, y: 65.55), controlPoint1: CGPoint(x: 102.05, y: 54.99), controlPoint2: CGPoint(x: 105.9, y: 58.51))
        bezier3Path.addCurve(to: CGPoint(x: 106.61, y: 68.68), controlPoint1: CGPoint(x: 106.56, y: 66.59), controlPoint2: CGPoint(x: 106.67, y: 67.64))
        bezier3Path.addLine(to: CGPoint(x: 99.03, y: 68.68))
        bezier3Path.addCurve(to: CGPoint(x: 95.18, y: 61.09), controlPoint1: CGPoint(x: 98.7, y: 66.04), controlPoint2: CGPoint(x: 98.97, y: 61.09))
        bezier3Path.addCurve(to: CGPoint(x: 89.62, y: 71.48), controlPoint1: CGPoint(x: 89.13, y: 61.09), controlPoint2: CGPoint(x: 89.62, y: 68.29))
        bezier3Path.addLine(to: CGPoint(x: 89.62, y: 82.92))
        bezier3Path.addCurve(to: CGPoint(x: 95.18, y: 91.88), controlPoint1: CGPoint(x: 89.62, y: 86.33), controlPoint2: CGPoint(x: 89.9, y: 91.88))
        bezier3Path.addCurve(to: CGPoint(x: 99.08, y: 82.42), controlPoint1: CGPoint(x: 99.41, y: 91.88), controlPoint2: CGPoint(x: 98.92, y: 85.06))
        bezier3Path.addLine(to: CGPoint(x: 106.83, y: 82.42))
        bezier3Path.close()
        fillColor41.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 126.02, y: 68.41))
        bezier4Path.addCurve(to: CGPoint(x: 121.51, y: 61.09), controlPoint1: CGPoint(x: 126.07, y: 64.72), controlPoint2: CGPoint(x: 125.74, y: 61.09))
        bezier4Path.addCurve(to: CGPoint(x: 117.28, y: 64.94), controlPoint1: CGPoint(x: 118.93, y: 61.09), controlPoint2: CGPoint(x: 117.28, y: 62.14))
        bezier4Path.addCurve(to: CGPoint(x: 121.68, y: 70.82), controlPoint1: CGPoint(x: 117.28, y: 68.07), controlPoint2: CGPoint(x: 119.26, y: 69.28))
        bezier4Path.addCurve(to: CGPoint(x: 131.02, y: 77.59), controlPoint1: CGPoint(x: 124.2, y: 72.42), controlPoint2: CGPoint(x: 128.88, y: 75.5))
        bezier4Path.addCurve(to: CGPoint(x: 134.48, y: 86.22), controlPoint1: CGPoint(x: 133.66, y: 80.17), controlPoint2: CGPoint(x: 134.48, y: 82.64))
        bezier4Path.addCurve(to: CGPoint(x: 121.78, y: 98.09), controlPoint1: CGPoint(x: 134.48, y: 94.02), controlPoint2: CGPoint(x: 129.32, y: 98.09))
        bezier4Path.addCurve(to: CGPoint(x: 109.25, y: 85.56), controlPoint1: CGPoint(x: 112.55, y: 98.09), controlPoint2: CGPoint(x: 109.25, y: 92.93))
        bezier4Path.addLine(to: CGPoint(x: 109.25, y: 82.53))
        bezier4Path.addLine(to: CGPoint(x: 116.95, y: 82.53))
        bezier4Path.addLine(to: CGPoint(x: 116.95, y: 84.95))
        bezier4Path.addCurve(to: CGPoint(x: 121.78, y: 91.88), controlPoint1: CGPoint(x: 116.78, y: 88.97), controlPoint2: CGPoint(x: 117.99, y: 91.88))
        bezier4Path.addCurve(to: CGPoint(x: 126.57, y: 87.04), controlPoint1: CGPoint(x: 125.03, y: 91.88), controlPoint2: CGPoint(x: 126.57, y: 90.18))
        bezier4Path.addCurve(to: CGPoint(x: 123.49, y: 81.6), controlPoint1: CGPoint(x: 126.57, y: 84.62), controlPoint2: CGPoint(x: 125.47, y: 82.97))
        bezier4Path.addCurve(to: CGPoint(x: 111.34, y: 72.09), controlPoint1: CGPoint(x: 119.48, y: 78.47), controlPoint2: CGPoint(x: 114.47, y: 76.21))
        bezier4Path.addCurve(to: CGPoint(x: 109.36, y: 65.77), controlPoint1: CGPoint(x: 110.07, y: 70.22), controlPoint2: CGPoint(x: 109.36, y: 67.97))
        bezier4Path.addCurve(to: CGPoint(x: 121.45, y: 54.88), controlPoint1: CGPoint(x: 109.36, y: 58.73), controlPoint2: CGPoint(x: 113.32, y: 54.88))
        bezier4Path.addCurve(to: CGPoint(x: 133.44, y: 68.41), controlPoint1: CGPoint(x: 133.72, y: 54.88), controlPoint2: CGPoint(x: 133.39, y: 64.34))
        bezier4Path.addLine(to: CGPoint(x: 126.02, y: 68.41))
        bezier4Path.close()
        fillColor41.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 65.57, y: 146.1))
        bezier5Path.addCurve(to: CGPoint(x: 66.23, y: 139.12), controlPoint1: CGPoint(x: 65.63, y: 144.34), controlPoint2: CGPoint(x: 65.85, y: 141.48))
        bezier5Path.addCurve(to: CGPoint(x: 73.49, y: 127.52), controlPoint1: CGPoint(x: 66.73, y: 136.26), controlPoint2: CGPoint(x: 68.76, y: 132.52))
        bezier5Path.addLine(to: CGPoint(x: 77.23, y: 123.56))
        bezier5Path.addCurve(to: CGPoint(x: 81.02, y: 115.65), controlPoint1: CGPoint(x: 79.7, y: 120.87), controlPoint2: CGPoint(x: 81.02, y: 119.55))
        bezier5Path.addCurve(to: CGPoint(x: 77.34, y: 110.75), controlPoint1: CGPoint(x: 81.02, y: 111.91), controlPoint2: CGPoint(x: 79.54, y: 110.75))
        bezier5Path.addCurve(to: CGPoint(x: 73.76, y: 112.79), controlPoint1: CGPoint(x: 75.74, y: 110.75), controlPoint2: CGPoint(x: 74.31, y: 111.25))
        bezier5Path.addCurve(to: CGPoint(x: 73.16, y: 118.61), controlPoint1: CGPoint(x: 72.99, y: 114.6), controlPoint2: CGPoint(x: 73.21, y: 116.69))
        bezier5Path.addLine(to: CGPoint(x: 65.96, y: 118.61))
        bezier5Path.addLine(to: CGPoint(x: 65.96, y: 117.46))
        bezier5Path.addCurve(to: CGPoint(x: 77.67, y: 104.7), controlPoint1: CGPoint(x: 65.96, y: 113.83), controlPoint2: CGPoint(x: 65.79, y: 104.6))
        bezier5Path.addCurve(to: CGPoint(x: 88.72, y: 115.37), controlPoint1: CGPoint(x: 84.15, y: 104.76), controlPoint2: CGPoint(x: 88.72, y: 108.77))
        bezier5Path.addCurve(to: CGPoint(x: 83.82, y: 126.64), controlPoint1: CGPoint(x: 88.72, y: 119.93), controlPoint2: CGPoint(x: 87.01, y: 123.4))
        bezier5Path.addLine(to: CGPoint(x: 77.78, y: 132.91))
        bezier5Path.addCurve(to: CGPoint(x: 73.76, y: 140.06), controlPoint1: CGPoint(x: 76.18, y: 134.56), controlPoint2: CGPoint(x: 73.82, y: 137.25))
        bezier5Path.addLine(to: CGPoint(x: 88.11, y: 140.06))
        bezier5Path.addLine(to: CGPoint(x: 88.11, y: 146.1))
        bezier5Path.addLine(to: CGPoint(x: 65.57, y: 146.1))
        bezier5Path.close()
        fillColor41.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 101.64, y: 117.52))
        bezier6Path.addLine(to: CGPoint(x: 92.34, y: 117.52))
        bezier6Path.addLine(to: CGPoint(x: 92.34, y: 112.02))
        bezier6Path.addCurve(to: CGPoint(x: 103.67, y: 104.87), controlPoint1: CGPoint(x: 97.68, y: 111.96), controlPoint2: CGPoint(x: 102.13, y: 110.53))
        bezier6Path.addLine(to: CGPoint(x: 109.33, y: 104.87))
        bezier6Path.addLine(to: CGPoint(x: 109.33, y: 146.1))
        bezier6Path.addLine(to: CGPoint(x: 101.64, y: 146.1))
        bezier6Path.addLine(to: CGPoint(x: 101.64, y: 117.52))
        bezier6Path.close()
        fillColor41.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: 126.54, y: 131.7))
        bezier7Path.addLine(to: CGPoint(x: 126.54, y: 114.99))
        bezier7Path.addLine(to: CGPoint(x: 126.43, y: 114.99))
        bezier7Path.addLine(to: CGPoint(x: 118.84, y: 131.7))
        bezier7Path.addLine(to: CGPoint(x: 126.54, y: 131.7))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 134.24, y: 105.53))
        bezier7Path.addLine(to: CGPoint(x: 134.24, y: 131.7))
        bezier7Path.addLine(to: CGPoint(x: 137.75, y: 131.7))
        bezier7Path.addLine(to: CGPoint(x: 137.75, y: 137.75))
        bezier7Path.addLine(to: CGPoint(x: 134.24, y: 137.75))
        bezier7Path.addLine(to: CGPoint(x: 134.24, y: 146.1))
        bezier7Path.addLine(to: CGPoint(x: 126.54, y: 146.1))
        bezier7Path.addLine(to: CGPoint(x: 126.54, y: 137.75))
        bezier7Path.addLine(to: CGPoint(x: 113.18, y: 137.75))
        bezier7Path.addLine(to: CGPoint(x: 113.18, y: 131.7))
        bezier7Path.addLine(to: CGPoint(x: 125.66, y: 105.53))
        bezier7Path.addLine(to: CGPoint(x: 134.24, y: 105.53))
        bezier7Path.close()
        fillColor41.setFill()
        bezier7Path.fill()


        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: 75.19, y: 171.1))
        bezier8Path.addLine(to: CGPoint(x: 75.19, y: 152.36))
        bezier8Path.addLine(to: CGPoint(x: 85.12, y: 152.36))
        bezier8Path.addLine(to: CGPoint(x: 85.12, y: 155.11))
        bezier8Path.addLine(to: CGPoint(x: 78.69, y: 155.11))
        bezier8Path.addLine(to: CGPoint(x: 78.69, y: 159.86))
        bezier8Path.addLine(to: CGPoint(x: 84.72, y: 159.86))
        bezier8Path.addLine(to: CGPoint(x: 84.72, y: 162.6))
        bezier8Path.addLine(to: CGPoint(x: 78.69, y: 162.6))
        bezier8Path.addLine(to: CGPoint(x: 78.69, y: 171.1))
        bezier8Path.addLine(to: CGPoint(x: 75.19, y: 171.1))
        bezier8Path.close()
        fillColor41.setFill()
        bezier8Path.fill()


        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.move(to: CGPoint(x: 86.85, y: 171.1))
        bezier9Path.addLine(to: CGPoint(x: 86.85, y: 152.36))
        bezier9Path.addLine(to: CGPoint(x: 96.69, y: 152.36))
        bezier9Path.addLine(to: CGPoint(x: 96.69, y: 155.11))
        bezier9Path.addLine(to: CGPoint(x: 90.34, y: 155.11))
        bezier9Path.addLine(to: CGPoint(x: 90.34, y: 159.83))
        bezier9Path.addLine(to: CGPoint(x: 96.19, y: 159.83))
        bezier9Path.addLine(to: CGPoint(x: 96.19, y: 162.58))
        bezier9Path.addLine(to: CGPoint(x: 90.34, y: 162.58))
        bezier9Path.addLine(to: CGPoint(x: 90.34, y: 168.35))
        bezier9Path.addLine(to: CGPoint(x: 96.69, y: 168.35))
        bezier9Path.addLine(to: CGPoint(x: 96.69, y: 171.1))
        bezier9Path.addLine(to: CGPoint(x: 86.85, y: 171.1))
        bezier9Path.close()
        fillColor41.setFill()
        bezier9Path.fill()


        //// Bezier 10 Drawing
        let bezier10Path = UIBezierPath()
        bezier10Path.move(to: CGPoint(x: 102.29, y: 171.1))
        bezier10Path.addLine(to: CGPoint(x: 98.8, y: 171.1))
        bezier10Path.addLine(to: CGPoint(x: 98.8, y: 152.36))
        bezier10Path.addLine(to: CGPoint(x: 104.37, y: 152.36))
        bezier10Path.addLine(to: CGPoint(x: 106.24, y: 161.06))
        bezier10Path.addCurve(to: CGPoint(x: 106.89, y: 165.38), controlPoint1: CGPoint(x: 106.54, y: 162.48), controlPoint2: CGPoint(x: 106.74, y: 163.93))
        bezier10Path.addLine(to: CGPoint(x: 106.94, y: 165.38))
        bezier10Path.addCurve(to: CGPoint(x: 107.49, y: 161.06), controlPoint1: CGPoint(x: 107.12, y: 163.53), controlPoint2: CGPoint(x: 107.24, y: 162.28))
        bezier10Path.addLine(to: CGPoint(x: 109.37, y: 152.36))
        bezier10Path.addLine(to: CGPoint(x: 114.92, y: 152.36))
        bezier10Path.addLine(to: CGPoint(x: 114.92, y: 171.1))
        bezier10Path.addLine(to: CGPoint(x: 111.42, y: 171.1))
        bezier10Path.addLine(to: CGPoint(x: 111.42, y: 165.2))
        bezier10Path.addCurve(to: CGPoint(x: 111.72, y: 154.03), controlPoint1: CGPoint(x: 111.42, y: 161.48), controlPoint2: CGPoint(x: 111.49, y: 157.76))
        bezier10Path.addLine(to: CGPoint(x: 111.67, y: 154.03))
        bezier10Path.addLine(to: CGPoint(x: 107.92, y: 171.1))
        bezier10Path.addLine(to: CGPoint(x: 105.79, y: 171.1))
        bezier10Path.addLine(to: CGPoint(x: 102.12, y: 154.03))
        bezier10Path.addLine(to: CGPoint(x: 101.99, y: 154.03))
        bezier10Path.addCurve(to: CGPoint(x: 102.29, y: 165.2), controlPoint1: CGPoint(x: 102.22, y: 157.76), controlPoint2: CGPoint(x: 102.29, y: 161.48))
        bezier10Path.addLine(to: CGPoint(x: 102.29, y: 171.1))
        bezier10Path.close()
        fillColor41.setFill()
        bezier10Path.fill()


        //// Bezier 11 Drawing
        let bezier11Path = UIBezierPath()
        bezier11Path.move(to: CGPoint(x: 121.39, y: 163.6))
        bezier11Path.addLine(to: CGPoint(x: 124.39, y: 163.6))
        bezier11Path.addLine(to: CGPoint(x: 123.44, y: 158.28))
        bezier11Path.addCurve(to: CGPoint(x: 123.09, y: 155.68), controlPoint1: CGPoint(x: 123.27, y: 157.41), controlPoint2: CGPoint(x: 123.19, y: 156.56))
        bezier11Path.addCurve(to: CGPoint(x: 122.97, y: 154.43), controlPoint1: CGPoint(x: 123.07, y: 155.26), controlPoint2: CGPoint(x: 123.02, y: 154.83))
        bezier11Path.addLine(to: CGPoint(x: 122.92, y: 154.43))
        bezier11Path.addCurve(to: CGPoint(x: 122.79, y: 155.68), controlPoint1: CGPoint(x: 122.87, y: 154.83), controlPoint2: CGPoint(x: 122.82, y: 155.26))
        bezier11Path.addCurve(to: CGPoint(x: 122.44, y: 158.28), controlPoint1: CGPoint(x: 122.69, y: 156.56), controlPoint2: CGPoint(x: 122.62, y: 157.41))
        bezier11Path.addLine(to: CGPoint(x: 121.39, y: 163.6))
        bezier11Path.close()
        bezier11Path.move(to: CGPoint(x: 116.17, y: 171.1))
        bezier11Path.addLine(to: CGPoint(x: 120.65, y: 152.36))
        bezier11Path.addLine(to: CGPoint(x: 125.37, y: 152.36))
        bezier11Path.addLine(to: CGPoint(x: 129.62, y: 171.1))
        bezier11Path.addLine(to: CGPoint(x: 125.87, y: 171.1))
        bezier11Path.addLine(to: CGPoint(x: 124.94, y: 166.35))
        bezier11Path.addLine(to: CGPoint(x: 120.84, y: 166.35))
        bezier11Path.addLine(to: CGPoint(x: 119.92, y: 171.1))
        bezier11Path.addLine(to: CGPoint(x: 116.17, y: 171.1))
        bezier11Path.close()
        fillColor41.setFill()
        bezier11Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawIcs214FEMASM(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)


        //// Symbol Drawing
        let symbolRect = CGRect(x: frame.minX, y: frame.minY, width: 80, height: 80)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawIcs214Fema(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawIcs214StrikeTeam(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor35 = UIColor(red: 1.000, green: 0.998, blue: 0.995, alpha: 1.000)
        let fillColor36 = UIColor(red: 0.195, green: 0.275, blue: 0.461, alpha: 1.000)
        let fillColor37 = UIColor(red: 0.927, green: 0.610, blue: 0.258, alpha: 1.000)
        let fillColor41 = UIColor(red: 0.799, green: 0.133, blue: 0.174, alpha: 1.000)

        //// Group 2
        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 28.83, y: 25.35, width: 142.15, height: 166.3))
        fillColor35.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 70.25, y: 9.45, width: 64.3, height: 31.8))
        fillColor35.setFill()
        rectangle2Path.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 155.35, y: 12.78))
        bezierPath.addLine(to: CGPoint(x: 144.11, y: 12.78))
        bezierPath.addLine(to: CGPoint(x: 144.11, y: 26.09))
        bezierPath.addLine(to: CGPoint(x: 145.09, y: 26.09))
        bezierPath.addCurve(to: CGPoint(x: 167.09, y: 47.98), controlPoint1: CGPoint(x: 157.24, y: 26.09), controlPoint2: CGPoint(x: 167.09, y: 35.89))
        bezierPath.addLine(to: CGPoint(x: 167.09, y: 164.53))
        bezierPath.addCurve(to: CGPoint(x: 145.09, y: 186.42), controlPoint1: CGPoint(x: 167.09, y: 176.62), controlPoint2: CGPoint(x: 157.24, y: 186.42))
        bezierPath.addLine(to: CGPoint(x: 54.91, y: 186.42))
        bezierPath.addCurve(to: CGPoint(x: 32.92, y: 164.53), controlPoint1: CGPoint(x: 42.77, y: 186.42), controlPoint2: CGPoint(x: 32.92, y: 176.62))
        bezierPath.addLine(to: CGPoint(x: 32.92, y: 47.98))
        bezierPath.addCurve(to: CGPoint(x: 54.91, y: 26.09), controlPoint1: CGPoint(x: 32.92, y: 35.89), controlPoint2: CGPoint(x: 42.77, y: 26.09))
        bezierPath.addLine(to: CGPoint(x: 57.06, y: 26.09))
        bezierPath.addLine(to: CGPoint(x: 57.06, y: 12.78))
        bezierPath.addLine(to: CGPoint(x: 44.66, y: 12.78))
        bezierPath.addCurve(to: CGPoint(x: 22.77, y: 34.67), controlPoint1: CGPoint(x: 32.57, y: 12.78), controlPoint2: CGPoint(x: 22.77, y: 22.58))
        bezierPath.addLine(to: CGPoint(x: 22.77, y: 176.25))
        bezierPath.addCurve(to: CGPoint(x: 44.66, y: 198.14), controlPoint1: CGPoint(x: 22.77, y: 188.34), controlPoint2: CGPoint(x: 32.57, y: 198.14))
        bezierPath.addLine(to: CGPoint(x: 155.35, y: 198.14))
        bezierPath.addCurve(to: CGPoint(x: 177.24, y: 176.25), controlPoint1: CGPoint(x: 167.44, y: 198.14), controlPoint2: CGPoint(x: 177.24, y: 188.34))
        bezierPath.addLine(to: CGPoint(x: 177.24, y: 34.67))
        bezierPath.addCurve(to: CGPoint(x: 155.35, y: 12.78), controlPoint1: CGPoint(x: 177.24, y: 22.58), controlPoint2: CGPoint(x: 167.44, y: 12.78))
        bezierPath.close()
        fillColor36.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 125.28, y: 30.33))
        bezier2Path.addCurve(to: CGPoint(x: 120.54, y: 36.86), controlPoint1: CGPoint(x: 125.28, y: 33.94), controlPoint2: CGPoint(x: 123.16, y: 36.86))
        bezier2Path.addLine(to: CGPoint(x: 82.45, y: 36.86))
        bezier2Path.addCurve(to: CGPoint(x: 77.71, y: 30.33), controlPoint1: CGPoint(x: 79.83, y: 36.86), controlPoint2: CGPoint(x: 77.71, y: 33.94))
        bezier2Path.addLine(to: CGPoint(x: 77.71, y: 15.83))
        bezier2Path.addCurve(to: CGPoint(x: 82.45, y: 9.29), controlPoint1: CGPoint(x: 77.71, y: 12.22), controlPoint2: CGPoint(x: 79.83, y: 9.29))
        bezier2Path.addLine(to: CGPoint(x: 120.54, y: 9.29))
        bezier2Path.addCurve(to: CGPoint(x: 125.28, y: 15.83), controlPoint1: CGPoint(x: 123.16, y: 9.29), controlPoint2: CGPoint(x: 125.28, y: 12.22))
        bezier2Path.addLine(to: CGPoint(x: 125.28, y: 30.33))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 130.79, y: 1.87))
        bezier2Path.addLine(to: CGPoint(x: 72.2, y: 1.87))
        bezier2Path.addCurve(to: CGPoint(x: 64.9, y: 11.93), controlPoint1: CGPoint(x: 68.17, y: 1.87), controlPoint2: CGPoint(x: 64.9, y: 6.37))
        bezier2Path.addLine(to: CGPoint(x: 64.9, y: 34.23))
        bezier2Path.addCurve(to: CGPoint(x: 72.2, y: 44.29), controlPoint1: CGPoint(x: 64.9, y: 39.78), controlPoint2: CGPoint(x: 68.17, y: 44.29))
        bezier2Path.addLine(to: CGPoint(x: 130.79, y: 44.29))
        bezier2Path.addCurve(to: CGPoint(x: 138.09, y: 34.23), controlPoint1: CGPoint(x: 134.82, y: 44.29), controlPoint2: CGPoint(x: 138.09, y: 39.78))
        bezier2Path.addLine(to: CGPoint(x: 138.09, y: 11.93))
        bezier2Path.addCurve(to: CGPoint(x: 130.79, y: 1.87), controlPoint1: CGPoint(x: 138.09, y: 6.37), controlPoint2: CGPoint(x: 134.82, y: 1.87))
        bezier2Path.close()
        fillColor37.setFill()
        bezier2Path.fill()


        //// Rectangle 3 Drawing
        let rectangle3Path = UIBezierPath(rect: CGRect(x: 69.9, y: 55.88, width: 7.7, height: 41.25))
        fillColor41.setFill()
        rectangle3Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 106.83, y: 82.43))
        bezier3Path.addCurve(to: CGPoint(x: 106.67, y: 84.79), controlPoint1: CGPoint(x: 106.78, y: 83.2), controlPoint2: CGPoint(x: 106.72, y: 84.02))
        bezier3Path.addCurve(to: CGPoint(x: 95.18, y: 98.1), controlPoint1: CGPoint(x: 106.28, y: 92.32), controlPoint2: CGPoint(x: 103.75, y: 98.1))
        bezier3Path.addCurve(to: CGPoint(x: 81.71, y: 79.07), controlPoint1: CGPoint(x: 82.53, y: 98.1), controlPoint2: CGPoint(x: 81.71, y: 90.07))
        bezier3Path.addLine(to: CGPoint(x: 81.71, y: 73.19))
        bezier3Path.addCurve(to: CGPoint(x: 95.18, y: 54.89), controlPoint1: CGPoint(x: 82.04, y: 62.69), controlPoint2: CGPoint(x: 82.86, y: 54.89))
        bezier3Path.addCurve(to: CGPoint(x: 106.45, y: 65.55), controlPoint1: CGPoint(x: 102.05, y: 54.99), controlPoint2: CGPoint(x: 105.9, y: 58.51))
        bezier3Path.addCurve(to: CGPoint(x: 106.61, y: 68.69), controlPoint1: CGPoint(x: 106.56, y: 66.6), controlPoint2: CGPoint(x: 106.67, y: 67.64))
        bezier3Path.addLine(to: CGPoint(x: 99.03, y: 68.69))
        bezier3Path.addCurve(to: CGPoint(x: 95.18, y: 61.1), controlPoint1: CGPoint(x: 98.7, y: 66.05), controlPoint2: CGPoint(x: 98.97, y: 61.1))
        bezier3Path.addCurve(to: CGPoint(x: 89.62, y: 71.49), controlPoint1: CGPoint(x: 89.13, y: 61.1), controlPoint2: CGPoint(x: 89.62, y: 68.3))
        bezier3Path.addLine(to: CGPoint(x: 89.62, y: 82.92))
        bezier3Path.addCurve(to: CGPoint(x: 95.18, y: 91.89), controlPoint1: CGPoint(x: 89.62, y: 86.33), controlPoint2: CGPoint(x: 89.9, y: 91.89))
        bezier3Path.addCurve(to: CGPoint(x: 99.08, y: 82.43), controlPoint1: CGPoint(x: 99.41, y: 91.89), controlPoint2: CGPoint(x: 98.92, y: 85.07))
        bezier3Path.addLine(to: CGPoint(x: 106.83, y: 82.43))
        bezier3Path.close()
        fillColor41.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 126.02, y: 68.41))
        bezier4Path.addCurve(to: CGPoint(x: 121.51, y: 61.1), controlPoint1: CGPoint(x: 126.07, y: 64.73), controlPoint2: CGPoint(x: 125.74, y: 61.1))
        bezier4Path.addCurve(to: CGPoint(x: 117.28, y: 64.95), controlPoint1: CGPoint(x: 118.93, y: 61.1), controlPoint2: CGPoint(x: 117.28, y: 62.14))
        bezier4Path.addCurve(to: CGPoint(x: 121.68, y: 70.83), controlPoint1: CGPoint(x: 117.28, y: 68.08), controlPoint2: CGPoint(x: 119.26, y: 69.29))
        bezier4Path.addCurve(to: CGPoint(x: 131.02, y: 77.59), controlPoint1: CGPoint(x: 124.2, y: 72.42), controlPoint2: CGPoint(x: 128.88, y: 75.5))
        bezier4Path.addCurve(to: CGPoint(x: 134.48, y: 86.22), controlPoint1: CGPoint(x: 133.66, y: 80.17), controlPoint2: CGPoint(x: 134.48, y: 82.65))
        bezier4Path.addCurve(to: CGPoint(x: 121.78, y: 98.1), controlPoint1: CGPoint(x: 134.48, y: 94.03), controlPoint2: CGPoint(x: 129.32, y: 98.1))
        bezier4Path.addCurve(to: CGPoint(x: 109.25, y: 85.56), controlPoint1: CGPoint(x: 112.55, y: 98.1), controlPoint2: CGPoint(x: 109.25, y: 92.93))
        bezier4Path.addLine(to: CGPoint(x: 109.25, y: 82.54))
        bezier4Path.addLine(to: CGPoint(x: 116.95, y: 82.54))
        bezier4Path.addLine(to: CGPoint(x: 116.95, y: 84.96))
        bezier4Path.addCurve(to: CGPoint(x: 121.78, y: 91.89), controlPoint1: CGPoint(x: 116.78, y: 88.97), controlPoint2: CGPoint(x: 117.99, y: 91.89))
        bezier4Path.addCurve(to: CGPoint(x: 126.57, y: 87.05), controlPoint1: CGPoint(x: 125.03, y: 91.89), controlPoint2: CGPoint(x: 126.57, y: 90.18))
        bezier4Path.addCurve(to: CGPoint(x: 123.49, y: 81.6), controlPoint1: CGPoint(x: 126.57, y: 84.63), controlPoint2: CGPoint(x: 125.47, y: 82.98))
        bezier4Path.addCurve(to: CGPoint(x: 111.34, y: 72.09), controlPoint1: CGPoint(x: 119.48, y: 78.47), controlPoint2: CGPoint(x: 114.47, y: 76.22))
        bezier4Path.addCurve(to: CGPoint(x: 109.36, y: 65.77), controlPoint1: CGPoint(x: 110.07, y: 70.22), controlPoint2: CGPoint(x: 109.36, y: 67.97))
        bezier4Path.addCurve(to: CGPoint(x: 121.45, y: 54.89), controlPoint1: CGPoint(x: 109.36, y: 58.73), controlPoint2: CGPoint(x: 113.32, y: 54.89))
        bezier4Path.addCurve(to: CGPoint(x: 133.44, y: 68.41), controlPoint1: CGPoint(x: 133.72, y: 54.89), controlPoint2: CGPoint(x: 133.39, y: 64.34))
        bezier4Path.addLine(to: CGPoint(x: 126.02, y: 68.41))
        bezier4Path.close()
        fillColor41.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 65.57, y: 146.11))
        bezier5Path.addCurve(to: CGPoint(x: 66.23, y: 139.13), controlPoint1: CGPoint(x: 65.63, y: 144.35), controlPoint2: CGPoint(x: 65.85, y: 141.49))
        bezier5Path.addCurve(to: CGPoint(x: 73.49, y: 127.53), controlPoint1: CGPoint(x: 66.73, y: 136.27), controlPoint2: CGPoint(x: 68.76, y: 132.53))
        bezier5Path.addLine(to: CGPoint(x: 77.23, y: 123.57))
        bezier5Path.addCurve(to: CGPoint(x: 81.02, y: 115.65), controlPoint1: CGPoint(x: 79.7, y: 120.87), controlPoint2: CGPoint(x: 81.02, y: 119.55))
        bezier5Path.addCurve(to: CGPoint(x: 77.34, y: 110.76), controlPoint1: CGPoint(x: 81.02, y: 111.91), controlPoint2: CGPoint(x: 79.54, y: 110.76))
        bezier5Path.addCurve(to: CGPoint(x: 73.76, y: 112.79), controlPoint1: CGPoint(x: 75.74, y: 110.76), controlPoint2: CGPoint(x: 74.31, y: 111.25))
        bezier5Path.addCurve(to: CGPoint(x: 73.16, y: 118.62), controlPoint1: CGPoint(x: 72.99, y: 114.61), controlPoint2: CGPoint(x: 73.21, y: 116.69))
        bezier5Path.addLine(to: CGPoint(x: 65.96, y: 118.62))
        bezier5Path.addLine(to: CGPoint(x: 65.96, y: 117.47))
        bezier5Path.addCurve(to: CGPoint(x: 77.67, y: 104.71), controlPoint1: CGPoint(x: 65.96, y: 113.84), controlPoint2: CGPoint(x: 65.79, y: 104.6))
        bezier5Path.addCurve(to: CGPoint(x: 88.72, y: 115.38), controlPoint1: CGPoint(x: 84.15, y: 104.77), controlPoint2: CGPoint(x: 88.72, y: 108.78))
        bezier5Path.addCurve(to: CGPoint(x: 83.82, y: 126.65), controlPoint1: CGPoint(x: 88.72, y: 119.94), controlPoint2: CGPoint(x: 87.01, y: 123.4))
        bezier5Path.addLine(to: CGPoint(x: 77.78, y: 132.91))
        bezier5Path.addCurve(to: CGPoint(x: 73.76, y: 140.06), controlPoint1: CGPoint(x: 76.18, y: 134.56), controlPoint2: CGPoint(x: 73.82, y: 137.26))
        bezier5Path.addLine(to: CGPoint(x: 88.11, y: 140.06))
        bezier5Path.addLine(to: CGPoint(x: 88.11, y: 146.11))
        bezier5Path.addLine(to: CGPoint(x: 65.57, y: 146.11))
        bezier5Path.close()
        fillColor41.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 101.64, y: 117.52))
        bezier6Path.addLine(to: CGPoint(x: 92.34, y: 117.52))
        bezier6Path.addLine(to: CGPoint(x: 92.34, y: 112.02))
        bezier6Path.addCurve(to: CGPoint(x: 103.67, y: 104.88), controlPoint1: CGPoint(x: 97.68, y: 111.97), controlPoint2: CGPoint(x: 102.13, y: 110.54))
        bezier6Path.addLine(to: CGPoint(x: 109.33, y: 104.88))
        bezier6Path.addLine(to: CGPoint(x: 109.33, y: 146.11))
        bezier6Path.addLine(to: CGPoint(x: 101.64, y: 146.11))
        bezier6Path.addLine(to: CGPoint(x: 101.64, y: 117.52))
        bezier6Path.close()
        fillColor41.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: 126.54, y: 131.7))
        bezier7Path.addLine(to: CGPoint(x: 126.54, y: 114.99))
        bezier7Path.addLine(to: CGPoint(x: 126.43, y: 114.99))
        bezier7Path.addLine(to: CGPoint(x: 118.84, y: 131.7))
        bezier7Path.addLine(to: CGPoint(x: 126.54, y: 131.7))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 134.24, y: 105.53))
        bezier7Path.addLine(to: CGPoint(x: 134.24, y: 131.7))
        bezier7Path.addLine(to: CGPoint(x: 137.75, y: 131.7))
        bezier7Path.addLine(to: CGPoint(x: 137.75, y: 137.75))
        bezier7Path.addLine(to: CGPoint(x: 134.24, y: 137.75))
        bezier7Path.addLine(to: CGPoint(x: 134.24, y: 146.11))
        bezier7Path.addLine(to: CGPoint(x: 126.54, y: 146.11))
        bezier7Path.addLine(to: CGPoint(x: 126.54, y: 137.75))
        bezier7Path.addLine(to: CGPoint(x: 113.18, y: 137.75))
        bezier7Path.addLine(to: CGPoint(x: 113.18, y: 131.7))
        bezier7Path.addLine(to: CGPoint(x: 125.66, y: 105.53))
        bezier7Path.addLine(to: CGPoint(x: 134.24, y: 105.53))
        bezier7Path.close()
        fillColor41.setFill()
        bezier7Path.fill()


        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: 48.4, y: 159.1))
        bezier8Path.addCurve(to: CGPoint(x: 46.51, y: 156.05), controlPoint1: CGPoint(x: 48.42, y: 157.56), controlPoint2: CGPoint(x: 48.28, y: 156.05))
        bezier8Path.addCurve(to: CGPoint(x: 44.74, y: 157.66), controlPoint1: CGPoint(x: 45.43, y: 156.05), controlPoint2: CGPoint(x: 44.74, y: 156.48))
        bezier8Path.addCurve(to: CGPoint(x: 46.58, y: 160.12), controlPoint1: CGPoint(x: 44.74, y: 158.97), controlPoint2: CGPoint(x: 45.57, y: 159.47))
        bezier8Path.addCurve(to: CGPoint(x: 50.49, y: 162.94), controlPoint1: CGPoint(x: 47.64, y: 160.78), controlPoint2: CGPoint(x: 49.59, y: 162.07))
        bezier8Path.addCurve(to: CGPoint(x: 51.94, y: 166.56), controlPoint1: CGPoint(x: 51.59, y: 164.03), controlPoint2: CGPoint(x: 51.94, y: 165.06))
        bezier8Path.addCurve(to: CGPoint(x: 46.62, y: 171.52), controlPoint1: CGPoint(x: 51.94, y: 169.82), controlPoint2: CGPoint(x: 49.77, y: 171.52))
        bezier8Path.addCurve(to: CGPoint(x: 41.38, y: 166.28), controlPoint1: CGPoint(x: 42.76, y: 171.52), controlPoint2: CGPoint(x: 41.38, y: 169.36))
        bezier8Path.addLine(to: CGPoint(x: 41.38, y: 165.01))
        bezier8Path.addLine(to: CGPoint(x: 44.6, y: 165.01))
        bezier8Path.addLine(to: CGPoint(x: 44.6, y: 166.03))
        bezier8Path.addCurve(to: CGPoint(x: 46.62, y: 168.92), controlPoint1: CGPoint(x: 44.53, y: 167.7), controlPoint2: CGPoint(x: 45.04, y: 168.92))
        bezier8Path.addCurve(to: CGPoint(x: 48.63, y: 166.9), controlPoint1: CGPoint(x: 47.98, y: 168.92), controlPoint2: CGPoint(x: 48.63, y: 168.21))
        bezier8Path.addCurve(to: CGPoint(x: 47.34, y: 164.62), controlPoint1: CGPoint(x: 48.63, y: 165.89), controlPoint2: CGPoint(x: 48.17, y: 165.2))
        bezier8Path.addCurve(to: CGPoint(x: 42.26, y: 160.65), controlPoint1: CGPoint(x: 45.66, y: 163.31), controlPoint2: CGPoint(x: 43.57, y: 162.37))
        bezier8Path.addCurve(to: CGPoint(x: 41.43, y: 158), controlPoint1: CGPoint(x: 41.73, y: 159.86), controlPoint2: CGPoint(x: 41.43, y: 158.92))
        bezier8Path.addCurve(to: CGPoint(x: 46.49, y: 153.45), controlPoint1: CGPoint(x: 41.43, y: 155.06), controlPoint2: CGPoint(x: 43.08, y: 153.45))
        bezier8Path.addCurve(to: CGPoint(x: 51.5, y: 159.1), controlPoint1: CGPoint(x: 51.62, y: 153.45), controlPoint2: CGPoint(x: 51.48, y: 157.4))
        bezier8Path.addLine(to: CGPoint(x: 48.4, y: 159.1))
        bezier8Path.close()
        fillColor41.setFill()
        bezier8Path.fill()


        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.move(to: CGPoint(x: 52.86, y: 153.86))
        bezier9Path.addLine(to: CGPoint(x: 63.6, y: 153.86))
        bezier9Path.addLine(to: CGPoint(x: 63.6, y: 156.39))
        bezier9Path.addLine(to: CGPoint(x: 59.85, y: 156.39))
        bezier9Path.addLine(to: CGPoint(x: 59.85, y: 171.11))
        bezier9Path.addLine(to: CGPoint(x: 56.63, y: 171.11))
        bezier9Path.addLine(to: CGPoint(x: 56.63, y: 156.39))
        bezier9Path.addLine(to: CGPoint(x: 52.86, y: 156.39))
        bezier9Path.addLine(to: CGPoint(x: 52.86, y: 153.86))
        bezier9Path.close()
        fillColor41.setFill()
        bezier9Path.fill()


        //// Bezier 10 Drawing
        let bezier10Path = UIBezierPath()
        bezier10Path.move(to: CGPoint(x: 68.13, y: 161.15))
        bezier10Path.addLine(to: CGPoint(x: 70.66, y: 161.15))
        bezier10Path.addCurve(to: CGPoint(x: 72.55, y: 158.67), controlPoint1: CGPoint(x: 71.72, y: 161.08), controlPoint2: CGPoint(x: 72.55, y: 160.39))
        bezier10Path.addCurve(to: CGPoint(x: 70.52, y: 156.39), controlPoint1: CGPoint(x: 72.55, y: 156.74), controlPoint2: CGPoint(x: 71.74, y: 156.41))
        bezier10Path.addLine(to: CGPoint(x: 68.13, y: 156.39))
        bezier10Path.addLine(to: CGPoint(x: 68.13, y: 161.15))
        bezier10Path.close()
        bezier10Path.move(to: CGPoint(x: 68.13, y: 163.68))
        bezier10Path.addLine(to: CGPoint(x: 68.13, y: 171.11))
        bezier10Path.addLine(to: CGPoint(x: 64.91, y: 171.11))
        bezier10Path.addLine(to: CGPoint(x: 64.91, y: 153.86))
        bezier10Path.addLine(to: CGPoint(x: 71, y: 153.86))
        bezier10Path.addCurve(to: CGPoint(x: 75.9, y: 158), controlPoint1: CGPoint(x: 73.79, y: 153.86), controlPoint2: CGPoint(x: 75.9, y: 154.83))
        bezier10Path.addCurve(to: CGPoint(x: 73.26, y: 162.16), controlPoint1: CGPoint(x: 75.9, y: 159.89), controlPoint2: CGPoint(x: 75.42, y: 161.86))
        bezier10Path.addLine(to: CGPoint(x: 73.26, y: 162.21))
        bezier10Path.addCurve(to: CGPoint(x: 75.74, y: 165.34), controlPoint1: CGPoint(x: 75.17, y: 162.46), controlPoint2: CGPoint(x: 75.74, y: 163.68))
        bezier10Path.addCurve(to: CGPoint(x: 76.43, y: 170.79), controlPoint1: CGPoint(x: 75.74, y: 166.05), controlPoint2: CGPoint(x: 75.65, y: 170.28))
        bezier10Path.addLine(to: CGPoint(x: 76.43, y: 171.11))
        bezier10Path.addLine(to: CGPoint(x: 72.89, y: 171.11))
        bezier10Path.addCurve(to: CGPoint(x: 72.55, y: 166.74), controlPoint1: CGPoint(x: 72.5, y: 170), controlPoint2: CGPoint(x: 72.57, y: 167.89))
        bezier10Path.addCurve(to: CGPoint(x: 71.44, y: 163.91), controlPoint1: CGPoint(x: 72.52, y: 165.68), controlPoint2: CGPoint(x: 72.55, y: 164.23))
        bezier10Path.addCurve(to: CGPoint(x: 68.7, y: 163.68), controlPoint1: CGPoint(x: 70.57, y: 163.66), controlPoint2: CGPoint(x: 69.62, y: 163.68))
        bezier10Path.addLine(to: CGPoint(x: 68.13, y: 163.68))
        bezier10Path.close()
        fillColor41.setFill()
        bezier10Path.fill()


        //// Rectangle 4 Drawing
        let rectangle4Path = UIBezierPath(rect: CGRect(x: 78.45, y: 153.88, width: 3.2, height: 17.25))
        fillColor41.setFill()
        rectangle4Path.fill()


        //// Bezier 11 Drawing
        let bezier11Path = UIBezierPath()
        bezier11Path.move(to: CGPoint(x: 84.25, y: 171.11))
        bezier11Path.addLine(to: CGPoint(x: 84.25, y: 153.86))
        bezier11Path.addLine(to: CGPoint(x: 87.47, y: 153.86))
        bezier11Path.addLine(to: CGPoint(x: 87.47, y: 161.52))
        bezier11Path.addLine(to: CGPoint(x: 87.52, y: 161.52))
        bezier11Path.addCurve(to: CGPoint(x: 89.54, y: 157.38), controlPoint1: CGPoint(x: 88.02, y: 160.16), controlPoint2: CGPoint(x: 88.85, y: 158.65))
        bezier11Path.addLine(to: CGPoint(x: 91.43, y: 153.86))
        bezier11Path.addLine(to: CGPoint(x: 95.06, y: 153.86))
        bezier11Path.addLine(to: CGPoint(x: 90.81, y: 161.27))
        bezier11Path.addLine(to: CGPoint(x: 95.27, y: 171.11))
        bezier11Path.addLine(to: CGPoint(x: 91.64, y: 171.11))
        bezier11Path.addLine(to: CGPoint(x: 88.6, y: 164.3))
        bezier11Path.addLine(to: CGPoint(x: 87.47, y: 166.16))
        bezier11Path.addLine(to: CGPoint(x: 87.47, y: 171.11))
        bezier11Path.addLine(to: CGPoint(x: 84.25, y: 171.11))
        bezier11Path.close()
        fillColor41.setFill()
        bezier11Path.fill()


        //// Bezier 12 Drawing
        let bezier12Path = UIBezierPath()
        bezier12Path.move(to: CGPoint(x: 96.37, y: 171.11))
        bezier12Path.addLine(to: CGPoint(x: 96.37, y: 153.86))
        bezier12Path.addLine(to: CGPoint(x: 105.43, y: 153.86))
        bezier12Path.addLine(to: CGPoint(x: 105.43, y: 156.39))
        bezier12Path.addLine(to: CGPoint(x: 99.59, y: 156.39))
        bezier12Path.addLine(to: CGPoint(x: 99.59, y: 160.74))
        bezier12Path.addLine(to: CGPoint(x: 104.98, y: 160.74))
        bezier12Path.addLine(to: CGPoint(x: 104.98, y: 163.27))
        bezier12Path.addLine(to: CGPoint(x: 99.59, y: 163.27))
        bezier12Path.addLine(to: CGPoint(x: 99.59, y: 168.58))
        bezier12Path.addLine(to: CGPoint(x: 105.43, y: 168.58))
        bezier12Path.addLine(to: CGPoint(x: 105.43, y: 171.11))
        bezier12Path.addLine(to: CGPoint(x: 96.37, y: 171.11))
        bezier12Path.close()
        fillColor41.setFill()
        bezier12Path.fill()


        //// Bezier 13 Drawing
        let bezier13Path = UIBezierPath()
        bezier13Path.move(to: CGPoint(x: 111.39, y: 153.86))
        bezier13Path.addLine(to: CGPoint(x: 122.13, y: 153.86))
        bezier13Path.addLine(to: CGPoint(x: 122.13, y: 156.39))
        bezier13Path.addLine(to: CGPoint(x: 118.38, y: 156.39))
        bezier13Path.addLine(to: CGPoint(x: 118.38, y: 171.11))
        bezier13Path.addLine(to: CGPoint(x: 115.16, y: 171.11))
        bezier13Path.addLine(to: CGPoint(x: 115.16, y: 156.39))
        bezier13Path.addLine(to: CGPoint(x: 111.39, y: 156.39))
        bezier13Path.addLine(to: CGPoint(x: 111.39, y: 153.86))
        bezier13Path.close()
        fillColor41.setFill()
        bezier13Path.fill()


        //// Bezier 14 Drawing
        let bezier14Path = UIBezierPath()
        bezier14Path.move(to: CGPoint(x: 123.4, y: 171.11))
        bezier14Path.addLine(to: CGPoint(x: 123.4, y: 153.86))
        bezier14Path.addLine(to: CGPoint(x: 132.46, y: 153.86))
        bezier14Path.addLine(to: CGPoint(x: 132.46, y: 156.39))
        bezier14Path.addLine(to: CGPoint(x: 126.62, y: 156.39))
        bezier14Path.addLine(to: CGPoint(x: 126.62, y: 160.74))
        bezier14Path.addLine(to: CGPoint(x: 132, y: 160.74))
        bezier14Path.addLine(to: CGPoint(x: 132, y: 163.27))
        bezier14Path.addLine(to: CGPoint(x: 126.62, y: 163.27))
        bezier14Path.addLine(to: CGPoint(x: 126.62, y: 168.58))
        bezier14Path.addLine(to: CGPoint(x: 132.46, y: 168.58))
        bezier14Path.addLine(to: CGPoint(x: 132.46, y: 171.11))
        bezier14Path.addLine(to: CGPoint(x: 123.4, y: 171.11))
        bezier14Path.close()
        fillColor41.setFill()
        bezier14Path.fill()


        //// Bezier 15 Drawing
        let bezier15Path = UIBezierPath()
        bezier15Path.move(to: CGPoint(x: 137.87, y: 164.21))
        bezier15Path.addLine(to: CGPoint(x: 140.63, y: 164.21))
        bezier15Path.addLine(to: CGPoint(x: 139.75, y: 159.31))
        bezier15Path.addCurve(to: CGPoint(x: 139.43, y: 156.92), controlPoint1: CGPoint(x: 139.59, y: 158.51), controlPoint2: CGPoint(x: 139.52, y: 157.73))
        bezier15Path.addCurve(to: CGPoint(x: 139.32, y: 155.77), controlPoint1: CGPoint(x: 139.41, y: 156.53), controlPoint2: CGPoint(x: 139.36, y: 156.14))
        bezier15Path.addLine(to: CGPoint(x: 139.27, y: 155.77))
        bezier15Path.addCurve(to: CGPoint(x: 139.15, y: 156.92), controlPoint1: CGPoint(x: 139.22, y: 156.14), controlPoint2: CGPoint(x: 139.18, y: 156.53))
        bezier15Path.addCurve(to: CGPoint(x: 138.83, y: 159.31), controlPoint1: CGPoint(x: 139.06, y: 157.73), controlPoint2: CGPoint(x: 138.99, y: 158.51))
        bezier15Path.addLine(to: CGPoint(x: 137.87, y: 164.21))
        bezier15Path.close()
        bezier15Path.move(to: CGPoint(x: 133.06, y: 171.11))
        bezier15Path.addLine(to: CGPoint(x: 137.18, y: 153.86))
        bezier15Path.addLine(to: CGPoint(x: 141.52, y: 153.86))
        bezier15Path.addLine(to: CGPoint(x: 145.43, y: 171.11))
        bezier15Path.addLine(to: CGPoint(x: 141.98, y: 171.11))
        bezier15Path.addLine(to: CGPoint(x: 141.13, y: 166.74))
        bezier15Path.addLine(to: CGPoint(x: 137.36, y: 166.74))
        bezier15Path.addLine(to: CGPoint(x: 136.51, y: 171.11))
        bezier15Path.addLine(to: CGPoint(x: 133.06, y: 171.11))
        bezier15Path.close()
        fillColor41.setFill()
        bezier15Path.fill()


        //// Bezier 16 Drawing
        let bezier16Path = UIBezierPath()
        bezier16Path.move(to: CGPoint(x: 149.83, y: 171.11))
        bezier16Path.addLine(to: CGPoint(x: 146.61, y: 171.11))
        bezier16Path.addLine(to: CGPoint(x: 146.61, y: 153.86))
        bezier16Path.addLine(to: CGPoint(x: 151.73, y: 153.86))
        bezier16Path.addLine(to: CGPoint(x: 153.46, y: 161.86))
        bezier16Path.addCurve(to: CGPoint(x: 154.06, y: 165.84), controlPoint1: CGPoint(x: 153.73, y: 163.17), controlPoint2: CGPoint(x: 153.92, y: 164.51))
        bezier16Path.addLine(to: CGPoint(x: 154.1, y: 165.84))
        bezier16Path.addCurve(to: CGPoint(x: 154.61, y: 161.86), controlPoint1: CGPoint(x: 154.27, y: 164.14), controlPoint2: CGPoint(x: 154.38, y: 162.99))
        bezier16Path.addLine(to: CGPoint(x: 156.33, y: 153.86))
        bezier16Path.addLine(to: CGPoint(x: 161.44, y: 153.86))
        bezier16Path.addLine(to: CGPoint(x: 161.44, y: 171.11))
        bezier16Path.addLine(to: CGPoint(x: 158.22, y: 171.11))
        bezier16Path.addLine(to: CGPoint(x: 158.22, y: 165.68))
        bezier16Path.addCurve(to: CGPoint(x: 158.5, y: 155.4), controlPoint1: CGPoint(x: 158.22, y: 162.25), controlPoint2: CGPoint(x: 158.29, y: 158.83))
        bezier16Path.addLine(to: CGPoint(x: 158.45, y: 155.4))
        bezier16Path.addLine(to: CGPoint(x: 155, y: 171.11))
        bezier16Path.addLine(to: CGPoint(x: 153.05, y: 171.11))
        bezier16Path.addLine(to: CGPoint(x: 149.66, y: 155.4))
        bezier16Path.addLine(to: CGPoint(x: 149.55, y: 155.4))
        bezier16Path.addCurve(to: CGPoint(x: 149.83, y: 165.68), controlPoint1: CGPoint(x: 149.76, y: 158.83), controlPoint2: CGPoint(x: 149.83, y: 162.25))
        bezier16Path.addLine(to: CGPoint(x: 149.83, y: 171.11))
        bezier16Path.close()
        fillColor41.setFill()
        bezier16Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawIcs214StrikeTeamSM(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Frames
        _ = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)


        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawIcs214StrikeTeam(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawIcs214Other(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor35 = UIColor(red: 1.000, green: 0.998, blue: 0.995, alpha: 1.000)
        let fillColor36 = UIColor(red: 0.195, green: 0.275, blue: 0.461, alpha: 1.000)
        let fillColor37 = UIColor(red: 0.927, green: 0.610, blue: 0.258, alpha: 1.000)
        let fillColor41 = UIColor(red: 0.799, green: 0.133, blue: 0.174, alpha: 1.000)

        //// Group 2
        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 28.83, y: 25.35, width: 142.15, height: 166.3))
        fillColor35.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 70.25, y: 9.45, width: 64.3, height: 31.8))
        fillColor35.setFill()
        rectangle2Path.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 155.35, y: 12.78))
        bezierPath.addLine(to: CGPoint(x: 144.11, y: 12.78))
        bezierPath.addLine(to: CGPoint(x: 144.11, y: 26.09))
        bezierPath.addLine(to: CGPoint(x: 145.09, y: 26.09))
        bezierPath.addCurve(to: CGPoint(x: 167.09, y: 47.98), controlPoint1: CGPoint(x: 157.24, y: 26.09), controlPoint2: CGPoint(x: 167.09, y: 35.89))
        bezierPath.addLine(to: CGPoint(x: 167.09, y: 164.53))
        bezierPath.addCurve(to: CGPoint(x: 145.09, y: 186.42), controlPoint1: CGPoint(x: 167.09, y: 176.62), controlPoint2: CGPoint(x: 157.24, y: 186.42))
        bezierPath.addLine(to: CGPoint(x: 54.91, y: 186.42))
        bezierPath.addCurve(to: CGPoint(x: 32.92, y: 164.53), controlPoint1: CGPoint(x: 42.77, y: 186.42), controlPoint2: CGPoint(x: 32.92, y: 176.62))
        bezierPath.addLine(to: CGPoint(x: 32.92, y: 47.98))
        bezierPath.addCurve(to: CGPoint(x: 54.91, y: 26.09), controlPoint1: CGPoint(x: 32.92, y: 35.89), controlPoint2: CGPoint(x: 42.77, y: 26.09))
        bezierPath.addLine(to: CGPoint(x: 57.06, y: 26.09))
        bezierPath.addLine(to: CGPoint(x: 57.06, y: 12.78))
        bezierPath.addLine(to: CGPoint(x: 44.66, y: 12.78))
        bezierPath.addCurve(to: CGPoint(x: 22.77, y: 34.67), controlPoint1: CGPoint(x: 32.57, y: 12.78), controlPoint2: CGPoint(x: 22.77, y: 22.58))
        bezierPath.addLine(to: CGPoint(x: 22.77, y: 176.25))
        bezierPath.addCurve(to: CGPoint(x: 44.66, y: 198.14), controlPoint1: CGPoint(x: 22.77, y: 188.34), controlPoint2: CGPoint(x: 32.57, y: 198.14))
        bezierPath.addLine(to: CGPoint(x: 155.35, y: 198.14))
        bezierPath.addCurve(to: CGPoint(x: 177.24, y: 176.25), controlPoint1: CGPoint(x: 167.44, y: 198.14), controlPoint2: CGPoint(x: 177.24, y: 188.34))
        bezierPath.addLine(to: CGPoint(x: 177.24, y: 34.67))
        bezierPath.addCurve(to: CGPoint(x: 155.35, y: 12.78), controlPoint1: CGPoint(x: 177.24, y: 22.58), controlPoint2: CGPoint(x: 167.44, y: 12.78))
        bezierPath.close()
        fillColor36.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 125.28, y: 30.33))
        bezier2Path.addCurve(to: CGPoint(x: 120.54, y: 36.86), controlPoint1: CGPoint(x: 125.28, y: 33.94), controlPoint2: CGPoint(x: 123.16, y: 36.86))
        bezier2Path.addLine(to: CGPoint(x: 82.45, y: 36.86))
        bezier2Path.addCurve(to: CGPoint(x: 77.71, y: 30.33), controlPoint1: CGPoint(x: 79.83, y: 36.86), controlPoint2: CGPoint(x: 77.71, y: 33.94))
        bezier2Path.addLine(to: CGPoint(x: 77.71, y: 15.83))
        bezier2Path.addCurve(to: CGPoint(x: 82.45, y: 9.29), controlPoint1: CGPoint(x: 77.71, y: 12.22), controlPoint2: CGPoint(x: 79.83, y: 9.29))
        bezier2Path.addLine(to: CGPoint(x: 120.54, y: 9.29))
        bezier2Path.addCurve(to: CGPoint(x: 125.28, y: 15.83), controlPoint1: CGPoint(x: 123.16, y: 9.29), controlPoint2: CGPoint(x: 125.28, y: 12.22))
        bezier2Path.addLine(to: CGPoint(x: 125.28, y: 30.33))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 130.79, y: 1.87))
        bezier2Path.addLine(to: CGPoint(x: 72.2, y: 1.87))
        bezier2Path.addCurve(to: CGPoint(x: 64.9, y: 11.93), controlPoint1: CGPoint(x: 68.17, y: 1.87), controlPoint2: CGPoint(x: 64.9, y: 6.37))
        bezier2Path.addLine(to: CGPoint(x: 64.9, y: 34.23))
        bezier2Path.addCurve(to: CGPoint(x: 72.2, y: 44.29), controlPoint1: CGPoint(x: 64.9, y: 39.78), controlPoint2: CGPoint(x: 68.17, y: 44.29))
        bezier2Path.addLine(to: CGPoint(x: 130.79, y: 44.29))
        bezier2Path.addCurve(to: CGPoint(x: 138.09, y: 34.23), controlPoint1: CGPoint(x: 134.82, y: 44.29), controlPoint2: CGPoint(x: 138.09, y: 39.78))
        bezier2Path.addLine(to: CGPoint(x: 138.09, y: 11.93))
        bezier2Path.addCurve(to: CGPoint(x: 130.79, y: 1.87), controlPoint1: CGPoint(x: 138.09, y: 6.37), controlPoint2: CGPoint(x: 134.82, y: 1.87))
        bezier2Path.close()
        fillColor37.setFill()
        bezier2Path.fill()


        //// Rectangle 3 Drawing
        let rectangle3Path = UIBezierPath(rect: CGRect(x: 69.9, y: 55.88, width: 7.7, height: 41.25))
        fillColor41.setFill()
        rectangle3Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 106.83, y: 82.43))
        bezier3Path.addCurve(to: CGPoint(x: 106.67, y: 84.79), controlPoint1: CGPoint(x: 106.78, y: 83.2), controlPoint2: CGPoint(x: 106.72, y: 84.02))
        bezier3Path.addCurve(to: CGPoint(x: 95.18, y: 98.1), controlPoint1: CGPoint(x: 106.28, y: 92.32), controlPoint2: CGPoint(x: 103.75, y: 98.1))
        bezier3Path.addCurve(to: CGPoint(x: 81.71, y: 79.07), controlPoint1: CGPoint(x: 82.53, y: 98.1), controlPoint2: CGPoint(x: 81.71, y: 90.07))
        bezier3Path.addLine(to: CGPoint(x: 81.71, y: 73.19))
        bezier3Path.addCurve(to: CGPoint(x: 95.18, y: 54.89), controlPoint1: CGPoint(x: 82.04, y: 62.69), controlPoint2: CGPoint(x: 82.86, y: 54.89))
        bezier3Path.addCurve(to: CGPoint(x: 106.45, y: 65.55), controlPoint1: CGPoint(x: 102.05, y: 54.99), controlPoint2: CGPoint(x: 105.9, y: 58.51))
        bezier3Path.addCurve(to: CGPoint(x: 106.61, y: 68.69), controlPoint1: CGPoint(x: 106.56, y: 66.6), controlPoint2: CGPoint(x: 106.67, y: 67.64))
        bezier3Path.addLine(to: CGPoint(x: 99.03, y: 68.69))
        bezier3Path.addCurve(to: CGPoint(x: 95.18, y: 61.1), controlPoint1: CGPoint(x: 98.7, y: 66.05), controlPoint2: CGPoint(x: 98.97, y: 61.1))
        bezier3Path.addCurve(to: CGPoint(x: 89.62, y: 71.49), controlPoint1: CGPoint(x: 89.13, y: 61.1), controlPoint2: CGPoint(x: 89.62, y: 68.3))
        bezier3Path.addLine(to: CGPoint(x: 89.62, y: 82.92))
        bezier3Path.addCurve(to: CGPoint(x: 95.18, y: 91.89), controlPoint1: CGPoint(x: 89.62, y: 86.33), controlPoint2: CGPoint(x: 89.9, y: 91.89))
        bezier3Path.addCurve(to: CGPoint(x: 99.08, y: 82.43), controlPoint1: CGPoint(x: 99.41, y: 91.89), controlPoint2: CGPoint(x: 98.92, y: 85.07))
        bezier3Path.addLine(to: CGPoint(x: 106.83, y: 82.43))
        bezier3Path.close()
        fillColor41.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 126.02, y: 68.41))
        bezier4Path.addCurve(to: CGPoint(x: 121.51, y: 61.1), controlPoint1: CGPoint(x: 126.07, y: 64.73), controlPoint2: CGPoint(x: 125.74, y: 61.1))
        bezier4Path.addCurve(to: CGPoint(x: 117.28, y: 64.95), controlPoint1: CGPoint(x: 118.93, y: 61.1), controlPoint2: CGPoint(x: 117.28, y: 62.14))
        bezier4Path.addCurve(to: CGPoint(x: 121.67, y: 70.83), controlPoint1: CGPoint(x: 117.28, y: 68.08), controlPoint2: CGPoint(x: 119.26, y: 69.29))
        bezier4Path.addCurve(to: CGPoint(x: 131.02, y: 77.59), controlPoint1: CGPoint(x: 124.2, y: 72.42), controlPoint2: CGPoint(x: 128.88, y: 75.5))
        bezier4Path.addCurve(to: CGPoint(x: 134.48, y: 86.22), controlPoint1: CGPoint(x: 133.66, y: 80.17), controlPoint2: CGPoint(x: 134.48, y: 82.65))
        bezier4Path.addCurve(to: CGPoint(x: 121.78, y: 98.1), controlPoint1: CGPoint(x: 134.48, y: 94.03), controlPoint2: CGPoint(x: 129.32, y: 98.1))
        bezier4Path.addCurve(to: CGPoint(x: 109.25, y: 85.56), controlPoint1: CGPoint(x: 112.55, y: 98.1), controlPoint2: CGPoint(x: 109.25, y: 92.93))
        bezier4Path.addLine(to: CGPoint(x: 109.25, y: 82.54))
        bezier4Path.addLine(to: CGPoint(x: 116.95, y: 82.54))
        bezier4Path.addLine(to: CGPoint(x: 116.95, y: 84.96))
        bezier4Path.addCurve(to: CGPoint(x: 121.78, y: 91.89), controlPoint1: CGPoint(x: 116.78, y: 88.97), controlPoint2: CGPoint(x: 117.99, y: 91.89))
        bezier4Path.addCurve(to: CGPoint(x: 126.57, y: 87.05), controlPoint1: CGPoint(x: 125.03, y: 91.89), controlPoint2: CGPoint(x: 126.57, y: 90.18))
        bezier4Path.addCurve(to: CGPoint(x: 123.49, y: 81.6), controlPoint1: CGPoint(x: 126.57, y: 84.63), controlPoint2: CGPoint(x: 125.47, y: 82.98))
        bezier4Path.addCurve(to: CGPoint(x: 111.34, y: 72.09), controlPoint1: CGPoint(x: 119.48, y: 78.47), controlPoint2: CGPoint(x: 114.47, y: 76.22))
        bezier4Path.addCurve(to: CGPoint(x: 109.36, y: 65.77), controlPoint1: CGPoint(x: 110.07, y: 70.22), controlPoint2: CGPoint(x: 109.36, y: 67.97))
        bezier4Path.addCurve(to: CGPoint(x: 121.45, y: 54.89), controlPoint1: CGPoint(x: 109.36, y: 58.73), controlPoint2: CGPoint(x: 113.32, y: 54.89))
        bezier4Path.addCurve(to: CGPoint(x: 133.44, y: 68.41), controlPoint1: CGPoint(x: 133.72, y: 54.89), controlPoint2: CGPoint(x: 133.39, y: 64.34))
        bezier4Path.addLine(to: CGPoint(x: 126.02, y: 68.41))
        bezier4Path.close()
        fillColor41.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 65.57, y: 146.11))
        bezier5Path.addCurve(to: CGPoint(x: 66.23, y: 139.13), controlPoint1: CGPoint(x: 65.63, y: 144.35), controlPoint2: CGPoint(x: 65.85, y: 141.49))
        bezier5Path.addCurve(to: CGPoint(x: 73.49, y: 127.53), controlPoint1: CGPoint(x: 66.73, y: 136.27), controlPoint2: CGPoint(x: 68.76, y: 132.53))
        bezier5Path.addLine(to: CGPoint(x: 77.23, y: 123.57))
        bezier5Path.addCurve(to: CGPoint(x: 81.02, y: 115.65), controlPoint1: CGPoint(x: 79.7, y: 120.87), controlPoint2: CGPoint(x: 81.02, y: 119.55))
        bezier5Path.addCurve(to: CGPoint(x: 77.34, y: 110.76), controlPoint1: CGPoint(x: 81.02, y: 111.91), controlPoint2: CGPoint(x: 79.53, y: 110.76))
        bezier5Path.addCurve(to: CGPoint(x: 73.76, y: 112.79), controlPoint1: CGPoint(x: 75.74, y: 110.76), controlPoint2: CGPoint(x: 74.31, y: 111.25))
        bezier5Path.addCurve(to: CGPoint(x: 73.16, y: 118.62), controlPoint1: CGPoint(x: 72.99, y: 114.61), controlPoint2: CGPoint(x: 73.21, y: 116.69))
        bezier5Path.addLine(to: CGPoint(x: 65.96, y: 118.62))
        bezier5Path.addLine(to: CGPoint(x: 65.96, y: 117.47))
        bezier5Path.addCurve(to: CGPoint(x: 77.67, y: 104.71), controlPoint1: CGPoint(x: 65.96, y: 113.84), controlPoint2: CGPoint(x: 65.79, y: 104.6))
        bezier5Path.addCurve(to: CGPoint(x: 88.72, y: 115.38), controlPoint1: CGPoint(x: 84.15, y: 104.77), controlPoint2: CGPoint(x: 88.72, y: 108.78))
        bezier5Path.addCurve(to: CGPoint(x: 83.82, y: 126.65), controlPoint1: CGPoint(x: 88.72, y: 119.94), controlPoint2: CGPoint(x: 87.01, y: 123.4))
        bezier5Path.addLine(to: CGPoint(x: 77.78, y: 132.91))
        bezier5Path.addCurve(to: CGPoint(x: 73.76, y: 140.06), controlPoint1: CGPoint(x: 76.18, y: 134.56), controlPoint2: CGPoint(x: 73.82, y: 137.26))
        bezier5Path.addLine(to: CGPoint(x: 88.11, y: 140.06))
        bezier5Path.addLine(to: CGPoint(x: 88.11, y: 146.11))
        bezier5Path.addLine(to: CGPoint(x: 65.57, y: 146.11))
        bezier5Path.close()
        fillColor41.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 101.64, y: 117.52))
        bezier6Path.addLine(to: CGPoint(x: 92.34, y: 117.52))
        bezier6Path.addLine(to: CGPoint(x: 92.34, y: 112.02))
        bezier6Path.addCurve(to: CGPoint(x: 103.67, y: 104.88), controlPoint1: CGPoint(x: 97.68, y: 111.97), controlPoint2: CGPoint(x: 102.13, y: 110.54))
        bezier6Path.addLine(to: CGPoint(x: 109.33, y: 104.88))
        bezier6Path.addLine(to: CGPoint(x: 109.33, y: 146.11))
        bezier6Path.addLine(to: CGPoint(x: 101.64, y: 146.11))
        bezier6Path.addLine(to: CGPoint(x: 101.64, y: 117.52))
        bezier6Path.close()
        fillColor41.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: 126.54, y: 131.7))
        bezier7Path.addLine(to: CGPoint(x: 126.54, y: 114.99))
        bezier7Path.addLine(to: CGPoint(x: 126.43, y: 114.99))
        bezier7Path.addLine(to: CGPoint(x: 118.84, y: 131.7))
        bezier7Path.addLine(to: CGPoint(x: 126.54, y: 131.7))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 134.24, y: 105.53))
        bezier7Path.addLine(to: CGPoint(x: 134.24, y: 131.7))
        bezier7Path.addLine(to: CGPoint(x: 137.75, y: 131.7))
        bezier7Path.addLine(to: CGPoint(x: 137.75, y: 137.75))
        bezier7Path.addLine(to: CGPoint(x: 134.24, y: 137.75))
        bezier7Path.addLine(to: CGPoint(x: 134.24, y: 146.11))
        bezier7Path.addLine(to: CGPoint(x: 126.54, y: 146.11))
        bezier7Path.addLine(to: CGPoint(x: 126.54, y: 137.75))
        bezier7Path.addLine(to: CGPoint(x: 113.18, y: 137.75))
        bezier7Path.addLine(to: CGPoint(x: 113.18, y: 131.7))
        bezier7Path.addLine(to: CGPoint(x: 125.66, y: 105.53))
        bezier7Path.addLine(to: CGPoint(x: 134.24, y: 105.53))
        bezier7Path.close()
        fillColor41.setFill()
        bezier7Path.fill()


        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: 72.57, y: 164.66))
        bezier8Path.addCurve(to: CGPoint(x: 75.09, y: 168.73), controlPoint1: CGPoint(x: 72.57, y: 166.21), controlPoint2: CGPoint(x: 72.69, y: 168.73))
        bezier8Path.addCurve(to: CGPoint(x: 77.62, y: 164.36), controlPoint1: CGPoint(x: 77.59, y: 168.73), controlPoint2: CGPoint(x: 77.62, y: 166.16))
        bezier8Path.addLine(to: CGPoint(x: 77.62, y: 159.56))
        bezier8Path.addCurve(to: CGPoint(x: 75.09, y: 154.74), controlPoint1: CGPoint(x: 77.62, y: 158.06), controlPoint2: CGPoint(x: 77.69, y: 154.74))
        bezier8Path.addCurve(to: CGPoint(x: 72.57, y: 159.46), controlPoint1: CGPoint(x: 72.34, y: 154.74), controlPoint2: CGPoint(x: 72.57, y: 158.01))
        bezier8Path.addLine(to: CGPoint(x: 72.57, y: 164.66))
        bezier8Path.close()
        bezier8Path.move(to: CGPoint(x: 68.97, y: 160.24))
        bezier8Path.addCurve(to: CGPoint(x: 75.09, y: 151.91), controlPoint1: CGPoint(x: 69.12, y: 155.46), controlPoint2: CGPoint(x: 69.5, y: 151.91))
        bezier8Path.addCurve(to: CGPoint(x: 81.22, y: 160.24), controlPoint1: CGPoint(x: 80.69, y: 151.91), controlPoint2: CGPoint(x: 81.07, y: 155.46))
        bezier8Path.addLine(to: CGPoint(x: 81.22, y: 162.91))
        bezier8Path.addCurve(to: CGPoint(x: 75.09, y: 171.56), controlPoint1: CGPoint(x: 81.22, y: 167.91), controlPoint2: CGPoint(x: 80.84, y: 171.56))
        bezier8Path.addCurve(to: CGPoint(x: 68.97, y: 162.91), controlPoint1: CGPoint(x: 69.34, y: 171.56), controlPoint2: CGPoint(x: 68.97, y: 167.91))
        bezier8Path.addLine(to: CGPoint(x: 68.97, y: 160.24))
        bezier8Path.close()
        fillColor41.setFill()
        bezier8Path.fill()


        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.move(to: CGPoint(x: 82.52, y: 152.36))
        bezier9Path.addLine(to: CGPoint(x: 94.19, y: 152.36))
        bezier9Path.addLine(to: CGPoint(x: 94.19, y: 155.11))
        bezier9Path.addLine(to: CGPoint(x: 90.12, y: 155.11))
        bezier9Path.addLine(to: CGPoint(x: 90.12, y: 171.11))
        bezier9Path.addLine(to: CGPoint(x: 86.62, y: 171.11))
        bezier9Path.addLine(to: CGPoint(x: 86.62, y: 155.11))
        bezier9Path.addLine(to: CGPoint(x: 82.52, y: 155.11))
        bezier9Path.addLine(to: CGPoint(x: 82.52, y: 152.36))
        bezier9Path.close()
        fillColor41.setFill()
        bezier9Path.fill()


        //// Bezier 10 Drawing
        let bezier10Path = UIBezierPath()
        bezier10Path.move(to: CGPoint(x: 95.67, y: 171.11))
        bezier10Path.addLine(to: CGPoint(x: 95.67, y: 152.36))
        bezier10Path.addLine(to: CGPoint(x: 99.17, y: 152.36))
        bezier10Path.addLine(to: CGPoint(x: 99.17, y: 159.79))
        bezier10Path.addLine(to: CGPoint(x: 104.07, y: 159.79))
        bezier10Path.addLine(to: CGPoint(x: 104.07, y: 152.36))
        bezier10Path.addLine(to: CGPoint(x: 107.57, y: 152.36))
        bezier10Path.addLine(to: CGPoint(x: 107.57, y: 171.11))
        bezier10Path.addLine(to: CGPoint(x: 104.07, y: 171.11))
        bezier10Path.addLine(to: CGPoint(x: 104.07, y: 162.54))
        bezier10Path.addLine(to: CGPoint(x: 99.17, y: 162.54))
        bezier10Path.addLine(to: CGPoint(x: 99.17, y: 171.11))
        bezier10Path.addLine(to: CGPoint(x: 95.67, y: 171.11))
        bezier10Path.close()
        fillColor41.setFill()
        bezier10Path.fill()


        //// Bezier 11 Drawing
        let bezier11Path = UIBezierPath()
        bezier11Path.move(to: CGPoint(x: 110.22, y: 171.11))
        bezier11Path.addLine(to: CGPoint(x: 110.22, y: 152.36))
        bezier11Path.addLine(to: CGPoint(x: 120.07, y: 152.36))
        bezier11Path.addLine(to: CGPoint(x: 120.07, y: 155.11))
        bezier11Path.addLine(to: CGPoint(x: 113.72, y: 155.11))
        bezier11Path.addLine(to: CGPoint(x: 113.72, y: 159.84))
        bezier11Path.addLine(to: CGPoint(x: 119.57, y: 159.84))
        bezier11Path.addLine(to: CGPoint(x: 119.57, y: 162.58))
        bezier11Path.addLine(to: CGPoint(x: 113.72, y: 162.58))
        bezier11Path.addLine(to: CGPoint(x: 113.72, y: 168.36))
        bezier11Path.addLine(to: CGPoint(x: 120.07, y: 168.36))
        bezier11Path.addLine(to: CGPoint(x: 120.07, y: 171.11))
        bezier11Path.addLine(to: CGPoint(x: 110.22, y: 171.11))
        bezier11Path.close()
        fillColor41.setFill()
        bezier11Path.fill()


        //// Bezier 12 Drawing
        let bezier12Path = UIBezierPath()
        bezier12Path.move(to: CGPoint(x: 125.64, y: 160.29))
        bezier12Path.addLine(to: CGPoint(x: 128.39, y: 160.29))
        bezier12Path.addCurve(to: CGPoint(x: 130.44, y: 157.59), controlPoint1: CGPoint(x: 129.54, y: 160.21), controlPoint2: CGPoint(x: 130.44, y: 159.46))
        bezier12Path.addCurve(to: CGPoint(x: 128.24, y: 155.11), controlPoint1: CGPoint(x: 130.44, y: 155.49), controlPoint2: CGPoint(x: 129.57, y: 155.14))
        bezier12Path.addLine(to: CGPoint(x: 125.64, y: 155.11))
        bezier12Path.addLine(to: CGPoint(x: 125.64, y: 160.29))
        bezier12Path.close()
        bezier12Path.move(to: CGPoint(x: 125.64, y: 163.03))
        bezier12Path.addLine(to: CGPoint(x: 125.64, y: 171.11))
        bezier12Path.addLine(to: CGPoint(x: 122.14, y: 171.11))
        bezier12Path.addLine(to: CGPoint(x: 122.14, y: 152.36))
        bezier12Path.addLine(to: CGPoint(x: 128.77, y: 152.36))
        bezier12Path.addCurve(to: CGPoint(x: 134.09, y: 156.86), controlPoint1: CGPoint(x: 131.79, y: 152.36), controlPoint2: CGPoint(x: 134.09, y: 153.41))
        bezier12Path.addCurve(to: CGPoint(x: 131.22, y: 161.39), controlPoint1: CGPoint(x: 134.09, y: 158.91), controlPoint2: CGPoint(x: 133.57, y: 161.06))
        bezier12Path.addLine(to: CGPoint(x: 131.22, y: 161.44))
        bezier12Path.addCurve(to: CGPoint(x: 133.92, y: 164.83), controlPoint1: CGPoint(x: 133.29, y: 161.71), controlPoint2: CGPoint(x: 133.92, y: 163.03))
        bezier12Path.addCurve(to: CGPoint(x: 134.67, y: 170.76), controlPoint1: CGPoint(x: 133.92, y: 165.61), controlPoint2: CGPoint(x: 133.82, y: 170.21))
        bezier12Path.addLine(to: CGPoint(x: 134.67, y: 171.11))
        bezier12Path.addLine(to: CGPoint(x: 130.82, y: 171.11))
        bezier12Path.addCurve(to: CGPoint(x: 130.44, y: 166.36), controlPoint1: CGPoint(x: 130.39, y: 169.91), controlPoint2: CGPoint(x: 130.47, y: 167.61))
        bezier12Path.addCurve(to: CGPoint(x: 129.24, y: 163.28), controlPoint1: CGPoint(x: 130.42, y: 165.21), controlPoint2: CGPoint(x: 130.44, y: 163.64))
        bezier12Path.addCurve(to: CGPoint(x: 126.27, y: 163.03), controlPoint1: CGPoint(x: 128.29, y: 163.01), controlPoint2: CGPoint(x: 127.27, y: 163.03))
        bezier12Path.addLine(to: CGPoint(x: 125.64, y: 163.03))
        bezier12Path.close()
        fillColor41.setFill()
        bezier12Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawIcs214OtherSM(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)


        //// Symbol Drawing
        let symbolRect = CGRect(x: frame.minX, y: frame.minY, width: 80, height: 80)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawIcs214Other(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawIcs214LocalIncident60x60(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: numberwidth, height: numberheight)


        //// Symbol Drawing
        let symbolRect = CGRect(x: frame.minX, y: frame.minY, width: 60, height: 60)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawIcs214LocalIncident(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawIcs214FEMA60x60(width60: CGFloat = 60, height60: CGFloat = 60) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: width60, height: height60)


        //// Symbol Drawing
        let symbolRect = CGRect(x: frame.minX, y: frame.minY, width: 60, height: 60)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawIcs214Fema(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawIcs214StrikeTeamSM2(width60: CGFloat = 60, height60: CGFloat = 60) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: width60, height: height60)


        //// Symbol Drawing
        let symbolRect = CGRect(x: frame.minX, y: frame.minY, width: 60, height: 60)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawIcs214StrikeTeam(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawIcs214Other60x60(width60: CGFloat = 60, height60: CGFloat = 60) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: width60, height: height60)


        //// Symbol Drawing
        let symbolRect = CGRect(x: frame.minX, y: frame.minY, width: 60, height: 60)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawIcs214Other(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawNfirsBasic1(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor35 = UIColor(red: 1.000, green: 0.998, blue: 0.995, alpha: 1.000)
        let fillColor36 = UIColor(red: 0.195, green: 0.275, blue: 0.461, alpha: 1.000)
        let fillColor37 = UIColor(red: 0.927, green: 0.610, blue: 0.258, alpha: 1.000)

        //// Group 2
        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 28.83, y: 25.31, width: 141.75, height: 165.9))
        fillColor35.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 70.13, y: 9.46, width: 64.15, height: 31.7))
        fillColor35.setFill()
        rectangle2Path.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 155.01, y: 12.75))
        bezierPath.addLine(to: CGPoint(x: 143.8, y: 12.75))
        bezierPath.addLine(to: CGPoint(x: 143.8, y: 26.03))
        bezierPath.addLine(to: CGPoint(x: 144.78, y: 26.03))
        bezierPath.addCurve(to: CGPoint(x: 166.72, y: 47.86), controlPoint1: CGPoint(x: 156.9, y: 26.03), controlPoint2: CGPoint(x: 166.72, y: 35.8))
        bezierPath.addLine(to: CGPoint(x: 166.72, y: 164.11))
        bezierPath.addCurve(to: CGPoint(x: 144.78, y: 185.95), controlPoint1: CGPoint(x: 166.72, y: 176.18), controlPoint2: CGPoint(x: 156.9, y: 185.95))
        bezierPath.addLine(to: CGPoint(x: 54.83, y: 185.95))
        bezierPath.addCurve(to: CGPoint(x: 32.9, y: 164.11), controlPoint1: CGPoint(x: 42.72, y: 185.95), controlPoint2: CGPoint(x: 32.9, y: 176.18))
        bezierPath.addLine(to: CGPoint(x: 32.9, y: 47.86))
        bezierPath.addCurve(to: CGPoint(x: 54.83, y: 26.03), controlPoint1: CGPoint(x: 32.9, y: 35.8), controlPoint2: CGPoint(x: 42.72, y: 26.03))
        bezierPath.addLine(to: CGPoint(x: 56.97, y: 26.03))
        bezierPath.addLine(to: CGPoint(x: 56.97, y: 12.75))
        bezierPath.addLine(to: CGPoint(x: 44.61, y: 12.75))
        bezierPath.addCurve(to: CGPoint(x: 22.77, y: 34.59), controlPoint1: CGPoint(x: 32.55, y: 12.75), controlPoint2: CGPoint(x: 22.77, y: 22.53))
        bezierPath.addLine(to: CGPoint(x: 22.77, y: 175.81))
        bezierPath.addCurve(to: CGPoint(x: 44.61, y: 197.64), controlPoint1: CGPoint(x: 22.77, y: 187.86), controlPoint2: CGPoint(x: 32.55, y: 197.64))
        bezierPath.addLine(to: CGPoint(x: 155.01, y: 197.64))
        bezierPath.addCurve(to: CGPoint(x: 176.85, y: 175.81), controlPoint1: CGPoint(x: 167.07, y: 197.64), controlPoint2: CGPoint(x: 176.85, y: 187.86))
        bezierPath.addLine(to: CGPoint(x: 176.85, y: 34.59))
        bezierPath.addCurve(to: CGPoint(x: 155.01, y: 12.75), controlPoint1: CGPoint(x: 176.85, y: 22.53), controlPoint2: CGPoint(x: 167.07, y: 12.75))
        bezierPath.close()
        fillColor36.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 125.02, y: 30.25))
        bezier2Path.addCurve(to: CGPoint(x: 120.29, y: 36.77), controlPoint1: CGPoint(x: 125.02, y: 33.85), controlPoint2: CGPoint(x: 122.91, y: 36.77))
        bezier2Path.addLine(to: CGPoint(x: 82.3, y: 36.77))
        bezier2Path.addCurve(to: CGPoint(x: 77.57, y: 30.25), controlPoint1: CGPoint(x: 79.69, y: 36.77), controlPoint2: CGPoint(x: 77.57, y: 33.85))
        bezier2Path.addLine(to: CGPoint(x: 77.57, y: 15.79))
        bezier2Path.addCurve(to: CGPoint(x: 82.3, y: 9.27), controlPoint1: CGPoint(x: 77.57, y: 12.19), controlPoint2: CGPoint(x: 79.69, y: 9.27))
        bezier2Path.addLine(to: CGPoint(x: 120.29, y: 9.27))
        bezier2Path.addCurve(to: CGPoint(x: 125.02, y: 15.79), controlPoint1: CGPoint(x: 122.91, y: 9.27), controlPoint2: CGPoint(x: 125.02, y: 12.19))
        bezier2Path.addLine(to: CGPoint(x: 125.02, y: 30.25))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 130.52, y: 1.87))
        bezier2Path.addLine(to: CGPoint(x: 72.07, y: 1.87))
        bezier2Path.addCurve(to: CGPoint(x: 64.79, y: 11.9), controlPoint1: CGPoint(x: 68.05, y: 1.87), controlPoint2: CGPoint(x: 64.79, y: 6.36))
        bezier2Path.addLine(to: CGPoint(x: 64.79, y: 34.15))
        bezier2Path.addCurve(to: CGPoint(x: 72.07, y: 44.18), controlPoint1: CGPoint(x: 64.79, y: 39.69), controlPoint2: CGPoint(x: 68.05, y: 44.18))
        bezier2Path.addLine(to: CGPoint(x: 130.52, y: 44.18))
        bezier2Path.addCurve(to: CGPoint(x: 137.8, y: 34.15), controlPoint1: CGPoint(x: 134.54, y: 44.18), controlPoint2: CGPoint(x: 137.8, y: 39.69))
        bezier2Path.addLine(to: CGPoint(x: 137.8, y: 11.9))
        bezier2Path.addCurve(to: CGPoint(x: 130.52, y: 1.87), controlPoint1: CGPoint(x: 137.8, y: 6.36), controlPoint2: CGPoint(x: 134.54, y: 1.87))
        bezier2Path.close()
        fillColor37.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 88.69, y: 113.19))
        bezier3Path.addCurve(to: CGPoint(x: 77.16, y: 101.66), controlPoint1: CGPoint(x: 82.32, y: 113.19), controlPoint2: CGPoint(x: 77.16, y: 108.03))
        bezier3Path.addCurve(to: CGPoint(x: 88.69, y: 90.14), controlPoint1: CGPoint(x: 77.16, y: 95.3), controlPoint2: CGPoint(x: 82.32, y: 90.14))
        bezier3Path.addCurve(to: CGPoint(x: 100.21, y: 101.66), controlPoint1: CGPoint(x: 95.05, y: 90.14), controlPoint2: CGPoint(x: 100.21, y: 95.3))
        bezier3Path.addCurve(to: CGPoint(x: 88.69, y: 113.19), controlPoint1: CGPoint(x: 100.21, y: 108.03), controlPoint2: CGPoint(x: 95.05, y: 113.19))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 88.69, y: 53.64))
        bezier3Path.addCurve(to: CGPoint(x: 40.66, y: 101.66), controlPoint1: CGPoint(x: 62.16, y: 53.64), controlPoint2: CGPoint(x: 40.66, y: 75.14))
        bezier3Path.addCurve(to: CGPoint(x: 88.69, y: 149.69), controlPoint1: CGPoint(x: 40.66, y: 128.19), controlPoint2: CGPoint(x: 62.16, y: 149.69))
        bezier3Path.addCurve(to: CGPoint(x: 136.71, y: 101.66), controlPoint1: CGPoint(x: 115.21, y: 149.69), controlPoint2: CGPoint(x: 136.71, y: 128.19))
        bezier3Path.addCurve(to: CGPoint(x: 88.69, y: 53.64), controlPoint1: CGPoint(x: 136.71, y: 75.14), controlPoint2: CGPoint(x: 115.21, y: 53.64))
        bezier3Path.close()
        ButtonsForFJ092018.fillColor38.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 160.12, y: 114.58))
        bezier4Path.addCurve(to: CGPoint(x: 151.54, y: 104.57), controlPoint1: CGPoint(x: 160.12, y: 109.44), controlPoint2: CGPoint(x: 157.28, y: 104.93))
        bezier4Path.addCurve(to: CGPoint(x: 141.67, y: 113.41), controlPoint1: CGPoint(x: 145.8, y: 104.21), controlPoint2: CGPoint(x: 142.18, y: 109.52))
        bezier4Path.addCurve(to: CGPoint(x: 147.82, y: 122.64), controlPoint1: CGPoint(x: 141.01, y: 118.48), controlPoint2: CGPoint(x: 142.97, y: 122.25))
        bezier4Path.addCurve(to: CGPoint(x: 109.34, y: 163.41), controlPoint1: CGPoint(x: 145.49, y: 153.13), controlPoint2: CGPoint(x: 122.47, y: 162.14))
        bezier4Path.addLine(to: CGPoint(x: 109.34, y: 157.76))
        bezier4Path.addLine(to: CGPoint(x: 66.36, y: 157.76))
        bezier4Path.addLine(to: CGPoint(x: 66.36, y: 177.06))
        bezier4Path.addLine(to: CGPoint(x: 109.34, y: 177.06))
        bezier4Path.addLine(to: CGPoint(x: 109.34, y: 170.92))
        bezier4Path.addCurve(to: CGPoint(x: 154.77, y: 122.34), controlPoint1: CGPoint(x: 124.18, y: 170.69), controlPoint2: CGPoint(x: 154.77, y: 160.95))
        bezier4Path.addCurve(to: CGPoint(x: 160.12, y: 114.58), controlPoint1: CGPoint(x: 158.13, y: 121.14), controlPoint2: CGPoint(x: 160.12, y: 118.35))
        bezier4Path.close()
        ButtonsForFJ092018.fillColor38.setFill()
        bezier4Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawNfirsBasic160x(width60: CGFloat = 60, height60: CGFloat = 60) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: width60, height: height60)


        //// Symbol Drawing
        let symbolRect = CGRect(x: frame.minX, y: frame.minY, width: 60, height: 60)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawNfirsBasic1(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawARCForm(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)



        //// Image Declarations
        let redCross = UIImage(named: "redCross.png")!

        //// Picture Drawing
        let picturePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 200, height: 200))
        context.saveGState()
        picturePath.addClip()
        context.translateBy(x: 0, y: 0)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -redCross.size.height)
        context.draw(redCross.cgImage!, in: CGRect(x: 0, y: 0, width: redCross.size.width, height: redCross.size.height))
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawArcForm80x(number80: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: number80, height: number80)


        //// Symbol Drawing
        let symbolRect = CGRect(x: frame.minX, y: frame.minY, width: fastFloor((frame.width) * 1.00000 + 0.5), height: fastFloor((frame.height) * 1.00000 + 0.5))
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawARCForm(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
    }

    @objc dynamic public class func drawBackgroundBlueGradient(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 1, height: 45), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 1, height: 45), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 1, y: resizedFrame.height / 45)



        //// Gradient Declarations
        let gradient11 = CGGradient(colorsSpace: nil, colors: [ButtonsForFJ092018.blueGradientColor2.cgColor, ButtonsForFJ092018.gradientForBoxColor2.cgColor] as CFArray, locations: [0, 1])!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 1, height: 45))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(gradient11, start: CGPoint(x: 0.5, y: -0), end: CGPoint(x: 0.5, y: 45), options: [])
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawARCFormMap(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let gradientColor7 = UIColor(red: 0.265, green: 0.430, blue: 0.653, alpha: 1.000)
        let gradientColor8 = UIColor(red: 0.065, green: 0.091, blue: 0.157, alpha: 1.000)
        let fillColor33 = UIColor(red: 0.792, green: 0.076, blue: 0.127, alpha: 1.000)

        //// Gradient Declarations
        let gradient6 = CGGradient(colorsSpace: nil, colors: [gradientColor7.cgColor, gradientColor8.cgColor] as CFArray, locations: [0, 1])!

        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath()
        clipPath.move(to: CGPoint(x: 48.21, y: 3.06))
        clipPath.addCurve(to: CGPoint(x: 25.16, y: 23.03), controlPoint1: CGPoint(x: 35.5, y: 3.06), controlPoint2: CGPoint(x: 25.16, y: 12.02))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 23.03))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 124.24))
        clipPath.addCurve(to: CGPoint(x: 48.03, y: 144.21), controlPoint1: CGPoint(x: 25.16, y: 134.8), controlPoint2: CGPoint(x: 34.99, y: 143.38))
        clipPath.addLine(to: CGPoint(x: 48.03, y: 144.21))
        clipPath.addLine(to: CGPoint(x: 48.2, y: 144.22))
        clipPath.addCurve(to: CGPoint(x: 96.87, y: 180.79), controlPoint1: CGPoint(x: 81.5, y: 144.35), controlPoint2: CGPoint(x: 96.72, y: 180.43))
        clipPath.addLine(to: CGPoint(x: 96.87, y: 180.79))
        clipPath.addLine(to: CGPoint(x: 99.7, y: 187.73))
        clipPath.addLine(to: CGPoint(x: 102, y: 180.59))
        clipPath.addCurve(to: CGPoint(x: 151.67, y: 144.22), controlPoint1: CGPoint(x: 102.11, y: 180.22), controlPoint2: CGPoint(x: 114.1, y: 144.22))
        clipPath.addLine(to: CGPoint(x: 151.67, y: 144.22))
        clipPath.addLine(to: CGPoint(x: 151.83, y: 144.22))
        clipPath.addCurve(to: CGPoint(x: 174.84, y: 124.24), controlPoint1: CGPoint(x: 164.52, y: 144.06), controlPoint2: CGPoint(x: 174.84, y: 135.1))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 124.24))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 23.03))
        clipPath.addCurve(to: CGPoint(x: 151.79, y: 3.06), controlPoint1: CGPoint(x: 174.84, y: 12.02), controlPoint2: CGPoint(x: 164.5, y: 3.06))
        clipPath.addLine(to: CGPoint(x: 151.79, y: 3.06))
        clipPath.addLine(to: CGPoint(x: 48.21, y: 3.06))
        clipPath.close()
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 48.21, y: 3.06))
        bezierPath.addCurve(to: CGPoint(x: 25.16, y: 23.03), controlPoint1: CGPoint(x: 35.5, y: 3.06), controlPoint2: CGPoint(x: 25.16, y: 12.02))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 23.03))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 124.24))
        bezierPath.addCurve(to: CGPoint(x: 48.03, y: 144.21), controlPoint1: CGPoint(x: 25.16, y: 134.8), controlPoint2: CGPoint(x: 34.99, y: 143.38))
        bezierPath.addLine(to: CGPoint(x: 48.03, y: 144.21))
        bezierPath.addLine(to: CGPoint(x: 48.2, y: 144.22))
        bezierPath.addCurve(to: CGPoint(x: 96.87, y: 180.79), controlPoint1: CGPoint(x: 81.5, y: 144.35), controlPoint2: CGPoint(x: 96.72, y: 180.43))
        bezierPath.addLine(to: CGPoint(x: 96.87, y: 180.79))
        bezierPath.addLine(to: CGPoint(x: 99.7, y: 187.73))
        bezierPath.addLine(to: CGPoint(x: 102, y: 180.59))
        bezierPath.addCurve(to: CGPoint(x: 151.67, y: 144.22), controlPoint1: CGPoint(x: 102.11, y: 180.22), controlPoint2: CGPoint(x: 114.1, y: 144.22))
        bezierPath.addLine(to: CGPoint(x: 151.67, y: 144.22))
        bezierPath.addLine(to: CGPoint(x: 151.83, y: 144.22))
        bezierPath.addCurve(to: CGPoint(x: 174.84, y: 124.24), controlPoint1: CGPoint(x: 164.52, y: 144.06), controlPoint2: CGPoint(x: 174.84, y: 135.1))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 124.24))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 23.03))
        bezierPath.addCurve(to: CGPoint(x: 151.79, y: 3.06), controlPoint1: CGPoint(x: 174.84, y: 12.02), controlPoint2: CGPoint(x: 164.5, y: 3.06))
        bezierPath.addLine(to: CGPoint(x: 151.79, y: 3.06))
        bezierPath.addLine(to: CGPoint(x: 48.21, y: 3.06))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(gradient6,
            start: CGPoint(x: 100, y: 187.73),
            end: CGPoint(x: 100, y: 3.06),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 0.33))
        bezier3Path.addLine(to: CGPoint(x: 48.21, y: 0.33))
        bezier3Path.addCurve(to: CGPoint(x: 22.43, y: 23.03), controlPoint1: CGPoint(x: 33.99, y: 0.33), controlPoint2: CGPoint(x: 22.43, y: 10.51))
        bezier3Path.addLine(to: CGPoint(x: 22.43, y: 124.24))
        bezier3Path.addCurve(to: CGPoint(x: 47.86, y: 146.94), controlPoint1: CGPoint(x: 22.43, y: 136.26), controlPoint2: CGPoint(x: 33.36, y: 146.02))
        bezier3Path.addLine(to: CGPoint(x: 48.02, y: 146.95))
        bezier3Path.addLine(to: CGPoint(x: 48.19, y: 146.95))
        bezier3Path.addCurve(to: CGPoint(x: 82.82, y: 164.03), controlPoint1: CGPoint(x: 61.21, y: 147), controlPoint2: CGPoint(x: 72.86, y: 152.75))
        bezier3Path.addCurve(to: CGPoint(x: 94.34, y: 181.83), controlPoint1: CGPoint(x: 90.56, y: 172.79), controlPoint2: CGPoint(x: 94.3, y: 181.74))
        bezier3Path.addLine(to: CGPoint(x: 100.04, y: 195.62))
        bezier3Path.addLine(to: CGPoint(x: 104.6, y: 181.42))
        bezier3Path.addCurve(to: CGPoint(x: 114.95, y: 163.85), controlPoint1: CGPoint(x: 104.62, y: 181.35), controlPoint2: CGPoint(x: 107.57, y: 172.49))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 146.95), controlPoint1: CGPoint(x: 124.54, y: 152.64), controlPoint2: CGPoint(x: 136.89, y: 146.95))
        bezier3Path.addLine(to: CGPoint(x: 151.78, y: 146.95))
        bezier3Path.addLine(to: CGPoint(x: 151.82, y: 146.95))
        bezier3Path.addLine(to: CGPoint(x: 151.86, y: 146.95))
        bezier3Path.addCurve(to: CGPoint(x: 177.57, y: 124.24), controlPoint1: CGPoint(x: 166.04, y: 146.77), controlPoint2: CGPoint(x: 177.57, y: 136.59))
        bezier3Path.addLine(to: CGPoint(x: 177.57, y: 23.03))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 0.33), controlPoint1: CGPoint(x: 177.57, y: 10.51), controlPoint2: CGPoint(x: 166.01, y: 0.33))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 5.79))
        bezier3Path.addCurve(to: CGPoint(x: 172.11, y: 23.03), controlPoint1: CGPoint(x: 163.01, y: 5.79), controlPoint2: CGPoint(x: 172.11, y: 13.51))
        bezier3Path.addLine(to: CGPoint(x: 172.11, y: 124.24))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 141.49), controlPoint1: CGPoint(x: 172.11, y: 133.77), controlPoint2: CGPoint(x: 162.65, y: 141.35))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 141.49), controlPoint1: CGPoint(x: 151.75, y: 141.49), controlPoint2: CGPoint(x: 151.71, y: 141.49))
        bezier3Path.addCurve(to: CGPoint(x: 99.39, y: 179.75), controlPoint1: CGPoint(x: 111.67, y: 141.48), controlPoint2: CGPoint(x: 99.39, y: 179.75))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 141.49), controlPoint1: CGPoint(x: 99.39, y: 179.75), controlPoint2: CGPoint(x: 83.79, y: 141.62))
        bezier3Path.addCurve(to: CGPoint(x: 27.89, y: 124.24), controlPoint1: CGPoint(x: 37.14, y: 140.78), controlPoint2: CGPoint(x: 27.89, y: 133.77))
        bezier3Path.addLine(to: CGPoint(x: 27.89, y: 23.03))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 5.79), controlPoint1: CGPoint(x: 27.89, y: 13.51), controlPoint2: CGPoint(x: 36.99, y: 5.79))
        bezier3Path.addLine(to: CGPoint(x: 151.79, y: 5.79))
        bezier3Path.close()
        fillColor33.setFill()
        bezier3Path.fill()


        //// Symbol Drawing
        let symbolRect = CGRect(x: 40, y: 15, width: 123, height: 123)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawARCForm(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawARCFormMapButton(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 100, height: 100), resizing: ResizingBehavior = .aspectFit, numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 100, height: 100), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 100, y: resizedFrame.height / 100)


        //// Symbol Drawing
        let symbolRect = CGRect(x: 10, y: 10, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawARCFormMap(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawICS214Map(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let gradientColor7 = UIColor(red: 0.265, green: 0.430, blue: 0.653, alpha: 1.000)
        let gradientColor8 = UIColor(red: 0.065, green: 0.091, blue: 0.157, alpha: 1.000)
        let fillColor33 = UIColor(red: 0.792, green: 0.076, blue: 0.127, alpha: 1.000)

        //// Gradient Declarations
        let gradient6 = CGGradient(colorsSpace: nil, colors: [gradientColor7.cgColor, gradientColor8.cgColor] as CFArray, locations: [0, 1])!

        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath()
        clipPath.move(to: CGPoint(x: 48.21, y: 3.06))
        clipPath.addCurve(to: CGPoint(x: 25.16, y: 23.03), controlPoint1: CGPoint(x: 35.5, y: 3.06), controlPoint2: CGPoint(x: 25.16, y: 12.02))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 23.03))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 124.24))
        clipPath.addCurve(to: CGPoint(x: 48.03, y: 144.21), controlPoint1: CGPoint(x: 25.16, y: 134.8), controlPoint2: CGPoint(x: 34.99, y: 143.38))
        clipPath.addLine(to: CGPoint(x: 48.03, y: 144.21))
        clipPath.addLine(to: CGPoint(x: 48.2, y: 144.22))
        clipPath.addCurve(to: CGPoint(x: 96.87, y: 180.79), controlPoint1: CGPoint(x: 81.5, y: 144.35), controlPoint2: CGPoint(x: 96.72, y: 180.43))
        clipPath.addLine(to: CGPoint(x: 96.87, y: 180.79))
        clipPath.addLine(to: CGPoint(x: 99.7, y: 187.73))
        clipPath.addLine(to: CGPoint(x: 102, y: 180.59))
        clipPath.addCurve(to: CGPoint(x: 151.67, y: 144.22), controlPoint1: CGPoint(x: 102.11, y: 180.22), controlPoint2: CGPoint(x: 114.1, y: 144.22))
        clipPath.addLine(to: CGPoint(x: 151.67, y: 144.22))
        clipPath.addLine(to: CGPoint(x: 151.83, y: 144.22))
        clipPath.addCurve(to: CGPoint(x: 174.84, y: 124.24), controlPoint1: CGPoint(x: 164.52, y: 144.06), controlPoint2: CGPoint(x: 174.84, y: 135.1))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 124.24))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 23.03))
        clipPath.addCurve(to: CGPoint(x: 151.79, y: 3.06), controlPoint1: CGPoint(x: 174.84, y: 12.02), controlPoint2: CGPoint(x: 164.5, y: 3.06))
        clipPath.addLine(to: CGPoint(x: 151.79, y: 3.06))
        clipPath.addLine(to: CGPoint(x: 48.21, y: 3.06))
        clipPath.close()
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 48.21, y: 3.06))
        bezierPath.addCurve(to: CGPoint(x: 25.16, y: 23.03), controlPoint1: CGPoint(x: 35.5, y: 3.06), controlPoint2: CGPoint(x: 25.16, y: 12.02))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 23.03))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 124.24))
        bezierPath.addCurve(to: CGPoint(x: 48.03, y: 144.21), controlPoint1: CGPoint(x: 25.16, y: 134.8), controlPoint2: CGPoint(x: 34.99, y: 143.38))
        bezierPath.addLine(to: CGPoint(x: 48.03, y: 144.21))
        bezierPath.addLine(to: CGPoint(x: 48.2, y: 144.22))
        bezierPath.addCurve(to: CGPoint(x: 96.87, y: 180.79), controlPoint1: CGPoint(x: 81.5, y: 144.35), controlPoint2: CGPoint(x: 96.72, y: 180.43))
        bezierPath.addLine(to: CGPoint(x: 96.87, y: 180.79))
        bezierPath.addLine(to: CGPoint(x: 99.7, y: 187.73))
        bezierPath.addLine(to: CGPoint(x: 102, y: 180.59))
        bezierPath.addCurve(to: CGPoint(x: 151.67, y: 144.22), controlPoint1: CGPoint(x: 102.11, y: 180.22), controlPoint2: CGPoint(x: 114.1, y: 144.22))
        bezierPath.addLine(to: CGPoint(x: 151.67, y: 144.22))
        bezierPath.addLine(to: CGPoint(x: 151.83, y: 144.22))
        bezierPath.addCurve(to: CGPoint(x: 174.84, y: 124.24), controlPoint1: CGPoint(x: 164.52, y: 144.06), controlPoint2: CGPoint(x: 174.84, y: 135.1))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 124.24))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 23.03))
        bezierPath.addCurve(to: CGPoint(x: 151.79, y: 3.06), controlPoint1: CGPoint(x: 174.84, y: 12.02), controlPoint2: CGPoint(x: 164.5, y: 3.06))
        bezierPath.addLine(to: CGPoint(x: 151.79, y: 3.06))
        bezierPath.addLine(to: CGPoint(x: 48.21, y: 3.06))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(gradient6,
            start: CGPoint(x: 100, y: 187.73),
            end: CGPoint(x: 100, y: 3.06),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 0.33))
        bezier3Path.addLine(to: CGPoint(x: 48.21, y: 0.33))
        bezier3Path.addCurve(to: CGPoint(x: 22.43, y: 23.03), controlPoint1: CGPoint(x: 33.99, y: 0.33), controlPoint2: CGPoint(x: 22.43, y: 10.51))
        bezier3Path.addLine(to: CGPoint(x: 22.43, y: 124.24))
        bezier3Path.addCurve(to: CGPoint(x: 47.86, y: 146.94), controlPoint1: CGPoint(x: 22.43, y: 136.26), controlPoint2: CGPoint(x: 33.36, y: 146.02))
        bezier3Path.addLine(to: CGPoint(x: 48.02, y: 146.95))
        bezier3Path.addLine(to: CGPoint(x: 48.19, y: 146.95))
        bezier3Path.addCurve(to: CGPoint(x: 82.82, y: 164.03), controlPoint1: CGPoint(x: 61.21, y: 147), controlPoint2: CGPoint(x: 72.86, y: 152.75))
        bezier3Path.addCurve(to: CGPoint(x: 94.34, y: 181.83), controlPoint1: CGPoint(x: 90.56, y: 172.79), controlPoint2: CGPoint(x: 94.3, y: 181.74))
        bezier3Path.addLine(to: CGPoint(x: 100.04, y: 195.62))
        bezier3Path.addLine(to: CGPoint(x: 104.6, y: 181.42))
        bezier3Path.addCurve(to: CGPoint(x: 114.95, y: 163.85), controlPoint1: CGPoint(x: 104.62, y: 181.35), controlPoint2: CGPoint(x: 107.57, y: 172.49))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 146.95), controlPoint1: CGPoint(x: 124.54, y: 152.64), controlPoint2: CGPoint(x: 136.89, y: 146.95))
        bezier3Path.addLine(to: CGPoint(x: 151.78, y: 146.95))
        bezier3Path.addLine(to: CGPoint(x: 151.82, y: 146.95))
        bezier3Path.addLine(to: CGPoint(x: 151.86, y: 146.95))
        bezier3Path.addCurve(to: CGPoint(x: 177.57, y: 124.24), controlPoint1: CGPoint(x: 166.04, y: 146.77), controlPoint2: CGPoint(x: 177.57, y: 136.59))
        bezier3Path.addLine(to: CGPoint(x: 177.57, y: 23.03))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 0.33), controlPoint1: CGPoint(x: 177.57, y: 10.51), controlPoint2: CGPoint(x: 166.01, y: 0.33))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 5.79))
        bezier3Path.addCurve(to: CGPoint(x: 172.11, y: 23.03), controlPoint1: CGPoint(x: 163.01, y: 5.79), controlPoint2: CGPoint(x: 172.11, y: 13.51))
        bezier3Path.addLine(to: CGPoint(x: 172.11, y: 124.24))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 141.49), controlPoint1: CGPoint(x: 172.11, y: 133.77), controlPoint2: CGPoint(x: 162.65, y: 141.35))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 141.49), controlPoint1: CGPoint(x: 151.75, y: 141.49), controlPoint2: CGPoint(x: 151.71, y: 141.49))
        bezier3Path.addCurve(to: CGPoint(x: 99.39, y: 179.75), controlPoint1: CGPoint(x: 111.67, y: 141.48), controlPoint2: CGPoint(x: 99.39, y: 179.75))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 141.49), controlPoint1: CGPoint(x: 99.39, y: 179.75), controlPoint2: CGPoint(x: 83.79, y: 141.62))
        bezier3Path.addCurve(to: CGPoint(x: 27.89, y: 124.24), controlPoint1: CGPoint(x: 37.14, y: 140.78), controlPoint2: CGPoint(x: 27.89, y: 133.77))
        bezier3Path.addLine(to: CGPoint(x: 27.89, y: 23.03))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 5.79), controlPoint1: CGPoint(x: 27.89, y: 13.51), controlPoint2: CGPoint(x: 36.99, y: 5.79))
        bezier3Path.addLine(to: CGPoint(x: 151.79, y: 5.79))
        bezier3Path.close()
        fillColor33.setFill()
        bezier3Path.fill()


        //// Symbol Drawing
        let symbolRect = CGRect(x: 40, y: 15, width: 123, height: 123)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawIcs214(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawICS214MapButton(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 100, height: 100), resizing: ResizingBehavior = .aspectFit, numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 100, height: 100), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 100, y: resizedFrame.height / 100)


        //// Symbol Drawing
        let symbolRect = CGRect(x: 10, y: 10, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawICS214Map(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawFireHousePin(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let gradientColor7 = UIColor(red: 0.265, green: 0.430, blue: 0.653, alpha: 1.000)
        let gradientColor8 = UIColor(red: 0.065, green: 0.091, blue: 0.157, alpha: 1.000)
        let fillColor33 = UIColor(red: 0.792, green: 0.076, blue: 0.127, alpha: 1.000)
        let fillColor42 = UIColor(red: 1.000, green: 0.999, blue: 0.996, alpha: 1.000)

        //// Gradient Declarations
        let gradient6 = CGGradient(colorsSpace: nil, colors: [gradientColor7.cgColor, gradientColor8.cgColor] as CFArray, locations: [0, 1])!

        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath()
        clipPath.move(to: CGPoint(x: 48.21, y: 3.06))
        clipPath.addCurve(to: CGPoint(x: 25.16, y: 23.03), controlPoint1: CGPoint(x: 35.5, y: 3.06), controlPoint2: CGPoint(x: 25.16, y: 12.02))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 23.03))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 124.24))
        clipPath.addCurve(to: CGPoint(x: 48.03, y: 144.21), controlPoint1: CGPoint(x: 25.16, y: 134.8), controlPoint2: CGPoint(x: 34.99, y: 143.38))
        clipPath.addLine(to: CGPoint(x: 48.03, y: 144.21))
        clipPath.addLine(to: CGPoint(x: 48.2, y: 144.22))
        clipPath.addCurve(to: CGPoint(x: 96.87, y: 180.79), controlPoint1: CGPoint(x: 81.5, y: 144.35), controlPoint2: CGPoint(x: 96.72, y: 180.43))
        clipPath.addLine(to: CGPoint(x: 96.87, y: 180.79))
        clipPath.addLine(to: CGPoint(x: 99.7, y: 187.73))
        clipPath.addLine(to: CGPoint(x: 102, y: 180.59))
        clipPath.addCurve(to: CGPoint(x: 151.67, y: 144.22), controlPoint1: CGPoint(x: 102.11, y: 180.22), controlPoint2: CGPoint(x: 114.1, y: 144.22))
        clipPath.addLine(to: CGPoint(x: 151.67, y: 144.22))
        clipPath.addLine(to: CGPoint(x: 151.83, y: 144.22))
        clipPath.addCurve(to: CGPoint(x: 174.84, y: 124.24), controlPoint1: CGPoint(x: 164.52, y: 144.06), controlPoint2: CGPoint(x: 174.84, y: 135.1))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 124.24))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 23.03))
        clipPath.addCurve(to: CGPoint(x: 151.79, y: 3.06), controlPoint1: CGPoint(x: 174.84, y: 12.02), controlPoint2: CGPoint(x: 164.5, y: 3.06))
        clipPath.addLine(to: CGPoint(x: 151.79, y: 3.06))
        clipPath.addLine(to: CGPoint(x: 48.21, y: 3.06))
        clipPath.close()
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 48.21, y: 3.06))
        bezierPath.addCurve(to: CGPoint(x: 25.16, y: 23.03), controlPoint1: CGPoint(x: 35.5, y: 3.06), controlPoint2: CGPoint(x: 25.16, y: 12.02))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 23.03))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 124.24))
        bezierPath.addCurve(to: CGPoint(x: 48.03, y: 144.21), controlPoint1: CGPoint(x: 25.16, y: 134.8), controlPoint2: CGPoint(x: 34.99, y: 143.38))
        bezierPath.addLine(to: CGPoint(x: 48.03, y: 144.21))
        bezierPath.addLine(to: CGPoint(x: 48.2, y: 144.22))
        bezierPath.addCurve(to: CGPoint(x: 96.87, y: 180.79), controlPoint1: CGPoint(x: 81.5, y: 144.35), controlPoint2: CGPoint(x: 96.72, y: 180.43))
        bezierPath.addLine(to: CGPoint(x: 96.87, y: 180.79))
        bezierPath.addLine(to: CGPoint(x: 99.7, y: 187.73))
        bezierPath.addLine(to: CGPoint(x: 102, y: 180.59))
        bezierPath.addCurve(to: CGPoint(x: 151.67, y: 144.22), controlPoint1: CGPoint(x: 102.11, y: 180.22), controlPoint2: CGPoint(x: 114.1, y: 144.22))
        bezierPath.addLine(to: CGPoint(x: 151.67, y: 144.22))
        bezierPath.addLine(to: CGPoint(x: 151.83, y: 144.22))
        bezierPath.addCurve(to: CGPoint(x: 174.84, y: 124.24), controlPoint1: CGPoint(x: 164.52, y: 144.06), controlPoint2: CGPoint(x: 174.84, y: 135.1))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 124.24))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 23.03))
        bezierPath.addCurve(to: CGPoint(x: 151.79, y: 3.06), controlPoint1: CGPoint(x: 174.84, y: 12.02), controlPoint2: CGPoint(x: 164.5, y: 3.06))
        bezierPath.addLine(to: CGPoint(x: 151.79, y: 3.06))
        bezierPath.addLine(to: CGPoint(x: 48.21, y: 3.06))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(gradient6,
            start: CGPoint(x: 100, y: 187.73),
            end: CGPoint(x: 100, y: 3.06),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 0.33))
        bezier3Path.addLine(to: CGPoint(x: 48.21, y: 0.33))
        bezier3Path.addCurve(to: CGPoint(x: 22.43, y: 23.03), controlPoint1: CGPoint(x: 33.99, y: 0.33), controlPoint2: CGPoint(x: 22.43, y: 10.51))
        bezier3Path.addLine(to: CGPoint(x: 22.43, y: 124.24))
        bezier3Path.addCurve(to: CGPoint(x: 47.86, y: 146.94), controlPoint1: CGPoint(x: 22.43, y: 136.26), controlPoint2: CGPoint(x: 33.36, y: 146.02))
        bezier3Path.addLine(to: CGPoint(x: 48.02, y: 146.95))
        bezier3Path.addLine(to: CGPoint(x: 48.19, y: 146.95))
        bezier3Path.addCurve(to: CGPoint(x: 82.82, y: 164.03), controlPoint1: CGPoint(x: 61.21, y: 147), controlPoint2: CGPoint(x: 72.86, y: 152.75))
        bezier3Path.addCurve(to: CGPoint(x: 94.34, y: 181.83), controlPoint1: CGPoint(x: 90.56, y: 172.79), controlPoint2: CGPoint(x: 94.3, y: 181.74))
        bezier3Path.addLine(to: CGPoint(x: 100.04, y: 195.62))
        bezier3Path.addLine(to: CGPoint(x: 104.6, y: 181.42))
        bezier3Path.addCurve(to: CGPoint(x: 114.95, y: 163.85), controlPoint1: CGPoint(x: 104.62, y: 181.35), controlPoint2: CGPoint(x: 107.57, y: 172.49))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 146.95), controlPoint1: CGPoint(x: 124.54, y: 152.64), controlPoint2: CGPoint(x: 136.89, y: 146.95))
        bezier3Path.addLine(to: CGPoint(x: 151.78, y: 146.95))
        bezier3Path.addLine(to: CGPoint(x: 151.82, y: 146.95))
        bezier3Path.addLine(to: CGPoint(x: 151.86, y: 146.95))
        bezier3Path.addCurve(to: CGPoint(x: 177.57, y: 124.24), controlPoint1: CGPoint(x: 166.04, y: 146.77), controlPoint2: CGPoint(x: 177.57, y: 136.59))
        bezier3Path.addLine(to: CGPoint(x: 177.57, y: 23.03))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 0.33), controlPoint1: CGPoint(x: 177.57, y: 10.51), controlPoint2: CGPoint(x: 166.01, y: 0.33))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 5.79))
        bezier3Path.addCurve(to: CGPoint(x: 172.11, y: 23.03), controlPoint1: CGPoint(x: 163.01, y: 5.79), controlPoint2: CGPoint(x: 172.11, y: 13.51))
        bezier3Path.addLine(to: CGPoint(x: 172.11, y: 124.24))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 141.49), controlPoint1: CGPoint(x: 172.11, y: 133.77), controlPoint2: CGPoint(x: 162.65, y: 141.35))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 141.49), controlPoint1: CGPoint(x: 151.75, y: 141.49), controlPoint2: CGPoint(x: 151.71, y: 141.49))
        bezier3Path.addCurve(to: CGPoint(x: 99.39, y: 179.75), controlPoint1: CGPoint(x: 111.67, y: 141.48), controlPoint2: CGPoint(x: 99.39, y: 179.75))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 141.49), controlPoint1: CGPoint(x: 99.39, y: 179.75), controlPoint2: CGPoint(x: 83.79, y: 141.62))
        bezier3Path.addCurve(to: CGPoint(x: 27.89, y: 124.24), controlPoint1: CGPoint(x: 37.14, y: 140.78), controlPoint2: CGPoint(x: 27.89, y: 133.77))
        bezier3Path.addLine(to: CGPoint(x: 27.89, y: 23.03))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 5.79), controlPoint1: CGPoint(x: 27.89, y: 13.51), controlPoint2: CGPoint(x: 36.99, y: 5.79))
        bezier3Path.addLine(to: CGPoint(x: 151.79, y: 5.79))
        bezier3Path.close()
        fillColor33.setFill()
        bezier3Path.fill()


        //// Group 2
        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 142.49, y: 35.16))
        bezier2Path.addLine(to: CGPoint(x: 118.88, y: 28.26))
        bezier2Path.addLine(to: CGPoint(x: 118.88, y: 16.23))
        bezier2Path.addLine(to: CGPoint(x: 142.49, y: 16.23))
        bezier2Path.addLine(to: CGPoint(x: 142.49, y: 35.16))
        bezier2Path.close()
        fillColor42.setFill()
        bezier2Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 118.78, y: 12))
        bezier4Path.addLine(to: CGPoint(x: 142.39, y: 12))
        bezier4Path.addLine(to: CGPoint(x: 142.39, y: 14.31))
        bezier4Path.addLine(to: CGPoint(x: 118.78, y: 14.31))
        bezier4Path.addLine(to: CGPoint(x: 118.78, y: 12))
        bezier4Path.close()
        fillColor42.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 127.37, y: 94.94))
        bezier5Path.addLine(to: CGPoint(x: 75.2, y: 94.94))
        bezier5Path.addLine(to: CGPoint(x: 75.2, y: 99.57))
        bezier5Path.addLine(to: CGPoint(x: 127.37, y: 99.57))
        bezier5Path.addLine(to: CGPoint(x: 127.37, y: 94.94))
        bezier5Path.close()
        fillColor42.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 73.35, y: 56.7))
        bezier6Path.addLine(to: CGPoint(x: 129.64, y: 56.7))
        bezier6Path.addLine(to: CGPoint(x: 129.64, y: 87.63))
        bezier6Path.addLine(to: CGPoint(x: 73.35, y: 87.63))
        bezier6Path.addLine(to: CGPoint(x: 73.35, y: 56.7))
        bezier6Path.close()
        bezier6Path.move(to: CGPoint(x: 53.87, y: 45.4))
        bezier6Path.addLine(to: CGPoint(x: 53.87, y: 133.31))
        bezier6Path.addCurve(to: CGPoint(x: 59.36, y: 139.93), controlPoint1: CGPoint(x: 53.87, y: 136.96), controlPoint2: CGPoint(x: 56.33, y: 139.93))
        bezier6Path.addLine(to: CGPoint(x: 73.35, y: 139.93))
        bezier6Path.addLine(to: CGPoint(x: 73.35, y: 94.14))
        bezier6Path.addLine(to: CGPoint(x: 129.64, y: 94.14))
        bezier6Path.addLine(to: CGPoint(x: 129.64, y: 139.93))
        bezier6Path.addLine(to: CGPoint(x: 141.4, y: 139.93))
        bezier6Path.addCurve(to: CGPoint(x: 146.89, y: 133.31), controlPoint1: CGPoint(x: 144.43, y: 139.93), controlPoint2: CGPoint(x: 146.89, y: 136.96))
        bezier6Path.addLine(to: CGPoint(x: 146.89, y: 45.4))
        bezier6Path.addLine(to: CGPoint(x: 53.87, y: 45.4))
        bezier6Path.close()
        fillColor42.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: 73.35, y: 56.7))
        bezier7Path.addLine(to: CGPoint(x: 129.64, y: 56.7))
        bezier7Path.addLine(to: CGPoint(x: 129.64, y: 87.63))
        bezier7Path.addLine(to: CGPoint(x: 73.35, y: 87.63))
        bezier7Path.addLine(to: CGPoint(x: 73.35, y: 56.7))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 107.91, y: 86.41))
        bezier7Path.addLine(to: CGPoint(x: 116.46, y: 86.41))
        bezier7Path.addLine(to: CGPoint(x: 116.46, y: 80.21))
        bezier7Path.addLine(to: CGPoint(x: 107.91, y: 80.21))
        bezier7Path.addLine(to: CGPoint(x: 107.91, y: 86.41))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 96.89, y: 86.41))
        bezier7Path.addLine(to: CGPoint(x: 105.43, y: 86.41))
        bezier7Path.addLine(to: CGPoint(x: 105.43, y: 80.21))
        bezier7Path.addLine(to: CGPoint(x: 96.89, y: 80.21))
        bezier7Path.addLine(to: CGPoint(x: 96.89, y: 86.41))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 85.86, y: 86.41))
        bezier7Path.addLine(to: CGPoint(x: 94.41, y: 86.41))
        bezier7Path.addLine(to: CGPoint(x: 94.41, y: 80.21))
        bezier7Path.addLine(to: CGPoint(x: 85.86, y: 80.21))
        bezier7Path.addLine(to: CGPoint(x: 85.86, y: 86.41))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 74.84, y: 86.41))
        bezier7Path.addLine(to: CGPoint(x: 83.39, y: 86.41))
        bezier7Path.addLine(to: CGPoint(x: 83.39, y: 80.21))
        bezier7Path.addLine(to: CGPoint(x: 74.84, y: 80.21))
        bezier7Path.addLine(to: CGPoint(x: 74.84, y: 86.41))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 118.93, y: 86.31))
        bezier7Path.addLine(to: CGPoint(x: 127.48, y: 86.31))
        bezier7Path.addLine(to: CGPoint(x: 127.48, y: 80.11))
        bezier7Path.addLine(to: CGPoint(x: 118.93, y: 80.11))
        bezier7Path.addLine(to: CGPoint(x: 118.93, y: 86.31))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 107.91, y: 79))
        bezier7Path.addLine(to: CGPoint(x: 116.46, y: 79))
        bezier7Path.addLine(to: CGPoint(x: 116.46, y: 72.8))
        bezier7Path.addLine(to: CGPoint(x: 107.91, y: 72.8))
        bezier7Path.addLine(to: CGPoint(x: 107.91, y: 79))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 96.89, y: 79))
        bezier7Path.addLine(to: CGPoint(x: 105.43, y: 79))
        bezier7Path.addLine(to: CGPoint(x: 105.43, y: 72.8))
        bezier7Path.addLine(to: CGPoint(x: 96.89, y: 72.8))
        bezier7Path.addLine(to: CGPoint(x: 96.89, y: 79))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 85.86, y: 79))
        bezier7Path.addLine(to: CGPoint(x: 94.41, y: 79))
        bezier7Path.addLine(to: CGPoint(x: 94.41, y: 72.8))
        bezier7Path.addLine(to: CGPoint(x: 85.86, y: 72.8))
        bezier7Path.addLine(to: CGPoint(x: 85.86, y: 79))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 74.84, y: 79))
        bezier7Path.addLine(to: CGPoint(x: 83.39, y: 79))
        bezier7Path.addLine(to: CGPoint(x: 83.39, y: 72.8))
        bezier7Path.addLine(to: CGPoint(x: 74.84, y: 72.8))
        bezier7Path.addLine(to: CGPoint(x: 74.84, y: 79))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 118.93, y: 78.91))
        bezier7Path.addLine(to: CGPoint(x: 127.48, y: 78.91))
        bezier7Path.addLine(to: CGPoint(x: 127.48, y: 72.7))
        bezier7Path.addLine(to: CGPoint(x: 118.93, y: 72.7))
        bezier7Path.addLine(to: CGPoint(x: 118.93, y: 78.91))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 107.91, y: 71.6))
        bezier7Path.addLine(to: CGPoint(x: 116.46, y: 71.6))
        bezier7Path.addLine(to: CGPoint(x: 116.46, y: 65.39))
        bezier7Path.addLine(to: CGPoint(x: 107.91, y: 65.39))
        bezier7Path.addLine(to: CGPoint(x: 107.91, y: 71.6))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 96.89, y: 71.6))
        bezier7Path.addLine(to: CGPoint(x: 105.43, y: 71.6))
        bezier7Path.addLine(to: CGPoint(x: 105.43, y: 65.39))
        bezier7Path.addLine(to: CGPoint(x: 96.89, y: 65.39))
        bezier7Path.addLine(to: CGPoint(x: 96.89, y: 71.6))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 85.86, y: 71.6))
        bezier7Path.addLine(to: CGPoint(x: 94.41, y: 71.6))
        bezier7Path.addLine(to: CGPoint(x: 94.41, y: 65.39))
        bezier7Path.addLine(to: CGPoint(x: 85.86, y: 65.39))
        bezier7Path.addLine(to: CGPoint(x: 85.86, y: 71.6))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 74.84, y: 71.6))
        bezier7Path.addLine(to: CGPoint(x: 83.39, y: 71.6))
        bezier7Path.addLine(to: CGPoint(x: 83.39, y: 65.39))
        bezier7Path.addLine(to: CGPoint(x: 74.84, y: 65.39))
        bezier7Path.addLine(to: CGPoint(x: 74.84, y: 71.6))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 118.93, y: 71.5))
        bezier7Path.addLine(to: CGPoint(x: 127.48, y: 71.5))
        bezier7Path.addLine(to: CGPoint(x: 127.48, y: 65.29))
        bezier7Path.addLine(to: CGPoint(x: 118.93, y: 65.29))
        bezier7Path.addLine(to: CGPoint(x: 118.93, y: 71.5))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 107.91, y: 64.19))
        bezier7Path.addLine(to: CGPoint(x: 116.46, y: 64.19))
        bezier7Path.addLine(to: CGPoint(x: 116.46, y: 57.98))
        bezier7Path.addLine(to: CGPoint(x: 107.91, y: 57.98))
        bezier7Path.addLine(to: CGPoint(x: 107.91, y: 64.19))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 96.89, y: 64.19))
        bezier7Path.addLine(to: CGPoint(x: 105.43, y: 64.19))
        bezier7Path.addLine(to: CGPoint(x: 105.43, y: 57.98))
        bezier7Path.addLine(to: CGPoint(x: 96.89, y: 57.98))
        bezier7Path.addLine(to: CGPoint(x: 96.89, y: 64.19))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 85.86, y: 64.19))
        bezier7Path.addLine(to: CGPoint(x: 94.41, y: 64.19))
        bezier7Path.addLine(to: CGPoint(x: 94.41, y: 57.98))
        bezier7Path.addLine(to: CGPoint(x: 85.86, y: 57.98))
        bezier7Path.addLine(to: CGPoint(x: 85.86, y: 64.19))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 74.84, y: 64.19))
        bezier7Path.addLine(to: CGPoint(x: 83.39, y: 64.19))
        bezier7Path.addLine(to: CGPoint(x: 83.39, y: 57.98))
        bezier7Path.addLine(to: CGPoint(x: 74.84, y: 57.98))
        bezier7Path.addLine(to: CGPoint(x: 74.84, y: 64.19))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 118.93, y: 64.09))
        bezier7Path.addLine(to: CGPoint(x: 127.48, y: 64.09))
        bezier7Path.addLine(to: CGPoint(x: 127.48, y: 57.88))
        bezier7Path.addLine(to: CGPoint(x: 118.93, y: 57.88))
        bezier7Path.addLine(to: CGPoint(x: 118.93, y: 64.09))
        bezier7Path.close()
        fillColor42.setFill()
        bezier7Path.fill()


        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: 53.92, y: 45.6))
        bezier8Path.addLine(to: CGPoint(x: 100.44, y: 27.89))
        bezier8Path.addLine(to: CGPoint(x: 146.95, y: 45.6))
        bezier8Path.addLine(to: CGPoint(x: 53.92, y: 45.6))
        bezier8Path.close()
        fillColor42.setFill()
        bezier8Path.fill()


        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.move(to: CGPoint(x: 100.24, y: 24.08))
        bezier9Path.addLine(to: CGPoint(x: 156.62, y: 45.56))
        bezier9Path.addLine(to: CGPoint(x: 169, y: 45.5))
        bezier9Path.addLine(to: CGPoint(x: 100.2, y: 16.55))
        bezier9Path.addLine(to: CGPoint(x: 31.25, y: 45.56))
        bezier9Path.addLine(to: CGPoint(x: 43.86, y: 45.56))
        bezier9Path.addLine(to: CGPoint(x: 100.24, y: 24.08))
        bezier9Path.close()
        fillColor42.setFill()
        bezier9Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawTrainingPin(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let gradientColor7 = UIColor(red: 0.265, green: 0.430, blue: 0.653, alpha: 1.000)
        let gradientColor8 = UIColor(red: 0.065, green: 0.091, blue: 0.157, alpha: 1.000)
        let fillColor33 = UIColor(red: 0.792, green: 0.076, blue: 0.127, alpha: 1.000)
        let fillColor42 = UIColor(red: 1.000, green: 0.999, blue: 0.996, alpha: 1.000)

        //// Gradient Declarations
        let gradient6 = CGGradient(colorsSpace: nil, colors: [gradientColor7.cgColor, gradientColor8.cgColor] as CFArray, locations: [0, 1])!

        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath()
        clipPath.move(to: CGPoint(x: 48.21, y: 3.06))
        clipPath.addCurve(to: CGPoint(x: 25.16, y: 23.03), controlPoint1: CGPoint(x: 35.5, y: 3.06), controlPoint2: CGPoint(x: 25.16, y: 12.02))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 23.03))
        clipPath.addLine(to: CGPoint(x: 25.16, y: 124.24))
        clipPath.addCurve(to: CGPoint(x: 48.03, y: 144.21), controlPoint1: CGPoint(x: 25.16, y: 134.8), controlPoint2: CGPoint(x: 34.99, y: 143.38))
        clipPath.addLine(to: CGPoint(x: 48.03, y: 144.21))
        clipPath.addLine(to: CGPoint(x: 48.2, y: 144.22))
        clipPath.addCurve(to: CGPoint(x: 96.87, y: 180.79), controlPoint1: CGPoint(x: 81.5, y: 144.35), controlPoint2: CGPoint(x: 96.72, y: 180.43))
        clipPath.addLine(to: CGPoint(x: 96.87, y: 180.79))
        clipPath.addLine(to: CGPoint(x: 99.7, y: 187.73))
        clipPath.addLine(to: CGPoint(x: 102, y: 180.59))
        clipPath.addCurve(to: CGPoint(x: 151.67, y: 144.22), controlPoint1: CGPoint(x: 102.11, y: 180.22), controlPoint2: CGPoint(x: 114.1, y: 144.22))
        clipPath.addLine(to: CGPoint(x: 151.67, y: 144.22))
        clipPath.addLine(to: CGPoint(x: 151.83, y: 144.22))
        clipPath.addCurve(to: CGPoint(x: 174.84, y: 124.24), controlPoint1: CGPoint(x: 164.52, y: 144.06), controlPoint2: CGPoint(x: 174.84, y: 135.1))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 124.24))
        clipPath.addLine(to: CGPoint(x: 174.84, y: 23.03))
        clipPath.addCurve(to: CGPoint(x: 151.79, y: 3.06), controlPoint1: CGPoint(x: 174.84, y: 12.02), controlPoint2: CGPoint(x: 164.5, y: 3.06))
        clipPath.addLine(to: CGPoint(x: 151.79, y: 3.06))
        clipPath.addLine(to: CGPoint(x: 48.21, y: 3.06))
        clipPath.close()
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 48.21, y: 3.06))
        bezierPath.addCurve(to: CGPoint(x: 25.16, y: 23.03), controlPoint1: CGPoint(x: 35.5, y: 3.06), controlPoint2: CGPoint(x: 25.16, y: 12.02))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 23.03))
        bezierPath.addLine(to: CGPoint(x: 25.16, y: 124.24))
        bezierPath.addCurve(to: CGPoint(x: 48.03, y: 144.21), controlPoint1: CGPoint(x: 25.16, y: 134.8), controlPoint2: CGPoint(x: 34.99, y: 143.38))
        bezierPath.addLine(to: CGPoint(x: 48.03, y: 144.21))
        bezierPath.addLine(to: CGPoint(x: 48.2, y: 144.22))
        bezierPath.addCurve(to: CGPoint(x: 96.87, y: 180.79), controlPoint1: CGPoint(x: 81.5, y: 144.35), controlPoint2: CGPoint(x: 96.72, y: 180.43))
        bezierPath.addLine(to: CGPoint(x: 96.87, y: 180.79))
        bezierPath.addLine(to: CGPoint(x: 99.7, y: 187.73))
        bezierPath.addLine(to: CGPoint(x: 102, y: 180.59))
        bezierPath.addCurve(to: CGPoint(x: 151.67, y: 144.22), controlPoint1: CGPoint(x: 102.11, y: 180.22), controlPoint2: CGPoint(x: 114.1, y: 144.22))
        bezierPath.addLine(to: CGPoint(x: 151.67, y: 144.22))
        bezierPath.addLine(to: CGPoint(x: 151.83, y: 144.22))
        bezierPath.addCurve(to: CGPoint(x: 174.84, y: 124.24), controlPoint1: CGPoint(x: 164.52, y: 144.06), controlPoint2: CGPoint(x: 174.84, y: 135.1))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 124.24))
        bezierPath.addLine(to: CGPoint(x: 174.84, y: 23.03))
        bezierPath.addCurve(to: CGPoint(x: 151.79, y: 3.06), controlPoint1: CGPoint(x: 174.84, y: 12.02), controlPoint2: CGPoint(x: 164.5, y: 3.06))
        bezierPath.addLine(to: CGPoint(x: 151.79, y: 3.06))
        bezierPath.addLine(to: CGPoint(x: 48.21, y: 3.06))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(gradient6,
            start: CGPoint(x: 100, y: 187.73),
            end: CGPoint(x: 100, y: 3.06),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 0.33))
        bezier3Path.addLine(to: CGPoint(x: 48.21, y: 0.33))
        bezier3Path.addCurve(to: CGPoint(x: 22.43, y: 23.03), controlPoint1: CGPoint(x: 33.99, y: 0.33), controlPoint2: CGPoint(x: 22.43, y: 10.51))
        bezier3Path.addLine(to: CGPoint(x: 22.43, y: 124.24))
        bezier3Path.addCurve(to: CGPoint(x: 47.86, y: 146.94), controlPoint1: CGPoint(x: 22.43, y: 136.26), controlPoint2: CGPoint(x: 33.36, y: 146.02))
        bezier3Path.addLine(to: CGPoint(x: 48.02, y: 146.95))
        bezier3Path.addLine(to: CGPoint(x: 48.19, y: 146.95))
        bezier3Path.addCurve(to: CGPoint(x: 82.82, y: 164.03), controlPoint1: CGPoint(x: 61.21, y: 147), controlPoint2: CGPoint(x: 72.86, y: 152.75))
        bezier3Path.addCurve(to: CGPoint(x: 94.34, y: 181.83), controlPoint1: CGPoint(x: 90.56, y: 172.79), controlPoint2: CGPoint(x: 94.3, y: 181.74))
        bezier3Path.addLine(to: CGPoint(x: 100.04, y: 195.62))
        bezier3Path.addLine(to: CGPoint(x: 104.6, y: 181.42))
        bezier3Path.addCurve(to: CGPoint(x: 114.95, y: 163.85), controlPoint1: CGPoint(x: 104.62, y: 181.35), controlPoint2: CGPoint(x: 107.57, y: 172.49))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 146.95), controlPoint1: CGPoint(x: 124.54, y: 152.64), controlPoint2: CGPoint(x: 136.89, y: 146.95))
        bezier3Path.addLine(to: CGPoint(x: 151.78, y: 146.95))
        bezier3Path.addLine(to: CGPoint(x: 151.82, y: 146.95))
        bezier3Path.addLine(to: CGPoint(x: 151.86, y: 146.95))
        bezier3Path.addCurve(to: CGPoint(x: 177.57, y: 124.24), controlPoint1: CGPoint(x: 166.04, y: 146.77), controlPoint2: CGPoint(x: 177.57, y: 136.59))
        bezier3Path.addLine(to: CGPoint(x: 177.57, y: 23.03))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 0.33), controlPoint1: CGPoint(x: 177.57, y: 10.51), controlPoint2: CGPoint(x: 166.01, y: 0.33))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 151.79, y: 5.79))
        bezier3Path.addCurve(to: CGPoint(x: 172.11, y: 23.03), controlPoint1: CGPoint(x: 163.01, y: 5.79), controlPoint2: CGPoint(x: 172.11, y: 13.51))
        bezier3Path.addLine(to: CGPoint(x: 172.11, y: 124.24))
        bezier3Path.addCurve(to: CGPoint(x: 151.79, y: 141.49), controlPoint1: CGPoint(x: 172.11, y: 133.77), controlPoint2: CGPoint(x: 162.65, y: 141.35))
        bezier3Path.addCurve(to: CGPoint(x: 151.67, y: 141.49), controlPoint1: CGPoint(x: 151.75, y: 141.49), controlPoint2: CGPoint(x: 151.71, y: 141.49))
        bezier3Path.addCurve(to: CGPoint(x: 99.39, y: 179.75), controlPoint1: CGPoint(x: 111.67, y: 141.48), controlPoint2: CGPoint(x: 99.39, y: 179.75))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 141.49), controlPoint1: CGPoint(x: 99.39, y: 179.75), controlPoint2: CGPoint(x: 83.79, y: 141.62))
        bezier3Path.addCurve(to: CGPoint(x: 27.89, y: 124.24), controlPoint1: CGPoint(x: 37.14, y: 140.78), controlPoint2: CGPoint(x: 27.89, y: 133.77))
        bezier3Path.addLine(to: CGPoint(x: 27.89, y: 23.03))
        bezier3Path.addCurve(to: CGPoint(x: 48.21, y: 5.79), controlPoint1: CGPoint(x: 27.89, y: 13.51), controlPoint2: CGPoint(x: 36.99, y: 5.79))
        bezier3Path.addLine(to: CGPoint(x: 151.79, y: 5.79))
        bezier3Path.close()
        fillColor33.setFill()
        bezier3Path.fill()


        //// Group 3
        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: 67.65, y: 96, width: 17.6, height: 17.6))
        fillColor42.setFill()
        ovalPath.fill()


        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 91.78, y: 57.22, width: 40.25, height: 6.65))
        fillColor42.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 91.78, y: 80.52, width: 40.25, height: 6.65))
        fillColor42.setFill()
        rectangle2Path.fill()


        //// Rectangle 3 Drawing
        let rectangle3Path = UIBezierPath(rect: CGRect(x: 91.78, y: 103.17, width: 40.25, height: 6.65))
        fillColor42.setFill()
        rectangle3Path.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 136.86, y: 19.27))
        bezier2Path.addLine(to: CGPoint(x: 129.68, y: 19.27))
        bezier2Path.addLine(to: CGPoint(x: 129.68, y: 27.7))
        bezier2Path.addLine(to: CGPoint(x: 130.31, y: 27.7))
        bezier2Path.addCurve(to: CGPoint(x: 144.36, y: 41.56), controlPoint1: CGPoint(x: 138.07, y: 27.7), controlPoint2: CGPoint(x: 144.36, y: 33.9))
        bezier2Path.addLine(to: CGPoint(x: 144.36, y: 115.35))
        bezier2Path.addCurve(to: CGPoint(x: 130.31, y: 129.21), controlPoint1: CGPoint(x: 144.36, y: 123.01), controlPoint2: CGPoint(x: 138.07, y: 129.21))
        bezier2Path.addLine(to: CGPoint(x: 72.69, y: 129.21))
        bezier2Path.addCurve(to: CGPoint(x: 58.64, y: 115.35), controlPoint1: CGPoint(x: 64.93, y: 129.21), controlPoint2: CGPoint(x: 58.64, y: 123.01))
        bezier2Path.addLine(to: CGPoint(x: 58.64, y: 41.56))
        bezier2Path.addCurve(to: CGPoint(x: 72.69, y: 27.7), controlPoint1: CGPoint(x: 58.64, y: 33.9), controlPoint2: CGPoint(x: 64.93, y: 27.7))
        bezier2Path.addLine(to: CGPoint(x: 74.06, y: 27.7))
        bezier2Path.addLine(to: CGPoint(x: 74.06, y: 19.27))
        bezier2Path.addLine(to: CGPoint(x: 66.14, y: 19.27))
        bezier2Path.addCurve(to: CGPoint(x: 52.16, y: 33.13), controlPoint1: CGPoint(x: 58.42, y: 19.27), controlPoint2: CGPoint(x: 52.16, y: 25.48))
        bezier2Path.addLine(to: CGPoint(x: 52.16, y: 122.78))
        bezier2Path.addCurve(to: CGPoint(x: 66.14, y: 136.64), controlPoint1: CGPoint(x: 52.16, y: 130.43), controlPoint2: CGPoint(x: 58.42, y: 136.64))
        bezier2Path.addLine(to: CGPoint(x: 136.86, y: 136.64))
        bezier2Path.addCurve(to: CGPoint(x: 150.84, y: 122.78), controlPoint1: CGPoint(x: 144.58, y: 136.64), controlPoint2: CGPoint(x: 150.84, y: 130.43))
        bezier2Path.addLine(to: CGPoint(x: 150.84, y: 33.13))
        bezier2Path.addCurve(to: CGPoint(x: 136.86, y: 19.27), controlPoint1: CGPoint(x: 150.84, y: 25.48), controlPoint2: CGPoint(x: 144.58, y: 19.27))
        bezier2Path.close()
        fillColor42.setFill()
        bezier2Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 117.65, y: 30.38))
        bezier4Path.addCurve(to: CGPoint(x: 114.62, y: 34.52), controlPoint1: CGPoint(x: 117.65, y: 32.67), controlPoint2: CGPoint(x: 116.29, y: 34.52))
        bezier4Path.addLine(to: CGPoint(x: 90.29, y: 34.52))
        bezier4Path.addCurve(to: CGPoint(x: 87.26, y: 30.38), controlPoint1: CGPoint(x: 88.61, y: 34.52), controlPoint2: CGPoint(x: 87.26, y: 32.67))
        bezier4Path.addLine(to: CGPoint(x: 87.26, y: 21.2))
        bezier4Path.addCurve(to: CGPoint(x: 90.29, y: 17.06), controlPoint1: CGPoint(x: 87.26, y: 18.92), controlPoint2: CGPoint(x: 88.61, y: 17.06))
        bezier4Path.addLine(to: CGPoint(x: 114.62, y: 17.06))
        bezier4Path.addCurve(to: CGPoint(x: 117.65, y: 21.2), controlPoint1: CGPoint(x: 116.29, y: 17.06), controlPoint2: CGPoint(x: 117.65, y: 18.92))
        bezier4Path.addLine(to: CGPoint(x: 117.65, y: 30.38))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 121.17, y: 12.36))
        bezier4Path.addLine(to: CGPoint(x: 83.74, y: 12.36))
        bezier4Path.addCurve(to: CGPoint(x: 79.08, y: 18.73), controlPoint1: CGPoint(x: 81.16, y: 12.36), controlPoint2: CGPoint(x: 79.08, y: 15.21))
        bezier4Path.addLine(to: CGPoint(x: 79.08, y: 32.85))
        bezier4Path.addCurve(to: CGPoint(x: 83.74, y: 39.22), controlPoint1: CGPoint(x: 79.08, y: 36.37), controlPoint2: CGPoint(x: 81.16, y: 39.22))
        bezier4Path.addLine(to: CGPoint(x: 121.17, y: 39.22))
        bezier4Path.addCurve(to: CGPoint(x: 125.83, y: 32.85), controlPoint1: CGPoint(x: 123.75, y: 39.22), controlPoint2: CGPoint(x: 125.83, y: 36.37))
        bezier4Path.addLine(to: CGPoint(x: 125.83, y: 18.73))
        bezier4Path.addCurve(to: CGPoint(x: 121.17, y: 12.36), controlPoint1: CGPoint(x: 125.83, y: 15.21), controlPoint2: CGPoint(x: 123.75, y: 12.36))
        bezier4Path.close()
        fillColor42.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 78.5, y: 67.1))
        bezier5Path.addLine(to: CGPoint(x: 66.35, y: 54.16))
        bezier5Path.addLine(to: CGPoint(x: 77.25, y: 58.49))
        bezier5Path.addLine(to: CGPoint(x: 91.82, y: 42.19))
        bezier5Path.addLine(to: CGPoint(x: 78.5, y: 67.1))
        bezier5Path.close()
        fillColor42.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 77.21, y: 91.28))
        bezier6Path.addLine(to: CGPoint(x: 65.07, y: 78.35))
        bezier6Path.addLine(to: CGPoint(x: 75.97, y: 82.68))
        bezier6Path.addLine(to: CGPoint(x: 90.54, y: 66.37))
        bezier6Path.addLine(to: CGPoint(x: 77.21, y: 91.28))
        bezier6Path.close()
        fillColor42.setFill()
        bezier6Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawCanvas1(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)


        //// Color Declarations
        let fillColor42 = UIColor(red: 1.000, green: 0.999, blue: 0.996, alpha: 1.000)

        //// Group
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 156.56, y: 51.13))
        bezierPath.addLine(to: CGPoint(x: 126.78, y: 42.46))
        bezierPath.addLine(to: CGPoint(x: 126.78, y: 27.31))
        bezierPath.addLine(to: CGPoint(x: 156.56, y: 27.31))
        bezierPath.addLine(to: CGPoint(x: 156.56, y: 51.13))
        bezierPath.close()
        fillColor42.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 126.66, y: 22))
        bezier2Path.addLine(to: CGPoint(x: 156.44, y: 22))
        bezier2Path.addLine(to: CGPoint(x: 156.44, y: 24.9))
        bezier2Path.addLine(to: CGPoint(x: 126.66, y: 24.9))
        bezier2Path.addLine(to: CGPoint(x: 126.66, y: 22))
        bezier2Path.close()
        fillColor42.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 137.49, y: 126.34))
        bezier3Path.addLine(to: CGPoint(x: 71.68, y: 126.34))
        bezier3Path.addLine(to: CGPoint(x: 71.68, y: 132.16))
        bezier3Path.addLine(to: CGPoint(x: 137.49, y: 132.15))
        bezier3Path.addLine(to: CGPoint(x: 137.49, y: 126.34))
        bezier3Path.close()
        fillColor42.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 69.35, y: 78.23))
        bezier4Path.addLine(to: CGPoint(x: 140.35, y: 78.23))
        bezier4Path.addLine(to: CGPoint(x: 140.35, y: 117.15))
        bezier4Path.addLine(to: CGPoint(x: 69.35, y: 117.15))
        bezier4Path.addLine(to: CGPoint(x: 69.35, y: 78.23))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 44.78, y: 64.02))
        bezier4Path.addLine(to: CGPoint(x: 44.78, y: 174.6))
        bezier4Path.addCurve(to: CGPoint(x: 51.71, y: 182.93), controlPoint1: CGPoint(x: 44.78, y: 179.2), controlPoint2: CGPoint(x: 47.88, y: 182.93))
        bezier4Path.addLine(to: CGPoint(x: 69.35, y: 182.93))
        bezier4Path.addLine(to: CGPoint(x: 69.35, y: 125.32))
        bezier4Path.addLine(to: CGPoint(x: 140.35, y: 125.32))
        bezier4Path.addLine(to: CGPoint(x: 140.35, y: 182.93))
        bezier4Path.addLine(to: CGPoint(x: 155.18, y: 182.93))
        bezier4Path.addCurve(to: CGPoint(x: 162.11, y: 174.6), controlPoint1: CGPoint(x: 159.01, y: 182.93), controlPoint2: CGPoint(x: 162.11, y: 179.2))
        bezier4Path.addLine(to: CGPoint(x: 162.11, y: 64.02))
        bezier4Path.addLine(to: CGPoint(x: 44.78, y: 64.02))
        bezier4Path.close()
        fillColor42.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 69.35, y: 78.23))
        bezier5Path.addLine(to: CGPoint(x: 140.35, y: 78.23))
        bezier5Path.addLine(to: CGPoint(x: 140.35, y: 117.15))
        bezier5Path.addLine(to: CGPoint(x: 69.35, y: 117.15))
        bezier5Path.addLine(to: CGPoint(x: 69.35, y: 78.23))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 112.94, y: 115.61))
        bezier5Path.addLine(to: CGPoint(x: 123.73, y: 115.61))
        bezier5Path.addLine(to: CGPoint(x: 123.73, y: 107.8))
        bezier5Path.addLine(to: CGPoint(x: 112.94, y: 107.8))
        bezier5Path.addLine(to: CGPoint(x: 112.94, y: 115.61))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 99.04, y: 115.61))
        bezier5Path.addLine(to: CGPoint(x: 109.82, y: 115.61))
        bezier5Path.addLine(to: CGPoint(x: 109.82, y: 107.8))
        bezier5Path.addLine(to: CGPoint(x: 99.04, y: 107.8))
        bezier5Path.addLine(to: CGPoint(x: 99.04, y: 115.61))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 85.13, y: 115.61))
        bezier5Path.addLine(to: CGPoint(x: 95.92, y: 115.61))
        bezier5Path.addLine(to: CGPoint(x: 95.92, y: 107.8))
        bezier5Path.addLine(to: CGPoint(x: 85.13, y: 107.8))
        bezier5Path.addLine(to: CGPoint(x: 85.13, y: 115.61))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 71.23, y: 115.61))
        bezier5Path.addLine(to: CGPoint(x: 82.01, y: 115.61))
        bezier5Path.addLine(to: CGPoint(x: 82.01, y: 107.8))
        bezier5Path.addLine(to: CGPoint(x: 71.23, y: 107.8))
        bezier5Path.addLine(to: CGPoint(x: 71.23, y: 115.61))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 126.85, y: 115.48))
        bezier5Path.addLine(to: CGPoint(x: 137.63, y: 115.48))
        bezier5Path.addLine(to: CGPoint(x: 137.63, y: 107.68))
        bezier5Path.addLine(to: CGPoint(x: 126.85, y: 107.68))
        bezier5Path.addLine(to: CGPoint(x: 126.85, y: 115.48))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 112.94, y: 106.29))
        bezier5Path.addLine(to: CGPoint(x: 123.73, y: 106.29))
        bezier5Path.addLine(to: CGPoint(x: 123.73, y: 98.48))
        bezier5Path.addLine(to: CGPoint(x: 112.94, y: 98.48))
        bezier5Path.addLine(to: CGPoint(x: 112.94, y: 106.29))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 99.04, y: 106.29))
        bezier5Path.addLine(to: CGPoint(x: 109.82, y: 106.29))
        bezier5Path.addLine(to: CGPoint(x: 109.82, y: 98.48))
        bezier5Path.addLine(to: CGPoint(x: 99.04, y: 98.48))
        bezier5Path.addLine(to: CGPoint(x: 99.04, y: 106.29))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 85.13, y: 106.29))
        bezier5Path.addLine(to: CGPoint(x: 95.92, y: 106.29))
        bezier5Path.addLine(to: CGPoint(x: 95.92, y: 98.48))
        bezier5Path.addLine(to: CGPoint(x: 85.13, y: 98.48))
        bezier5Path.addLine(to: CGPoint(x: 85.13, y: 106.29))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 71.23, y: 106.29))
        bezier5Path.addLine(to: CGPoint(x: 82.01, y: 106.29))
        bezier5Path.addLine(to: CGPoint(x: 82.01, y: 98.48))
        bezier5Path.addLine(to: CGPoint(x: 71.23, y: 98.48))
        bezier5Path.addLine(to: CGPoint(x: 71.23, y: 106.29))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 126.85, y: 106.16))
        bezier5Path.addLine(to: CGPoint(x: 137.63, y: 106.16))
        bezier5Path.addLine(to: CGPoint(x: 137.63, y: 98.36))
        bezier5Path.addLine(to: CGPoint(x: 126.85, y: 98.36))
        bezier5Path.addLine(to: CGPoint(x: 126.85, y: 106.16))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 112.94, y: 96.97))
        bezier5Path.addLine(to: CGPoint(x: 123.73, y: 96.97))
        bezier5Path.addLine(to: CGPoint(x: 123.73, y: 89.16))
        bezier5Path.addLine(to: CGPoint(x: 112.94, y: 89.16))
        bezier5Path.addLine(to: CGPoint(x: 112.94, y: 96.97))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 99.04, y: 96.97))
        bezier5Path.addLine(to: CGPoint(x: 109.82, y: 96.97))
        bezier5Path.addLine(to: CGPoint(x: 109.82, y: 89.16))
        bezier5Path.addLine(to: CGPoint(x: 99.04, y: 89.16))
        bezier5Path.addLine(to: CGPoint(x: 99.04, y: 96.97))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 85.13, y: 96.97))
        bezier5Path.addLine(to: CGPoint(x: 95.92, y: 96.97))
        bezier5Path.addLine(to: CGPoint(x: 95.92, y: 89.16))
        bezier5Path.addLine(to: CGPoint(x: 85.13, y: 89.16))
        bezier5Path.addLine(to: CGPoint(x: 85.13, y: 96.97))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 71.23, y: 96.97))
        bezier5Path.addLine(to: CGPoint(x: 82.01, y: 96.97))
        bezier5Path.addLine(to: CGPoint(x: 82.01, y: 89.16))
        bezier5Path.addLine(to: CGPoint(x: 71.23, y: 89.16))
        bezier5Path.addLine(to: CGPoint(x: 71.23, y: 96.97))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 126.85, y: 96.85))
        bezier5Path.addLine(to: CGPoint(x: 137.63, y: 96.85))
        bezier5Path.addLine(to: CGPoint(x: 137.63, y: 89.04))
        bezier5Path.addLine(to: CGPoint(x: 126.85, y: 89.04))
        bezier5Path.addLine(to: CGPoint(x: 126.85, y: 96.85))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 112.94, y: 87.65))
        bezier5Path.addLine(to: CGPoint(x: 123.73, y: 87.65))
        bezier5Path.addLine(to: CGPoint(x: 123.73, y: 79.84))
        bezier5Path.addLine(to: CGPoint(x: 112.94, y: 79.84))
        bezier5Path.addLine(to: CGPoint(x: 112.94, y: 87.65))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 99.04, y: 87.65))
        bezier5Path.addLine(to: CGPoint(x: 109.82, y: 87.65))
        bezier5Path.addLine(to: CGPoint(x: 109.82, y: 79.84))
        bezier5Path.addLine(to: CGPoint(x: 99.04, y: 79.84))
        bezier5Path.addLine(to: CGPoint(x: 99.04, y: 87.65))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 85.13, y: 87.65))
        bezier5Path.addLine(to: CGPoint(x: 95.92, y: 87.65))
        bezier5Path.addLine(to: CGPoint(x: 95.92, y: 79.84))
        bezier5Path.addLine(to: CGPoint(x: 85.13, y: 79.84))
        bezier5Path.addLine(to: CGPoint(x: 85.13, y: 87.65))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 71.23, y: 87.65))
        bezier5Path.addLine(to: CGPoint(x: 82.01, y: 87.65))
        bezier5Path.addLine(to: CGPoint(x: 82.01, y: 79.84))
        bezier5Path.addLine(to: CGPoint(x: 71.23, y: 79.84))
        bezier5Path.addLine(to: CGPoint(x: 71.23, y: 87.65))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: 126.85, y: 87.53))
        bezier5Path.addLine(to: CGPoint(x: 137.63, y: 87.53))
        bezier5Path.addLine(to: CGPoint(x: 137.63, y: 79.72))
        bezier5Path.addLine(to: CGPoint(x: 126.85, y: 79.72))
        bezier5Path.addLine(to: CGPoint(x: 126.85, y: 87.53))
        bezier5Path.close()
        fillColor42.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 44.85, y: 64.27))
        bezier6Path.addLine(to: CGPoint(x: 103.52, y: 41.98))
        bezier6Path.addLine(to: CGPoint(x: 162.19, y: 64.27))
        bezier6Path.addLine(to: CGPoint(x: 44.85, y: 64.27))
        bezier6Path.close()
        fillColor42.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: 103.27, y: 37.2))
        bezier7Path.addLine(to: CGPoint(x: 174.38, y: 64.21))
        bezier7Path.addLine(to: CGPoint(x: 190, y: 64.14))
        bezier7Path.addLine(to: CGPoint(x: 103.22, y: 27.72))
        bezier7Path.addLine(to: CGPoint(x: 16.25, y: 64.21))
        bezier7Path.addLine(to: CGPoint(x: 32.16, y: 64.21))
        bezier7Path.addLine(to: CGPoint(x: 103.27, y: 37.2))
        bezier7Path.close()
        fillColor42.setFill()
        bezier7Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawFireStationWhitePin(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 100, height: 100), resizing: ResizingBehavior = .aspectFit, numberwidth: CGFloat = 80, numberheight: CGFloat = 80) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 100, height: 100), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 100, y: resizedFrame.height / 100)


        //// Symbol Drawing
        let symbolRect = CGRect(x: 10, y: 10, width: numberwidth, height: numberheight)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        ButtonsForFJ092018.drawFireHousePin(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()
        
        context.restoreGState()

    }

    //// Generated Images

    @objc dynamic public class var imageOfRedButton: UIImage {
        if Cache.imageOfRedButton != nil {
            return Cache.imageOfRedButton!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 83, height: 83), false, 0)
            ButtonsForFJ092018.drawRedButton()

        Cache.imageOfRedButton = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfRedButton!
    }

    @objc dynamic public class var imageOfBlueButton: UIImage {
        if Cache.imageOfBlueButton != nil {
            return Cache.imageOfBlueButton!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 83, height: 83), false, 0)
            ButtonsForFJ092018.drawBlueButton()

        Cache.imageOfBlueButton = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfBlueButton!
    }

    @objc dynamic public class func imageOfRed1(width: CGFloat = 40, height: CGFloat = 40) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 41, height: 41), false, 0)
            ButtonsForFJ092018.drawRed1(width: width, height: height)

        let imageOfRed1 = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfRed1
    }

    @objc dynamic public class func imageOfBlue1(bluewidth: CGFloat = 40, blueheight: CGFloat = 40) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 41, height: 41), false, 0)
            ButtonsForFJ092018.drawBlue1(bluewidth: bluewidth, blueheight: blueheight)

        let imageOfBlue1 = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfBlue1
    }

    @objc dynamic public class var imageOfWhiteJournalAdministrative: UIImage {
        if Cache.imageOfWhiteJournalAdministrative != nil {
            return Cache.imageOfWhiteJournalAdministrative!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 200, height: 200), false, 0)
            ButtonsForFJ092018.drawWhiteJournalAdministrative()

        Cache.imageOfWhiteJournalAdministrative = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfWhiteJournalAdministrative!
    }

    @objc dynamic public class func imageOfWhite(whitewidth: CGFloat = 20, whiteheight: CGFloat = 20) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 20, height: 20), false, 0)
            ButtonsForFJ092018.drawWhite(whitewidth: whitewidth, whiteheight: whiteheight)

        let imageOfWhite = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfWhite
    }

    @objc dynamic public class func imageOfRescue(whitewidth: CGFloat = 20, whiteheight: CGFloat = 20) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 20, height: 20), false, 0)
            ButtonsForFJ092018.drawRescue(whitewidth: whitewidth, whiteheight: whiteheight)

        let imageOfRescue = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfRescue
    }

    @objc dynamic public class func imageOfEms(whitewidth: CGFloat = 20, whiteheight: CGFloat = 20) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 20, height: 20), false, 0)
            ButtonsForFJ092018.drawEms(whitewidth: whitewidth, whiteheight: whiteheight)

        let imageOfEms = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfEms
    }

    @objc dynamic public class func imageOfFire(whitewidth: CGFloat = 20, whiteheight: CGFloat = 20) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 20, height: 20), false, 0)
            ButtonsForFJ092018.drawFire(whitewidth: whitewidth, whiteheight: whiteheight)

        let imageOfFire = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfFire
    }

    @objc dynamic public class func imageOfGeneral(whitewidth: CGFloat = 20, whiteheight: CGFloat = 20) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 20, height: 20), false, 0)
            ButtonsForFJ092018.drawGeneral(whitewidth: whitewidth, whiteheight: whiteheight)

        let imageOfGeneral = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfGeneral
    }

    @objc dynamic public class func imageOfCommunity(whitewidth: CGFloat = 20, whiteheight: CGFloat = 20) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 20, height: 20), false, 0)
            ButtonsForFJ092018.drawCommunity(whitewidth: whitewidth, whiteheight: whiteheight)

        let imageOfCommunity = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfCommunity
    }

    @objc dynamic public class func imageOfMembers(whitewidth: CGFloat = 20, whiteheight: CGFloat = 20) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 20, height: 20), false, 0)
            ButtonsForFJ092018.drawMembers(whitewidth: whitewidth, whiteheight: whiteheight)

        let imageOfMembers = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfMembers
    }

    @objc dynamic public class func imageOfWhiteSettings(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawWhiteSettings(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfWhiteSettings = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfWhiteSettings
    }

    @objc dynamic public class func imageOfWhiteTimestamp(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawWhiteTimestamp(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfWhiteTimestamp = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfWhiteTimestamp
    }

    @objc dynamic public class func imageOfWhiteForm(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawWhiteForm(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfWhiteForm = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfWhiteForm
    }

    @objc dynamic public class func imageOfWhiteMembers(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawWhiteMembers(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfWhiteMembers = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfWhiteMembers
    }

    @objc dynamic public class func imageOfWhiteMap(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawWhiteMap(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfWhiteMap = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfWhiteMap
    }

    @objc dynamic public class func imageOfFullcolorEMS(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawFullcolorEMS(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfFullcolorEMS = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfFullcolorEMS
    }

    @objc dynamic public class func imageOfWhiteIncidentData(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawWhiteIncidentData(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfWhiteIncidentData = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfWhiteIncidentData
    }

    @objc dynamic public class func imageOfFullcolorRescue(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawFullcolorRescue(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfFullcolorRescue = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfFullcolorRescue
    }

    @objc dynamic public class func imageOfFullColorFire(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawFullColorFire(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfFullColorFire = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfFullColorFire
    }

    @objc dynamic public class func imageOfFullColorAdministrative(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawFullColorAdministrative(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfFullColorAdministrative = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfFullColorAdministrative
    }

    @objc dynamic public class func imageOfFullColorGeneral(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawFullColorGeneral(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfFullColorGeneral = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfFullColorGeneral
    }

    @objc dynamic public class func imageOfFullColorMembers(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawFullColorMembers(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfFullColorMembers = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfFullColorMembers
    }

    @objc dynamic public class func imageOfWhiteAdmin(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawWhiteAdmin(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfWhiteAdmin = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfWhiteAdmin
    }

    @objc dynamic public class func imageOfFullColoredMembers(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawFullColoredMembers(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfFullColoredMembers = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfFullColoredMembers
    }

    @objc dynamic public class func imageOfCommunityMapMarker(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawCommunityMapMarker(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfCommunityMapMarker = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfCommunityMapMarker
    }

    @objc dynamic public class func imageOfAdministrativeMapMarker(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawAdministrativeMapMarker(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfAdministrativeMapMarker = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfAdministrativeMapMarker
    }

    @objc dynamic public class func imageOfGeneralMapMarker(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawGeneralMapMarker(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfGeneralMapMarker = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfGeneralMapMarker
    }

    @objc dynamic public class func imageOfEmsMapMarker(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawEmsMapMarker(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfEmsMapMarker = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfEmsMapMarker
    }

    @objc dynamic public class func imageOfRescueMapMarker(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawRescueMapMarker(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfRescueMapMarker = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfRescueMapMarker
    }

    @objc dynamic public class func imageOfFireMapMarker(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawFireMapMarker(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfFireMapMarker = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfFireMapMarker
    }

    @objc dynamic public class func imageOfLocationRedIncident(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawLocationRedIncident(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfLocationRedIncident = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfLocationRedIncident
    }

    @objc dynamic public class func imageOfWorldRedIncident(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawWorldRedIncident(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfWorldRedIncident = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfWorldRedIncident
    }

    @objc dynamic public class func imageOfTimeRedIncident(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawTimeRedIncident(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfTimeRedIncident = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfTimeRedIncident
    }

    @objc dynamic public class func imageOf_9b9b9bLocation(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.draw_9b9b9bLocation(numberwidth: numberwidth, numberheight: numberheight)

        let imageOf_9b9b9bLocation = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOf_9b9b9bLocation
    }

    @objc dynamic public class func imageOfEmslightbluesm(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawEmslightbluesm(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfEmslightbluesm = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfEmslightbluesm
    }

    @objc dynamic public class func imageOfFireredbordersmall(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawFireredbordersmall(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfFireredbordersmall = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfFireredbordersmall
    }

    @objc dynamic public class func imageOfRescueyellowbordersmall(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawRescueyellowbordersmall(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfRescueyellowbordersmall = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfRescueyellowbordersmall
    }

    @objc dynamic public class func imageOfLockblue(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawLockblue(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfLockblue = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfLockblue
    }

    @objc dynamic public class func imageOfSearchwhitemain(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawSearchwhitemain(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfSearchwhitemain = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfSearchwhitemain
    }

    @objc dynamic public class func imageOfFullcolorsearch(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawFullcolorsearch(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfFullcolorsearch = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfFullcolorsearch
    }

    @objc dynamic public class var imageOfGradientForMap: UIImage {
        if Cache.imageOfGradientForMap != nil {
            return Cache.imageOfGradientForMap!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 100, height: 100), false, 0)
            ButtonsForFJ092018.drawGradientForMap()

        Cache.imageOfGradientForMap = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfGradientForMap!
    }

    @objc dynamic public class func imageOfFireMapButton(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 100, height: 100), false, 0)
            ButtonsForFJ092018.drawFireMapButton(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfFireMapButton = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfFireMapButton
    }

    @objc dynamic public class func imageOfCorrectrescuemapbutton(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 100, height: 100), false, 0)
            ButtonsForFJ092018.drawCorrectrescuemapbutton(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfCorrectrescuemapbutton = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfCorrectrescuemapbutton
    }

    @objc dynamic public class func imageOfReescueMapButton(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 100, height: 100), false, 0)
            ButtonsForFJ092018.drawReescueMapButton(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfReescueMapButton = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfReescueMapButton
    }

    @objc dynamic public class func imageOfIncidentDataMapButton(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 100, height: 100), false, 0)
            ButtonsForFJ092018.drawIncidentDataMapButton(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfIncidentDataMapButton = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfIncidentDataMapButton
    }

    @objc dynamic public class func imageOfUserLocationMapButton(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 100, height: 100), false, 0)
            ButtonsForFJ092018.drawUserLocationMapButton(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfUserLocationMapButton = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfUserLocationMapButton
    }

    @objc dynamic public class func imageOfCorrectemsmapbutton(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 100, height: 100), false, 0)
            ButtonsForFJ092018.drawCorrectemsmapbutton(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfCorrectemsmapbutton = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfCorrectemsmapbutton
    }

    @objc dynamic public class func imageOfWorldicongray(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawWorldicongray(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfWorldicongray = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfWorldicongray
    }

    @objc dynamic public class func imageOfWhiteLockforMenu(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawWhiteLockforMenu(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfWhiteLockforMenu = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfWhiteLockforMenu
    }

    @objc dynamic public class func imageOfMainMenuPersonnal(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawMainMenuPersonnal(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfMainMenuPersonnal = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfMainMenuPersonnal
    }

    @objc dynamic public class func imageOfNFIRSFormIcon(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawNFIRSFormIcon(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfNFIRSFormIcon = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfNFIRSFormIcon
    }

    @objc dynamic public class func imageOfCompleteform(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawCompleteform(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfCompleteform = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfCompleteform
    }

    @objc dynamic public class func imageOfIncompleteform(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawIncompleteform(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfIncompleteform = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfIncompleteform
    }

    @objc dynamic public class var imageOfBoxChecked: UIImage {
        if Cache.imageOfBoxChecked != nil {
            return Cache.imageOfBoxChecked!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 200, height: 200), false, 0)
            ButtonsForFJ092018.drawBoxChecked()

        Cache.imageOfBoxChecked = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfBoxChecked!
    }

    @objc dynamic public class func imageOfBoxcheckedicon(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawBoxcheckedicon(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfBoxcheckedicon = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfBoxcheckedicon
    }

    @objc dynamic public class func imageOfBoxiconunchecked(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawBoxiconunchecked(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfBoxiconunchecked = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfBoxiconunchecked
    }

    @objc dynamic public class var imageOfListBackground: UIImage {
        if Cache.imageOfListBackground != nil {
            return Cache.imageOfListBackground!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 10, height: 150), false, 0)
            ButtonsForFJ092018.drawListBackground()

        Cache.imageOfListBackground = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfListBackground!
    }

    @objc dynamic public class var imageOfListBackground2: UIImage {
        if Cache.imageOfListBackground2 != nil {
            return Cache.imageOfListBackground2!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 10, height: 150), false, 0)
            ButtonsForFJ092018.drawListBackground2()

        Cache.imageOfListBackground2 = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfListBackground2!
    }

    @objc dynamic public class var imageOfDashboardWhite: UIImage {
        if Cache.imageOfDashboardWhite != nil {
            return Cache.imageOfDashboardWhite!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 200, height: 200), false, 0)
            ButtonsForFJ092018.drawDashboardWhite()

        Cache.imageOfDashboardWhite = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfDashboardWhite!
    }

    @objc dynamic public class var imageOfCartWhite: UIImage {
        if Cache.imageOfCartWhite != nil {
            return Cache.imageOfCartWhite!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 200, height: 200), false, 0)
            ButtonsForFJ092018.drawCartWhite()

        Cache.imageOfCartWhite = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfCartWhite!
    }

    @objc dynamic public class var imageOfCloudWhite: UIImage {
        if Cache.imageOfCloudWhite != nil {
            return Cache.imageOfCloudWhite!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 200, height: 200), false, 0)
            ButtonsForFJ092018.drawCloudWhite()

        Cache.imageOfCloudWhite = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfCloudWhite!
    }

    @objc dynamic public class var imageOfJournalEntryWhiteBlueCircle: UIImage {
        if Cache.imageOfJournalEntryWhiteBlueCircle != nil {
            return Cache.imageOfJournalEntryWhiteBlueCircle!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 93, height: 93), false, 0)
            ButtonsForFJ092018.drawJournalEntryWhiteBlueCircle()

        Cache.imageOfJournalEntryWhiteBlueCircle = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfJournalEntryWhiteBlueCircle!
    }

    @objc dynamic public class func imageOfBackgroundDashboard(imageSize: CGSize = CGSize(width: 10, height: 1027)) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(imageSize, false, 0)
            ButtonsForFJ092018.drawBackgroundDashboard(frame: CGRect(x: 0, y: 0, width: imageSize.width, height: imageSize.height))

        let imageOfBackgroundDashboard = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfBackgroundDashboard
    }

    @objc dynamic public class var imageOfDashboardGraidentButton: UIImage {
        if Cache.imageOfDashboardGraidentButton != nil {
            return Cache.imageOfDashboardGraidentButton!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 10, height: 300), false, 0)
            ButtonsForFJ092018.drawDashboardGraidentButton()

        Cache.imageOfDashboardGraidentButton = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfDashboardGraidentButton!
    }

    @objc dynamic public class func imageOfGradientBackViewDashboard(imageSize: CGSize = CGSize(width: 681, height: 635)) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(imageSize, false, 0)
            ButtonsForFJ092018.drawGradientBackViewDashboard(frame: CGRect(x: 0, y: 0, width: imageSize.width, height: imageSize.height))

        let imageOfGradientBackViewDashboard = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfGradientBackViewDashboard
    }

    @objc dynamic public class var imageOfDashboardIconWhite100: UIImage {
        if Cache.imageOfDashboardIconWhite100 != nil {
            return Cache.imageOfDashboardIconWhite100!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 100, height: 100), false, 0)
            ButtonsForFJ092018.drawDashboardIconWhite100()

        Cache.imageOfDashboardIconWhite100 = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfDashboardIconWhite100!
    }

    @objc dynamic public class var imageOfSmallRedPlusButt: UIImage {
        if Cache.imageOfSmallRedPlusButt != nil {
            return Cache.imageOfSmallRedPlusButt!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 40, height: 40), false, 0)
            ButtonsForFJ092018.drawSmallRedPlusButt()

        Cache.imageOfSmallRedPlusButt = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfSmallRedPlusButt!
    }

    @objc dynamic public class var imageOfBlueButtonBackground: UIImage {
        if Cache.imageOfBlueButtonBackground != nil {
            return Cache.imageOfBlueButtonBackground!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 10, height: 10), false, 0)
            ButtonsForFJ092018.drawBlueButtonBackground()

        Cache.imageOfBlueButtonBackground = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfBlueButtonBackground!
    }

    @objc dynamic public class var imageOfInfoButton: UIImage {
        if Cache.imageOfInfoButton != nil {
            return Cache.imageOfInfoButton!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 200, height: 200), false, 0)
            ButtonsForFJ092018.drawInfoButton()

        Cache.imageOfInfoButton = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfInfoButton!
    }

    @objc dynamic public class var imageOfInfoButtonWhite120: UIImage {
        if Cache.imageOfInfoButtonWhite120 != nil {
            return Cache.imageOfInfoButtonWhite120!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawInfoButtonWhite120()

        Cache.imageOfInfoButtonWhite120 = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfInfoButtonWhite120!
    }

    @objc dynamic public class var imageOfConnectButtonWhite120: UIImage {
        if Cache.imageOfConnectButtonWhite120 != nil {
            return Cache.imageOfConnectButtonWhite120!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawConnectButtonWhite120()

        Cache.imageOfConnectButtonWhite120 = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfConnectButtonWhite120!
    }

    @objc dynamic public class var imageOfCartButtonWhite120: UIImage {
        if Cache.imageOfCartButtonWhite120 != nil {
            return Cache.imageOfCartButtonWhite120!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawCartButtonWhite120()

        Cache.imageOfCartButtonWhite120 = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfCartButtonWhite120!
    }

    @objc dynamic public class var imageOfSettingsButtonWhite120: UIImage {
        if Cache.imageOfSettingsButtonWhite120 != nil {
            return Cache.imageOfSettingsButtonWhite120!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawSettingsButtonWhite120()

        Cache.imageOfSettingsButtonWhite120 = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfSettingsButtonWhite120!
    }

    @objc dynamic public class var imageOfSmallBluePlusButt: UIImage {
        if Cache.imageOfSmallBluePlusButt != nil {
            return Cache.imageOfSmallBluePlusButt!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 40, height: 40), false, 0)
            ButtonsForFJ092018.drawSmallBluePlusButt()

        Cache.imageOfSmallBluePlusButt = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfSmallBluePlusButt!
    }

    @objc dynamic public class var imageOfHighlightBlueButtonBackground: UIImage {
        if Cache.imageOfHighlightBlueButtonBackground != nil {
            return Cache.imageOfHighlightBlueButtonBackground!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 10, height: 10), false, 0)
            ButtonsForFJ092018.drawHighlightBlueButtonBackground()

        Cache.imageOfHighlightBlueButtonBackground = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfHighlightBlueButtonBackground!
    }

    @objc dynamic public class var imageOfHighlightBlue: UIImage {
        if Cache.imageOfHighlightBlue != nil {
            return Cache.imageOfHighlightBlue!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 30), false, 0)
            ButtonsForFJ092018.drawHighlightBlue()

        Cache.imageOfHighlightBlue = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfHighlightBlue!
    }

    @objc dynamic public class var imageOfNormalBlue: UIImage {
        if Cache.imageOfNormalBlue != nil {
            return Cache.imageOfNormalBlue!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 30), false, 0)
            ButtonsForFJ092018.drawNormalBlue()

        Cache.imageOfNormalBlue = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfNormalBlue!
    }

    @objc dynamic public class var imageOfOvertimeCircleSmall: UIImage {
        if Cache.imageOfOvertimeCircleSmall != nil {
            return Cache.imageOfOvertimeCircleSmall!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 30, height: 30), false, 0)
            ButtonsForFJ092018.drawOvertimeCircleSmall()

        Cache.imageOfOvertimeCircleSmall = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfOvertimeCircleSmall!
    }

    @objc dynamic public class var imageOfDefaultCircleSmall: UIImage {
        if Cache.imageOfDefaultCircleSmall != nil {
            return Cache.imageOfDefaultCircleSmall!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 30, height: 30), false, 0)
            ButtonsForFJ092018.drawDefaultCircleSmall()

        Cache.imageOfDefaultCircleSmall = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfDefaultCircleSmall!
    }

    @objc dynamic public class var imageOfHighlightEdit: UIImage {
        if Cache.imageOfHighlightEdit != nil {
            return Cache.imageOfHighlightEdit!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 30), false, 0)
            ButtonsForFJ092018.drawHighlightEdit()

        Cache.imageOfHighlightEdit = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfHighlightEdit!
    }

    @objc dynamic public class var imageOfNormalEdit: UIImage {
        if Cache.imageOfNormalEdit != nil {
            return Cache.imageOfNormalEdit!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 30), false, 0)
            ButtonsForFJ092018.drawNormalEdit()

        Cache.imageOfNormalEdit = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfNormalEdit!
    }

    @objc dynamic public class var imageOfDashboardForMaster: UIImage {
        if Cache.imageOfDashboardForMaster != nil {
            return Cache.imageOfDashboardForMaster!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawDashboardForMaster()

        Cache.imageOfDashboardForMaster = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfDashboardForMaster!
    }

    @objc dynamic public class var imageOfDashbaordWhiteIcon50: UIImage {
        if Cache.imageOfDashbaordWhiteIcon50 != nil {
            return Cache.imageOfDashbaordWhiteIcon50!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 50, height: 50), false, 0)
            ButtonsForFJ092018.drawDashbaordWhiteIcon50()

        Cache.imageOfDashbaordWhiteIcon50 = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfDashbaordWhiteIcon50!
    }

    @objc dynamic public class var imageOfGreenDefault: UIImage {
        if Cache.imageOfGreenDefault != nil {
            return Cache.imageOfGreenDefault!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 200, height: 200), false, 0)
            ButtonsForFJ092018.drawGreenDefault()

        Cache.imageOfGreenDefault = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfGreenDefault!
    }

    @objc dynamic public class var imageOfDefaultGreenCircle: UIImage {
        if Cache.imageOfDefaultGreenCircle != nil {
            return Cache.imageOfDefaultGreenCircle!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 30, height: 30), false, 0)
            ButtonsForFJ092018.drawDefaultGreenCircle()

        Cache.imageOfDefaultGreenCircle = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfDefaultGreenCircle!
    }

    @objc dynamic public class var imageOfSelectButtonUp: UIImage {
        if Cache.imageOfSelectButtonUp != nil {
            return Cache.imageOfSelectButtonUp!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 30), false, 0)
            ButtonsForFJ092018.drawSelectButtonUp()

        Cache.imageOfSelectButtonUp = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfSelectButtonUp!
    }

    @objc dynamic public class var imageOfSelectButtonDown: UIImage {
        if Cache.imageOfSelectButtonDown != nil {
            return Cache.imageOfSelectButtonDown!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 30), false, 0)
            ButtonsForFJ092018.drawSelectButtonDown()

        Cache.imageOfSelectButtonDown = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfSelectButtonDown!
    }

    @objc dynamic public class var imageOfResourceGroupNew: UIImage {
        if Cache.imageOfResourceGroupNew != nil {
            return Cache.imageOfResourceGroupNew!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 30), false, 0)
            ButtonsForFJ092018.drawResourceGroupNew()

        Cache.imageOfResourceGroupNew = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfResourceGroupNew!
    }

    @objc dynamic public class var imageOfResourceGroupHighlight: UIImage {
        if Cache.imageOfResourceGroupHighlight != nil {
            return Cache.imageOfResourceGroupHighlight!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 30), false, 0)
            ButtonsForFJ092018.drawResourceGroupHighlight()

        Cache.imageOfResourceGroupHighlight = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfResourceGroupHighlight!
    }

    @objc dynamic public class var imageOfSubscribeone: UIImage {
        if Cache.imageOfSubscribeone != nil {
            return Cache.imageOfSubscribeone!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 170, height: 170), false, 0)
            ButtonsForFJ092018.drawSubscribeone()

        Cache.imageOfSubscribeone = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfSubscribeone!
    }

    @objc dynamic public class var imageOfSubscribetwo: UIImage {
        if Cache.imageOfSubscribetwo != nil {
            return Cache.imageOfSubscribetwo!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 170, height: 170), false, 0)
            ButtonsForFJ092018.drawSubscribetwo()

        Cache.imageOfSubscribetwo = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfSubscribetwo!
    }

    @objc dynamic public class var imageOfSubscribethree: UIImage {
        if Cache.imageOfSubscribethree != nil {
            return Cache.imageOfSubscribethree!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 170, height: 170), false, 0)
            ButtonsForFJ092018.drawSubscribethree()

        Cache.imageOfSubscribethree = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfSubscribethree!
    }

    @objc dynamic public class var imageOfSuscribethreesmall: UIImage {
        if Cache.imageOfSuscribethreesmall != nil {
            return Cache.imageOfSuscribethreesmall!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 170, height: 150), false, 0)
            ButtonsForFJ092018.drawSuscribethreesmall()

        Cache.imageOfSuscribethreesmall = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfSuscribethreesmall!
    }

    @objc dynamic public class var imageOfSubscribetwosmall: UIImage {
        if Cache.imageOfSubscribetwosmall != nil {
            return Cache.imageOfSubscribetwosmall!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 170, height: 150), false, 0)
            ButtonsForFJ092018.drawSubscribetwosmall()

        Cache.imageOfSubscribetwosmall = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfSubscribetwosmall!
    }

    @objc dynamic public class var imageOfSubscribeonesmall: UIImage {
        if Cache.imageOfSubscribeonesmall != nil {
            return Cache.imageOfSubscribeonesmall!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 170, height: 150), false, 0)
            ButtonsForFJ092018.drawSubscribeonesmall()

        Cache.imageOfSubscribeonesmall = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfSubscribeonesmall!
    }

    @objc dynamic public class var imageOfStartShiftUp: UIImage {
        if Cache.imageOfStartShiftUp != nil {
            return Cache.imageOfStartShiftUp!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 30), false, 0)
            ButtonsForFJ092018.drawStartShiftUp()

        Cache.imageOfStartShiftUp = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfStartShiftUp!
    }

    @objc dynamic public class var imageOfStartShiftDown: UIImage {
        if Cache.imageOfStartShiftDown != nil {
            return Cache.imageOfStartShiftDown!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 30), false, 0)
            ButtonsForFJ092018.drawStartShiftDown()

        Cache.imageOfStartShiftDown = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfStartShiftDown!
    }

    @objc dynamic public class var imageOfEndShiftUp: UIImage {
        if Cache.imageOfEndShiftUp != nil {
            return Cache.imageOfEndShiftUp!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 30), false, 0)
            ButtonsForFJ092018.drawEndShiftUp()

        Cache.imageOfEndShiftUp = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfEndShiftUp!
    }

    @objc dynamic public class var imageOfEndShiftDown: UIImage {
        if Cache.imageOfEndShiftDown != nil {
            return Cache.imageOfEndShiftDown!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 30), false, 0)
            ButtonsForFJ092018.drawEndShiftDown()

        Cache.imageOfEndShiftDown = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfEndShiftDown!
    }

    @objc dynamic public class var imageOfIcs214: UIImage {
        if Cache.imageOfIcs214 != nil {
            return Cache.imageOfIcs214!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 200, height: 200), false, 0)
            ButtonsForFJ092018.drawIcs214()

        Cache.imageOfIcs214 = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfIcs214!
    }

    @objc dynamic public class func imageOfIcs21480x80(number80: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawIcs21480x80(number80: number80)

        let imageOfIcs21480x80 = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfIcs21480x80
    }

    @objc dynamic public class var imageOfCloudWhite2Arrow: UIImage {
        if Cache.imageOfCloudWhite2Arrow != nil {
            return Cache.imageOfCloudWhite2Arrow!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 200, height: 200), false, 0)
            ButtonsForFJ092018.drawCloudWhite2Arrow()

        Cache.imageOfCloudWhite2Arrow = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfCloudWhite2Arrow!
    }

    @objc dynamic public class var imageOfConnectButtonWhite2Arrow80: UIImage {
        if Cache.imageOfConnectButtonWhite2Arrow80 != nil {
            return Cache.imageOfConnectButtonWhite2Arrow80!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawConnectButtonWhite2Arrow80()

        Cache.imageOfConnectButtonWhite2Arrow80 = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfConnectButtonWhite2Arrow80!
    }

    @objc dynamic public class var imageOfIcs214LocalIncident: UIImage {
        if Cache.imageOfIcs214LocalIncident != nil {
            return Cache.imageOfIcs214LocalIncident!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 200, height: 200), false, 0)
            ButtonsForFJ092018.drawIcs214LocalIncident()

        Cache.imageOfIcs214LocalIncident = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfIcs214LocalIncident!
    }

    @objc dynamic public class func imageOfIcs214LocalIncidentSM(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawIcs214LocalIncidentSM(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfIcs214LocalIncidentSM = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfIcs214LocalIncidentSM
    }

    @objc dynamic public class var imageOfIcs214Fema: UIImage {
        if Cache.imageOfIcs214Fema != nil {
            return Cache.imageOfIcs214Fema!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 200, height: 200), false, 0)
            ButtonsForFJ092018.drawIcs214Fema()

        Cache.imageOfIcs214Fema = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfIcs214Fema!
    }

    @objc dynamic public class func imageOfIcs214FEMASM(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawIcs214FEMASM(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfIcs214FEMASM = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfIcs214FEMASM
    }

    @objc dynamic public class var imageOfIcs214StrikeTeam: UIImage {
        if Cache.imageOfIcs214StrikeTeam != nil {
            return Cache.imageOfIcs214StrikeTeam!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 200, height: 200), false, 0)
            ButtonsForFJ092018.drawIcs214StrikeTeam()

        Cache.imageOfIcs214StrikeTeam = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfIcs214StrikeTeam!
    }

    @objc dynamic public class func imageOfIcs214StrikeTeamSM(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawIcs214StrikeTeamSM(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfIcs214StrikeTeamSM = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfIcs214StrikeTeamSM
    }

    @objc dynamic public class var imageOfIcs214Other: UIImage {
        if Cache.imageOfIcs214Other != nil {
            return Cache.imageOfIcs214Other!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 200, height: 200), false, 0)
            ButtonsForFJ092018.drawIcs214Other()

        Cache.imageOfIcs214Other = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfIcs214Other!
    }

    @objc dynamic public class func imageOfIcs214OtherSM(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawIcs214OtherSM(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfIcs214OtherSM = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfIcs214OtherSM
    }

    @objc dynamic public class func imageOfIcs214LocalIncident60x60(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 60, height: 60), false, 0)
            ButtonsForFJ092018.drawIcs214LocalIncident60x60(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfIcs214LocalIncident60x60 = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfIcs214LocalIncident60x60
    }

    @objc dynamic public class func imageOfIcs214FEMA60x60(width60: CGFloat = 60, height60: CGFloat = 60) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 60, height: 60), false, 0)
            ButtonsForFJ092018.drawIcs214FEMA60x60(width60: width60, height60: height60)

        let imageOfIcs214FEMA60x60 = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfIcs214FEMA60x60
    }

    @objc dynamic public class func imageOfIcs214StrikeTeamSM2(width60: CGFloat = 60, height60: CGFloat = 60) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 60, height: 60), false, 0)
            ButtonsForFJ092018.drawIcs214StrikeTeamSM2(width60: width60, height60: height60)

        let imageOfIcs214StrikeTeamSM2 = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfIcs214StrikeTeamSM2
    }

    @objc dynamic public class func imageOfIcs214Other60x60(width60: CGFloat = 60, height60: CGFloat = 60) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 60, height: 60), false, 0)
            ButtonsForFJ092018.drawIcs214Other60x60(width60: width60, height60: height60)

        let imageOfIcs214Other60x60 = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfIcs214Other60x60
    }

    @objc dynamic public class var imageOfNfirsBasic1: UIImage {
        if Cache.imageOfNfirsBasic1 != nil {
            return Cache.imageOfNfirsBasic1!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 200, height: 200), false, 0)
            ButtonsForFJ092018.drawNfirsBasic1()

        Cache.imageOfNfirsBasic1 = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfNfirsBasic1!
    }

    @objc dynamic public class func imageOfNfirsBasic160x(width60: CGFloat = 60, height60: CGFloat = 60) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 60, height: 60), false, 0)
            ButtonsForFJ092018.drawNfirsBasic160x(width60: width60, height60: height60)

        let imageOfNfirsBasic160x = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfNfirsBasic160x
    }

    @objc dynamic public class func imageOfArcForm80x(number80: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 80, height: 80), false, 0)
            ButtonsForFJ092018.drawArcForm80x(number80: number80)

        let imageOfArcForm80x = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return imageOfArcForm80x
    }

    @objc dynamic public class var imageOfBackgroundBlueGradient: UIImage {
        if Cache.imageOfBackgroundBlueGradient != nil {
            return Cache.imageOfBackgroundBlueGradient!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 1, height: 45), false, 0)
            ButtonsForFJ092018.drawBackgroundBlueGradient()

        Cache.imageOfBackgroundBlueGradient = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfBackgroundBlueGradient!
    }

    @objc dynamic public class func imageOfARCFormMapButton(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 100, height: 100), false, 0)
            ButtonsForFJ092018.drawARCFormMapButton(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfARCFormMapButton = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfARCFormMapButton
    }

    @objc dynamic public class func imageOfFireStationWhitePin(numberwidth: CGFloat = 80, numberheight: CGFloat = 80) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 100, height: 100), false, 0)
            ButtonsForFJ092018.drawFireStationWhitePin(numberwidth: numberwidth, numberheight: numberheight)

        let imageOfFireStationWhitePin = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfFireStationWhitePin
    }

    //// Customization Infrastructure

    @objc @IBOutlet dynamic var redButtonTargets: [AnyObject]! {
        get { return Cache.redButtonTargets }
        set {
            Cache.redButtonTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfRedButton)
            }
        }
    }

    @objc @IBOutlet dynamic var blueButtonTargets: [AnyObject]! {
        get { return Cache.blueButtonTargets }
        set {
            Cache.blueButtonTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfBlueButton)
            }
        }
    }

    @objc @IBOutlet dynamic var whiteJournalAdministrativeTargets: [AnyObject]! {
        get { return Cache.whiteJournalAdministrativeTargets }
        set {
            Cache.whiteJournalAdministrativeTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfWhiteJournalAdministrative)
            }
        }
    }

    @objc @IBOutlet dynamic var gradientForMapTargets: [AnyObject]! {
        get { return Cache.gradientForMapTargets }
        set {
            Cache.gradientForMapTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfGradientForMap)
            }
        }
    }

    @objc @IBOutlet dynamic var boxCheckedTargets: [AnyObject]! {
        get { return Cache.boxCheckedTargets }
        set {
            Cache.boxCheckedTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfBoxChecked)
            }
        }
    }

    @objc @IBOutlet dynamic var listBackgroundTargets: [AnyObject]! {
        get { return Cache.listBackgroundTargets }
        set {
            Cache.listBackgroundTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfListBackground)
            }
        }
    }

    @objc @IBOutlet dynamic var listBackground2Targets: [AnyObject]! {
        get { return Cache.listBackground2Targets }
        set {
            Cache.listBackground2Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfListBackground2)
            }
        }
    }

    @objc @IBOutlet dynamic var dashboardWhiteTargets: [AnyObject]! {
        get { return Cache.dashboardWhiteTargets }
        set {
            Cache.dashboardWhiteTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfDashboardWhite)
            }
        }
    }

    @objc @IBOutlet dynamic var cartWhiteTargets: [AnyObject]! {
        get { return Cache.cartWhiteTargets }
        set {
            Cache.cartWhiteTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfCartWhite)
            }
        }
    }

    @objc @IBOutlet dynamic var cloudWhiteTargets: [AnyObject]! {
        get { return Cache.cloudWhiteTargets }
        set {
            Cache.cloudWhiteTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfCloudWhite)
            }
        }
    }

    @objc @IBOutlet dynamic var journalEntryWhiteBlueCircleTargets: [AnyObject]! {
        get { return Cache.journalEntryWhiteBlueCircleTargets }
        set {
            Cache.journalEntryWhiteBlueCircleTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfJournalEntryWhiteBlueCircle)
            }
        }
    }

    @objc @IBOutlet dynamic var dashboardGraidentButtonTargets: [AnyObject]! {
        get { return Cache.dashboardGraidentButtonTargets }
        set {
            Cache.dashboardGraidentButtonTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfDashboardGraidentButton)
            }
        }
    }

    @objc @IBOutlet dynamic var dashboardIconWhite100Targets: [AnyObject]! {
        get { return Cache.dashboardIconWhite100Targets }
        set {
            Cache.dashboardIconWhite100Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfDashboardIconWhite100)
            }
        }
    }

    @objc @IBOutlet dynamic var smallRedPlusButtTargets: [AnyObject]! {
        get { return Cache.smallRedPlusButtTargets }
        set {
            Cache.smallRedPlusButtTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfSmallRedPlusButt)
            }
        }
    }

    @objc @IBOutlet dynamic var blueButtonBackgroundTargets: [AnyObject]! {
        get { return Cache.blueButtonBackgroundTargets }
        set {
            Cache.blueButtonBackgroundTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfBlueButtonBackground)
            }
        }
    }

    @objc @IBOutlet dynamic var infoButtonTargets: [AnyObject]! {
        get { return Cache.infoButtonTargets }
        set {
            Cache.infoButtonTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfInfoButton)
            }
        }
    }

    @objc @IBOutlet dynamic var infoButtonWhite120Targets: [AnyObject]! {
        get { return Cache.infoButtonWhite120Targets }
        set {
            Cache.infoButtonWhite120Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfInfoButtonWhite120)
            }
        }
    }

    @objc @IBOutlet dynamic var connectButtonWhite120Targets: [AnyObject]! {
        get { return Cache.connectButtonWhite120Targets }
        set {
            Cache.connectButtonWhite120Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfConnectButtonWhite120)
            }
        }
    }

    @objc @IBOutlet dynamic var cartButtonWhite120Targets: [AnyObject]! {
        get { return Cache.cartButtonWhite120Targets }
        set {
            Cache.cartButtonWhite120Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfCartButtonWhite120)
            }
        }
    }

    @objc @IBOutlet dynamic var settingsButtonWhite120Targets: [AnyObject]! {
        get { return Cache.settingsButtonWhite120Targets }
        set {
            Cache.settingsButtonWhite120Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfSettingsButtonWhite120)
            }
        }
    }

    @objc @IBOutlet dynamic var smallBluePlusButtTargets: [AnyObject]! {
        get { return Cache.smallBluePlusButtTargets }
        set {
            Cache.smallBluePlusButtTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfSmallBluePlusButt)
            }
        }
    }

    @objc @IBOutlet dynamic var highlightBlueButtonBackgroundTargets: [AnyObject]! {
        get { return Cache.highlightBlueButtonBackgroundTargets }
        set {
            Cache.highlightBlueButtonBackgroundTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfHighlightBlueButtonBackground)
            }
        }
    }

    @objc @IBOutlet dynamic var highlightBlueTargets: [AnyObject]! {
        get { return Cache.highlightBlueTargets }
        set {
            Cache.highlightBlueTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfHighlightBlue)
            }
        }
    }

    @objc @IBOutlet dynamic var normalBlueTargets: [AnyObject]! {
        get { return Cache.normalBlueTargets }
        set {
            Cache.normalBlueTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfNormalBlue)
            }
        }
    }

    @objc @IBOutlet dynamic var overtimeCircleSmallTargets: [AnyObject]! {
        get { return Cache.overtimeCircleSmallTargets }
        set {
            Cache.overtimeCircleSmallTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfOvertimeCircleSmall)
            }
        }
    }

    @objc @IBOutlet dynamic var defaultCircleSmallTargets: [AnyObject]! {
        get { return Cache.defaultCircleSmallTargets }
        set {
            Cache.defaultCircleSmallTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfDefaultCircleSmall)
            }
        }
    }

    @objc @IBOutlet dynamic var highlightEditTargets: [AnyObject]! {
        get { return Cache.highlightEditTargets }
        set {
            Cache.highlightEditTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfHighlightEdit)
            }
        }
    }

    @objc @IBOutlet dynamic var normalEditTargets: [AnyObject]! {
        get { return Cache.normalEditTargets }
        set {
            Cache.normalEditTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfNormalEdit)
            }
        }
    }

    @objc @IBOutlet dynamic var dashboardForMasterTargets: [AnyObject]! {
        get { return Cache.dashboardForMasterTargets }
        set {
            Cache.dashboardForMasterTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfDashboardForMaster)
            }
        }
    }

    @objc @IBOutlet dynamic var dashbaordWhiteIcon50Targets: [AnyObject]! {
        get { return Cache.dashbaordWhiteIcon50Targets }
        set {
            Cache.dashbaordWhiteIcon50Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfDashbaordWhiteIcon50)
            }
        }
    }

    @objc @IBOutlet dynamic var greenDefaultTargets: [AnyObject]! {
        get { return Cache.greenDefaultTargets }
        set {
            Cache.greenDefaultTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfGreenDefault)
            }
        }
    }

    @objc @IBOutlet dynamic var defaultGreenCircleTargets: [AnyObject]! {
        get { return Cache.defaultGreenCircleTargets }
        set {
            Cache.defaultGreenCircleTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfDefaultGreenCircle)
            }
        }
    }

    @objc @IBOutlet dynamic var selectButtonUpTargets: [AnyObject]! {
        get { return Cache.selectButtonUpTargets }
        set {
            Cache.selectButtonUpTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfSelectButtonUp)
            }
        }
    }

    @objc @IBOutlet dynamic var selectButtonDownTargets: [AnyObject]! {
        get { return Cache.selectButtonDownTargets }
        set {
            Cache.selectButtonDownTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfSelectButtonDown)
            }
        }
    }

    @objc @IBOutlet dynamic var resourceGroupNewTargets: [AnyObject]! {
        get { return Cache.resourceGroupNewTargets }
        set {
            Cache.resourceGroupNewTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfResourceGroupNew)
            }
        }
    }

    @objc @IBOutlet dynamic var resourceGroupHighlightTargets: [AnyObject]! {
        get { return Cache.resourceGroupHighlightTargets }
        set {
            Cache.resourceGroupHighlightTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfResourceGroupHighlight)
            }
        }
    }

    @objc @IBOutlet dynamic var subscribeoneTargets: [AnyObject]! {
        get { return Cache.subscribeoneTargets }
        set {
            Cache.subscribeoneTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfSubscribeone)
            }
        }
    }

    @objc @IBOutlet dynamic var subscribetwoTargets: [AnyObject]! {
        get { return Cache.subscribetwoTargets }
        set {
            Cache.subscribetwoTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfSubscribetwo)
            }
        }
    }

    @objc @IBOutlet dynamic var subscribethreeTargets: [AnyObject]! {
        get { return Cache.subscribethreeTargets }
        set {
            Cache.subscribethreeTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfSubscribethree)
            }
        }
    }

    @objc @IBOutlet dynamic var suscribethreesmallTargets: [AnyObject]! {
        get { return Cache.suscribethreesmallTargets }
        set {
            Cache.suscribethreesmallTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfSuscribethreesmall)
            }
        }
    }

    @objc @IBOutlet dynamic var subscribetwosmallTargets: [AnyObject]! {
        get { return Cache.subscribetwosmallTargets }
        set {
            Cache.subscribetwosmallTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfSubscribetwosmall)
            }
        }
    }

    @objc @IBOutlet dynamic var subscribeonesmallTargets: [AnyObject]! {
        get { return Cache.subscribeonesmallTargets }
        set {
            Cache.subscribeonesmallTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfSubscribeonesmall)
            }
        }
    }

    @objc @IBOutlet dynamic var startShiftUpTargets: [AnyObject]! {
        get { return Cache.startShiftUpTargets }
        set {
            Cache.startShiftUpTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfStartShiftUp)
            }
        }
    }

    @objc @IBOutlet dynamic var startShiftDownTargets: [AnyObject]! {
        get { return Cache.startShiftDownTargets }
        set {
            Cache.startShiftDownTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfStartShiftDown)
            }
        }
    }

    @objc @IBOutlet dynamic var endShiftUpTargets: [AnyObject]! {
        get { return Cache.endShiftUpTargets }
        set {
            Cache.endShiftUpTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfEndShiftUp)
            }
        }
    }

    @objc @IBOutlet dynamic var endShiftDownTargets: [AnyObject]! {
        get { return Cache.endShiftDownTargets }
        set {
            Cache.endShiftDownTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfEndShiftDown)
            }
        }
    }

    @objc @IBOutlet dynamic var ics214Targets: [AnyObject]! {
        get { return Cache.ics214Targets }
        set {
            Cache.ics214Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfIcs214)
            }
        }
    }

    @objc @IBOutlet dynamic var cloudWhite2ArrowTargets: [AnyObject]! {
        get { return Cache.cloudWhite2ArrowTargets }
        set {
            Cache.cloudWhite2ArrowTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfCloudWhite2Arrow)
            }
        }
    }

    @objc @IBOutlet dynamic var connectButtonWhite2Arrow80Targets: [AnyObject]! {
        get { return Cache.connectButtonWhite2Arrow80Targets }
        set {
            Cache.connectButtonWhite2Arrow80Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfConnectButtonWhite2Arrow80)
            }
        }
    }

    @objc @IBOutlet dynamic var ics214LocalIncidentTargets: [AnyObject]! {
        get { return Cache.ics214LocalIncidentTargets }
        set {
            Cache.ics214LocalIncidentTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfIcs214LocalIncident)
            }
        }
    }

    @objc @IBOutlet dynamic var ics214FemaTargets: [AnyObject]! {
        get { return Cache.ics214FemaTargets }
        set {
            Cache.ics214FemaTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfIcs214Fema)
            }
        }
    }

    @objc @IBOutlet dynamic var ics214StrikeTeamTargets: [AnyObject]! {
        get { return Cache.ics214StrikeTeamTargets }
        set {
            Cache.ics214StrikeTeamTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfIcs214StrikeTeam)
            }
        }
    }

    @objc @IBOutlet dynamic var ics214OtherTargets: [AnyObject]! {
        get { return Cache.ics214OtherTargets }
        set {
            Cache.ics214OtherTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfIcs214Other)
            }
        }
    }

    @objc @IBOutlet dynamic var nfirsBasic1Targets: [AnyObject]! {
        get { return Cache.nfirsBasic1Targets }
        set {
            Cache.nfirsBasic1Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfNfirsBasic1)
            }
        }
    }

    @objc @IBOutlet dynamic var backgroundBlueGradientTargets: [AnyObject]! {
        get { return Cache.backgroundBlueGradientTargets }
        set {
            Cache.backgroundBlueGradientTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ButtonsForFJ092018.imageOfBackgroundBlueGradient)
            }
        }
    }




    @objc(ButtonsForFJ092018ResizingBehavior)
    public enum ResizingBehavior: Int {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.

        public func apply(rect: CGRect, target: CGRect) -> CGRect {
            if rect == target || target == CGRect.zero {
                return rect
            }

            var scales = CGSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)

            switch self {
                case .aspectFit:
                    scales.width = min(scales.width, scales.height)
                    scales.height = scales.width
                case .aspectFill:
                    scales.width = max(scales.width, scales.height)
                    scales.height = scales.width
                case .stretch:
                    break
                case .center:
                    scales.width = 1
                    scales.height = 1
            }

            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
}



private extension UIColor {
    func blended(withFraction fraction: CGFloat, of color: UIColor) -> UIColor {
        var r1: CGFloat = 1, g1: CGFloat = 1, b1: CGFloat = 1, a1: CGFloat = 1
        var r2: CGFloat = 1, g2: CGFloat = 1, b2: CGFloat = 1, a2: CGFloat = 1

        self.getRed(&r1, green: &g1, blue: &b1, alpha: &a1)
        color.getRed(&r2, green: &g2, blue: &b2, alpha: &a2)

        return UIColor(red: r1 * (1 - fraction) + r2 * fraction,
            green: g1 * (1 - fraction) + g2 * fraction,
            blue: b1 * (1 - fraction) + b2 * fraction,
            alpha: a1 * (1 - fraction) + a2 * fraction);
    }
}



private extension NSShadow {
    convenience init(color: AnyObject!, offset: CGSize, blurRadius: CGFloat) {
        self.init()
        self.shadowColor = color
        self.shadowOffset = offset
        self.shadowBlurRadius = blurRadius
    }
}
